{"version":3,"file":"facet-detail.component.d.ts","sources":["facet-detail.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BaseDetailComponent, CustomFieldConfig, DataService, FacetWithValues, LanguageCode, ModalService, NotificationService, Permission, ServerConfigService } from '@vendure/admin-ui/core';\r\nexport declare class FacetDetailComponent extends BaseDetailComponent<FacetWithValues.Fragment> implements OnInit, OnDestroy {\r\n    private changeDetector;\r\n    protected dataService: DataService;\r\n    private formBuilder;\r\n    private notificationService;\r\n    private modalService;\r\n    customFields: CustomFieldConfig[];\r\n    customValueFields: CustomFieldConfig[];\r\n    detailForm: FormGroup;\r\n    values: Array<FacetWithValues.Values | {\r\n        name: string;\r\n        code: string;\r\n    }>;\r\n    readonly updatePermission: Permission[];\r\n    constructor(router: Router, route: ActivatedRoute, serverConfigService: ServerConfigService, changeDetector: ChangeDetectorRef, dataService: DataService, formBuilder: FormBuilder, notificationService: NotificationService, modalService: ModalService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    updateCode(currentCode: string, nameValue: string): void;\r\n    updateValueCode(currentCode: string, nameValue: string, index: number): void;\r\n    customValueFieldIsSet(index: number, name: string): boolean;\r\n    getValuesFormArray(): FormArray;\r\n    addFacetValue(): void;\r\n    create(): void;\r\n    save(): void;\r\n    deleteFacetValue(facetValueId: string | undefined, index: number): void;\r\n    private showModalAndDelete;\r\n    /**\r\n     * Sets the values of the form on changes to the facet or current language.\r\n     */\r\n    protected setFormValues(facet: FacetWithValues.Fragment, languageCode: LanguageCode): void;\r\n    /**\r\n     * Given a facet and the value of the detailForm, this method creates an updated copy of the facet which\r\n     * can then be persisted to the API.\r\n     */\r\n    private getUpdatedFacet;\r\n    /**\r\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\r\n     * which can be persisted to the API via a createFacetValues mutation.\r\n     */\r\n    private getCreatedFacetValues;\r\n    /**\r\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\r\n     * which can be persisted to the API via an updateFacetValues mutation.\r\n     */\r\n    private getUpdatedFacetValues;\r\n}\r\n"]}