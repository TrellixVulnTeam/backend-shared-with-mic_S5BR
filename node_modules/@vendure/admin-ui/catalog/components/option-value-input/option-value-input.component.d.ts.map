{"version":3,"file":"option-value-input.component.d.ts","sources":["option-value-input.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, Provider } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare const OPTION_VALUE_INPUT_VALUE_ACCESSOR: Provider;\r\nexport declare class OptionValueInputComponent implements ControlValueAccessor {\r\n    private changeDetector;\r\n    groupName: string;\r\n    textArea: ElementRef<HTMLTextAreaElement>;\r\n    options: Array<{\r\n        name: string;\r\n        locked: boolean;\r\n    }>;\r\n    disabled: boolean;\r\n    input: string;\r\n    isFocussed: boolean;\r\n    lastSelected: boolean;\r\n    onChangeFn: (value: any) => void;\r\n    onTouchFn: (value: any) => void;\r\n    constructor(changeDetector: ChangeDetectorRef);\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    writeValue(obj: any): void;\r\n    focus(): void;\r\n    removeOption(option: {\r\n        name: string;\r\n        locked: boolean;\r\n    }): void;\r\n    handleKey(event: KeyboardEvent): void;\r\n    handleBlur(): void;\r\n    private addOptionValue;\r\n    private parseInputIntoOptions;\r\n    private removeLastOption;\r\n}\r\n"]}