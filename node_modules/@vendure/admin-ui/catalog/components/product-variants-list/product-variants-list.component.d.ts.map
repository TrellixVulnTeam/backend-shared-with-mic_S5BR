{"version":3,"file":"product-variants-list.component.d.ts","sources":["product-variants-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormArray, FormGroup } from '@angular/forms';\r\nimport { CustomFieldConfig, DataService, FacetValue, FacetWithValues, GlobalFlag, LanguageCode, ModalService, Permission, ProductDetail, ProductOptionFragment, ProductVariant, TaxCategory, UpdateProductOptionInput } from '@vendure/admin-ui/core';\r\nimport { AssetChange } from '../assets/assets.component';\r\nimport { PaginationConfig, SelectedAssets } from '../product-detail/product-detail.component';\r\nexport interface VariantAssetChange extends AssetChange {\r\n    variantId: string;\r\n}\r\nexport declare class ProductVariantsListComponent implements OnChanges, OnInit, OnDestroy {\r\n    private changeDetector;\r\n    private modalService;\r\n    private dataService;\r\n    formArray: FormArray;\r\n    variants: ProductVariant.Fragment[];\r\n    paginationConfig: PaginationConfig;\r\n    channelPriceIncludesTax: boolean;\r\n    taxCategories: TaxCategory[];\r\n    facets: FacetWithValues.Fragment[];\r\n    optionGroups: ProductDetail.OptionGroups[];\r\n    customFields: CustomFieldConfig[];\r\n    customOptionFields: CustomFieldConfig[];\r\n    activeLanguage: LanguageCode;\r\n    pendingAssetChanges: {\r\n        [variantId: string]: SelectedAssets;\r\n    };\r\n    assignToChannel: EventEmitter<import(\"@vendure/admin-ui/core\").ProductVariantFragment>;\r\n    removeFromChannel: EventEmitter<{\r\n        channelId: string;\r\n        variant: ProductVariant.Fragment;\r\n    }>;\r\n    assetChange: EventEmitter<VariantAssetChange>;\r\n    selectionChange: EventEmitter<string[]>;\r\n    selectFacetValueClick: EventEmitter<string[]>;\r\n    updateProductOption: EventEmitter<UpdateProductOptionInput & {\r\n        autoUpdate: boolean;\r\n    }>;\r\n    selectedVariantIds: string[];\r\n    formGroupMap: Map<string, FormGroup>;\r\n    GlobalFlag: typeof GlobalFlag;\r\n    globalTrackInventory: boolean;\r\n    globalOutOfStockThreshold: number;\r\n    readonly updatePermission: Permission[];\r\n    private facetValues;\r\n    private subscription;\r\n    constructor(changeDetector: ChangeDetectorRef, modalService: ModalService, dataService: DataService);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    isDefaultChannel(channelCode: string): boolean;\r\n    trackById(index: number, item: ProductVariant.Fragment): string;\r\n    inventoryIsNotTracked(formGroup: FormGroup): boolean;\r\n    getTaxCategoryName(group: FormGroup): string;\r\n    getSaleableStockLevel(variant: ProductVariant.Fragment): number;\r\n    areAllSelected(): boolean;\r\n    onAssetChange(variantId: string, event: AssetChange): void;\r\n    toggleSelectAll(): void;\r\n    toggleSelectVariant(variantId: string): void;\r\n    optionGroupName(optionGroupId: string): string | undefined;\r\n    optionName(option: ProductOptionFragment): string;\r\n    pendingFacetValues(variant: ProductVariant.Fragment): import(\"@vendure/admin-ui/core\").FacetValueFragment[];\r\n    existingFacetValues(variant: ProductVariant.Fragment): ({\r\n        __typename?: \"FacetValue\" | undefined;\r\n    } & Pick<FacetValue, \"id\" | \"name\" | \"code\"> & {\r\n        facet: {\r\n            __typename?: \"Facet\" | undefined;\r\n        } & Pick<import(\"@vendure/admin-ui/core\").Facet, \"id\" | \"name\">;\r\n    })[];\r\n    removeFacetValue(variant: ProductVariant.Fragment, facetValueId: string): void;\r\n    isVariantSelected(variantId: string): boolean;\r\n    editOption(option: ProductVariant.Options): void;\r\n    private buildFormGroupMap;\r\n    private getFacetValueIds;\r\n}\r\n"]}