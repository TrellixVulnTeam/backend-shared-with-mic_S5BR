import { CdkDragDrop } from '@angular/cdk/drag-drop';
import { EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { Collection } from '@vendure/admin-ui/core';
import { RootNode } from './array-to-tree';
import * as ɵngcc0 from '@angular/core';
export declare type RearrangeEvent = {
    collectionId: string;
    parentId: string;
    index: number;
};
export declare type CollectionPartial = Pick<Collection.Fragment, 'id' | 'parent' | 'name'>;
export declare class CollectionTreeComponent implements OnChanges {
    collections: CollectionPartial[];
    activeCollectionId: string;
    expandAll: boolean;
    rearrange: EventEmitter<RearrangeEvent>;
    deleteCollection: EventEmitter<string>;
    collectionTree: RootNode<CollectionPartial>;
    private allMoveListItems;
    ngOnChanges(changes: SimpleChanges): void;
    onDrop(event: CdkDragDrop<CollectionPartial | RootNode<CollectionPartial>>): void;
    onMove(event: RearrangeEvent): void;
    onDelete(id: string): void;
    getMoveListItems(collection: CollectionPartial): {
        path: string;
        id: string;
        ancestorIdPath: Set<string>;
    }[];
    calculateAllMoveListItems(): {
        path: string;
        id: string;
        ancestorIdPath: Set<string>;
    }[];
    private isRootNode;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<CollectionTreeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<CollectionTreeComponent, "vdr-collection-tree", never, { "expandAll": "expandAll"; "collections": "collections"; "activeCollectionId": "activeCollectionId"; }, { "rearrange": "rearrange"; "deleteCollection": "deleteCollection"; }, never, never>;
}

//# sourceMappingURL=collection-tree.component.d.ts.map