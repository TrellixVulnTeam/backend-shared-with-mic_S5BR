{"version":3,"file":"product-detail.component.d.ts","sources":["product-detail.component.d.ts"],"names":[],"mappingssourcesContent":["import { Location } from '@angular/common';\r\nimport { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Asset, BaseDetailComponent, CustomFieldConfig, DataService, FacetWithValues, GetProductWithVariants, GlobalFlag, LanguageCode, ModalService, NotificationService, Permission, ProductDetail, ProductVariant, ServerConfigService, TaxCategory, UpdateProductOptionInput } from '@vendure/admin-ui/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ProductDetailService } from '../../providers/product-detail/product-detail.service';\r\nimport { CreateProductVariantsConfig } from '../generate-product-variants/generate-product-variants.component';\r\nimport { VariantAssetChange } from '../product-variants-list/product-variants-list.component';\r\nexport declare type TabName = 'details' | 'variants';\r\nexport interface VariantFormValue {\r\n    id: string;\r\n    enabled: boolean;\r\n    sku: string;\r\n    name: string;\r\n    price: number;\r\n    priceWithTax: number;\r\n    taxCategoryId: string;\r\n    stockOnHand: number;\r\n    useGlobalOutOfStockThreshold: boolean;\r\n    outOfStockThreshold: number;\r\n    trackInventory: GlobalFlag;\r\n    facetValueIds: string[];\r\n    customFields?: any;\r\n}\r\nexport interface SelectedAssets {\r\n    assets?: Asset[];\r\n    featuredAsset?: Asset;\r\n}\r\nexport interface PaginationConfig {\r\n    totalItems: number;\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n}\r\nexport declare class ProductDetailComponent extends BaseDetailComponent<GetProductWithVariants.Product> implements OnInit, OnDestroy {\r\n    private productDetailService;\r\n    private formBuilder;\r\n    private modalService;\r\n    private notificationService;\r\n    protected dataService: DataService;\r\n    private location;\r\n    private changeDetector;\r\n    activeTab$: Observable<TabName>;\r\n    product$: Observable<GetProductWithVariants.Product>;\r\n    variants$: Observable<ProductVariant.Fragment[]>;\r\n    taxCategories$: Observable<TaxCategory.Fragment[]>;\r\n    customFields: CustomFieldConfig[];\r\n    customVariantFields: CustomFieldConfig[];\r\n    customOptionGroupFields: CustomFieldConfig[];\r\n    customOptionFields: CustomFieldConfig[];\r\n    detailForm: FormGroup;\r\n    filterInput: FormControl;\r\n    assetChanges: SelectedAssets;\r\n    variantAssetChanges: {\r\n        [variantId: string]: SelectedAssets;\r\n    };\r\n    variantFacetValueChanges: {\r\n        [variantId: string]: string[];\r\n    };\r\n    productChannels$: Observable<ProductDetail.Channels[]>;\r\n    facetValues$: Observable<ProductDetail.FacetValues[]>;\r\n    facets$: Observable<FacetWithValues.Fragment[]>;\r\n    totalItems$: Observable<number>;\r\n    currentPage$: BehaviorSubject<number>;\r\n    itemsPerPage$: BehaviorSubject<number>;\r\n    paginationConfig$: Observable<PaginationConfig>;\r\n    selectedVariantIds: string[];\r\n    variantDisplayMode: 'card' | 'table';\r\n    createVariantsConfig: CreateProductVariantsConfig;\r\n    channelPriceIncludesTax$: Observable<boolean>;\r\n    private productVariantMap;\r\n    readonly updatePermissions: Permission[];\r\n    constructor(route: ActivatedRoute, router: Router, serverConfigService: ServerConfigService, productDetailService: ProductDetailService, formBuilder: FormBuilder, modalService: ModalService, notificationService: NotificationService, dataService: DataService, location: Location, changeDetector: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    navigateToTab(tabName: TabName): void;\r\n    isDefaultChannel(channelCode: string): boolean;\r\n    setPage(page: number): void;\r\n    setItemsPerPage(value: string): void;\r\n    assignToChannel(): void;\r\n    removeFromChannel(channelId: string): void;\r\n    assignVariantToChannel(variant: ProductVariant.Fragment): import(\"rxjs\").Subscription;\r\n    removeVariantFromChannel({ channelId, variant, }: {\r\n        channelId: string;\r\n        variant: ProductVariant.Fragment;\r\n    }): void;\r\n    assetsChanged(): boolean;\r\n    variantAssetsChanged(): boolean;\r\n    variantAssetChange(event: VariantAssetChange): void;\r\n    /**\r\n     * If creating a new product, automatically generate the slug based on the product name.\r\n     */\r\n    updateSlug(nameValue: string): void;\r\n    selectProductFacetValue(): void;\r\n    updateProductOption(input: UpdateProductOptionInput & {\r\n        autoUpdate: boolean;\r\n    }): void;\r\n    removeProductFacetValue(facetValueId: string): void;\r\n    /**\r\n     * Opens a dialog to select FacetValues to apply to the select ProductVariants.\r\n     */\r\n    selectVariantFacetValue(selectedVariantIds: string[]): void;\r\n    variantsToCreateAreValid(): boolean;\r\n    private displayFacetValueModal;\r\n    create(): void;\r\n    save(): void;\r\n    canDeactivate(): boolean;\r\n    /**\r\n     * Sets the values of the form on changes to the product or current language.\r\n     */\r\n    protected setFormValues(product: GetProductWithVariants.Product, languageCode: LanguageCode): void;\r\n    private buildVariantFormArray;\r\n    /**\r\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\r\n     * can then be persisted to the API.\r\n     */\r\n    private getUpdatedProduct;\r\n    /**\r\n     * Given an array of product variants and the values from the detailForm, this method creates an new array\r\n     * which can be persisted to the API.\r\n     */\r\n    private getUpdatedProductVariants;\r\n    private getProductFormGroup;\r\n    /**\r\n     * The server may alter the slug value in order to normalize and ensure uniqueness upon saving.\r\n     */\r\n    private updateSlugAfterSave;\r\n}\r\n"]}