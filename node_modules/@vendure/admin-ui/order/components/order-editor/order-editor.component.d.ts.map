{"version":3,"file":"order-editor.component.d.ts","sources":["order-editor.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AddItemInput, AdjustOrderLineInput, BaseDetailComponent, CustomFieldConfig, DataService, GetAvailableCountries, LanguageCode, ModalService, ModifyOrderInput, NotificationService, OrderDetail, ProductSelectorSearch, ServerConfigService, SurchargeInput } from '@vendure/admin-ui/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { OrderTransitionService } from '../../providers/order-transition.service';\r\ninterface AddedLine {\r\n    productVariantId: string;\r\n    productAsset?: ProductSelectorSearch.ProductAsset | null;\r\n    productVariantName: string;\r\n    sku: string;\r\n    priceWithTax: number;\r\n    price: number;\r\n    quantity: number;\r\n}\r\ndeclare type ModifyOrderData = Omit<ModifyOrderInput, 'addItems' | 'adjustOrderLines'> & {\r\n    addItems: Array<AddItemInput & {\r\n        customFields?: any;\r\n    }>;\r\n    adjustOrderLines: Array<AdjustOrderLineInput & {\r\n        customFields?: any;\r\n    }>;\r\n};\r\nexport declare class OrderEditorComponent extends BaseDetailComponent<OrderDetail.Fragment> implements OnInit, OnDestroy {\r\n    private changeDetector;\r\n    protected dataService: DataService;\r\n    private notificationService;\r\n    private modalService;\r\n    private orderTransitionService;\r\n    availableCountries$: Observable<GetAvailableCountries.Items[]>;\r\n    availableCouponCodes$: Observable<Array<{\r\n        code: string;\r\n        promotionName: string;\r\n    }>>;\r\n    couponCodeInput$: Subject<string>;\r\n    addressCustomFields: CustomFieldConfig[];\r\n    detailForm: FormGroup;\r\n    couponCodesControl: FormControl;\r\n    orderLineCustomFieldsFormArray: FormArray;\r\n    addItemCustomFieldsFormArray: FormArray;\r\n    addItemCustomFieldsForm: FormGroup;\r\n    addItemSelectedVariant: ProductSelectorSearch.Items | undefined;\r\n    orderLineCustomFields: CustomFieldConfig[];\r\n    modifyOrderInput: ModifyOrderData;\r\n    surchargeForm: FormGroup;\r\n    shippingAddressForm: FormGroup;\r\n    billingAddressForm: FormGroup;\r\n    note: string;\r\n    recalculateShipping: boolean;\r\n    previousState: string;\r\n    private addedVariants;\r\n    constructor(router: Router, route: ActivatedRoute, serverConfigService: ServerConfigService, changeDetector: ChangeDetectorRef, dataService: DataService, notificationService: NotificationService, modalService: ModalService, orderTransitionService: OrderTransitionService);\r\n    get addedLines(): AddedLine[];\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    transitionToPriorState(order: OrderDetail.Fragment): void;\r\n    canPreviewChanges(): boolean;\r\n    isLineModified(line: OrderDetail.Lines): boolean;\r\n    updateLineQuantity(line: OrderDetail.Lines, quantity: string): void;\r\n    updateAddedItemQuantity(item: AddedLine, quantity: string): void;\r\n    trackByProductVariantId(index: number, item: AddedLine): string;\r\n    getSelectedItemPrice(result: ProductSelectorSearch.Items | undefined): number;\r\n    addItemToOrder(result: ProductSelectorSearch.Items | undefined): void;\r\n    private isMatchingAddItemRow;\r\n    removeAddedItem(index: number): void;\r\n    getSurchargePrices(surcharge: SurchargeInput): {\r\n        price: number;\r\n        priceWithTax: number;\r\n    };\r\n    addSurcharge(value: any): void;\r\n    removeSurcharge(index: number): void;\r\n    previewAndModify(order: OrderDetail.Fragment): void;\r\n    private addAddressCustomFieldsFormGroup;\r\n    protected setFormValues(entity: OrderDetail.Fragment, languageCode: LanguageCode): void;\r\n}\r\nexport {};\r\n"]}