{"version":3,"file":"order-transition.service.d.ts","sources":["order-transition.service.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { DataService, I18nService, ModalService, NotificationService } from '@vendure/admin-ui/core';\r\nexport declare class OrderTransitionService {\r\n    private dataService;\r\n    private modalService;\r\n    private notificationService;\r\n    private i18nService;\r\n    constructor(dataService: DataService, modalService: ModalService, notificationService: NotificationService, i18nService: I18nService);\r\n    /**\r\n     * Attempts to transition the Order to the last state it was in before it was transitioned\r\n     * to the \"Modifying\" state. If this fails, a manual prompt is used.\r\n     */\r\n    transitionToPreModifyingState(orderId: string, nextStates: string[]): import(\"rxjs\").Observable<string | undefined>;\r\n    /**\r\n     * Displays a modal for manually selecting the next state.\r\n     */\r\n    manuallyTransitionToState(options: {\r\n        orderId: string;\r\n        nextStates: string[];\r\n        message: string;\r\n        cancellable: boolean;\r\n        retry: number;\r\n    }): import(\"rxjs\").Observable<string | undefined>;\r\n    /**\r\n     * Attempts to get the last state the Order was in before it was transitioned\r\n     * to the \"Modifying\" state.\r\n     */\r\n    private getPreModifyingState;\r\n    private transitionToStateOrThrow;\r\n}\r\n"]}