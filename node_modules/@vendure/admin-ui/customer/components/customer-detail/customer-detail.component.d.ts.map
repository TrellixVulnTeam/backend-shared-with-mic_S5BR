{"version":3,"file":"customer-detail.component.d.ts","sources":["customer-detail.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BaseDetailComponent, CustomFieldConfig, DataService, GetAvailableCountries, GetCustomer, GetCustomerHistory, GetCustomerQuery, HistoryEntry, ModalService, NotificationService, ServerConfigService } from '@vendure/admin-ui/core';\r\nimport { Observable, Subject } from 'rxjs';\r\ndeclare type CustomerWithOrders = NonNullable<GetCustomerQuery['customer']>;\r\nexport declare class CustomerDetailComponent extends BaseDetailComponent<CustomerWithOrders> implements OnInit, OnDestroy {\r\n    private changeDetector;\r\n    private formBuilder;\r\n    protected dataService: DataService;\r\n    private modalService;\r\n    private notificationService;\r\n    detailForm: FormGroup;\r\n    customFields: CustomFieldConfig[];\r\n    addressCustomFields: CustomFieldConfig[];\r\n    availableCountries$: Observable<GetAvailableCountries.Items[]>;\r\n    orders$: Observable<GetCustomer.Items[]>;\r\n    ordersCount$: Observable<number>;\r\n    history$: Observable<GetCustomerHistory.Items[] | undefined>;\r\n    fetchHistory: Subject<void>;\r\n    defaultShippingAddressId: string;\r\n    defaultBillingAddressId: string;\r\n    addressesToDeleteIds: Set<string>;\r\n    addressDefaultsUpdated: boolean;\r\n    ordersPerPage: number;\r\n    currentOrdersPage: number;\r\n    private orderListUpdates$;\r\n    constructor(route: ActivatedRoute, router: Router, serverConfigService: ServerConfigService, changeDetector: ChangeDetectorRef, formBuilder: FormBuilder, dataService: DataService, modalService: ModalService, notificationService: NotificationService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    getAddressFormControls(): FormControl[];\r\n    setDefaultBillingAddressId(id: string): void;\r\n    setDefaultShippingAddressId(id: string): void;\r\n    toggleDeleteAddress(id: string): void;\r\n    addAddress(): void;\r\n    setOrderItemsPerPage(itemsPerPage: number): void;\r\n    setOrderCurrentPage(page: number): void;\r\n    create(): void;\r\n    save(): void;\r\n    addToGroup(): void;\r\n    removeFromGroup(group: GetCustomer.Groups): void;\r\n    addNoteToCustomer({ note }: {\r\n        note: string;\r\n    }): void;\r\n    updateNote(entry: HistoryEntry): void;\r\n    deleteNote(entry: HistoryEntry): import(\"rxjs\").Subscription;\r\n    protected setFormValues(entity: CustomerWithOrders): void;\r\n    /**\r\n     * Refetch the customer with the current order list settings.\r\n     */\r\n    private fetchOrdersList;\r\n}\r\nexport {};\r\n"]}