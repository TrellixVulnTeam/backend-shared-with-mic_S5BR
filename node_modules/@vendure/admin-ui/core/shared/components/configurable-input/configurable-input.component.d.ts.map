{"version":3,"file":"configurable-input.component.d.ts","sources":["configurable-input.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, FormGroup, ValidationErrors, Validator } from '@angular/forms';\r\nimport { ConfigArg, ConfigArgDefinition, ConfigurableOperation, ConfigurableOperationDefinition } from '../../../common/generated-types';\r\n/**\r\n * A form input which renders a card with the internal form fields of the given ConfigurableOperation.\r\n */\r\nexport declare class ConfigurableInputComponent implements OnChanges, OnDestroy, ControlValueAccessor, Validator {\r\n    operation?: ConfigurableOperation;\r\n    operationDefinition?: ConfigurableOperationDefinition;\r\n    readonly: boolean;\r\n    removable: boolean;\r\n    remove: EventEmitter<ConfigurableOperation>;\r\n    argValues: {\r\n        [name: string]: any;\r\n    };\r\n    onChange: (val: any) => void;\r\n    onTouch: () => void;\r\n    form: FormGroup;\r\n    private subscription;\r\n    interpolateDescription(): string;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    writeValue(value: any): void;\r\n    trackByName(index: number, arg: ConfigArg): string;\r\n    getArgDef(arg: ConfigArg): ConfigArgDefinition | undefined;\r\n    private createForm;\r\n    validate(c: AbstractControl): ValidationErrors | null;\r\n}\r\n"]}