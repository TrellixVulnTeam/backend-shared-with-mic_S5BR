{"version":3,"file":"asset-picker-dialog.component.d.ts","sources":["asset-picker-dialog.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, OnDestroy, OnInit } from '@angular/core';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Asset, GetAssetList, TagFragment } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport { Dialog } from '../../../providers/modal/modal.service';\r\nimport { NotificationService } from '../../../providers/notification/notification.service';\r\n/**\r\n * @description\r\n * A dialog which allows the creation and selection of assets.\r\n *\r\n * @example\r\n * ```TypeScript\r\n * selectAssets() {\r\n *   this.modalService\r\n *     .fromComponent(AssetPickerDialogComponent, {\r\n *         size: 'xl',\r\n *     })\r\n *     .subscribe(result => {\r\n *         if (result && result.length) {\r\n *             // ...\r\n *         }\r\n *     });\r\n * }\r\n * ```\r\n *\r\n * @docsCategory components\r\n */\r\nexport declare class AssetPickerDialogComponent implements OnInit, AfterViewInit, OnDestroy, Dialog<Asset[]> {\r\n    private dataService;\r\n    private notificationService;\r\n    assets$: Observable<GetAssetList.Items[]>;\r\n    allTags$: Observable<TagFragment[]>;\r\n    paginationConfig: PaginationInstance;\r\n    private assetSearchInputComponent;\r\n    private assetGalleryComponent;\r\n    multiSelect: boolean;\r\n    initialTags: string[];\r\n    resolveWith: (result?: Asset[]) => void;\r\n    selection: Asset[];\r\n    searchTerm$: BehaviorSubject<string | undefined>;\r\n    filterByTags$: BehaviorSubject<TagFragment[] | undefined>;\r\n    uploading: boolean;\r\n    private listQuery;\r\n    private destroy$;\r\n    constructor(dataService: DataService, notificationService: NotificationService);\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    pageChange(page: number): void;\r\n    itemsPerPageChange(itemsPerPage: number): void;\r\n    cancel(): void;\r\n    select(): void;\r\n    createAssets(files: File[]): void;\r\n    private fetchPage;\r\n}\r\n"]}