{"version":3,"file":"modal-dialog.component.d.ts","sources":["modal-dialog.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { TemplateRef, Type } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Dialog, ModalOptions } from '../../../providers/modal/modal.service';\r\n/**\r\n * This component should only be instantiated dynamically by the ModalService. It should not be used\r\n * directly in templates. See {@link ModalService.fromComponent} method for more detail.\r\n */\r\nexport declare class ModalDialogComponent<T extends Dialog<any>> {\r\n    childComponentType: Type<T>;\r\n    closeModal: (result?: any) => void;\r\n    titleTemplateRef$: Subject<TemplateRef<any>>;\r\n    buttonsTemplateRef$: Subject<TemplateRef<any>>;\r\n    options?: ModalOptions<T>;\r\n    /**\r\n     * This callback is invoked when the childComponentType is instantiated in the\r\n     * template by the {@link DialogComponentOutletComponent}.\r\n     * Once we have the instance, we can set the resolveWith function and any\r\n     * locals which were specified in the config.\r\n     */\r\n    onCreate(componentInstance: T): void;\r\n    /**\r\n     * This should be called by the {@link DialogTitleDirective} only\r\n     */\r\n    registerTitleTemplate(titleTemplateRef: TemplateRef<any>): void;\r\n    /**\r\n     * This should be called by the {@link DialogButtonsDirective} only\r\n     */\r\n    registerButtonsTemplate(buttonsTemplateRef: TemplateRef<any>): void;\r\n    /**\r\n     * Called when the modal is closed by clicking the X or the mask.\r\n     */\r\n    modalOpenChange(status: any): void;\r\n}\r\n"]}