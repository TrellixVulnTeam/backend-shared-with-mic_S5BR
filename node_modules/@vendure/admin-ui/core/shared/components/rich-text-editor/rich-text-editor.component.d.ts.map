{"version":3,"file":"rich-text-editor.component.d.ts","sources":["rich-text-editor.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { ProsemirrorService } from './prosemirror/prosemirror.service';\r\n/**\r\n * @description\r\n * A rich text (HTML) editor based on Prosemirror (https://prosemirror.net/)\r\n *\r\n * @example\r\n * ```HTML\r\n * <vdr-rich-text-editor\r\n *     [(ngModel)]=\"description\"\r\n *     label=\"Description\"\r\n * ></vdr-rich-text-editor>\r\n * ```\r\n *\r\n * @docsCategory components\r\n */\r\nexport declare class RichTextEditorComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\r\n    private changeDetector;\r\n    private prosemirrorService;\r\n    label: string;\r\n    set readonly(value: any);\r\n    _readonly: boolean;\r\n    onChange: (val: any) => void;\r\n    onTouch: () => void;\r\n    private value;\r\n    private editorEl;\r\n    constructor(changeDetector: ChangeDetectorRef, prosemirrorService: ProsemirrorService);\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    writeValue(value: any): void;\r\n}\r\n"]}