{"version":3,"file":"datetime-picker.service.d.ts","sources":["datetime-picker.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import dayjs from 'dayjs';\r\nimport { Observable } from 'rxjs';\r\nimport { CalendarView, DayOfWeek } from './types';\r\nexport declare class DatetimePickerService {\r\n    calendarView$: Observable<CalendarView>;\r\n    selected$: Observable<Date | null>;\r\n    viewing$: Observable<Date>;\r\n    private selectedDatetime$;\r\n    private viewingDatetime$;\r\n    private weekStartDayIndex;\r\n    private min;\r\n    private max;\r\n    private jumping;\r\n    constructor();\r\n    setWeekStartingDay(weekStartDay: DayOfWeek): void;\r\n    setMin(min?: string | null): void;\r\n    setMax(max?: string | null): void;\r\n    selectDatetime(date: Date | string | dayjs.Dayjs | null): void;\r\n    selectHour(hourOfDay: number): void;\r\n    selectMinute(minutePastHour: number): void;\r\n    viewNextMonth(): void;\r\n    viewPrevMonth(): void;\r\n    viewToday(): void;\r\n    viewJumpDown(): void;\r\n    viewJumpUp(): void;\r\n    viewJumpRight(): void;\r\n    viewJumpLeft(): void;\r\n    selectToday(): void;\r\n    selectViewed(): void;\r\n    viewMonth(month: number): void;\r\n    viewYear(year: number): void;\r\n    private generateCalendarView;\r\n    private isInBounds;\r\n}\r\n"]}