{"version":3,"file":"if-permissions.directive.d.ts","sources":["if-permissions.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { Permission } from '../../common/generated-types';\r\nimport { DataService } from '../../data/providers/data.service';\r\nimport { IfDirectiveBase } from './if-directive-base';\r\n/**\r\n * @description\r\n * Conditionally shows/hides templates based on the current active user having the specified permission.\r\n * Based on the ngIf source. Also support \"else\" templates:\r\n *\r\n * @example\r\n * ```html\r\n * <button *vdrIfPermissions=\"'DeleteCatalog'; else unauthorized\">Delete Product</button>\r\n * <ng-template #unauthorized>Not allowed!</ng-template>\r\n * ```\r\n *\r\n * The permission can be a single string, or an array. If an array is passed, then _all_ of the permissions\r\n * must match (logical AND)\r\n *\r\n * @docsCategory directives\r\n */\r\nexport declare class IfPermissionsDirective extends IfDirectiveBase<Array<Permission[] | null>> {\r\n    private dataService;\r\n    private changeDetectorRef;\r\n    private permissionToCheck;\r\n    constructor(_viewContainer: ViewContainerRef, templateRef: TemplateRef<any>, dataService: DataService, changeDetectorRef: ChangeDetectorRef);\r\n    /**\r\n     * The permission to check to determine whether to show the template.\r\n     */\r\n    set vdrIfPermissions(permission: string | string[] | null);\r\n    /**\r\n     * A template to show if the current user does not have the specified permission.\r\n     */\r\n    set vdrIfPermissionsElse(templateRef: TemplateRef<any> | null);\r\n}\r\n"]}