{"version":3,"file":"server-config.d.ts","sources":["server-config.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Injector } from '@angular/core';\r\nimport { CustomFieldConfig, CustomFields, OrderProcessState, PermissionDefinition, ServerConfig } from '../common/generated-types';\r\nexport declare function initializeServerConfigService(serverConfigService: ServerConfigService): () => Promise<any>;\r\n/**\r\n * A service which fetches the config from the server upon initialization, and then provides that config\r\n * to the components which require it.\r\n */\r\nexport declare class ServerConfigService {\r\n    private injector;\r\n    private _serverConfig;\r\n    private get baseDataService();\r\n    constructor(injector: Injector);\r\n    /**\r\n     * Fetches the ServerConfig. Should be run as part of the app bootstrap process by attaching\r\n     * to the Angular APP_INITIALIZER token.\r\n     */\r\n    init(): () => Promise<any>;\r\n    /**\r\n     * Fetch the ServerConfig. Should be run on app init (in case user is already logged in) and on successful login.\r\n     */\r\n    getServerConfig(): Promise<void>;\r\n    getAvailableLanguages(): import(\"rxjs\").Observable<import(\"../common/generated-types\").LanguageCode[]>;\r\n    /**\r\n     * When any of the GlobalSettings are modified, this method should be called to update the Apollo cache.\r\n     */\r\n    refreshGlobalSettings(): import(\"rxjs\").Observable<import(\"../common/generated-types\").GetGlobalSettingsQuery>;\r\n    /**\r\n     * Retrieves the custom field configs for the given entity type.\r\n     */\r\n    getCustomFieldsFor(type: Exclude<keyof CustomFields, '__typename'>): CustomFieldConfig[];\r\n    getOrderProcessStates(): OrderProcessState[];\r\n    getPermittedAssetTypes(): string[];\r\n    getPermissionDefinitions(): PermissionDefinition[];\r\n    get serverConfig(): ServerConfig;\r\n}\r\n"]}