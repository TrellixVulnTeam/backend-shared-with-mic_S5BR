import { PlatformLocation } from '@angular/common';
import { HttpClient } from '@angular/common/http';
import { Title } from '@angular/platform-browser';
import { MessageFormatConfig } from 'ngx-translate-messageformat-compiler';
import { CustomHttpTranslationLoader } from './providers/i18n/custom-http-loader';
import { I18nService } from './providers/i18n/i18n.service';
import { LocalStorageService } from './providers/local-storage/local-storage.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './components/app-shell/app-shell.component';
import * as ɵngcc2 from './components/user-menu/user-menu.component';
import * as ɵngcc3 from './components/main-nav/main-nav.component';
import * as ɵngcc4 from './components/breadcrumb/breadcrumb.component';
import * as ɵngcc5 from './components/overlay-host/overlay-host.component';
import * as ɵngcc6 from './components/notification/notification.component';
import * as ɵngcc7 from './components/ui-language-switcher-dialog/ui-language-switcher-dialog.component';
import * as ɵngcc8 from './components/channel-switcher/channel-switcher.component';
import * as ɵngcc9 from './components/theme-switcher/theme-switcher.component';
import * as ɵngcc10 from '@angular/platform-browser';
import * as ɵngcc11 from './data/data.module';
import * as ɵngcc12 from './shared/shared.module';
import * as ɵngcc13 from '@angular/platform-browser/animations';
import * as ɵngcc14 from '@ngx-translate/core';
export declare class CoreModule {
    private i18nService;
    private localStorageService;
    private titleService;
    constructor(i18nService: I18nService, localStorageService: LocalStorageService, titleService: Title);
    private initUiLanguages;
    private initUiTitle;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<CoreModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<CoreModule, [typeof ɵngcc1.AppShellComponent, typeof ɵngcc2.UserMenuComponent, typeof ɵngcc3.MainNavComponent, typeof ɵngcc4.BreadcrumbComponent, typeof ɵngcc5.OverlayHostComponent, typeof ɵngcc6.NotificationComponent, typeof ɵngcc7.UiLanguageSwitcherDialogComponent, typeof ɵngcc8.ChannelSwitcherComponent, typeof ɵngcc9.ThemeSwitcherComponent], [typeof ɵngcc10.BrowserModule, typeof ɵngcc11.DataModule, typeof ɵngcc12.SharedModule, typeof ɵngcc13.BrowserAnimationsModule, typeof ɵngcc14.TranslateModule], [typeof ɵngcc12.SharedModule, typeof ɵngcc5.OverlayHostComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<CoreModule>;
}
export declare function HttpLoaderFactory(http: HttpClient, location: PlatformLocation): CustomHttpTranslationLoader;
/**
 * Returns the locales defined in the vendure-ui-config.json, ensuring that the
 * default language is the first item in the array as per the messageformat
 * documentation:
 *
 * > The default locale will be the first entry of the array
 * https://messageformat.github.io/messageformat/MessageFormat
 */
export declare function getLocales(): MessageFormatConfig;

//# sourceMappingURL=core.module.d.ts.map