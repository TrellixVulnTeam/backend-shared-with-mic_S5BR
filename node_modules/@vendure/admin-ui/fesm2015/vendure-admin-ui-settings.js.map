{"version":3,"file":"vendure-admin-ui-settings.js","sources":["../../src/lib/settings/src/components/add-country-to-zone-dialog/add-country-to-zone-dialog.component.ts","../../src/lib/settings/src/components/admin-detail/admin-detail.component.ts","../../src/lib/settings/src/components/administrator-list/administrator-list.component.ts","../../src/lib/settings/src/components/channel-detail/channel-detail.component.ts","../../src/lib/settings/src/components/channel-list/channel-list.component.ts","../../src/lib/settings/src/components/country-detail/country-detail.component.ts","../../src/lib/settings/src/components/country-list/country-list.component.ts","../../src/lib/settings/src/components/global-settings/global-settings.component.ts","../../src/lib/settings/src/components/payment-method-detail/payment-method-detail.component.ts","../../src/lib/settings/src/components/payment-method-list/payment-method-list.component.ts","../../src/lib/settings/src/components/permission-grid/permission-grid.component.ts","../../src/lib/settings/src/components/profile/profile.component.ts","../../src/lib/settings/src/components/role-detail/role-detail.component.ts","../../src/lib/settings/src/components/role-list/role-list.component.ts","../../src/lib/settings/src/components/shipping-eligibility-test-result/shipping-eligibility-test-result.component.ts","../../src/lib/settings/src/components/shipping-method-detail/shipping-method-detail.component.ts","../../src/lib/settings/src/components/shipping-method-list/shipping-method-list.component.ts","../../src/lib/settings/src/components/shipping-method-test-result/shipping-method-test-result.component.ts","../../src/lib/settings/src/components/tax-category-detail/tax-category-detail.component.ts","../../src/lib/settings/src/components/tax-category-list/tax-category-list.component.ts","../../src/lib/settings/src/components/tax-rate-detail/tax-rate-detail.component.ts","../../src/lib/settings/src/components/tax-rate-list/tax-rate-list.component.ts","../../src/lib/settings/src/components/test-address-form/test-address-form.component.ts","../../src/lib/settings/src/components/test-order-builder/test-order-builder.component.ts","../../src/lib/settings/src/components/zone-detail-dialog/zone-detail-dialog.component.ts","../../src/lib/settings/src/components/zone-list/zone-list.component.ts","../../src/lib/settings/src/components/zone-member-list/zone-member-controls.directive.ts","../../src/lib/settings/src/components/zone-member-list/zone-member-list-header.directive.ts","../../src/lib/settings/src/components/zone-member-list/zone-member-list.component.ts","../../src/lib/settings/src/providers/routing/administrator-resolver.ts","../../src/lib/settings/src/providers/routing/channel-resolver.ts","../../src/lib/settings/src/providers/routing/country-resolver.ts","../../src/lib/settings/src/providers/routing/global-settings-resolver.ts","../../src/lib/settings/src/providers/routing/payment-method-resolver.ts","../../src/lib/settings/src/providers/routing/profile-resolver.ts","../../src/lib/settings/src/providers/routing/role-resolver.ts","../../src/lib/settings/src/providers/routing/shipping-method-resolver.ts","../../src/lib/settings/src/providers/routing/tax-category-resolver.ts","../../src/lib/settings/src/providers/routing/tax-rate-resolver.ts","../../src/lib/settings/src/settings.routes.ts","../../src/lib/settings/src/settings.module.ts","../../src/lib/settings/src/public_api.ts","../../src/lib/settings/src/vendure-admin-ui-settings.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { DataService, Dialog, GetCountryList, GetZones } from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-add-country-to-zone-dialog',\r\n    templateUrl: './add-country-to-zone-dialog.component.html',\r\n    styleUrls: ['./add-country-to-zone-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddCountryToZoneDialogComponent implements Dialog<string[]>, OnInit {\r\n    resolveWith: (result?: string[]) => void;\r\n    zoneName: string;\r\n    currentMembers: GetZones.Members[] = [];\r\n    availableCountries$: Observable<GetCountryList.Items[]>;\r\n    selectedMemberIds: string[] = [];\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        const currentMemberIds = this.currentMembers.map(m => m.id);\r\n        this.availableCountries$ = this.dataService.settings\r\n            .getCountries(999)\r\n            .mapStream(data => data.countries.items)\r\n            .pipe(map(countries => countries.filter(c => !currentMemberIds.includes(c.id))));\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    add() {\r\n        this.resolveWith(this.selectedMemberIds);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { BaseDetailComponent, CustomFieldConfig, PermissionDefinition } from '@vendure/admin-ui/core';\r\nimport {\r\n    Administrator,\r\n    CreateAdministratorInput,\r\n    GetAdministrator,\r\n    LanguageCode,\r\n    Permission,\r\n    Role,\r\n    RoleFragment,\r\n    UpdateAdministratorInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { NotificationService } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\nimport { ServerConfigService } from '@vendure/admin-ui/core';\r\nimport { CUSTOMER_ROLE_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { Observable } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nexport interface PermissionsByChannel {\r\n    channelId: string;\r\n    channelCode: string;\r\n    permissions: { [K in Permission]: boolean };\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-admin-detail',\r\n    templateUrl: './admin-detail.component.html',\r\n    styleUrls: ['./admin-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AdminDetailComponent\r\n    extends BaseDetailComponent<GetAdministrator.Administrator>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields: CustomFieldConfig[];\r\n    administrator$: Observable<GetAdministrator.Administrator>;\r\n    permissionDefinitions: PermissionDefinition[];\r\n    allRoles$: Observable<Role.Fragment[]>;\r\n    selectedRoles: Role.Fragment[] = [];\r\n    detailForm: FormGroup;\r\n    selectedRolePermissions: { [channelId: string]: PermissionsByChannel } = {} as any;\r\n    selectedChannelId: string | null = null;\r\n\r\n    getAvailableChannels(): PermissionsByChannel[] {\r\n        return Object.values(this.selectedRolePermissions);\r\n    }\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.customFields = this.getCustomFieldConfig('Administrator');\r\n        this.detailForm = this.formBuilder.group({\r\n            emailAddress: ['', Validators.required],\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            password: [''],\r\n            roles: [[]],\r\n            customFields: this.formBuilder.group(\r\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n            ),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.administrator$ = this.entity$;\r\n        this.allRoles$ = this.dataService.administrator\r\n            .getRoles(999)\r\n            .mapStream(item => item.roles.items.filter(i => i.code !== CUSTOMER_ROLE_CODE));\r\n        this.dataService.client.userStatus().single$.subscribe(({ userStatus }) => {\r\n            if (!userStatus.permissions.includes(Permission.UpdateAdministrator)) {\r\n                const rolesSelect = this.detailForm.get('roles');\r\n                if (rolesSelect) {\r\n                    rolesSelect.disable();\r\n                }\r\n            }\r\n        });\r\n        this.permissionDefinitions = this.serverConfigService.getPermissionDefinitions();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    rolesChanged(roles: Role[]) {\r\n        this.buildPermissionsMap();\r\n    }\r\n\r\n    getPermissionsForSelectedChannel(): string[] {\r\n        function getActivePermissions(input: PermissionsByChannel['permissions']): string[] {\r\n            return Object.entries(input)\r\n                .filter(([permission, active]) => active)\r\n                .map(([permission, active]) => permission);\r\n        }\r\n        if (this.selectedChannelId) {\r\n            const selectedChannel = this.selectedRolePermissions[this.selectedChannelId];\r\n            if (selectedChannel) {\r\n                const permissionMap = this.selectedRolePermissions[this.selectedChannelId].permissions;\r\n                return getActivePermissions(permissionMap);\r\n            }\r\n        }\r\n        const channels = Object.values(this.selectedRolePermissions);\r\n        if (0 < channels.length) {\r\n            this.selectedChannelId = channels[0].channelId;\r\n            return getActivePermissions(channels[0].permissions);\r\n        }\r\n        return [];\r\n    }\r\n\r\n    create() {\r\n        const formValue = this.detailForm.value;\r\n        const administrator: CreateAdministratorInput = {\r\n            emailAddress: formValue.emailAddress,\r\n            firstName: formValue.firstName,\r\n            lastName: formValue.lastName,\r\n            password: formValue.password,\r\n            customFields: formValue.customFields,\r\n            roleIds: formValue.roles.map(role => role.id),\r\n        };\r\n        this.dataService.administrator.createAdministrator(administrator).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'Administrator',\r\n                });\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createAdministrator.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'Administrator',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        this.administrator$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(({ id }) => {\r\n                    const formValue = this.detailForm.value;\r\n                    const administrator: UpdateAdministratorInput = {\r\n                        id,\r\n                        emailAddress: formValue.emailAddress,\r\n                        firstName: formValue.firstName,\r\n                        lastName: formValue.lastName,\r\n                        password: formValue.password,\r\n                        customFields: formValue.customFields,\r\n                        roleIds: formValue.roles.map(role => role.id),\r\n                    };\r\n                    return this.dataService.administrator.updateAdministrator(administrator);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Administrator',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Administrator',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    protected setFormValues(administrator: Administrator, languageCode: LanguageCode): void {\r\n        this.detailForm.patchValue({\r\n            emailAddress: administrator.emailAddress,\r\n            firstName: administrator.firstName,\r\n            lastName: administrator.lastName,\r\n            roles: administrator.user.roles,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get(['customFields']),\r\n                administrator,\r\n            );\r\n        }\r\n        const passwordControl = this.detailForm.get('password');\r\n        if (passwordControl) {\r\n            if (!administrator.id) {\r\n                passwordControl.setValidators([Validators.required]);\r\n            } else {\r\n                passwordControl.setValidators([]);\r\n            }\r\n        }\r\n        this.buildPermissionsMap();\r\n    }\r\n\r\n    private buildPermissionsMap() {\r\n        const permissionsControl = this.detailForm.get('roles');\r\n        if (permissionsControl) {\r\n            const roles: RoleFragment[] = permissionsControl.value;\r\n            const channelIdPermissionsMap = new Map<string, Set<Permission>>();\r\n            const channelIdCodeMap = new Map<string, string>();\r\n\r\n            for (const role of roles) {\r\n                for (const channel of role.channels) {\r\n                    const channelPermissions = channelIdPermissionsMap.get(channel.id);\r\n                    const permissionSet = channelPermissions || new Set<Permission>();\r\n\r\n                    role.permissions.forEach(p => permissionSet.add(p));\r\n                    channelIdPermissionsMap.set(channel.id, permissionSet);\r\n                    channelIdCodeMap.set(channel.id, channel.code);\r\n                }\r\n            }\r\n\r\n            this.selectedRolePermissions = {} as any;\r\n            for (const channelId of Array.from(channelIdPermissionsMap.keys())) {\r\n                // tslint:disable-next-line:no-non-null-assertion\r\n                const permissionSet = channelIdPermissionsMap.get(channelId)!;\r\n                const permissionsHash: { [K in Permission]: boolean } = {} as any;\r\n                for (const def of this.serverConfigService.getPermissionDefinitions()) {\r\n                    permissionsHash[def.name] = permissionSet.has(def.name as Permission);\r\n                }\r\n                this.selectedRolePermissions[channelId] = {\r\n                    // tslint:disable:no-non-null-assertion\r\n                    channelId,\r\n                    channelCode: channelIdCodeMap.get(channelId)!,\r\n                    permissions: permissionsHash,\r\n                    // tslint:enable:no-non-null-assertion\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseListComponent,\r\n    DataService,\r\n    GetAdministrators,\r\n    ModalService,\r\n    NotificationService,\r\n} from '@vendure/admin-ui/core';\r\nimport { EMPTY } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-administrator-list',\r\n    templateUrl: './administrator-list.component.html',\r\n    styleUrls: ['./administrator-list.component.scss'],\r\n})\r\nexport class AdministratorListComponent extends BaseListComponent<\r\n    GetAdministrators.Query,\r\n    GetAdministrators.Items\r\n> {\r\n    constructor(\r\n        private dataService: DataService,\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        private modalService: ModalService,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => this.dataService.administrator.getAdministrators(...args),\r\n            (data) => data.administrators,\r\n        );\r\n    }\r\n\r\n    deleteAdministrator(administrator: GetAdministrators.Items) {\r\n        return this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-administrator'),\r\n                body: `${administrator.firstName} ${administrator.lastName}`,\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap((res) =>\r\n                    res ? this.dataService.administrator.deleteAdministrator(administrator.id) : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'Administrator',\r\n                    });\r\n                    this.refresh();\r\n                },\r\n                (err) => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'Administrator',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { BaseDetailComponent, CustomFieldConfig, Permission } from '@vendure/admin-ui/core';\r\nimport {\r\n    Channel,\r\n    CreateChannelInput,\r\n    CurrencyCode,\r\n    GetZones,\r\n    LanguageCode,\r\n    UpdateChannelInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { getDefaultUiLanguage } from '@vendure/admin-ui/core';\r\nimport { NotificationService } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\nimport { ServerConfigService } from '@vendure/admin-ui/core';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { Observable } from 'rxjs';\r\nimport { map, mergeMap, take } from 'rxjs/operators';\r\n@Component({\r\n    selector: 'vdr-channel-detail',\r\n    templateUrl: './channel-detail.component.html',\r\n    styleUrls: ['./channel-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChannelDetailComponent\r\n    extends BaseDetailComponent<Channel.Fragment>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields: CustomFieldConfig[];\r\n    zones$: Observable<GetZones.Zones[]>;\r\n    detailForm: FormGroup;\r\n    currencyCodes = Object.values(CurrencyCode);\r\n    availableLanguageCodes$: Observable<LanguageCode[]>;\r\n    readonly updatePermission = [Permission.SuperAdmin, Permission.UpdateChannel, Permission.CreateChannel];\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        protected serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.customFields = this.getCustomFieldConfig('Channel');\r\n        this.detailForm = this.formBuilder.group({\r\n            code: ['', Validators.required],\r\n            token: ['', Validators.required],\r\n            pricesIncludeTax: [false],\r\n            currencyCode: [''],\r\n            defaultShippingZoneId: ['', Validators.required],\r\n            defaultLanguageCode: [],\r\n            defaultTaxZoneId: ['', Validators.required],\r\n            customFields: this.formBuilder.group(\r\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n            ),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.zones$ = this.dataService.settings.getZones().mapSingle(data => data.zones);\r\n        this.availableLanguageCodes$ = this.serverConfigService.getAvailableLanguages();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    saveButtonEnabled(): boolean {\r\n        return this.detailForm.dirty && this.detailForm.valid;\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        const input: CreateChannelInput = {\r\n            code: formValue.code,\r\n            token: formValue.token,\r\n            defaultLanguageCode: formValue.defaultLanguageCode,\r\n            pricesIncludeTax: formValue.pricesIncludeTax,\r\n            currencyCode: formValue.currencyCode,\r\n            defaultShippingZoneId: formValue.defaultShippingZoneId,\r\n            defaultTaxZoneId: formValue.defaultTaxZoneId,\r\n            customFields: formValue.customFields,\r\n        };\r\n        this.dataService.settings\r\n            .createChannel(input)\r\n            .pipe(\r\n                mergeMap(({ createChannel }) =>\r\n                    this.dataService.auth.currentUser().single$.pipe(\r\n                        map(({ me }) => ({\r\n                            me,\r\n                            createChannel,\r\n                        })),\r\n                    ),\r\n                ),\r\n                mergeMap(({ me, createChannel }) =>\r\n                    // tslint:disable-next-line:no-non-null-assertion\r\n                    this.dataService.client.updateUserChannels(me!.channels).pipe(map(() => createChannel)),\r\n                ),\r\n            )\r\n            .subscribe(data => {\r\n                switch (data.__typename) {\r\n                    case 'Channel':\r\n                        this.notificationService.success(_('common.notify-create-success'), {\r\n                            entity: 'Channel',\r\n                        });\r\n                        this.detailForm.markAsPristine();\r\n                        this.changeDetector.markForCheck();\r\n                        this.router.navigate(['../', data.id], { relativeTo: this.route });\r\n                        break;\r\n                    case 'LanguageNotAvailableError':\r\n                        this.notificationService.error(data.message);\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(channel => {\r\n                    const input = {\r\n                        id: channel.id,\r\n                        code: formValue.code,\r\n                        token: formValue.token,\r\n                        pricesIncludeTax: formValue.pricesIncludeTax,\r\n                        currencyCode: formValue.currencyCode,\r\n                        defaultShippingZoneId: formValue.defaultShippingZoneId,\r\n                        defaultLanguageCode: formValue.defaultLanguageCode,\r\n                        defaultTaxZoneId: formValue.defaultTaxZoneId,\r\n                        customFields: formValue.customFields,\r\n                    } as UpdateChannelInput;\r\n                    return this.dataService.settings.updateChannel(input);\r\n                }),\r\n            )\r\n            .subscribe(({ updateChannel }) => {\r\n                switch (updateChannel.__typename) {\r\n                    case 'Channel':\r\n                        this.notificationService.success(_('common.notify-update-success'), {\r\n                            entity: 'Channel',\r\n                        });\r\n                        this.detailForm.markAsPristine();\r\n                        this.changeDetector.markForCheck();\r\n                        break;\r\n                    case 'LanguageNotAvailableError':\r\n                        this.notificationService.error(updateChannel.message);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    protected setFormValues(entity: Channel.Fragment, languageCode: LanguageCode): void {\r\n        this.detailForm.patchValue({\r\n            code: entity.code,\r\n            token: entity.token || this.generateToken(),\r\n            pricesIncludeTax: entity.pricesIncludeTax,\r\n            currencyCode: entity.currencyCode,\r\n            defaultShippingZoneId: entity.defaultShippingZone ? entity.defaultShippingZone.id : '',\r\n            defaultLanguageCode: entity.defaultLanguageCode,\r\n            defaultTaxZoneId: entity.defaultTaxZone ? entity.defaultTaxZone.id : '',\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\r\n        }\r\n        if (entity.code === DEFAULT_CHANNEL_CODE) {\r\n            const codeControl = this.detailForm.get('code');\r\n            if (codeControl) {\r\n                codeControl.disable();\r\n            }\r\n        }\r\n    }\r\n\r\n    private generateToken(): string {\r\n        const randomString = () => Math.random().toString(36).substr(3, 10);\r\n        return `${randomString()}${randomString()}`;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { EMPTY, Observable, Subject } from 'rxjs';\r\nimport { mergeMap, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport { Channel } from '@vendure/admin-ui/core';\r\nimport { NotificationService } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\nimport { ModalService } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-channel-list',\r\n    templateUrl: './channel-list.component.html',\r\n    styleUrls: ['./channel-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChannelListComponent {\r\n    channels$: Observable<Channel.Fragment[]>;\r\n    private refresh$ = new Subject();\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private modalService: ModalService,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        this.channels$ = this.refresh$.pipe(\r\n            startWith(1),\r\n            switchMap(() => this.dataService.settings.getChannels().mapStream(data => data.channels)),\r\n        );\r\n    }\r\n\r\n    isDefaultChannel(channelCode: string): boolean {\r\n        return channelCode === DEFAULT_CHANNEL_CODE;\r\n    }\r\n\r\n    deleteChannel(id: string) {\r\n        this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-channel'),\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response => (response ? this.dataService.settings.deleteChannel(id) : EMPTY)),\r\n                mergeMap(() => this.dataService.auth.currentUser().single$),\r\n                // tslint:disable-next-line:no-non-null-assertion\r\n                mergeMap(data => this.dataService.client.updateUserChannels(data.me!.channels)),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'Channel',\r\n                    });\r\n                    this.refresh$.next(1);\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'Channel',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseDetailComponent,\r\n    Country,\r\n    CreateCountryInput,\r\n    createUpdatedTranslatable,\r\n    CustomFieldConfig,\r\n    DataService,\r\n    findTranslation,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    ServerConfigService,\r\n    UpdateCountryInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-country-detail',\r\n    templateUrl: './country-detail.component.html',\r\n    styleUrls: ['./country-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CountryDetailComponent\r\n    extends BaseDetailComponent<Country.Fragment>\r\n    implements OnInit, OnDestroy\r\n{\r\n    country$: Observable<Country.Fragment>;\r\n    detailForm: FormGroup;\r\n    customFields: CustomFieldConfig[];\r\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateCountry];\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.customFields = this.getCustomFieldConfig('Country');\r\n        this.detailForm = this.formBuilder.group({\r\n            code: ['', Validators.required],\r\n            name: ['', Validators.required],\r\n            enabled: [true],\r\n            customFields: this.formBuilder.group(\r\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n            ),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.country$ = this.entity$;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        combineLatest(this.country$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([country, languageCode]) => {\r\n                    const formValue = this.detailForm.value;\r\n                    const input: CreateCountryInput = createUpdatedTranslatable({\r\n                        translatable: country,\r\n                        updatedFields: formValue,\r\n                        customFieldConfig: this.customFields,\r\n                        languageCode,\r\n                        defaultTranslation: {\r\n                            name: formValue.name,\r\n                            languageCode,\r\n                        },\r\n                    });\r\n                    return this.dataService.settings.createCountry(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-create-success'), {\r\n                        entity: 'Country',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.router.navigate(['../', data.createCountry.id], { relativeTo: this.route });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-create-error'), {\r\n                        entity: 'Country',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    save() {\r\n        combineLatest(this.country$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([country, languageCode]) => {\r\n                    const formValue = this.detailForm.value;\r\n                    const input: UpdateCountryInput = createUpdatedTranslatable({\r\n                        translatable: country,\r\n                        updatedFields: formValue,\r\n                        customFieldConfig: this.customFields,\r\n                        languageCode,\r\n                        defaultTranslation: {\r\n                            name: formValue.name,\r\n                            languageCode,\r\n                        },\r\n                    });\r\n                    return this.dataService.settings.updateCountry(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Country',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Country',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    protected setFormValues(country: Country, languageCode: LanguageCode): void {\r\n        const currentTranslation = findTranslation(country, languageCode);\r\n\r\n        this.detailForm.patchValue({\r\n            code: country.code,\r\n            name: currentTranslation ? currentTranslation.name : '',\r\n            enabled: country.enabled,\r\n        });\r\n\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get(['customFields']),\r\n                country,\r\n                currentTranslation,\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    DataService,\r\n    DeletionResult,\r\n    GetCountryList,\r\n    GetZones,\r\n    LanguageCode,\r\n    ModalService,\r\n    NotificationService,\r\n    ServerConfigService,\r\n    Zone,\r\n} from '@vendure/admin-ui/core';\r\nimport { combineLatest, EMPTY, Observable, Subject } from 'rxjs';\r\nimport { map, startWith, switchMap, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-country-list',\r\n    templateUrl: './country-list.component.html',\r\n    styleUrls: ['./country-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CountryListComponent implements OnInit, OnDestroy {\r\n    searchTerm = new FormControl('');\r\n    countriesWithZones$: Observable<Array<GetCountryList.Items & { zones: GetZones.Zones[] }>>;\r\n    zones$: Observable<GetZones.Zones[]>;\r\n    availableLanguages$: Observable<LanguageCode[]>;\r\n    contentLanguage$: Observable<LanguageCode>;\r\n\r\n    private countries: GetCountryList.Items[] = [];\r\n    private destroy$ = new Subject<void>();\r\n    private refresh$ = new Subject<void>();\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n        private serverConfigService: ServerConfigService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.contentLanguage$ = this.dataService.client\r\n            .uiState()\r\n            .mapStream(({ uiState }) => uiState.contentLanguage);\r\n\r\n        const countries$ = combineLatest(\r\n            this.contentLanguage$,\r\n            this.searchTerm.valueChanges.pipe(startWith(null)),\r\n        ).pipe(\r\n            map(([__, term]) => term),\r\n            switchMap(term => this.dataService.settings.getCountries(999, 0, term).single$),\r\n            tap(data => {\r\n                this.countries = data.countries.items;\r\n            }),\r\n            map(data => data.countries.items),\r\n        );\r\n\r\n        this.zones$ = this.dataService.settings.getZones().mapStream(data => data.zones);\r\n\r\n        this.countriesWithZones$ = combineLatest(countries$, this.zones$).pipe(\r\n            map(([countries, zones]) => {\r\n                return countries.map(country => ({\r\n                    ...country,\r\n                    zones: zones.filter(z => !!z.members.find(c => c.id === country.id)),\r\n                }));\r\n            }),\r\n        );\r\n\r\n        this.availableLanguages$ = this.serverConfigService.getAvailableLanguages();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next(undefined);\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    setLanguage(code: LanguageCode) {\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n\r\n    deleteCountry(countryId: string) {\r\n        this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-country'),\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response =>\r\n                    response ? this.dataService.settings.deleteCountry(countryId) : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe(\r\n                response => {\r\n                    if (response.deleteCountry.result === DeletionResult.DELETED) {\r\n                        this.notificationService.success(_('common.notify-delete-success'), {\r\n                            entity: 'Country',\r\n                        });\r\n                        this.dataService.settings.getCountries(999, 0).single$.subscribe();\r\n                    } else {\r\n                        this.notificationService.error(response.deleteCountry.message || '');\r\n                    }\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'Country',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    private isZone(input: Zone.Fragment | { name: string } | string): input is Zone.Fragment {\r\n        return input.hasOwnProperty('id');\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseDetailComponent,\r\n    CustomFieldConfig,\r\n    DataService,\r\n    GlobalSettings,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    ServerConfigService,\r\n} from '@vendure/admin-ui/core';\r\nimport { switchMap, tap, withLatestFrom } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-global-settings',\r\n    templateUrl: './global-settings.component.html',\r\n    styleUrls: ['./global-settings.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class GlobalSettingsComponent extends BaseDetailComponent<GlobalSettings> implements OnInit {\r\n    detailForm: FormGroup;\r\n    customFields: CustomFieldConfig[];\r\n    languageCodes = Object.values(LanguageCode);\r\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateGlobalSettings];\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.customFields = this.getCustomFieldConfig('GlobalSettings');\r\n        this.detailForm = this.formBuilder.group({\r\n            availableLanguages: [''],\r\n            trackInventory: false,\r\n            outOfStockThreshold: [0, Validators.required],\r\n            customFields: this.formBuilder.group(\r\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n            ),\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.init();\r\n        this.dataService.client.userStatus().single$.subscribe(({ userStatus }) => {\r\n            if (!userStatus.permissions.includes(Permission.UpdateSettings)) {\r\n                const languagesSelect = this.detailForm.get('availableLanguages');\r\n                if (languagesSelect) {\r\n                    languagesSelect.disable();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n\r\n        this.dataService.settings\r\n            .updateGlobalSettings(this.detailForm.value)\r\n            .pipe(\r\n                tap(({ updateGlobalSettings }) => {\r\n                    switch (updateGlobalSettings.__typename) {\r\n                        case 'GlobalSettings':\r\n                            this.detailForm.markAsPristine();\r\n                            this.changeDetector.markForCheck();\r\n                            this.notificationService.success(_('common.notify-update-success'), {\r\n                                entity: 'Settings',\r\n                            });\r\n                            break;\r\n                        case 'ChannelDefaultLanguageError':\r\n                            this.notificationService.error(updateGlobalSettings.message);\r\n                    }\r\n                }),\r\n                switchMap(() => this.serverConfigService.refreshGlobalSettings()),\r\n                withLatestFrom(this.dataService.client.uiState().single$),\r\n            )\r\n            .subscribe(([{ globalSettings }, { uiState }]) => {\r\n                const availableLangs = globalSettings.availableLanguages;\r\n                if (availableLangs.length && !availableLangs.includes(uiState.contentLanguage)) {\r\n                    this.dataService.client.setContentLanguage(availableLangs[0]).subscribe();\r\n                }\r\n            });\r\n    }\r\n\r\n    protected setFormValues(entity: GlobalSettings, languageCode: LanguageCode): void {\r\n        this.detailForm.patchValue({\r\n            availableLanguages: entity.availableLanguages,\r\n            trackInventory: entity.trackInventory,\r\n            outOfStockThreshold: entity.outOfStockThreshold,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseDetailComponent,\r\n    ConfigArgDefinition,\r\n    configurableDefinitionToInstance,\r\n    ConfigurableOperation,\r\n    ConfigurableOperationDefinition,\r\n    CreatePaymentMethodInput,\r\n    CustomFieldConfig,\r\n    DataService,\r\n    encodeConfigArgValue,\r\n    getConfigArgValue,\r\n    NotificationService,\r\n    PaymentMethod,\r\n    Permission,\r\n    ServerConfigService,\r\n    toConfigurableOperationInput,\r\n    UpdatePaymentMethodInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { combineLatest } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-payment-method-detail',\r\n    templateUrl: './payment-method-detail.component.html',\r\n    styleUrls: ['./payment-method-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaymentMethodDetailComponent\r\n    extends BaseDetailComponent<PaymentMethod.Fragment>\r\n    implements OnInit, OnDestroy\r\n{\r\n    detailForm: FormGroup;\r\n    customFields: CustomFieldConfig[];\r\n    checkers: ConfigurableOperationDefinition[] = [];\r\n    handlers: ConfigurableOperationDefinition[] = [];\r\n    selectedChecker?: ConfigurableOperation | null;\r\n    selectedCheckerDefinition?: ConfigurableOperationDefinition;\r\n    selectedHandler?: ConfigurableOperation | null;\r\n    selectedHandlerDefinition?: ConfigurableOperationDefinition;\r\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdatePaymentMethod];\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.customFields = this.getCustomFieldConfig('PaymentMethod');\r\n        this.detailForm = this.formBuilder.group({\r\n            code: ['', Validators.required],\r\n            name: ['', Validators.required],\r\n            description: '',\r\n            enabled: [true, Validators.required],\r\n            checker: {},\r\n            handler: {},\r\n            customFields: this.formBuilder.group(\r\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n            ),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        combineLatest([\r\n            this.dataService.settings.getPaymentMethodOperations().single$,\r\n            this.entity$.pipe(take(1)),\r\n        ]).subscribe(([data, entity]) => {\r\n            this.checkers = data.paymentMethodEligibilityCheckers;\r\n            this.handlers = data.paymentMethodHandlers;\r\n            this.changeDetector.markForCheck();\r\n            this.selectedCheckerDefinition = data.paymentMethodEligibilityCheckers.find(\r\n                c => c.code === (entity.checker && entity.checker.code),\r\n            );\r\n            this.selectedHandlerDefinition = data.paymentMethodHandlers.find(\r\n                c => c.code === (entity.handler && entity.handler.code),\r\n            );\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    updateCode(currentCode: string, nameValue: string) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get(['code']);\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n\r\n    configArgsIsPopulated(): boolean {\r\n        const configArgsGroup = this.detailForm.get('configArgs') as FormGroup | undefined;\r\n        if (!configArgsGroup) {\r\n            return false;\r\n        }\r\n        return 0 < Object.keys(configArgsGroup.controls).length;\r\n    }\r\n\r\n    selectChecker(checker: ConfigurableOperationDefinition) {\r\n        this.selectedCheckerDefinition = checker;\r\n        this.selectedChecker = configurableDefinitionToInstance(checker);\r\n        const formControl = this.detailForm.get('checker');\r\n        if (formControl) {\r\n            formControl.clearValidators();\r\n            formControl.updateValueAndValidity({ onlySelf: true });\r\n            formControl.patchValue(this.selectedChecker);\r\n        }\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    selectHandler(handler: ConfigurableOperationDefinition) {\r\n        this.selectedHandlerDefinition = handler;\r\n        this.selectedHandler = configurableDefinitionToInstance(handler);\r\n        const formControl = this.detailForm.get('handler');\r\n        if (formControl) {\r\n            formControl.clearValidators();\r\n            formControl.updateValueAndValidity({ onlySelf: true });\r\n            formControl.patchValue(this.selectedHandler);\r\n        }\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    removeChecker() {\r\n        this.selectedChecker = null;\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    removeHandler() {\r\n        this.selectedHandler = null;\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    create() {\r\n        const selectedChecker = this.selectedChecker;\r\n        const selectedHandler = this.selectedHandler;\r\n        if (!selectedHandler) {\r\n            return;\r\n        }\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(({ id }) => {\r\n                    const formValue = this.detailForm.value;\r\n                    const input: CreatePaymentMethodInput = {\r\n                        name: formValue.name,\r\n                        code: formValue.code,\r\n                        description: formValue.description,\r\n                        enabled: formValue.enabled,\r\n                        checker: selectedChecker\r\n                            ? toConfigurableOperationInput(selectedChecker, formValue.checker)\r\n                            : null,\r\n                        handler: toConfigurableOperationInput(selectedHandler, formValue.handler),\r\n                        customFields: formValue.customFields,\r\n                    };\r\n                    return this.dataService.settings.createPaymentMethod(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-create-success'), {\r\n                        entity: 'PaymentMethod',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.router.navigate(['../', data.createPaymentMethod.id], { relativeTo: this.route });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-create-error'), {\r\n                        entity: 'PaymentMethod',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    save() {\r\n        const selectedChecker = this.selectedChecker;\r\n        const selectedHandler = this.selectedHandler;\r\n        if (!selectedHandler) {\r\n            return;\r\n        }\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(({ id }) => {\r\n                    const formValue = this.detailForm.value;\r\n                    const input: UpdatePaymentMethodInput = {\r\n                        id,\r\n                        name: formValue.name,\r\n                        code: formValue.code,\r\n                        description: formValue.description,\r\n                        enabled: formValue.enabled,\r\n                        checker: selectedChecker\r\n                            ? toConfigurableOperationInput(selectedChecker, formValue.checker)\r\n                            : null,\r\n                        handler: toConfigurableOperationInput(selectedHandler, formValue.handler),\r\n                        customFields: formValue.customFields,\r\n                    };\r\n                    return this.dataService.settings.updatePaymentMethod(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'PaymentMethod',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'PaymentMethod',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    protected setFormValues(paymentMethod: PaymentMethod.Fragment): void {\r\n        this.detailForm.patchValue({\r\n            name: paymentMethod.name,\r\n            code: paymentMethod.code,\r\n            description: paymentMethod.description,\r\n            enabled: paymentMethod.enabled,\r\n            checker: paymentMethod.checker || {},\r\n            handler: paymentMethod.handler || {},\r\n        });\r\n        if (!this.selectedChecker) {\r\n            this.selectedChecker = paymentMethod.checker && {\r\n                code: paymentMethod.checker.code,\r\n                args: paymentMethod.checker.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\r\n            };\r\n        }\r\n        if (!this.selectedHandler) {\r\n            this.selectedHandler = paymentMethod.handler && {\r\n                code: paymentMethod.handler.code,\r\n                args: paymentMethod.handler.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\r\n            };\r\n        }\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get('customFields'),\r\n                paymentMethod,\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseListComponent,\r\n    DataService,\r\n    DeletionResult,\r\n    GetPaymentMethodList,\r\n    ModalService,\r\n    NotificationService,\r\n} from '@vendure/admin-ui/core';\r\nimport { EMPTY } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-payment-method-list',\r\n    templateUrl: './payment-method-list.component.html',\r\n    styleUrls: ['./payment-method-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaymentMethodListComponent extends BaseListComponent<\r\n    GetPaymentMethodList.Query,\r\n    GetPaymentMethodList.Items\r\n> {\r\n    constructor(\r\n        private dataService: DataService,\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        private modalService: ModalService,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => this.dataService.settings.getPaymentMethods(...args).refetchOnChannelChange(),\r\n            data => data.paymentMethods,\r\n        );\r\n    }\r\n\r\n    deletePaymentMethod(paymentMethodId: string) {\r\n        this.showModalAndDelete(paymentMethodId)\r\n            .pipe(\r\n                switchMap(response => {\r\n                    if (response.result === DeletionResult.DELETED) {\r\n                        return [true];\r\n                    } else {\r\n                        return this.showModalAndDelete(paymentMethodId, response.message || '').pipe(\r\n                            map(r => r.result === DeletionResult.DELETED),\r\n                        );\r\n                    }\r\n                }),\r\n                // Refresh the cached facets to reflect the changes\r\n                switchMap(() => this.dataService.settings.getPaymentMethods(100).single$),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'PaymentMethod',\r\n                    });\r\n                    this.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'PaymentMethod',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    private showModalAndDelete(paymentMethodId: string, message?: string) {\r\n        return this.modalService\r\n            .dialog({\r\n                title: _('settings.confirm-delete-payment-method'),\r\n                body: message,\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(res =>\r\n                    res ? this.dataService.settings.deletePaymentMethod(paymentMethodId, !!message) : EMPTY,\r\n                ),\r\n                map(res => res.deletePaymentMethod),\r\n            );\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { PermissionDefinition } from '@vendure/admin-ui/core';\n\nexport interface PermissionGridRow {\n    label: string;\n    description: string;\n    permissions: PermissionDefinition[];\n}\n\n/**\n * A table showing and allowing the setting of all possible CRUD permissions.\n */\n@Component({\n    selector: 'vdr-permission-grid',\n    templateUrl: './permission-grid.component.html',\n    styleUrls: ['./permission-grid.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PermissionGridComponent implements OnInit {\n    @Input() permissionDefinitions: PermissionDefinition[];\n    @Input() activePermissions: string[];\n    @Input() readonly = false;\n    @Output() permissionChange = new EventEmitter<{ permission: string; value: boolean }>();\n    gridData: PermissionGridRow[];\n\n    ngOnInit() {\n        this.buildGrid();\n    }\n\n    setPermission(permission: string, value: boolean) {\n        if (!this.readonly) {\n            this.permissionChange.emit({ permission, value });\n        }\n    }\n\n    toggleAll(defs: PermissionDefinition[]) {\n        const value = defs.some(d => !this.activePermissions.includes(d.name));\n        for (const def of defs) {\n            this.permissionChange.emit({ permission: def.name, value });\n        }\n    }\n\n    private buildGrid() {\n        const crudGroups = new Map<string, PermissionDefinition[]>();\n        const nonCrud: PermissionDefinition[] = [];\n        const crudRe = /^(Create|Read|Update|Delete)([a-zA-Z]+)$/;\n        for (const def of this.permissionDefinitions) {\n            const isCrud = crudRe.test(def.name);\n            if (isCrud) {\n                const groupName = def.name.match(crudRe)?.[2];\n                if (groupName) {\n                    const existing = crudGroups.get(groupName);\n                    if (existing) {\n                        existing.push(def);\n                    } else {\n                        crudGroups.set(groupName, [def]);\n                    }\n                }\n            } else if (def.assignable) {\n                nonCrud.push(def);\n            }\n        }\n        this.gridData = [\n            ...nonCrud.map(d => ({\n                label: d.name,\n                description: d.description,\n                permissions: [d],\n            })),\n            ...Array.from(crudGroups.entries()).map(([label, defs]) => {\n                return {\n                    label,\n                    description: this.extractCrudDescription(defs[0]),\n                    permissions: defs,\n                };\n            }),\n        ];\n    }\n\n    private extractCrudDescription(def: PermissionDefinition): string {\n        return def.description.replace(/Grants permission to [\\w]+/, 'Grants permissions on');\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    Administrator,\r\n    BaseDetailComponent,\r\n    CustomFieldConfig,\r\n    DataService,\r\n    GetActiveAdministrator,\r\n    LanguageCode,\r\n    NotificationService,\r\n    ServerConfigService,\r\n    UpdateActiveAdministratorInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-profile',\r\n    templateUrl: './profile.component.html',\r\n    styleUrls: ['./profile.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProfileComponent\r\n    extends BaseDetailComponent<GetActiveAdministrator.ActiveAdministrator>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields: CustomFieldConfig[];\r\n    detailForm: FormGroup;\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.customFields = this.getCustomFieldConfig('Administrator');\r\n        this.detailForm = this.formBuilder.group({\r\n            emailAddress: ['', Validators.required],\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            password: [''],\r\n            customFields: this.formBuilder.group(\r\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n            ),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    save() {\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(({ id }) => {\r\n                    const formValue = this.detailForm.value;\r\n                    const administrator: UpdateActiveAdministratorInput = {\r\n                        emailAddress: formValue.emailAddress,\r\n                        firstName: formValue.firstName,\r\n                        lastName: formValue.lastName,\r\n                        password: formValue.password,\r\n                        customFields: formValue.customFields,\r\n                    };\r\n                    return this.dataService.administrator.updateActiveAdministrator(administrator);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Administrator',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Administrator',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    protected setFormValues(administrator: Administrator, languageCode: LanguageCode): void {\r\n        this.detailForm.patchValue({\r\n            emailAddress: administrator.emailAddress,\r\n            firstName: administrator.firstName,\r\n            lastName: administrator.lastName,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get('customFields'),\r\n                administrator,\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseDetailComponent,\n    CreateRoleInput,\n    DataService,\n    LanguageCode,\n    NotificationService,\n    Permission,\n    PermissionDefinition,\n    Role,\n    ServerConfigService,\n    UpdateRoleInput,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { unique } from '@vendure/common/lib/unique';\nimport { Observable } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-role-detail',\n    templateUrl: './role-detail.component.html',\n    styleUrls: ['./role-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RoleDetailComponent extends BaseDetailComponent<Role> implements OnInit, OnDestroy {\n    role$: Observable<Role>;\n    detailForm: FormGroup;\n    permissionDefinitions: PermissionDefinition[];\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            description: ['', Validators.required],\n            channelIds: [],\n            permissions: [],\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        this.role$ = this.entity$;\n        this.permissionDefinitions = this.serverConfigService.getPermissionDefinitions();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    updateCode(nameValue: string) {\n        const codeControl = this.detailForm.get(['code']);\n        if (codeControl && codeControl.pristine) {\n            codeControl.setValue(normalizeString(nameValue, '-'));\n        }\n    }\n\n    setPermission(change: { permission: string; value: boolean }) {\n        const permissionsControl = this.detailForm.get('permissions');\n        if (permissionsControl) {\n            const currentPermissions = permissionsControl.value as string[];\n            const newValue =\n                change.value === true\n                    ? unique([...currentPermissions, change.permission])\n                    : currentPermissions.filter(p => p !== change.permission);\n            permissionsControl.setValue(newValue);\n            permissionsControl.markAsDirty();\n        }\n    }\n\n    create() {\n        const formValue = this.detailForm.value;\n        const role: CreateRoleInput = formValue;\n        this.dataService.administrator.createRole(role).subscribe(\n            data => {\n                this.notificationService.success(_('common.notify-create-success'), { entity: 'Role' });\n                this.detailForm.markAsPristine();\n                this.changeDetector.markForCheck();\n                this.router.navigate(['../', data.createRole.id], { relativeTo: this.route });\n            },\n            err => {\n                this.notificationService.error(_('common.notify-create-error'), {\n                    entity: 'Role',\n                });\n            },\n        );\n    }\n\n    save() {\n        this.role$\n            .pipe(\n                take(1),\n                mergeMap(({ id }) => {\n                    const formValue = this.detailForm.value;\n                    const role: UpdateRoleInput = { id, ...formValue };\n                    return this.dataService.administrator.updateRole(role);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-update-success'), { entity: 'Role' });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Role',\n                    });\n                },\n            );\n    }\n\n    protected setFormValues(role: Role, languageCode: LanguageCode): void {\n        this.detailForm.patchValue({\n            description: role.description,\n            code: role.code,\n            channelIds: role.channels.map(c => c.id),\n            permissions: role.permissions,\n        });\n        // This was required to get the channel selector component to\n        // correctly display its contents. A while spent debugging the root\n        // cause did not yield a solution, therefore this next line.\n        this.changeDetector.detectChanges();\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { BaseListComponent } from '@vendure/admin-ui/core';\r\nimport { GetRoles, Role } from '@vendure/admin-ui/core';\r\nimport { NotificationService } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\nimport { ModalService } from '@vendure/admin-ui/core';\r\nimport { CUSTOMER_ROLE_CODE, SUPER_ADMIN_ROLE_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-role-list',\r\n    templateUrl: './role-list.component.html',\r\n    styleUrls: ['./role-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RoleListComponent extends BaseListComponent<GetRoles.Query, GetRoles.Items> implements OnInit {\r\n    readonly initialLimit = 3;\r\n    displayLimit: { [id: string]: number } = {};\r\n    visibleRoles$: Observable<GetRoles.Items[]>;\r\n\r\n    constructor(\r\n        private modalService: ModalService,\r\n        private notificationService: NotificationService,\r\n        private dataService: DataService,\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n    ) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => this.dataService.administrator.getRoles(...args),\r\n            data => data.roles,\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.visibleRoles$ = this.items$.pipe(\r\n            map(roles => roles.filter(role => role.code !== CUSTOMER_ROLE_CODE)),\r\n        );\r\n    }\r\n\r\n    toggleDisplayLimit(role: GetRoles.Items) {\r\n        if (this.displayLimit[role.id] === role.permissions.length) {\r\n            this.displayLimit[role.id] = this.initialLimit;\r\n        } else {\r\n            this.displayLimit[role.id] = role.permissions.length;\r\n        }\r\n    }\r\n\r\n    isDefaultRole(role: Role): boolean {\r\n        return role.code === SUPER_ADMIN_ROLE_CODE || role.code === CUSTOMER_ROLE_CODE;\r\n    }\r\n\r\n    deleteRole(id: string) {\r\n        this.modalService\r\n            .dialog({\r\n                title: _('settings.confirm-delete-role'),\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(switchMap(response => (response ? this.dataService.administrator.deleteRole(id) : EMPTY)))\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'Role',\r\n                    });\r\n                    this.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'Role',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { CurrencyCode, ShippingMethodQuote } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-shipping-eligibility-test-result',\r\n    templateUrl: './shipping-eligibility-test-result.component.html',\r\n    styleUrls: ['./shipping-eligibility-test-result.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShippingEligibilityTestResultComponent {\r\n    @Input() testResult: ShippingMethodQuote[];\r\n    @Input() okToRun = false;\r\n    @Input() testDataUpdated = false;\r\n    @Input() currencyCode: CurrencyCode;\r\n    @Output() runTest = new EventEmitter<void>();\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseDetailComponent,\r\n    configurableDefinitionToInstance,\r\n    ConfigurableOperation,\r\n    ConfigurableOperationDefinition,\r\n    CreateShippingMethodInput,\r\n    createUpdatedTranslatable,\r\n    CustomFieldConfig,\r\n    DataService,\r\n    findTranslation,\r\n    GetActiveChannel,\r\n    getConfigArgValue,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    ServerConfigService,\r\n    ShippingMethod,\r\n    TestShippingMethodInput,\r\n    TestShippingMethodResult,\r\n    toConfigurableOperationInput,\r\n    UpdateShippingMethodInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { combineLatest, merge, Observable, of, Subject } from 'rxjs';\r\nimport { mergeMap, switchMap, take, takeUntil } from 'rxjs/operators';\r\n\r\nimport { TestAddress } from '../test-address-form/test-address-form.component';\r\nimport { TestOrderLine } from '../test-order-builder/test-order-builder.component';\r\n\r\n@Component({\r\n    selector: 'vdr-shipping-method-detail',\r\n    templateUrl: './shipping-method-detail.component.html',\r\n    styleUrls: ['./shipping-method-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShippingMethodDetailComponent\r\n    extends BaseDetailComponent<ShippingMethod.Fragment>\r\n    implements OnInit, OnDestroy\r\n{\r\n    detailForm: FormGroup;\r\n    checkers: ConfigurableOperationDefinition[] = [];\r\n    calculators: ConfigurableOperationDefinition[] = [];\r\n    fulfillmentHandlers: ConfigurableOperationDefinition[] = [];\r\n    selectedChecker?: ConfigurableOperation | null;\r\n    selectedCheckerDefinition?: ConfigurableOperationDefinition;\r\n    selectedCalculator?: ConfigurableOperation | null;\r\n    selectedCalculatorDefinition?: ConfigurableOperationDefinition;\r\n    activeChannel$: Observable<GetActiveChannel.ActiveChannel>;\r\n    testAddress: TestAddress;\r\n    testOrderLines: TestOrderLine[];\r\n    testDataUpdated = false;\r\n    testResult$: Observable<TestShippingMethodResult | undefined>;\r\n    customFields: CustomFieldConfig[];\r\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateShippingMethod];\r\n    private fetchTestResult$ = new Subject<[TestAddress, TestOrderLine[]]>();\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.customFields = this.getCustomFieldConfig('ShippingMethod');\r\n        this.detailForm = this.formBuilder.group({\r\n            code: ['', Validators.required],\r\n            name: ['', Validators.required],\r\n            description: '',\r\n            fulfillmentHandler: ['', Validators.required],\r\n            checker: {},\r\n            calculator: {},\r\n            customFields: this.formBuilder.group(\r\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n            ),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        combineLatest([\r\n            this.dataService.shippingMethod.getShippingMethodOperations().single$,\r\n            this.entity$.pipe(take(1)),\r\n        ]).subscribe(([data, entity]) => {\r\n            this.checkers = data.shippingEligibilityCheckers;\r\n            this.calculators = data.shippingCalculators;\r\n            this.fulfillmentHandlers = data.fulfillmentHandlers;\r\n            this.changeDetector.markForCheck();\r\n            this.selectedCheckerDefinition = data.shippingEligibilityCheckers.find(\r\n                c => c.code === (entity.checker && entity.checker.code),\r\n            );\r\n            this.selectedCalculatorDefinition = data.shippingCalculators.find(\r\n                c => c.code === (entity.calculator && entity.calculator.code),\r\n            );\r\n        });\r\n\r\n        this.activeChannel$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .mapStream(data => data.activeChannel);\r\n\r\n        this.testResult$ = this.fetchTestResult$.pipe(\r\n            switchMap(([address, lines]) => {\r\n                if (!this.selectedChecker || !this.selectedCalculator) {\r\n                    return of(undefined);\r\n                }\r\n                const formValue = this.detailForm.value;\r\n                const input: TestShippingMethodInput = {\r\n                    shippingAddress: { ...address, streetLine1: 'test' },\r\n                    lines: lines.map(l => ({ productVariantId: l.id, quantity: l.quantity })),\r\n                    checker: toConfigurableOperationInput(this.selectedChecker, formValue.checker),\r\n                    calculator: toConfigurableOperationInput(this.selectedCalculator, formValue.calculator),\r\n                };\r\n                return this.dataService.shippingMethod\r\n                    .testShippingMethod(input)\r\n                    .mapSingle(result => result.testShippingMethod);\r\n            }),\r\n        );\r\n\r\n        // tslint:disable:no-non-null-assertion\r\n        merge(\r\n            this.detailForm.get(['checker'])!.valueChanges,\r\n            this.detailForm.get(['calculator'])!.valueChanges,\r\n        )\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(() => (this.testDataUpdated = true));\r\n        // tslint:enable:no-non-null-assertion\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    updateCode(currentCode: string, nameValue: string) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get(['code']);\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n\r\n    selectChecker(checker: ConfigurableOperationDefinition) {\r\n        this.selectedCheckerDefinition = checker;\r\n        this.selectedChecker = configurableDefinitionToInstance(checker);\r\n        const formControl = this.detailForm.get('checker');\r\n        if (formControl) {\r\n            formControl.clearValidators();\r\n            formControl.updateValueAndValidity({ onlySelf: true });\r\n            formControl.patchValue(this.selectedChecker);\r\n        }\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    selectCalculator(calculator: ConfigurableOperationDefinition) {\r\n        this.selectedCalculatorDefinition = calculator;\r\n        this.selectedCalculator = configurableDefinitionToInstance(calculator);\r\n        const formControl = this.detailForm.get('calculator');\r\n        if (formControl) {\r\n            formControl.clearValidators();\r\n            formControl.updateValueAndValidity({ onlySelf: true });\r\n            formControl.patchValue(this.selectedCalculator);\r\n        }\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    create() {\r\n        const selectedChecker = this.selectedChecker;\r\n        const selectedCalculator = this.selectedCalculator;\r\n        if (!selectedChecker || !selectedCalculator) {\r\n            return;\r\n        }\r\n        combineLatest([this.entity$, this.languageCode$])\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([shippingMethod, languageCode]) => {\r\n                    const formValue = this.detailForm.value;\r\n                    const input = {\r\n                        ...(this.getUpdatedShippingMethod(\r\n                            shippingMethod,\r\n                            this.detailForm,\r\n                            languageCode,\r\n                        ) as CreateShippingMethodInput),\r\n                        checker: toConfigurableOperationInput(selectedChecker, formValue.checker),\r\n                        calculator: toConfigurableOperationInput(selectedCalculator, formValue.calculator),\r\n                    };\r\n                    return this.dataService.shippingMethod.createShippingMethod(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-create-success'), {\r\n                        entity: 'ShippingMethod',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.router.navigate(['../', data.createShippingMethod.id], { relativeTo: this.route });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-create-error'), {\r\n                        entity: 'ShippingMethod',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    save() {\r\n        const selectedChecker = this.selectedChecker;\r\n        const selectedCalculator = this.selectedCalculator;\r\n        if (!selectedChecker || !selectedCalculator) {\r\n            return;\r\n        }\r\n        combineLatest([this.entity$, this.languageCode$])\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([shippingMethod, languageCode]) => {\r\n                    const formValue = this.detailForm.value;\r\n                    const input = {\r\n                        ...(this.getUpdatedShippingMethod(\r\n                            shippingMethod,\r\n                            this.detailForm,\r\n                            languageCode,\r\n                        ) as UpdateShippingMethodInput),\r\n                        checker: toConfigurableOperationInput(selectedChecker, formValue.checker),\r\n                        calculator: toConfigurableOperationInput(selectedCalculator, formValue.calculator),\r\n                    };\r\n                    return this.dataService.shippingMethod.updateShippingMethod(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'ShippingMethod',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'ShippingMethod',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    setTestOrderLines(event: TestOrderLine[]) {\r\n        this.testOrderLines = event;\r\n        this.testDataUpdated = true;\r\n    }\r\n\r\n    setTestAddress(event: TestAddress) {\r\n        this.testAddress = event;\r\n        this.testDataUpdated = true;\r\n    }\r\n\r\n    allTestDataPresent(): boolean {\r\n        return !!(\r\n            this.testAddress &&\r\n            this.testOrderLines &&\r\n            this.testOrderLines.length &&\r\n            this.selectedChecker &&\r\n            this.selectedCalculator\r\n        );\r\n    }\r\n\r\n    runTest() {\r\n        this.fetchTestResult$.next([this.testAddress, this.testOrderLines]);\r\n        this.testDataUpdated = false;\r\n    }\r\n\r\n    /**\r\n     * Given a ShippingMethod and the value of the detailForm, this method creates an updated copy which\r\n     * can then be persisted to the API.\r\n     */\r\n    private getUpdatedShippingMethod(\r\n        shippingMethod: ShippingMethod.Fragment,\r\n        formGroup: FormGroup,\r\n        languageCode: LanguageCode,\r\n    ): Omit<CreateShippingMethodInput | UpdateShippingMethodInput, 'checker' | 'calculator'> {\r\n        const formValue = formGroup.value;\r\n        const input = createUpdatedTranslatable({\r\n            translatable: shippingMethod,\r\n            updatedFields: formValue,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: shippingMethod.name || '',\r\n                description: shippingMethod.description || '',\r\n            },\r\n        });\r\n        return { ...input, fulfillmentHandler: formValue.fulfillmentHandler };\r\n    }\r\n\r\n    protected setFormValues(shippingMethod: ShippingMethod.Fragment, languageCode: LanguageCode): void {\r\n        const currentTranslation = findTranslation(shippingMethod, languageCode);\r\n        this.detailForm.patchValue({\r\n            name: currentTranslation?.name ?? '',\r\n            description: currentTranslation?.description ?? '',\r\n            code: shippingMethod.code,\r\n            fulfillmentHandler: shippingMethod.fulfillmentHandlerCode,\r\n            checker: shippingMethod.checker || {},\r\n            calculator: shippingMethod.calculator || {},\r\n        });\r\n        if (!this.selectedChecker) {\r\n            this.selectedChecker = shippingMethod.checker && {\r\n                code: shippingMethod.checker.code,\r\n                args: shippingMethod.checker.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\r\n            };\r\n        }\r\n        if (!this.selectedCalculator) {\r\n            this.selectedCalculator = shippingMethod.calculator && {\r\n                code: shippingMethod.calculator?.code,\r\n                args: shippingMethod.calculator?.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\r\n            };\r\n        }\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get(['customFields']),\r\n                shippingMethod,\r\n                currentTranslation,\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseListComponent,\r\n    DataService,\r\n    GetActiveChannel,\r\n    GetShippingMethodList,\r\n    LanguageCode,\r\n    ModalService,\r\n    NotificationService,\r\n    ServerConfigService,\r\n    ShippingMethodQuote,\r\n    TestEligibleShippingMethodsInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { EMPTY, Observable, Subject } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { TestAddress } from '../test-address-form/test-address-form.component';\r\nimport { TestOrderLine } from '../test-order-builder/test-order-builder.component';\r\n\r\n@Component({\r\n    selector: 'vdr-shipping-method-list',\r\n    templateUrl: './shipping-method-list.component.html',\r\n    styleUrls: ['./shipping-method-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShippingMethodListComponent\r\n    extends BaseListComponent<GetShippingMethodList.Query, GetShippingMethodList.Items>\r\n    implements OnInit {\r\n    activeChannel$: Observable<GetActiveChannel.ActiveChannel>;\r\n    testAddress: TestAddress;\r\n    testOrderLines: TestOrderLine[];\r\n    testDataUpdated = false;\r\n    testResult$: Observable<ShippingMethodQuote[] | undefined>;\r\n    availableLanguages$: Observable<LanguageCode[]>;\r\n    contentLanguage$: Observable<LanguageCode>;\r\n    private fetchTestResult$ = new Subject<[TestAddress, TestOrderLine[]]>();\r\n\r\n    constructor(\r\n        private modalService: ModalService,\r\n        private notificationService: NotificationService,\r\n        private dataService: DataService,\r\n        private serverConfigService: ServerConfigService,\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n    ) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) =>\r\n                this.dataService.shippingMethod.getShippingMethods(...args).refetchOnChannelChange(),\r\n            data => data.shippingMethods,\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.testResult$ = this.fetchTestResult$.pipe(\r\n            switchMap(([address, lines]) => {\r\n                const input: TestEligibleShippingMethodsInput = {\r\n                    shippingAddress: { ...address, streetLine1: 'test' },\r\n                    lines: lines.map(l => ({ productVariantId: l.id, quantity: l.quantity })),\r\n                };\r\n                return this.dataService.shippingMethod\r\n                    .testEligibleShippingMethods(input)\r\n                    .mapSingle(result => result.testEligibleShippingMethods);\r\n            }),\r\n        );\r\n        this.activeChannel$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .mapStream(data => data.activeChannel);\r\n        this.availableLanguages$ = this.serverConfigService.getAvailableLanguages();\r\n        this.contentLanguage$ = this.dataService.client\r\n            .uiState()\r\n            .mapStream(({ uiState }) => uiState.contentLanguage)\r\n            .pipe(tap(() => this.refresh()));\r\n    }\r\n\r\n    deleteShippingMethod(id: string) {\r\n        this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-shipping-method'),\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response =>\r\n                    response ? this.dataService.shippingMethod.deleteShippingMethod(id) : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'ShippingMethod',\r\n                    });\r\n                    this.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'ShippingMethod',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    setTestOrderLines(event: TestOrderLine[]) {\r\n        this.testOrderLines = event;\r\n        this.testDataUpdated = true;\r\n    }\r\n\r\n    setTestAddress(event: TestAddress) {\r\n        this.testAddress = event;\r\n        this.testDataUpdated = true;\r\n    }\r\n\r\n    allTestDataPresent(): boolean {\r\n        return !!(this.testAddress && this.testOrderLines && this.testOrderLines.length);\r\n    }\r\n\r\n    runTest() {\r\n        this.fetchTestResult$.next([this.testAddress, this.testOrderLines]);\r\n        this.testDataUpdated = false;\r\n    }\r\n\r\n    setLanguage(code: LanguageCode) {\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { CurrencyCode, TestShippingMethodResult } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-shipping-method-test-result',\r\n    templateUrl: './shipping-method-test-result.component.html',\r\n    styleUrls: ['./shipping-method-test-result.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShippingMethodTestResultComponent {\r\n    @Input() testResult: TestShippingMethodResult;\r\n    @Input() okToRun = false;\r\n    @Input() testDataUpdated = false;\r\n    @Input() currencyCode: CurrencyCode;\r\n    @Output() runTest = new EventEmitter<void>();\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { BaseDetailComponent, CustomFieldConfig, Permission } from '@vendure/admin-ui/core';\r\nimport {\r\n    ConfigurableOperation,\r\n    CreateTaxCategoryInput,\r\n    LanguageCode,\r\n    TaxCategory,\r\n    UpdateTaxCategoryInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { NotificationService } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\nimport { ServerConfigService } from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-tax-detail',\r\n    templateUrl: './tax-category-detail.component.html',\r\n    styleUrls: ['./tax-category-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TaxCategoryDetailComponent\r\n    extends BaseDetailComponent<TaxCategory.Fragment>\r\n    implements OnInit, OnDestroy\r\n{\r\n    taxCategory$: Observable<TaxCategory.Fragment>;\r\n    detailForm: FormGroup;\r\n    customFields: CustomFieldConfig[];\r\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateTaxCategory];\r\n\r\n    private taxCondition: ConfigurableOperation;\r\n    private taxAction: ConfigurableOperation;\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.customFields = this.getCustomFieldConfig('TaxCategory');\r\n        this.detailForm = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            isDefault: false,\r\n            customFields: this.formBuilder.group(\r\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n            ),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.taxCategory$ = this.entity$;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    saveButtonEnabled(): boolean {\r\n        return this.detailForm.dirty && this.detailForm.valid;\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        const input = {\r\n            name: formValue.name,\r\n            isDefault: formValue.isDefault,\r\n            customFields: formValue.customFields,\r\n        } as CreateTaxCategoryInput;\r\n        this.dataService.settings.createTaxCategory(input).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'TaxCategory',\r\n                });\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createTaxCategory.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'TaxCategory',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.taxCategory$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(taxCategory => {\r\n                    const input = {\r\n                        id: taxCategory.id,\r\n                        name: formValue.name,\r\n                        isDefault: formValue.isDefault,\r\n                        customFields: formValue.customFields,\r\n                    } as UpdateTaxCategoryInput;\r\n                    return this.dataService.settings.updateTaxCategory(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'TaxCategory',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'TaxCategory',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    protected setFormValues(entity: TaxCategory.Fragment, languageCode: LanguageCode): void {\r\n        this.detailForm.patchValue({\r\n            name: entity.name,\r\n            isDefault: entity.isDefault,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nimport { DeletionResult, GetTaxCategories, TaxCategory } from '@vendure/admin-ui/core';\r\nimport { NotificationService } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\nimport { QueryResult } from '@vendure/admin-ui/core';\r\nimport { ModalService } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-tax-list',\r\n    templateUrl: './tax-category-list.component.html',\r\n    styleUrls: ['./tax-category-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TaxCategoryListComponent {\r\n    taxCategories$: Observable<TaxCategory.Fragment[]>;\r\n    private queryResult: QueryResult<GetTaxCategories.Query>;\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n    ) {\r\n        this.queryResult = this.dataService.settings.getTaxCategories();\r\n        this.taxCategories$ = this.queryResult.mapStream(data => data.taxCategories);\r\n    }\r\n\r\n    deleteTaxCategory(taxCategory: TaxCategory.Fragment) {\r\n        return this.modalService\r\n            .dialog({\r\n                title: _('settings.confirm-delete-tax-category'),\r\n                body: taxCategory.name,\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(res => (res ? this.dataService.settings.deleteTaxCategory(taxCategory.id) : EMPTY)),\r\n                map(res => res.deleteTaxCategory),\r\n            )\r\n            .subscribe(\r\n                res => {\r\n                    if (res.result === DeletionResult.DELETED) {\r\n                        this.notificationService.success(_('common.notify-delete-success'), {\r\n                            entity: 'TaxRate',\r\n                        });\r\n                        this.queryResult.ref.refetch();\r\n                    } else {\r\n                        this.notificationService.error(res.message || _('common.notify-delete-error'), {\r\n                            entity: 'TaxRate',\r\n                        });\r\n                    }\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'TaxRate',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseDetailComponent,\r\n    CreateTaxRateInput,\r\n    CustomerGroup,\r\n    CustomFieldConfig,\r\n    DataService,\r\n    GetZones,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    ServerConfigService,\r\n    TaxCategory,\r\n    TaxRate,\r\n    UpdateTaxRateInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-tax-rate-detail',\r\n    templateUrl: './tax-rate-detail.component.html',\r\n    styleUrls: ['./tax-rate-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TaxRateDetailComponent\r\n    extends BaseDetailComponent<TaxRate.Fragment>\r\n    implements OnInit, OnDestroy\r\n{\r\n    taxCategories$: Observable<TaxCategory.Fragment[]>;\r\n    zones$: Observable<GetZones.Zones[]>;\r\n    groups$: Observable<CustomerGroup[]>;\r\n    detailForm: FormGroup;\r\n    customFields: CustomFieldConfig[];\r\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateTaxRate];\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.customFields = this.getCustomFieldConfig('TaxRate');\r\n        this.detailForm = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            enabled: [true],\r\n            value: [0, Validators.required],\r\n            taxCategoryId: [''],\r\n            zoneId: [''],\r\n            customerGroupId: [''],\r\n            customFields: this.formBuilder.group(\r\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n            ),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.taxCategories$ = this.dataService.settings\r\n            .getTaxCategories()\r\n            .mapSingle(data => data.taxCategories);\r\n        this.zones$ = this.dataService.settings.getZones().mapSingle(data => data.zones);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    saveButtonEnabled(): boolean {\r\n        return this.detailForm.dirty && this.detailForm.valid;\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        const input = {\r\n            name: formValue.name,\r\n            enabled: formValue.enabled,\r\n            value: formValue.value,\r\n            categoryId: formValue.taxCategoryId,\r\n            zoneId: formValue.zoneId,\r\n            customerGroupId: formValue.customerGroupId,\r\n            customFields: formValue.customFields,\r\n        } as CreateTaxRateInput;\r\n        this.dataService.settings.createTaxRate(input).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'TaxRate',\r\n                });\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createTaxRate.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'TaxRate',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(taxRate => {\r\n                    const input = {\r\n                        id: taxRate.id,\r\n                        name: formValue.name,\r\n                        enabled: formValue.enabled,\r\n                        value: formValue.value,\r\n                        categoryId: formValue.taxCategoryId,\r\n                        zoneId: formValue.zoneId,\r\n                        customerGroupId: formValue.customerGroupId,\r\n                        customFields: formValue.customFields,\r\n                    } as UpdateTaxRateInput;\r\n                    return this.dataService.settings.updateTaxRate(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'TaxRate',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'TaxRate',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    protected setFormValues(entity: TaxRate.Fragment, languageCode: LanguageCode): void {\r\n        this.detailForm.patchValue({\r\n            name: entity.name,\r\n            enabled: entity.enabled,\r\n            value: entity.value,\r\n            taxCategoryId: entity.category ? entity.category.id : '',\r\n            zoneId: entity.zone ? entity.zone.id : '',\r\n            customerGroupId: entity.customerGroup ? entity.customerGroup.id : '',\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { EMPTY } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nimport { BaseListComponent } from '@vendure/admin-ui/core';\r\nimport { DeletionResult, GetTaxRateList } from '@vendure/admin-ui/core';\r\nimport { NotificationService } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\nimport { ModalService } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-tax-rate-list',\r\n    templateUrl: './tax-rate-list.component.html',\r\n    styleUrls: ['./tax-rate-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TaxRateListComponent extends BaseListComponent<GetTaxRateList.Query, GetTaxRateList.Items> {\r\n    constructor(\r\n        private modalService: ModalService,\r\n        private notificationService: NotificationService,\r\n        private dataService: DataService,\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n    ) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => this.dataService.settings.getTaxRates(...args),\r\n            data => data.taxRates,\r\n        );\r\n    }\r\n\r\n    deleteTaxRate(taxRate: GetTaxRateList.Items) {\r\n        return this.modalService\r\n            .dialog({\r\n                title: _('settings.confirm-delete-tax-rate'),\r\n                body: taxRate.name,\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(res => (res ? this.dataService.settings.deleteTaxRate(taxRate.id) : EMPTY)),\r\n                map(res => res.deleteTaxRate),\r\n            )\r\n            .subscribe(\r\n                res => {\r\n                    if (res.result === DeletionResult.DELETED) {\r\n                        this.notificationService.success(_('common.notify-delete-success'), {\r\n                            entity: 'TaxRate',\r\n                        });\r\n                        this.refresh();\r\n                    } else {\r\n                        this.notificationService.error(res.message || _('common.notify-delete-error'), {\r\n                            entity: 'TaxRate',\r\n                        });\r\n                    }\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'TaxRate',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DataService, GetAvailableCountries, LocalStorageService } from '@vendure/admin-ui/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nexport interface TestAddress {\r\n    city: string;\r\n    province: string;\r\n    postalCode: string;\r\n    countryCode: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-test-address-form',\r\n    templateUrl: './test-address-form.component.html',\r\n    styleUrls: ['./test-address-form.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TestAddressFormComponent implements OnInit, OnDestroy {\r\n    @Output() addressChange = new EventEmitter<TestAddress>();\r\n    availableCountries$: Observable<GetAvailableCountries.Items[]>;\r\n    form: FormGroup;\r\n    private subscription: Subscription;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private dataService: DataService,\r\n        private localStorageService: LocalStorageService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.availableCountries$ = this.dataService.settings\r\n            .getAvailableCountries()\r\n            .mapSingle(result => result.countries.items);\r\n        const storedValue = this.localStorageService.getForCurrentLocation('shippingTestAddress');\r\n        const initialValue: TestAddress = storedValue\r\n            ? storedValue\r\n            : {\r\n                  city: '',\r\n                  countryCode: '',\r\n                  postalCode: '',\r\n                  province: '',\r\n              };\r\n        this.addressChange.emit(initialValue);\r\n\r\n        this.form = this.formBuilder.group(initialValue);\r\n        this.subscription = this.form.valueChanges.subscribe(value => {\r\n            this.localStorageService.setForCurrentLocation('shippingTestAddress', value);\r\n            this.addressChange.emit(value);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport {\r\n    CurrencyCode,\r\n    DataService,\r\n    LocalStorageService,\r\n    ProductSelectorSearch,\r\n} from '@vendure/admin-ui/core';\r\n\r\nexport interface TestOrderLine {\r\n    id: string;\r\n    name: string;\r\n    preview: string;\r\n    sku: string;\r\n    unitPriceWithTax: number;\r\n    quantity: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-test-order-builder',\r\n    templateUrl: './test-order-builder.component.html',\r\n    styleUrls: ['./test-order-builder.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TestOrderBuilderComponent implements OnInit {\r\n    @Output() orderLinesChange = new EventEmitter<TestOrderLine[]>();\r\n    lines: TestOrderLine[] = [];\r\n    currencyCode: CurrencyCode;\r\n    get subTotal(): number {\r\n        return this.lines.reduce((sum, l) => sum + l.unitPriceWithTax * l.quantity, 0);\r\n    }\r\n\r\n    constructor(private dataService: DataService, private localStorageService: LocalStorageService) {}\r\n\r\n    ngOnInit() {\r\n        this.lines = this.loadFromLocalStorage();\r\n        if (this.lines) {\r\n            this.orderLinesChange.emit(this.lines);\r\n        }\r\n        this.dataService.settings.getActiveChannel('cache-first').single$.subscribe(result => {\r\n            this.currencyCode = result.activeChannel.currencyCode;\r\n        });\r\n    }\r\n\r\n    selectResult(result: ProductSelectorSearch.Items) {\r\n        if (result) {\r\n            this.addToLines(result);\r\n        }\r\n    }\r\n\r\n    private addToLines(result: ProductSelectorSearch.Items) {\r\n        if (!this.lines.find(l => l.id === result.productVariantId)) {\r\n            this.lines.push({\r\n                id: result.productVariantId,\r\n                name: result.productVariantName,\r\n                preview: result.productAsset?.preview ?? '',\r\n                quantity: 1,\r\n                sku: result.sku,\r\n                unitPriceWithTax:\r\n                    (result.priceWithTax.__typename === 'SinglePrice' && result.priceWithTax.value) || 0,\r\n            });\r\n            this.persistToLocalStorage();\r\n            this.orderLinesChange.emit(this.lines);\r\n        }\r\n    }\r\n\r\n    updateQuantity() {\r\n        this.persistToLocalStorage();\r\n        this.orderLinesChange.emit(this.lines);\r\n    }\r\n\r\n    removeLine(line: TestOrderLine) {\r\n        this.lines = this.lines.filter(l => l.id !== line.id);\r\n        this.persistToLocalStorage();\r\n        this.orderLinesChange.emit(this.lines);\r\n    }\r\n\r\n    private persistToLocalStorage() {\r\n        this.localStorageService.setForCurrentLocation('shippingTestOrder', this.lines);\r\n    }\r\n\r\n    private loadFromLocalStorage(): TestOrderLine[] {\r\n        return this.localStorageService.getForCurrentLocation('shippingTestOrder') || [];\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CreateZoneInput, CustomFieldConfig, Dialog, ServerConfigService } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-zone-detail-dialog',\r\n    templateUrl: './zone-detail-dialog.component.html',\r\n    styleUrls: ['./zone-detail-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZoneDetailDialogComponent implements Dialog<CreateZoneInput>, OnInit {\r\n    zone: { id?: string; name: string; customFields?: { [name: string]: any } };\r\n    resolveWith: (result?: CreateZoneInput) => void;\r\n\r\n    customFields: CustomFieldConfig[];\r\n    form: FormGroup;\r\n\r\n    constructor(private serverConfigService: ServerConfigService, private formBuilder: FormBuilder) {\r\n        this.customFields = this.serverConfigService.getCustomFieldsFor('CustomerGroup');\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.form = this.formBuilder.group({\r\n            name: [this.zone.name, Validators.required],\r\n            customFields: this.formBuilder.group(\r\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n            ),\r\n        });\r\n        if (this.customFields.length) {\r\n            const customFieldsGroup = this.form.get('customFields') as FormGroup;\r\n\r\n            for (const fieldDef of this.customFields) {\r\n                const key = fieldDef.name;\r\n                const value = this.zone.customFields?.[key];\r\n                const control = customFieldsGroup.get(key);\r\n                if (control) {\r\n                    control.patchValue(value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    save() {\r\n        this.resolveWith(this.form.value);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    DataService,\r\n    DeletionResult,\r\n    GetZones,\r\n    LanguageCode,\r\n    ModalService,\r\n    NotificationService,\r\n    ServerConfigService,\r\n} from '@vendure/admin-ui/core';\r\nimport { combineLatest, EMPTY, Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, map, mapTo, switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { AddCountryToZoneDialogComponent } from '../add-country-to-zone-dialog/add-country-to-zone-dialog.component';\r\nimport { ZoneDetailDialogComponent } from '../zone-detail-dialog/zone-detail-dialog.component';\r\n\r\n@Component({\r\n    selector: 'vdr-zone-list',\r\n    templateUrl: './zone-list.component.html',\r\n    styleUrls: ['./zone-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZoneListComponent implements OnInit {\r\n    activeZone$: Observable<GetZones.Zones | undefined>;\r\n    zones$: Observable<GetZones.Zones[]>;\r\n    members$: Observable<GetZones.Members[]>;\r\n    availableLanguages$: Observable<LanguageCode[]>;\r\n    contentLanguage$: Observable<LanguageCode>;\r\n    selectedMemberIds: string[] = [];\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private serverConfigService: ServerConfigService,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        const zonesQueryRef = this.dataService.settings.getZones().ref;\r\n        this.zones$ = zonesQueryRef.valueChanges.pipe(map(data => data.data.zones));\r\n        const activeZoneId$ = this.route.paramMap.pipe(\r\n            map(pm => pm.get('contents')),\r\n            distinctUntilChanged(),\r\n            tap(() => (this.selectedMemberIds = [])),\r\n        );\r\n        this.activeZone$ = combineLatest(this.zones$, activeZoneId$).pipe(\r\n            map(([zones, activeZoneId]) => {\r\n                if (activeZoneId) {\r\n                    return zones.find(z => z.id === activeZoneId);\r\n                }\r\n            }),\r\n        );\r\n        this.availableLanguages$ = this.serverConfigService.getAvailableLanguages();\r\n        this.contentLanguage$ = this.dataService.client\r\n            .uiState()\r\n            .mapStream(({ uiState }) => uiState.contentLanguage)\r\n            .pipe(tap(() => zonesQueryRef.refetch()));\r\n    }\r\n\r\n    setLanguage(code: LanguageCode) {\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n\r\n    create() {\r\n        this.modalService\r\n            .fromComponent(ZoneDetailDialogComponent, { locals: { zone: { name: '' } } })\r\n            .pipe(\r\n                switchMap(result =>\r\n                    result ? this.dataService.settings.createZone({ ...result, memberIds: [] }) : EMPTY,\r\n                ),\r\n                // refresh list\r\n                switchMap(() => this.dataService.settings.getZones().single$),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-create-success'), {\r\n                        entity: 'Zone',\r\n                    });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-create-error'), {\r\n                        entity: 'Zone',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    delete(zoneId: string) {\r\n        this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-zone'),\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response => (response ? this.dataService.settings.deleteZone(zoneId) : EMPTY)),\r\n\r\n                switchMap(result => {\r\n                    if (result.deleteZone.result === DeletionResult.DELETED) {\r\n                        // refresh list\r\n                        return this.dataService.settings\r\n                            .getZones()\r\n                            .mapSingle(() => ({ errorMessage: false }));\r\n                    } else {\r\n                        return of({ errorMessage: result.deleteZone.message });\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe(\r\n                result => {\r\n                    if (typeof result.errorMessage === 'string') {\r\n                        this.notificationService.error(result.errorMessage);\r\n                    } else {\r\n                        this.notificationService.success(_('common.notify-delete-success'), {\r\n                            entity: 'Zone',\r\n                        });\r\n                    }\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'Zone',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    update(zone: GetZones.Zones) {\r\n        this.modalService\r\n            .fromComponent(ZoneDetailDialogComponent, { locals: { zone } })\r\n            .pipe(\r\n                switchMap(result =>\r\n                    result ? this.dataService.settings.updateZone({ id: zone.id, ...result }) : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Zone',\r\n                    });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Zone',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    closeMembers() {\r\n        const params = { ...this.route.snapshot.params };\r\n        delete params.contents;\r\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\r\n    }\r\n\r\n    addToZone(zone: GetZones.Zones) {\r\n        this.modalService\r\n            .fromComponent(AddCountryToZoneDialogComponent, {\r\n                locals: {\r\n                    zoneName: zone.name,\r\n                    currentMembers: zone.members,\r\n                },\r\n                size: 'md',\r\n            })\r\n            .pipe(\r\n                switchMap(memberIds =>\r\n                    memberIds\r\n                        ? this.dataService.settings\r\n                              .addMembersToZone(zone.id, memberIds)\r\n                              .pipe(mapTo(memberIds))\r\n                        : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe({\r\n                next: result => {\r\n                    this.notificationService.success(_(`settings.add-countries-to-zone-success`), {\r\n                        countryCount: result.length,\r\n                        zoneName: zone.name,\r\n                    });\r\n                },\r\n                error: err => {\r\n                    this.notificationService.error(err);\r\n                },\r\n            });\r\n    }\r\n\r\n    removeFromZone(zone: GetZones.Zones, memberIds: string[]) {\r\n        this.dataService.settings.removeMembersFromZone(zone.id, memberIds).subscribe({\r\n            complete: () => {\r\n                this.notificationService.success(_(`settings.remove-countries-from-zone-success`), {\r\n                    countryCount: memberIds.length,\r\n                    zoneName: zone.name,\r\n                });\r\n            },\r\n        });\r\n    }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[vdrZoneMemberControls]',\r\n})\r\nexport class ZoneMemberControlsDirective {\r\n    constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[vdrZoneMemberListHeader]',\r\n})\r\nexport class ZoneMemberListHeaderDirective {\r\n    constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","import { ChangeDetectionStrategy, Component, ContentChild, EventEmitter, Input, Output } from '@angular/core';\r\nimport { GetZones } from '@vendure/admin-ui/core';\r\n\r\nimport { ZoneMemberControlsDirective } from './zone-member-controls.directive';\r\nimport { ZoneMemberListHeaderDirective } from './zone-member-list-header.directive';\r\n\r\nexport type ZoneMember = { id: string; name: string; code: string };\r\n\r\n@Component({\r\n    selector: 'vdr-zone-member-list',\r\n    templateUrl: './zone-member-list.component.html',\r\n    styleUrls: ['./zone-member-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZoneMemberListComponent {\r\n    @Input() members: ZoneMember[] = [];\r\n    @Input() selectedMemberIds: string[] = [];\r\n    @Output() selectionChange = new EventEmitter<string[]>();\r\n    @ContentChild(ZoneMemberListHeaderDirective) headerTemplate: ZoneMemberListHeaderDirective;\r\n    @ContentChild(ZoneMemberControlsDirective) controlsTemplate: ZoneMemberControlsDirective;\r\n    filterTerm = '';\r\n\r\n    filteredMembers(): ZoneMember[] {\r\n        if (this.filterTerm !== '') {\r\n            const term = this.filterTerm.toLocaleLowerCase();\r\n            return this.members.filter(\r\n                m => m.name.toLocaleLowerCase().includes(term) || m.code.toLocaleLowerCase().includes(term),\r\n            );\r\n        } else {\r\n            return this.members;\r\n        }\r\n    }\r\n\r\n    areAllSelected(): boolean {\r\n        if (this.members) {\r\n            return this.selectedMemberIds.length === this.members.length;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    toggleSelectAll() {\r\n        if (this.areAllSelected()) {\r\n            this.selectionChange.emit([]);\r\n        } else {\r\n            this.selectionChange.emit(this.members.map(v => v.id));\r\n        }\r\n    }\r\n\r\n    toggleSelectMember(member: ZoneMember) {\r\n        if (this.selectedMemberIds.includes(member.id)) {\r\n            this.selectionChange.emit(this.selectedMemberIds.filter(id => id !== member.id));\r\n        } else {\r\n            this.selectionChange.emit([...this.selectedMemberIds, member.id]);\r\n        }\r\n    }\r\n\r\n    isMemberSelected = (member: ZoneMember): boolean => {\r\n        return -1 < this.selectedMemberIds.indexOf(member.id);\r\n    };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { Administrator, Role } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AdministratorResolver extends BaseEntityResolver<Administrator.Fragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'Administrator' as 'Administrator',\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                emailAddress: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                user: { roles: [] } as any,\r\n            },\r\n            id => dataService.administrator.getAdministrator(id).mapStream(data => data.administrator),\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { Channel, CurrencyCode } from '@vendure/admin-ui/core';\r\nimport { getDefaultUiLanguage } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\n\r\n/**\r\n * Resolves the id from the path into a Customer entity.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ChannelResolver extends BaseEntityResolver<Channel.Fragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'Channel',\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                code: '',\r\n                token: '',\r\n                pricesIncludeTax: false,\r\n                currencyCode: CurrencyCode.USD,\r\n                defaultLanguageCode: getDefaultUiLanguage(),\r\n                defaultShippingZone: {} as any,\r\n                defaultTaxZone: {} as any,\r\n            },\r\n            (id) => dataService.settings.getChannel(id).mapStream((data) => data.channel),\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { Country } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\n\r\n/**\r\n * Resolves the id from the path into a Customer entity.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CountryResolver extends BaseEntityResolver<Country.Fragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'Country',\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                code: '',\r\n                name: '',\r\n                enabled: false,\r\n                translations: [],\r\n            },\r\n            id => dataService.settings.getCountry(id).mapStream(data => data.country),\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { GetGlobalSettings } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\n\r\n/**\r\n * Resolves the global settings.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class GlobalSettingsResolver extends BaseEntityResolver<GetGlobalSettings.GlobalSettings> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            // we will never be creating a new GlobalSettings entity, so this part is not used.\r\n            {} as any,\r\n            () => dataService.settings.getGlobalSettings().mapStream(data => data.globalSettings),\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { PaymentMethod } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\n\r\n/**\r\n * Resolves the id from the path into a Customer entity.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PaymentMethodResolver extends BaseEntityResolver<PaymentMethod.Fragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'PaymentMethod',\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                name: '',\r\n                code: '',\r\n                description: '',\r\n                enabled: true,\r\n                checker: undefined as any,\r\n                handler: undefined as any,\r\n            },\r\n            id => dataService.settings.getPaymentMethod(id).mapStream(data => data.paymentMethod),\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { Administrator, Role } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ProfileResolver extends BaseEntityResolver<Administrator.Fragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'Administrator' as 'Administrator',\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                emailAddress: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                user: { roles: [] } as any,\r\n            },\r\n            id =>\r\n                dataService.administrator\r\n                    .getActiveAdministrator()\r\n                    .mapStream(data => data.activeAdministrator),\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { Role } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class RoleResolver extends BaseEntityResolver<Role.Fragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'Role' as 'Role',\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                code: '',\r\n                description: '',\r\n                permissions: [],\r\n                channels: [],\r\n            },\r\n            id => dataService.administrator.getRole(id).mapStream(data => data.role),\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { ShippingMethod } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\n\r\n/**\r\n * Resolves the id from the path into a Customer entity.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ShippingMethodResolver extends BaseEntityResolver<ShippingMethod.Fragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'ShippingMethod',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                id: '',\r\n                code: '',\r\n                name: '',\r\n                description: '',\r\n                fulfillmentHandlerCode: undefined as any,\r\n                checker: undefined as any,\r\n                calculator: undefined as any,\r\n                translations: [],\r\n            },\r\n            id => dataService.shippingMethod.getShippingMethod(id).mapStream(data => data.shippingMethod),\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver, DataService, TaxCategory } from '@vendure/admin-ui/core';\r\n\r\n/**\r\n * Resolves the id from the path into a Customer entity.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class TaxCategoryResolver extends BaseEntityResolver<TaxCategory.Fragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'TaxCategory',\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                name: '',\r\n                isDefault: false,\r\n            },\r\n            id => dataService.settings.getTaxCategory(id).mapStream(data => data.taxCategory),\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver, DataService, TaxRate } from '@vendure/admin-ui/core';\r\n\r\n/**\r\n * Resolves the id from the path into a Customer entity.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class TaxRateResolver extends BaseEntityResolver<TaxRate.Fragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'TaxRate',\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                name: '',\r\n                value: 0,\r\n                enabled: true,\r\n                category: {} as any,\r\n                zone: {} as any,\r\n                customerGroup: null,\r\n            },\r\n            id => dataService.settings.getTaxRate(id).mapStream(data => data.taxRate),\r\n        );\r\n    }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    Administrator,\r\n    CanDeactivateDetailGuard,\r\n    Channel,\r\n    Country,\r\n    createResolveData,\r\n    detailBreadcrumb,\r\n    Role,\r\n    ShippingMethod,\r\n    TaxCategory,\r\n    TaxRate,\r\n} from '@vendure/admin-ui/core';\r\n\r\nimport { AdminDetailComponent } from './components/admin-detail/admin-detail.component';\r\nimport { AdministratorListComponent } from './components/administrator-list/administrator-list.component';\r\nimport { ChannelDetailComponent } from './components/channel-detail/channel-detail.component';\r\nimport { ChannelListComponent } from './components/channel-list/channel-list.component';\r\nimport { CountryDetailComponent } from './components/country-detail/country-detail.component';\r\nimport { CountryListComponent } from './components/country-list/country-list.component';\r\nimport { GlobalSettingsComponent } from './components/global-settings/global-settings.component';\r\nimport { PaymentMethodDetailComponent } from './components/payment-method-detail/payment-method-detail.component';\r\nimport { PaymentMethodListComponent } from './components/payment-method-list/payment-method-list.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { RoleDetailComponent } from './components/role-detail/role-detail.component';\r\nimport { RoleListComponent } from './components/role-list/role-list.component';\r\nimport { ShippingMethodDetailComponent } from './components/shipping-method-detail/shipping-method-detail.component';\r\nimport { ShippingMethodListComponent } from './components/shipping-method-list/shipping-method-list.component';\r\nimport { TaxCategoryDetailComponent } from './components/tax-category-detail/tax-category-detail.component';\r\nimport { TaxCategoryListComponent } from './components/tax-category-list/tax-category-list.component';\r\nimport { TaxRateDetailComponent } from './components/tax-rate-detail/tax-rate-detail.component';\r\nimport { TaxRateListComponent } from './components/tax-rate-list/tax-rate-list.component';\r\nimport { ZoneListComponent } from './components/zone-list/zone-list.component';\r\nimport { AdministratorResolver } from './providers/routing/administrator-resolver';\r\nimport { ChannelResolver } from './providers/routing/channel-resolver';\r\nimport { CountryResolver } from './providers/routing/country-resolver';\r\nimport { GlobalSettingsResolver } from './providers/routing/global-settings-resolver';\r\nimport { PaymentMethodResolver } from './providers/routing/payment-method-resolver';\r\nimport { ProfileResolver } from './providers/routing/profile-resolver';\r\nimport { RoleResolver } from './providers/routing/role-resolver';\r\nimport { ShippingMethodResolver } from './providers/routing/shipping-method-resolver';\r\nimport { TaxCategoryResolver } from './providers/routing/tax-category-resolver';\r\nimport { TaxRateResolver } from './providers/routing/tax-rate-resolver';\r\n\r\nexport const settingsRoutes: Route[] = [\r\n    {\r\n        path: 'profile',\r\n        component: ProfileComponent,\r\n        resolve: createResolveData(ProfileResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: _('breadcrumb.profile'),\r\n        },\r\n    },\r\n    {\r\n        path: 'administrators',\r\n        component: AdministratorListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.administrators'),\r\n        },\r\n    },\r\n    {\r\n        path: 'administrators/:id',\r\n        component: AdminDetailComponent,\r\n        resolve: createResolveData(AdministratorResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: { breadcrumb: administratorBreadcrumb },\r\n    },\r\n    {\r\n        path: 'channels',\r\n        component: ChannelListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.channels'),\r\n        },\r\n    },\r\n    {\r\n        path: 'channels/:id',\r\n        component: ChannelDetailComponent,\r\n        resolve: createResolveData(ChannelResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: { breadcrumb: channelBreadcrumb },\r\n    },\r\n    {\r\n        path: 'roles',\r\n        component: RoleListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.roles'),\r\n        },\r\n    },\r\n    {\r\n        path: 'roles/:id',\r\n        component: RoleDetailComponent,\r\n        resolve: createResolveData(RoleResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: { breadcrumb: roleBreadcrumb },\r\n    },\r\n    {\r\n        path: 'tax-categories',\r\n        component: TaxCategoryListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.tax-categories'),\r\n        },\r\n    },\r\n    {\r\n        path: 'tax-categories/:id',\r\n        component: TaxCategoryDetailComponent,\r\n        resolve: createResolveData(TaxCategoryResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: taxCategoryBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: 'tax-rates',\r\n        component: TaxRateListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.tax-rates'),\r\n        },\r\n    },\r\n    {\r\n        path: 'tax-rates/:id',\r\n        component: TaxRateDetailComponent,\r\n        resolve: createResolveData(TaxRateResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: taxRateBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: 'countries',\r\n        component: CountryListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.countries'),\r\n        },\r\n    },\r\n    {\r\n        path: 'countries/:id',\r\n        component: CountryDetailComponent,\r\n        resolve: createResolveData(CountryResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: countryBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: 'zones',\r\n        component: ZoneListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.zones'),\r\n        },\r\n    },\r\n    {\r\n        path: 'shipping-methods',\r\n        component: ShippingMethodListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.shipping-methods'),\r\n        },\r\n    },\r\n    {\r\n        path: 'shipping-methods/:id',\r\n        component: ShippingMethodDetailComponent,\r\n        resolve: createResolveData(ShippingMethodResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: shippingMethodBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: 'payment-methods',\r\n        component: PaymentMethodListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.payment-methods'),\r\n        },\r\n    },\r\n    {\r\n        path: 'payment-methods/:id',\r\n        component: PaymentMethodDetailComponent,\r\n        resolve: createResolveData(PaymentMethodResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: paymentMethodBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: 'global-settings',\r\n        component: GlobalSettingsComponent,\r\n        resolve: createResolveData(GlobalSettingsResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: _('breadcrumb.global-settings'),\r\n        },\r\n    },\r\n];\r\n\r\nexport function administratorBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<Administrator>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.administrators',\r\n        getName: admin => `${admin.firstName} ${admin.lastName}`,\r\n        route: 'administrators',\r\n    });\r\n}\r\n\r\nexport function channelBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<Channel>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.channels',\r\n        getName: channel => channel.code,\r\n        route: 'channels',\r\n    });\r\n}\r\n\r\nexport function roleBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<Role>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.roles',\r\n        getName: role => role.description,\r\n        route: 'roles',\r\n    });\r\n}\r\n\r\nexport function taxCategoryBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<TaxCategory.Fragment>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.tax-categories',\r\n        getName: category => category.name,\r\n        route: 'tax-categories',\r\n    });\r\n}\r\n\r\nexport function taxRateBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<TaxRate.Fragment>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.tax-rates',\r\n        getName: category => category.name,\r\n        route: 'tax-rates',\r\n    });\r\n}\r\n\r\nexport function countryBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<Country.Fragment>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.countries',\r\n        getName: promotion => promotion.name,\r\n        route: 'countries',\r\n    });\r\n}\r\n\r\nexport function shippingMethodBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<ShippingMethod.Fragment>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.shipping-methods',\r\n        getName: method => method.name,\r\n        route: 'shipping-methods',\r\n    });\r\n}\r\n\r\nexport function paymentMethodBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<ShippingMethod.Fragment>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.payment-methods',\r\n        getName: method => method.code,\r\n        route: 'payment-methods',\r\n    });\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '@vendure/admin-ui/core';\r\n\r\nimport { AddCountryToZoneDialogComponent } from './components/add-country-to-zone-dialog/add-country-to-zone-dialog.component';\r\nimport { AdminDetailComponent } from './components/admin-detail/admin-detail.component';\r\nimport { AdministratorListComponent } from './components/administrator-list/administrator-list.component';\r\nimport { ChannelDetailComponent } from './components/channel-detail/channel-detail.component';\r\nimport { ChannelListComponent } from './components/channel-list/channel-list.component';\r\nimport { CountryDetailComponent } from './components/country-detail/country-detail.component';\r\nimport { CountryListComponent } from './components/country-list/country-list.component';\r\nimport { GlobalSettingsComponent } from './components/global-settings/global-settings.component';\r\nimport { PaymentMethodDetailComponent } from './components/payment-method-detail/payment-method-detail.component';\r\nimport { PaymentMethodListComponent } from './components/payment-method-list/payment-method-list.component';\r\nimport { PermissionGridComponent } from './components/permission-grid/permission-grid.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { RoleDetailComponent } from './components/role-detail/role-detail.component';\r\nimport { RoleListComponent } from './components/role-list/role-list.component';\r\nimport { ShippingEligibilityTestResultComponent } from './components/shipping-eligibility-test-result/shipping-eligibility-test-result.component';\r\nimport { ShippingMethodDetailComponent } from './components/shipping-method-detail/shipping-method-detail.component';\r\nimport { ShippingMethodListComponent } from './components/shipping-method-list/shipping-method-list.component';\r\nimport { ShippingMethodTestResultComponent } from './components/shipping-method-test-result/shipping-method-test-result.component';\r\nimport { TaxCategoryDetailComponent } from './components/tax-category-detail/tax-category-detail.component';\r\nimport { TaxCategoryListComponent } from './components/tax-category-list/tax-category-list.component';\r\nimport { TaxRateDetailComponent } from './components/tax-rate-detail/tax-rate-detail.component';\r\nimport { TaxRateListComponent } from './components/tax-rate-list/tax-rate-list.component';\r\nimport { TestAddressFormComponent } from './components/test-address-form/test-address-form.component';\r\nimport { TestOrderBuilderComponent } from './components/test-order-builder/test-order-builder.component';\r\nimport { ZoneDetailDialogComponent } from './components/zone-detail-dialog/zone-detail-dialog.component';\r\nimport { ZoneListComponent } from './components/zone-list/zone-list.component';\r\nimport { ZoneMemberControlsDirective } from './components/zone-member-list/zone-member-controls.directive';\r\nimport { ZoneMemberListHeaderDirective } from './components/zone-member-list/zone-member-list-header.directive';\r\nimport { ZoneMemberListComponent } from './components/zone-member-list/zone-member-list.component';\r\nimport { settingsRoutes } from './settings.routes';\r\n\r\n@NgModule({\r\n    imports: [SharedModule, RouterModule.forChild(settingsRoutes)],\r\n    declarations: [\r\n        TaxCategoryListComponent,\r\n        TaxCategoryDetailComponent,\r\n        AdministratorListComponent,\r\n        RoleListComponent,\r\n        RoleDetailComponent,\r\n        AdminDetailComponent,\r\n        PermissionGridComponent,\r\n        CountryListComponent,\r\n        CountryDetailComponent,\r\n        TaxRateListComponent,\r\n        TaxRateDetailComponent,\r\n        ChannelListComponent,\r\n        ChannelDetailComponent,\r\n        ShippingMethodListComponent,\r\n        ShippingMethodDetailComponent,\r\n        PaymentMethodListComponent,\r\n        PaymentMethodDetailComponent,\r\n        GlobalSettingsComponent,\r\n        TestOrderBuilderComponent,\r\n        TestAddressFormComponent,\r\n        ShippingMethodTestResultComponent,\r\n        ShippingEligibilityTestResultComponent,\r\n        ZoneListComponent,\r\n        AddCountryToZoneDialogComponent,\r\n        ZoneMemberListComponent,\r\n        ZoneMemberListHeaderDirective,\r\n        ZoneMemberControlsDirective,\r\n        ZoneDetailDialogComponent,\r\n        ProfileComponent,\r\n    ],\r\n})\r\nexport class SettingsModule {}\r\n","// This file was generated by the build-public-api.ts script\nexport * from './components/add-country-to-zone-dialog/add-country-to-zone-dialog.component';\nexport * from './components/admin-detail/admin-detail.component';\nexport * from './components/administrator-list/administrator-list.component';\nexport * from './components/channel-detail/channel-detail.component';\nexport * from './components/channel-list/channel-list.component';\nexport * from './components/country-detail/country-detail.component';\nexport * from './components/country-list/country-list.component';\nexport * from './components/global-settings/global-settings.component';\nexport * from './components/payment-method-detail/payment-method-detail.component';\nexport * from './components/payment-method-list/payment-method-list.component';\nexport * from './components/permission-grid/permission-grid.component';\nexport * from './components/profile/profile.component';\nexport * from './components/role-detail/role-detail.component';\nexport * from './components/role-list/role-list.component';\nexport * from './components/shipping-eligibility-test-result/shipping-eligibility-test-result.component';\nexport * from './components/shipping-method-detail/shipping-method-detail.component';\nexport * from './components/shipping-method-list/shipping-method-list.component';\nexport * from './components/shipping-method-test-result/shipping-method-test-result.component';\nexport * from './components/tax-category-detail/tax-category-detail.component';\nexport * from './components/tax-category-list/tax-category-list.component';\nexport * from './components/tax-rate-detail/tax-rate-detail.component';\nexport * from './components/tax-rate-list/tax-rate-list.component';\nexport * from './components/test-address-form/test-address-form.component';\nexport * from './components/test-order-builder/test-order-builder.component';\nexport * from './components/zone-detail-dialog/zone-detail-dialog.component';\nexport * from './components/zone-list/zone-list.component';\nexport * from './components/zone-member-list/zone-member-controls.directive';\nexport * from './components/zone-member-list/zone-member-list-header.directive';\nexport * from './components/zone-member-list/zone-member-list.component';\nexport * from './providers/routing/administrator-resolver';\nexport * from './providers/routing/channel-resolver';\nexport * from './providers/routing/country-resolver';\nexport * from './providers/routing/global-settings-resolver';\nexport * from './providers/routing/payment-method-resolver';\nexport * from './providers/routing/profile-resolver';\nexport * from './providers/routing/role-resolver';\nexport * from './providers/routing/shipping-method-resolver';\nexport * from './providers/routing/tax-category-resolver';\nexport * from './providers/routing/tax-rate-resolver';\nexport * from './settings.module';\nexport * from './settings.routes';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["_"],"mappings":"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"}