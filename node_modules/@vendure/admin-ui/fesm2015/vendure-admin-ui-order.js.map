{"version":3,"file":"vendure-admin-ui-order.js","sources":["../../src/lib/order/src/components/add-manual-payment-dialog/add-manual-payment-dialog.component.ts","../../src/lib/order/src/components/cancel-order-dialog/cancel-order-dialog.component.ts","../../src/lib/order/src/components/fulfill-order-dialog/fulfill-order-dialog.component.ts","../../src/lib/order/src/components/fulfillment-card/fulfillment-card.component.ts","../../src/lib/order/src/components/fulfillment-detail/fulfillment-detail.component.ts","../../src/lib/order/src/components/fulfillment-state-label/fulfillment-state-label.component.ts","../../src/lib/order/src/components/line-fulfillment/line-fulfillment.component.ts","../../src/lib/order/src/components/line-refunds/line-refunds.component.ts","../../src/lib/order/src/components/modification-detail/modification-detail.component.ts","../../src/lib/order/src/components/order-custom-fields-card/order-custom-fields-card.component.ts","../../src/lib/order/src/components/order-state-select-dialog/order-state-select-dialog.component.ts","../../src/lib/order/src/providers/order-transition.service.ts","../../src/lib/order/src/components/order-process-graph-dialog/order-process-graph-dialog.component.ts","../../src/lib/order/src/components/refund-order-dialog/refund-order-dialog.component.ts","../../src/lib/order/src/components/settle-refund-dialog/settle-refund-dialog.component.ts","../../src/lib/order/src/components/order-detail/order-detail.component.ts","../../src/lib/order/src/components/order-edits-preview-dialog/order-edits-preview-dialog.component.ts","../../src/lib/order/src/components/order-editor/order-editor.component.ts","../../src/lib/order/src/components/order-history/order-history.component.ts","../../src/lib/order/src/components/order-list/order-list.component.ts","../../src/lib/order/src/components/order-payment-card/order-payment-card.component.ts","../../src/lib/order/src/components/order-process-graph/constants.ts","../../src/lib/order/src/components/order-process-graph/order-process-edge.component.ts","../../src/lib/order/src/components/order-process-graph/order-process-node.component.ts","../../src/lib/order/src/components/order-process-graph/order-process-graph.component.ts","../../src/lib/order/src/components/order-table/order-table.component.ts","../../src/lib/order/src/components/payment-detail/payment-detail.component.ts","../../src/lib/order/src/components/payment-state-label/payment-state-label.component.ts","../../src/lib/order/src/components/refund-state-label/refund-state-label.component.ts","../../src/lib/order/src/components/simple-item-list/simple-item-list.component.ts","../../src/lib/order/src/providers/routing/order-resolver.ts","../../src/lib/order/src/order.routes.ts","../../src/lib/order/src/order.module.ts","../../src/lib/order/src/public_api.ts","../../src/lib/order/src/vendure-admin-ui-order.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport {\r\n    CurrencyCode,\r\n    DataService,\r\n    Dialog,\r\n    GetPaymentMethodList,\r\n    ManualPaymentInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'vdr-add-manual-payment-dialog',\r\n    templateUrl: './add-manual-payment-dialog.component.html',\r\n    styleUrls: ['./add-manual-payment-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddManualPaymentDialogComponent implements OnInit, Dialog<Omit<ManualPaymentInput, 'orderId'>> {\r\n    // populated by ModalService call\r\n    outstandingAmount: number;\r\n    currencyCode: CurrencyCode;\r\n\r\n    resolveWith: (result?: Omit<ManualPaymentInput, 'orderId'>) => void;\r\n    form = new FormGroup({\r\n        method: new FormControl('', Validators.required),\r\n        transactionId: new FormControl('', Validators.required),\r\n    });\r\n    paymentMethods$: Observable<GetPaymentMethodList.Items[]>;\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.paymentMethods$ = this.dataService.settings\r\n            .getPaymentMethods(999)\r\n            .mapSingle(data => data.paymentMethods.items);\r\n    }\r\n\r\n    submit() {\r\n        const formValue = this.form.value;\r\n        this.resolveWith({\r\n            method: formValue.method,\r\n            transactionId: formValue.transactionId,\r\n        });\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    CancelOrderInput,\r\n    Dialog,\r\n    getAppConfig,\r\n    I18nService,\r\n    OrderDetailFragment,\r\n    OrderLineInput,\r\n} from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-cancel-order-dialog',\r\n    templateUrl: './cancel-order-dialog.component.html',\r\n    styleUrls: ['./cancel-order-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CancelOrderDialogComponent implements OnInit, Dialog<CancelOrderInput> {\r\n    order: OrderDetailFragment;\r\n    cancelAll = true;\r\n    resolveWith: (result?: CancelOrderInput) => void;\r\n    reason: string;\r\n    lineQuantities: { [lineId: string]: number } = {};\r\n    reasons: string[] = getAppConfig().cancellationReasons ?? [\r\n        _('order.cancel-reason-customer-request'),\r\n        _('order.cancel-reason-not-available'),\r\n    ];\r\n\r\n    get selectionCount(): number {\r\n        return Object.values(this.lineQuantities).reduce((sum, n) => sum + n, 0);\r\n    }\r\n\r\n    constructor(private i18nService: I18nService) {\r\n        this.reasons = this.reasons.map(r => this.i18nService.translate(r));\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.lineQuantities = this.order.lines.reduce((result, line) => {\r\n            return { ...result, [line.id]: line.quantity };\r\n        }, {});\r\n    }\r\n\r\n    radioChanged() {\r\n        if (this.cancelAll) {\r\n            for (const line of this.order.lines) {\r\n                this.lineQuantities[line.id] = line.quantity;\r\n            }\r\n        } else {\r\n            for (const line of this.order.lines) {\r\n                this.lineQuantities[line.id] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkIfAllSelected() {\r\n        for (const [lineId, quantity] of Object.entries(this.lineQuantities)) {\r\n            const quantityInOrder = this.order.lines.find(line => line.id === lineId)?.quantity;\r\n            if (quantityInOrder && quantity < quantityInOrder) {\r\n                return;\r\n            }\r\n        }\r\n        // If we got here, all of the selected quantities are equal to the order\r\n        // line quantities, i.e. everything is selected.\r\n        this.cancelAll = true;\r\n    }\r\n\r\n    select() {\r\n        this.resolveWith({\r\n            orderId: this.order.id,\r\n            lines: this.getLineInputs(),\r\n            reason: this.reason,\r\n            cancelShipping: this.cancelAll,\r\n        });\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    private getLineInputs(): OrderLineInput[] | undefined {\r\n        if (this.order.active) {\r\n            return;\r\n        }\r\n        return Object.entries(this.lineQuantities)\r\n            .map(([orderLineId, quantity]) => ({\r\n                orderLineId,\r\n                quantity,\r\n            }))\r\n            .filter(l => 0 < l.quantity);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport {\r\n    configurableDefinitionToInstance,\r\n    ConfigurableOperation,\r\n    ConfigurableOperationDefinition,\r\n    configurableOperationValueIsValid,\r\n    DataService,\r\n    Dialog,\r\n    FulfillOrderInput,\r\n    GlobalFlag,\r\n    OrderDetail,\r\n    OrderDetailFragment,\r\n    toConfigurableOperationInput,\r\n} from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-fulfill-order-dialog',\r\n    templateUrl: './fulfill-order-dialog.component.html',\r\n    styleUrls: ['./fulfill-order-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FulfillOrderDialogComponent implements Dialog<FulfillOrderInput>, OnInit {\r\n    resolveWith: (result?: FulfillOrderInput) => void;\r\n    fulfillmentHandlerDef: ConfigurableOperationDefinition;\r\n    fulfillmentHandler: ConfigurableOperation;\r\n    fulfillmentHandlerControl = new FormControl();\r\n    fulfillmentQuantities: { [lineId: string]: { fulfillCount: number; max: number } } = {};\r\n\r\n    // Provided by modalService.fromComponent() call\r\n    order: OrderDetailFragment;\r\n\r\n    constructor(private dataService: DataService, private changeDetector: ChangeDetectorRef) {}\r\n\r\n    ngOnInit(): void {\r\n        this.dataService.settings.getGlobalSettings().single$.subscribe(({ globalSettings }) => {\r\n            this.fulfillmentQuantities = this.order.lines.reduce((result, line) => {\r\n                const fulfillCount = this.getFulfillableCount(line, globalSettings.trackInventory);\r\n                return {\r\n                    ...result,\r\n                    [line.id]: { fulfillCount, max: fulfillCount },\r\n                };\r\n            }, {});\r\n            this.changeDetector.markForCheck();\r\n        });\r\n\r\n        this.dataService.shippingMethod\r\n            .getShippingMethodOperations()\r\n            .mapSingle(data => data.fulfillmentHandlers)\r\n            .subscribe(handlers => {\r\n                this.fulfillmentHandlerDef =\r\n                    handlers.find(\r\n                        h => h.code === this.order.shippingLines[0]?.shippingMethod?.fulfillmentHandlerCode,\r\n                    ) || handlers[0];\r\n                this.fulfillmentHandler = configurableDefinitionToInstance(this.fulfillmentHandlerDef);\r\n                this.fulfillmentHandlerControl.patchValue(this.fulfillmentHandler);\r\n                this.changeDetector.markForCheck();\r\n            });\r\n    }\r\n\r\n    getFulfillableCount(line: OrderDetail.Lines, globalTrackInventory: boolean): number {\r\n        const { trackInventory, stockOnHand } = line.productVariant;\r\n        const effectiveTracInventory =\r\n            trackInventory === GlobalFlag.INHERIT ? globalTrackInventory : trackInventory === GlobalFlag.TRUE;\r\n\r\n        const unfulfilledCount = this.getUnfulfilledCount(line);\r\n        return effectiveTracInventory ? Math.min(unfulfilledCount, stockOnHand) : unfulfilledCount;\r\n    }\r\n\r\n    getUnfulfilledCount(line: OrderDetail.Lines): number {\r\n        const fulfilled = line.items.reduce((sum, item) => sum + (item.fulfillment ? 1 : 0), 0);\r\n        return line.quantity - fulfilled;\r\n    }\r\n\r\n    canSubmit(): boolean {\r\n        const totalCount = Object.values(this.fulfillmentQuantities).reduce(\r\n            (total, { fulfillCount }) => total + fulfillCount,\r\n            0,\r\n        );\r\n        const formIsValid =\r\n            configurableOperationValueIsValid(\r\n                this.fulfillmentHandlerDef,\r\n                this.fulfillmentHandlerControl.value,\r\n            ) && this.fulfillmentHandlerControl.valid;\r\n        return formIsValid && 0 < totalCount;\r\n    }\r\n\r\n    select() {\r\n        const lines = Object.entries(this.fulfillmentQuantities).map(([orderLineId, { fulfillCount }]) => ({\r\n            orderLineId,\r\n            quantity: fulfillCount,\r\n        }));\r\n        this.resolveWith({\r\n            lines,\r\n            handler: toConfigurableOperationInput(\r\n                this.fulfillmentHandler,\r\n                this.fulfillmentHandlerControl.value,\r\n            ),\r\n        });\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Fulfillment, OrderDetail } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-fulfillment-card',\r\n    templateUrl: './fulfillment-card.component.html',\r\n    styleUrls: ['./fulfillment-card.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FulfillmentCardComponent {\r\n    @Input() fulfillment: Fulfillment.Fragment | undefined;\r\n    @Input() order: OrderDetail.Fragment;\r\n    @Output() transitionState = new EventEmitter<string>();\r\n\r\n    nextSuggestedState(): string | undefined {\r\n        if (!this.fulfillment) {\r\n            return;\r\n        }\r\n        const { nextStates } = this.fulfillment;\r\n        const namedStateOrDefault = (targetState: string) =>\r\n            nextStates.includes(targetState) ? targetState : nextStates[0];\r\n        switch (this.fulfillment?.state) {\r\n            case 'Pending':\r\n                return namedStateOrDefault('Shipped');\r\n            case 'Shipped':\r\n                return namedStateOrDefault('Delivered');\r\n            default:\r\n                return nextStates.find(s => s !== 'Cancelled');\r\n        }\r\n    }\r\n\r\n    nextOtherStates(): string[] {\r\n        if (!this.fulfillment) {\r\n            return [];\r\n        }\r\n        const suggested = this.nextSuggestedState();\r\n        return this.fulfillment.nextStates.filter(s => s !== suggested);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { CustomFieldConfig, OrderDetail, ServerConfigService } from '@vendure/admin-ui/core';\r\nimport { isObject } from '@vendure/common/lib/shared-utils';\r\n\r\n@Component({\r\n    selector: 'vdr-fulfillment-detail',\r\n    templateUrl: './fulfillment-detail.component.html',\r\n    styleUrls: ['./fulfillment-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FulfillmentDetailComponent implements OnInit, OnChanges {\r\n    @Input() fulfillmentId: string;\r\n    @Input() order: OrderDetail.Fragment;\r\n\r\n    customFieldConfig: CustomFieldConfig[] = [];\r\n    customFieldFormGroup = new FormGroup({});\r\n\r\n    constructor(private serverConfigService: ServerConfigService) {}\r\n\r\n    ngOnInit() {\r\n        this.customFieldConfig = this.serverConfigService.getCustomFieldsFor('Fulfillment');\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.buildCustomFieldsFormGroup();\r\n    }\r\n\r\n    get fulfillment(): OrderDetail.Fulfillments | undefined | null {\r\n        return this.order.fulfillments && this.order.fulfillments.find(f => f.id === this.fulfillmentId);\r\n    }\r\n\r\n    get items(): Array<{ name: string; quantity: number }> {\r\n        const itemMap = new Map<string, number>();\r\n        const fulfillmentItemIds = this.fulfillment?.orderItems.map(i => i.id);\r\n        for (const line of this.order.lines) {\r\n            for (const item of line.items) {\r\n                if (fulfillmentItemIds?.includes(item.id)) {\r\n                    const count = itemMap.get(line.productVariant.name);\r\n                    if (count != null) {\r\n                        itemMap.set(line.productVariant.name, count + 1);\r\n                    } else {\r\n                        itemMap.set(line.productVariant.name, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return Array.from(itemMap.entries()).map(([name, quantity]) => ({ name, quantity }));\r\n    }\r\n\r\n    buildCustomFieldsFormGroup() {\r\n        const customFields = (this.fulfillment as any).customFields;\r\n        for (const fieldDef of this.serverConfigService.getCustomFieldsFor('Fulfillment')) {\r\n            this.customFieldFormGroup.addControl(fieldDef.name, new FormControl(customFields[fieldDef.name]));\r\n        }\r\n    }\r\n\r\n    customFieldIsObject(customField: unknown) {\r\n        return Array.isArray(customField) || isObject(customField);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-fulfillment-state-label',\r\n    templateUrl: './fulfillment-state-label.component.html',\r\n    styleUrls: ['./fulfillment-state-label.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FulfillmentStateLabelComponent {\r\n    @Input() state: string;\r\n\r\n    get chipColorType() {\r\n        switch (this.state) {\r\n            case 'Pending':\r\n            case 'Shipped':\r\n                return 'warning';\r\n            case 'Delivered':\r\n                return 'success';\r\n            case 'Cancelled':\r\n                return 'error';\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { OrderDetail } from '@vendure/admin-ui/core';\r\nimport { unique } from '@vendure/common/lib/unique';\r\n\r\nexport type FulfillmentStatus = 'full' | 'partial' | 'none';\r\n\r\n@Component({\r\n    selector: 'vdr-line-fulfillment',\r\n    templateUrl: './line-fulfillment.component.html',\r\n    styleUrls: ['./line-fulfillment.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LineFulfillmentComponent implements OnChanges {\r\n    @Input() line: OrderDetail.Lines;\r\n    @Input() orderState: string;\r\n    fulfilledCount = 0;\r\n    fulfillmentStatus: FulfillmentStatus;\r\n    fulfillments: Array<{ count: number; fulfillment: OrderDetail.Fulfillments }> = [];\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.line) {\r\n            this.fulfilledCount = this.getDeliveredCount(this.line);\r\n            this.fulfillmentStatus = this.getFulfillmentStatus(this.fulfilledCount, this.line.items.length);\r\n            this.fulfillments = this.getFulfillments(this.line);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the number of items in an OrderLine which are fulfilled.\r\n     */\r\n    private getDeliveredCount(line: OrderDetail.Lines): number {\r\n        return line.items.reduce((sum, item) => sum + (item.fulfillment ? 1 : 0), 0);\r\n    }\r\n\r\n    private getFulfillmentStatus(fulfilledCount: number, lineQuantity: number): FulfillmentStatus {\r\n        if (fulfilledCount === lineQuantity) {\r\n            return 'full';\r\n        }\r\n        if (0 < fulfilledCount && fulfilledCount < lineQuantity) {\r\n            return 'partial';\r\n        }\r\n        return 'none';\r\n    }\r\n\r\n    private getFulfillments(\r\n        line: OrderDetail.Lines,\r\n    ): Array<{ count: number; fulfillment: OrderDetail.Fulfillments }> {\r\n        const counts: { [fulfillmentId: string]: number } = {};\r\n\r\n        for (const item of line.items) {\r\n            if (item.fulfillment) {\r\n                if (counts[item.fulfillment.id] === undefined) {\r\n                    counts[item.fulfillment.id] = 1;\r\n                } else {\r\n                    counts[item.fulfillment.id]++;\r\n                }\r\n            }\r\n        }\r\n        const all = line.items.reduce((fulfillments, item) => {\r\n            return item.fulfillment ? [...fulfillments, item.fulfillment] : fulfillments;\r\n        }, [] as OrderDetail.Fulfillments[]);\r\n\r\n        return Object.entries(counts).map(([id, count]) => {\r\n            return {\r\n                count,\r\n                // tslint:disable-next-line:no-non-null-assertion\r\n                fulfillment: all.find(f => f.id === id)!,\r\n            };\r\n        });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { OrderDetail } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-line-refunds',\r\n    templateUrl: './line-refunds.component.html',\r\n    styleUrls: ['./line-refunds.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LineRefundsComponent {\r\n    @Input() line: OrderDetail.Lines;\r\n    @Input() payments: OrderDetail.Payments[];\r\n\r\n    getRefundedCount(): number {\r\n        const refunds =\r\n            this.payments?.reduce(\r\n                (all, payment) => [...all, ...payment.refunds],\r\n                [] as OrderDetail.Refunds[],\r\n            ) ?? [];\r\n        return this.line.items.filter(i => {\r\n            if (i.refundId === null && !i.cancelled) {\r\n                return false;\r\n            }\r\n            if (i.refundId) {\r\n                const refund = refunds.find(r => r.id === i.refundId);\r\n                if (refund?.state === 'Failed') {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }).length;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit } from '@angular/core';\r\nimport { OrderDetail, OrderDetailFragment } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-modification-detail',\r\n    templateUrl: './modification-detail.component.html',\r\n    styleUrls: ['./modification-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ModificationDetailComponent implements OnChanges {\r\n    @Input() order: OrderDetailFragment;\r\n    @Input() modification: OrderDetail.Modifications;\r\n    private addedItems = new Map<OrderDetail.Lines, number>();\r\n    private removedItems = new Map<OrderDetail.Lines, number>();\r\n\r\n    ngOnChanges(): void {\r\n        const { added, removed } = this.getModifiedLines();\r\n        this.addedItems = added;\r\n        this.removedItems = removed;\r\n    }\r\n\r\n    getSurcharge(id: string) {\r\n        return this.order.surcharges.find(m => m.id === id);\r\n    }\r\n\r\n    getAddedItems() {\r\n        return [...this.addedItems.entries()].map(([line, count]) => {\r\n            return { name: line.productVariant.name, quantity: count };\r\n        });\r\n    }\r\n\r\n    getRemovedItems() {\r\n        return [...this.removedItems.entries()].map(([line, count]) => {\r\n            return { name: line.productVariant.name, quantity: count };\r\n        });\r\n    }\r\n\r\n    private getModifiedLines() {\r\n        const added = new Map<OrderDetail.Lines, number>();\r\n        const removed = new Map<OrderDetail.Lines, number>();\r\n        for (const _item of this.modification.orderItems || []) {\r\n            const result = this.getOrderLineAndItem(_item.id);\r\n            if (result) {\r\n                const { line, item } = result;\r\n                if (item.cancelled) {\r\n                    const count = removed.get(line) ?? 0;\r\n                    removed.set(line, count + 1);\r\n                } else {\r\n                    const count = added.get(line) ?? 0;\r\n                    added.set(line, count + 1);\r\n                }\r\n            }\r\n        }\r\n        return { added, removed };\r\n    }\r\n\r\n    private getOrderLineAndItem(itemId: string) {\r\n        for (const line of this.order.lines) {\r\n            const item = line.items.find(i => i.id === itemId);\r\n            if (item) {\r\n                return { line, item };\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { CustomFieldConfig } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-order-custom-fields-card',\r\n    templateUrl: './order-custom-fields-card.component.html',\r\n    styleUrls: ['./order-custom-fields-card.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderCustomFieldsCardComponent implements OnInit {\r\n    @Input() customFieldsConfig: CustomFieldConfig[] = [];\r\n    @Input() customFieldValues: { [name: string]: any } = {};\r\n    @Output() updateClick = new EventEmitter<any>();\r\n    customFieldForm: FormGroup;\r\n    editable = false;\r\n    constructor(private formBuilder: FormBuilder) {}\r\n\r\n    ngOnInit() {\r\n        this.customFieldForm = this.formBuilder.group({});\r\n        for (const field of this.customFieldsConfig) {\r\n            this.customFieldForm.addControl(\r\n                field.name,\r\n                this.formBuilder.control(this.customFieldValues[field.name]),\r\n            );\r\n        }\r\n    }\r\n\r\n    onUpdateClick() {\r\n        this.updateClick.emit(this.customFieldForm.value);\r\n        this.customFieldForm.markAsPristine();\r\n        this.editable = false;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Dialog } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-order-state-select-dialog',\n    templateUrl: './order-state-select-dialog.component.html',\n    styleUrls: ['./order-state-select-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderStateSelectDialogComponent implements Dialog<string> {\n    resolveWith: (result?: string) => void;\n    nextStates: string[] = [];\n    message = '';\n    cancellable: boolean;\n    selectedState = '';\n\n    select() {\n        if (this.selectedState) {\n            this.resolveWith(this.selectedState);\n        }\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    DataService,\n    HistoryEntryType,\n    I18nService,\n    ModalService,\n    NotificationService,\n    SortOrder,\n} from '@vendure/admin-ui/core';\nimport { EMPTY } from 'rxjs';\nimport { catchError, delay, map, retryWhen, switchMap, take } from 'rxjs/operators';\n\nimport { OrderStateSelectDialogComponent } from '../components/order-state-select-dialog/order-state-select-dialog.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrderTransitionService {\n    constructor(\n        private dataService: DataService,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n        private i18nService: I18nService,\n    ) {}\n\n    /**\n     * Attempts to transition the Order to the last state it was in before it was transitioned\n     * to the \"Modifying\" state. If this fails, a manual prompt is used.\n     */\n    transitionToPreModifyingState(orderId: string, nextStates: string[]) {\n        return this.getPreModifyingState(orderId).pipe(\n            switchMap(state => {\n                const manualTransitionOptions = {\n                    orderId,\n                    nextStates,\n                    message: this.i18nService.translate(\n                        _('order.unable-to-transition-to-state-try-another'),\n                        { state },\n                    ),\n                    cancellable: false,\n                    retry: 10,\n                };\n                if (state) {\n                    return this.transitionToStateOrThrow(orderId, state).pipe(\n                        catchError(err => this.manuallyTransitionToState(manualTransitionOptions)),\n                    );\n                } else {\n                    return this.manuallyTransitionToState(manualTransitionOptions);\n                }\n            }),\n        );\n    }\n\n    /**\n     * Displays a modal for manually selecting the next state.\n     */\n    manuallyTransitionToState(options: {\n        orderId: string;\n        nextStates: string[];\n        message: string;\n        cancellable: boolean;\n        retry: number;\n    }) {\n        return this.modalService\n            .fromComponent(OrderStateSelectDialogComponent, {\n                locals: {\n                    nextStates: options.nextStates,\n                    cancellable: options.cancellable,\n                    message: options.message,\n                },\n                closable: false,\n                size: 'md',\n            })\n            .pipe(\n                switchMap(result => {\n                    if (result) {\n                        return this.transitionToStateOrThrow(options.orderId, result);\n                    } else {\n                        if (!options.cancellable) {\n                            throw new Error(`An order state must be selected`);\n                        } else {\n                            return EMPTY;\n                        }\n                    }\n                }),\n                retryWhen(errors => errors.pipe(delay(2000), take(options.retry))),\n            );\n    }\n\n    /**\n     * Attempts to get the last state the Order was in before it was transitioned\n     * to the \"Modifying\" state.\n     */\n    private getPreModifyingState(orderId: string) {\n        return this.dataService.order\n            .getOrderHistory(orderId, {\n                filter: {\n                    type: {\n                        eq: HistoryEntryType.ORDER_STATE_TRANSITION,\n                    },\n                },\n                sort: {\n                    createdAt: SortOrder.DESC,\n                },\n            })\n            .mapSingle(result => result.order)\n            .pipe(\n                map(result => {\n                    const item = result?.history.items.find(i => i.data.to === 'Modifying');\n                    if (item) {\n                        return item.data.from as string;\n                    } else {\n                        return;\n                    }\n                }),\n            );\n    }\n\n    private transitionToStateOrThrow(orderId: string, state: string) {\n        return this.dataService.order.transitionToState(orderId, state).pipe(\n            map(({ transitionOrderToState }) => {\n                switch (transitionOrderToState?.__typename) {\n                    case 'Order':\n                        return transitionOrderToState?.state;\n                    case 'OrderStateTransitionError':\n                        this.notificationService.error(transitionOrderToState?.transitionError);\n                        throw new Error(transitionOrderToState?.transitionError);\n                }\n            }),\n        );\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n    CancelOrderInput,\r\n    DataService,\r\n    Dialog,\r\n    OrderProcessState,\r\n    ServerConfigService,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'vdr-order-process-graph-dialog',\r\n    templateUrl: './order-process-graph-dialog.component.html',\r\n    styleUrls: ['./order-process-graph-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderProcessGraphDialogComponent implements OnInit, Dialog<void> {\r\n    activeState: string;\r\n    states: OrderProcessState[] = [];\r\n    constructor(private serverConfigService: ServerConfigService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.states = this.serverConfigService.getOrderProcessStates();\r\n    }\r\n\r\n    resolveWith: (result: void | undefined) => void;\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    CancelOrderInput,\r\n    Dialog,\r\n    getAppConfig,\r\n    I18nService,\r\n    OrderDetail,\r\n    OrderDetailFragment,\r\n    OrderLineInput,\r\n    RefundOrderInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { summate } from '@vendure/common/lib/shared-utils';\r\n\r\ntype SelectionLine = { quantity: number; refund: boolean; cancel: boolean };\r\n\r\n@Component({\r\n    selector: 'vdr-refund-order-dialog',\r\n    templateUrl: './refund-order-dialog.component.html',\r\n    styleUrls: ['./refund-order-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RefundOrderDialogComponent\r\n    implements OnInit, Dialog<{ cancel: CancelOrderInput; refund: RefundOrderInput }>\r\n{\r\n    order: OrderDetailFragment;\r\n    resolveWith: (result?: { cancel: CancelOrderInput; refund: RefundOrderInput }) => void;\r\n    reason: string;\r\n    settledPayments: OrderDetail.Payments[];\r\n    selectedPayment: OrderDetail.Payments;\r\n    lineQuantities: { [lineId: string]: SelectionLine } = {};\r\n    refundShipping = false;\r\n    adjustment = 0;\r\n    reasons = getAppConfig().cancellationReasons ?? [\r\n        _('order.refund-reason-customer-request'),\r\n        _('order.refund-reason-not-available'),\r\n    ];\r\n\r\n    constructor(private i18nService: I18nService) {\r\n        this.reasons = this.reasons.map(r => this.i18nService.translate(r));\r\n    }\r\n\r\n    get refundTotal(): number {\r\n        const itemTotal = this.order.lines.reduce((total, line) => {\r\n            const lineRef = this.lineQuantities[line.id];\r\n            const refundCount = (lineRef.refund && lineRef.quantity) || 0;\r\n            return total + line.proratedUnitPriceWithTax * refundCount;\r\n        }, 0);\r\n        return itemTotal + (this.refundShipping ? this.order.shippingWithTax : 0) + this.adjustment;\r\n    }\r\n\r\n    get settledPaymentsTotal(): number {\r\n        return this.settledPayments\r\n            .map(payment => {\r\n                const paymentTotal = payment.amount;\r\n                const alreadyRefundedTotal = summate(\r\n                    payment.refunds.filter(r => r.state !== 'Failed') as Array<Required<OrderDetail.Refunds>>,\r\n                    'total',\r\n                );\r\n                return paymentTotal - alreadyRefundedTotal;\r\n            })\r\n            .reduce((sum, amount) => sum + amount, 0);\r\n    }\r\n\r\n    lineCanBeRefundedOrCancelled(line: OrderDetail.Lines): boolean {\r\n        const refunds =\r\n            this.order.payments?.reduce(\r\n                (all, payment) => [...all, ...payment.refunds],\r\n                [] as OrderDetail.Refunds[],\r\n            ) ?? [];\r\n\r\n        const refundable = line.items.filter(i => {\r\n            if (i.cancelled) {\r\n                return false;\r\n            }\r\n            if (i.refundId == null) {\r\n                return true;\r\n            }\r\n            const refund = refunds.find(r => r.id === i.refundId);\r\n            return refund?.state === 'Failed';\r\n        });\r\n        return 0 < refundable.length;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.lineQuantities = this.order.lines.reduce((result, line) => {\r\n            return {\r\n                ...result,\r\n                [line.id]: {\r\n                    quantity: 0,\r\n                    refund: false,\r\n                    cancel: false,\r\n                },\r\n            };\r\n        }, {});\r\n        this.settledPayments = (this.order.payments || []).filter(p => p.state === 'Settled');\r\n        if (this.settledPayments.length) {\r\n            this.selectedPayment = this.settledPayments[0];\r\n        }\r\n    }\r\n\r\n    handleZeroQuantity(line?: SelectionLine) {\r\n        if (line?.quantity === 0) {\r\n            line.cancel = false;\r\n            line.refund = false;\r\n        }\r\n    }\r\n\r\n    isRefunding(): boolean {\r\n        const result = Object.values(this.lineQuantities).reduce((isRefunding, line) => {\r\n            return isRefunding || (0 < line.quantity && line.refund);\r\n        }, false);\r\n        return result;\r\n    }\r\n\r\n    isCancelling(): boolean {\r\n        const result = Object.values(this.lineQuantities).reduce((isCancelling, line) => {\r\n            return isCancelling || (0 < line.quantity && line.cancel);\r\n        }, false);\r\n        return result;\r\n    }\r\n\r\n    canSubmit(): boolean {\r\n        if (this.isRefunding()) {\r\n            return !!(\r\n                this.selectedPayment &&\r\n                this.reason &&\r\n                0 < this.refundTotal &&\r\n                this.refundTotal <= this.settledPaymentsTotal\r\n            );\r\n        } else if (this.isCancelling()) {\r\n            return !!this.reason;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    select() {\r\n        const payment = this.selectedPayment;\r\n        if (payment) {\r\n            const refundLines = this.getOrderLineInput(line => line.refund);\r\n            const cancelLines = this.getOrderLineInput(line => line.cancel);\r\n\r\n            this.resolveWith({\r\n                refund: {\r\n                    lines: refundLines,\r\n                    reason: this.reason,\r\n                    shipping: this.refundShipping ? this.order.shippingWithTax : 0,\r\n                    adjustment: this.adjustment,\r\n                    paymentId: payment.id,\r\n                },\r\n                cancel: {\r\n                    lines: cancelLines,\r\n                    orderId: this.order.id,\r\n                    reason: this.reason,\r\n                    cancelShipping: this.refundShipping,\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    private getOrderLineInput(filterFn: (line: SelectionLine) => boolean): OrderLineInput[] {\r\n        return Object.entries(this.lineQuantities)\r\n            .filter(([orderLineId, line]) => 0 < line.quantity && filterFn(line))\r\n            .map(([orderLineId, line]) => ({\r\n                orderLineId,\r\n                quantity: line.quantity,\r\n            }));\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\nimport { OrderDetail } from '@vendure/admin-ui/core';\r\nimport { Dialog } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-settle-refund-dialog',\r\n    templateUrl: './settle-refund-dialog.component.html',\r\n    styleUrls: ['./settle-refund-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SettleRefundDialogComponent implements Dialog<string> {\r\n    resolveWith: (result?: string) => void;\r\n    transactionId = '';\r\n    refund: OrderDetail.Refunds;\r\n\r\n    submit() {\r\n        this.resolveWith(this.transactionId);\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseDetailComponent,\r\n    CancelOrder,\r\n    CustomFieldConfig,\r\n    DataService,\r\n    EditNoteDialogComponent,\r\n    GetOrderHistory,\r\n    GetOrderQuery,\r\n    HistoryEntry,\r\n    HistoryEntryType,\r\n    ModalService,\r\n    NotificationService,\r\n    Order,\r\n    OrderDetail,\r\n    OrderDetailFragment,\r\n    OrderLineFragment,\r\n    Refund,\r\n    RefundOrder,\r\n    ServerConfigService,\r\n    SortOrder,\r\n} from '@vendure/admin-ui/core';\r\nimport { pick } from '@vendure/common/lib/pick';\r\nimport { assertNever, summate } from '@vendure/common/lib/shared-utils';\r\nimport { EMPTY, merge, Observable, of, Subject } from 'rxjs';\r\nimport { map, mapTo, startWith, switchMap, take } from 'rxjs/operators';\r\n\r\nimport { OrderTransitionService } from '../../providers/order-transition.service';\r\nimport { AddManualPaymentDialogComponent } from '../add-manual-payment-dialog/add-manual-payment-dialog.component';\r\nimport { CancelOrderDialogComponent } from '../cancel-order-dialog/cancel-order-dialog.component';\r\nimport { FulfillOrderDialogComponent } from '../fulfill-order-dialog/fulfill-order-dialog.component';\r\nimport { OrderProcessGraphDialogComponent } from '../order-process-graph-dialog/order-process-graph-dialog.component';\r\nimport { RefundOrderDialogComponent } from '../refund-order-dialog/refund-order-dialog.component';\r\nimport { SettleRefundDialogComponent } from '../settle-refund-dialog/settle-refund-dialog.component';\r\n\r\n@Component({\r\n    selector: 'vdr-order-detail',\r\n    templateUrl: './order-detail.component.html',\r\n    styleUrls: ['./order-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderDetailComponent\r\n    extends BaseDetailComponent<OrderDetail.Fragment>\r\n    implements OnInit, OnDestroy\r\n{\r\n    detailForm = new FormGroup({});\r\n    history$: Observable<GetOrderHistory.Items[] | undefined>;\r\n    nextStates$: Observable<string[]>;\r\n    fetchHistory = new Subject<void>();\r\n    customFields: CustomFieldConfig[];\r\n    orderLineCustomFields: CustomFieldConfig[];\r\n    private readonly defaultStates = [\r\n        'AddingItems',\r\n        'ArrangingPayment',\r\n        'PaymentAuthorized',\r\n        'PaymentSettled',\r\n        'PartiallyShipped',\r\n        'Shipped',\r\n        'PartiallyDelivered',\r\n        'Delivered',\r\n        'Cancelled',\r\n        'Modifying',\r\n        'ArrangingAdditionalPayment',\r\n    ];\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n        private orderTransitionService: OrderTransitionService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.entity$.pipe(take(1)).subscribe(order => {\r\n            if (order.state === 'Modifying') {\r\n                this.router.navigate(['./', 'modify'], { relativeTo: this.route });\r\n            }\r\n        });\r\n        this.customFields = this.getCustomFieldConfig('Order');\r\n        this.orderLineCustomFields = this.getCustomFieldConfig('OrderLine');\r\n        this.history$ = this.fetchHistory.pipe(\r\n            startWith(null),\r\n            switchMap(() => {\r\n                return this.dataService.order\r\n                    .getOrderHistory(this.id, {\r\n                        sort: {\r\n                            createdAt: SortOrder.DESC,\r\n                        },\r\n                    })\r\n                    .mapStream(data => data.order?.history.items);\r\n            }),\r\n        );\r\n        this.nextStates$ = this.entity$.pipe(\r\n            map(order => {\r\n                const isInCustomState = !this.defaultStates.includes(order.state);\r\n                return isInCustomState\r\n                    ? order.nextStates\r\n                    : order.nextStates.filter(s => !this.defaultStates.includes(s));\r\n            }),\r\n        );\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    openStateDiagram() {\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                switchMap(order =>\r\n                    this.modalService.fromComponent(OrderProcessGraphDialogComponent, {\r\n                        closable: true,\r\n                        locals: {\r\n                            activeState: order.state,\r\n                        },\r\n                    }),\r\n                ),\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    transitionToState(state: string) {\r\n        this.dataService.order.transitionToState(this.id, state).subscribe(({ transitionOrderToState }) => {\r\n            switch (transitionOrderToState?.__typename) {\r\n                case 'Order':\r\n                    this.notificationService.success(_('order.transitioned-to-state-success'), { state });\r\n                    this.fetchHistory.next();\r\n                    break;\r\n                case 'OrderStateTransitionError':\r\n                    this.notificationService.error(transitionOrderToState.transitionError);\r\n            }\r\n        });\r\n    }\r\n\r\n    manuallyTransitionToState(order: OrderDetailFragment) {\r\n        this.orderTransitionService\r\n            .manuallyTransitionToState({\r\n                orderId: order.id,\r\n                nextStates: order.nextStates,\r\n                cancellable: true,\r\n                message: _('order.manually-transition-to-state-message'),\r\n                retry: 0,\r\n            })\r\n            .subscribe();\r\n    }\r\n\r\n    transitionToModifying() {\r\n        this.dataService.order\r\n            .transitionToState(this.id, 'Modifying')\r\n            .subscribe(({ transitionOrderToState }) => {\r\n                switch (transitionOrderToState?.__typename) {\r\n                    case 'Order':\r\n                        this.router.navigate(['./modify'], { relativeTo: this.route });\r\n                        break;\r\n                    case 'OrderStateTransitionError':\r\n                        this.notificationService.error(transitionOrderToState.transitionError);\r\n                }\r\n            });\r\n    }\r\n\r\n    updateCustomFields(customFieldsValue: any) {\r\n        this.dataService.order\r\n            .updateOrderCustomFields({\r\n                id: this.id,\r\n                customFields: customFieldsValue,\r\n            })\r\n            .subscribe(() => {\r\n                this.notificationService.success(_('common.notify-update-success'), { entity: 'Order' });\r\n            });\r\n    }\r\n\r\n    getOrderAddressLines(orderAddress?: { [key: string]: string }): string[] {\r\n        if (!orderAddress) {\r\n            return [];\r\n        }\r\n        return Object.values(orderAddress)\r\n            .filter(val => val !== 'OrderAddress')\r\n            .filter(line => !!line);\r\n    }\r\n\r\n    settlePayment(payment: OrderDetail.Payments) {\r\n        this.dataService.order.settlePayment(payment.id).subscribe(({ settlePayment }) => {\r\n            switch (settlePayment.__typename) {\r\n                case 'Payment':\r\n                    if (settlePayment.state === 'Settled') {\r\n                        this.notificationService.success(_('order.settle-payment-success'));\r\n                    } else {\r\n                        this.notificationService.error(_('order.settle-payment-error'));\r\n                    }\r\n                    this.dataService.order.getOrder(this.id).single$.subscribe();\r\n                    this.fetchHistory.next();\r\n                    break;\r\n                case 'OrderStateTransitionError':\r\n                case 'PaymentStateTransitionError':\r\n                case 'SettlePaymentError':\r\n                    this.notificationService.error(settlePayment.message);\r\n            }\r\n        });\r\n    }\r\n\r\n    transitionPaymentState({ payment, state }: { payment: OrderDetail.Payments; state: string }) {\r\n        this.dataService.order\r\n            .transitionPaymentToState(payment.id, state)\r\n            .subscribe(({ transitionPaymentToState }) => {\r\n                switch (transitionPaymentToState.__typename) {\r\n                    case 'Payment':\r\n                        this.notificationService.success(_('order.transitioned-payment-to-state-success'), {\r\n                            state,\r\n                        });\r\n                        this.dataService.order.getOrder(this.id).single$.subscribe();\r\n                        this.fetchHistory.next();\r\n                        break;\r\n                    case 'PaymentStateTransitionError':\r\n                        this.notificationService.error(transitionPaymentToState.message);\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n\r\n    canAddFulfillment(order: OrderDetail.Fragment): boolean {\r\n        const allItemsFulfilled = order.lines\r\n            .reduce((items, line) => [...items, ...line.items], [] as OrderLineFragment['items'])\r\n            .every(item => !!item.fulfillment || item.cancelled);\r\n        return (\r\n            !allItemsFulfilled &&\r\n            !this.hasUnsettledModifications(order) &&\r\n            this.outstandingPaymentAmount(order) === 0 &&\r\n            (order.nextStates.includes('Shipped') ||\r\n                order.nextStates.includes('PartiallyShipped') ||\r\n                order.nextStates.includes('Delivered'))\r\n        );\r\n    }\r\n\r\n    hasUnsettledModifications(order: OrderDetailFragment): boolean {\r\n        return 0 < order.modifications.filter(m => !m.isSettled).length;\r\n    }\r\n\r\n    getOutstandingModificationAmount(order: OrderDetailFragment): number {\r\n        return summate(\r\n            order.modifications.filter(m => !m.isSettled),\r\n            'priceChange',\r\n        );\r\n    }\r\n\r\n    outstandingPaymentAmount(order: OrderDetailFragment): number {\r\n        const paymentIsValid = (p: OrderDetail.Payments): boolean =>\r\n            p.state !== 'Cancelled' && p.state !== 'Declined' && p.state !== 'Error';\r\n\r\n        let amountCovered = 0;\r\n        for (const payment of order.payments?.filter(paymentIsValid) ?? []) {\r\n            const refunds = payment.refunds.filter(r => r.state !== 'Failed') ?? [];\r\n            const refundsTotal = summate(refunds as Array<Required<Refund>>, 'total');\r\n            amountCovered += payment.amount - refundsTotal;\r\n        }\r\n        return order.totalWithTax - amountCovered;\r\n    }\r\n\r\n    addManualPayment(order: OrderDetailFragment) {\r\n        const priorState = order.state;\r\n        this.modalService\r\n            .fromComponent(AddManualPaymentDialogComponent, {\r\n                closable: true,\r\n                locals: {\r\n                    outstandingAmount: this.outstandingPaymentAmount(order),\r\n                    currencyCode: order.currencyCode,\r\n                },\r\n            })\r\n            .pipe(\r\n                switchMap(result => {\r\n                    if (result) {\r\n                        return this.dataService.order.addManualPaymentToOrder({\r\n                            orderId: this.id,\r\n                            transactionId: result.transactionId,\r\n                            method: result.method,\r\n                            metadata: result.metadata || {},\r\n                        });\r\n                    } else {\r\n                        return EMPTY;\r\n                    }\r\n                }),\r\n                switchMap(({ addManualPaymentToOrder }) => {\r\n                    switch (addManualPaymentToOrder.__typename) {\r\n                        case 'Order':\r\n                            this.notificationService.success(_('order.add-payment-to-order-success'));\r\n                            if (priorState === 'ArrangingAdditionalPayment') {\r\n                                return this.orderTransitionService.transitionToPreModifyingState(\r\n                                    order.id,\r\n                                    order.nextStates,\r\n                                );\r\n                            } else {\r\n                                return this.dataService.order\r\n                                    .transitionToState(this.id, 'PaymentSettled')\r\n                                    .pipe(mapTo('PaymentSettled'));\r\n                            }\r\n                        case 'ManualPaymentStateError':\r\n                            this.notificationService.error(addManualPaymentToOrder.message);\r\n                            return EMPTY;\r\n                        default:\r\n                            return EMPTY;\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.refetchOrder({ result });\r\n                }\r\n            });\r\n    }\r\n\r\n    fulfillOrder() {\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                switchMap(order => {\r\n                    return this.modalService.fromComponent(FulfillOrderDialogComponent, {\r\n                        size: 'xl',\r\n                        locals: {\r\n                            order,\r\n                        },\r\n                    });\r\n                }),\r\n                switchMap(input => {\r\n                    if (input) {\r\n                        return this.dataService.order.createFulfillment(input);\r\n                    } else {\r\n                        return of(undefined);\r\n                    }\r\n                }),\r\n                switchMap(result => this.refetchOrder(result).pipe(mapTo(result))),\r\n            )\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    const { addFulfillmentToOrder } = result;\r\n                    switch (addFulfillmentToOrder.__typename) {\r\n                        case 'Fulfillment':\r\n                            this.notificationService.success(_('order.create-fulfillment-success'));\r\n                            break;\r\n                        case 'EmptyOrderLineSelectionError':\r\n                        case 'InsufficientStockOnHandError':\r\n                        case 'ItemsAlreadyFulfilledError':\r\n                        case 'InvalidFulfillmentHandlerError':\r\n                            this.notificationService.error(addFulfillmentToOrder.message);\r\n                            break;\r\n                        case 'FulfillmentStateTransitionError':\r\n                            this.notificationService.error(addFulfillmentToOrder.transitionError);\r\n                            break;\r\n                        case 'CreateFulfillmentError':\r\n                            this.notificationService.error(addFulfillmentToOrder.fulfillmentHandlerError);\r\n                            break;\r\n                        case undefined:\r\n                            this.notificationService.error(JSON.stringify(addFulfillmentToOrder));\r\n                            break;\r\n                        default:\r\n                            assertNever(addFulfillmentToOrder);\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    transitionFulfillment(id: string, state: string) {\r\n        this.dataService.order\r\n            .transitionFulfillmentToState(id, state)\r\n            .pipe(switchMap(result => this.refetchOrder(result)))\r\n            .subscribe(() => {\r\n                this.notificationService.success(_('order.successfully-updated-fulfillment'));\r\n            });\r\n    }\r\n\r\n    cancelOrRefund(order: OrderDetail.Fragment) {\r\n        const isRefundable = this.orderHasSettledPayments(order);\r\n        if (order.state === 'PaymentAuthorized' || order.active === true || !isRefundable) {\r\n            this.cancelOrder(order);\r\n        } else {\r\n            this.refundOrder(order);\r\n        }\r\n    }\r\n\r\n    settleRefund(refund: OrderDetail.Refunds) {\r\n        this.modalService\r\n            .fromComponent(SettleRefundDialogComponent, {\r\n                size: 'md',\r\n                locals: {\r\n                    refund,\r\n                },\r\n            })\r\n            .pipe(\r\n                switchMap(transactionId => {\r\n                    if (transactionId) {\r\n                        return this.dataService.order.settleRefund(\r\n                            {\r\n                                transactionId,\r\n                                id: refund.id,\r\n                            },\r\n                            this.id,\r\n                        );\r\n                    } else {\r\n                        return of(undefined);\r\n                    }\r\n                }),\r\n                // switchMap(result => this.refetchOrder(result)),\r\n            )\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.notificationService.success(_('order.settle-refund-success'));\r\n                }\r\n            });\r\n    }\r\n\r\n    addNote(event: { note: string; isPublic: boolean }) {\r\n        const { note, isPublic } = event;\r\n        this.dataService.order\r\n            .addNoteToOrder({\r\n                id: this.id,\r\n                note,\r\n                isPublic,\r\n            })\r\n            .pipe(switchMap(result => this.refetchOrder(result)))\r\n            .subscribe(result => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'Note',\r\n                });\r\n            });\r\n    }\r\n\r\n    updateNote(entry: HistoryEntry) {\r\n        this.modalService\r\n            .fromComponent(EditNoteDialogComponent, {\r\n                closable: true,\r\n                locals: {\r\n                    displayPrivacyControls: true,\r\n                    note: entry.data.note,\r\n                    noteIsPrivate: !entry.isPublic,\r\n                },\r\n            })\r\n            .pipe(\r\n                switchMap(result => {\r\n                    if (result) {\r\n                        return this.dataService.order.updateOrderNote({\r\n                            noteId: entry.id,\r\n                            isPublic: !result.isPrivate,\r\n                            note: result.note,\r\n                        });\r\n                    } else {\r\n                        return EMPTY;\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe(result => {\r\n                this.fetchHistory.next();\r\n                this.notificationService.success(_('common.notify-update-success'), {\r\n                    entity: 'Note',\r\n                });\r\n            });\r\n    }\r\n\r\n    deleteNote(entry: HistoryEntry) {\r\n        return this.modalService\r\n            .dialog({\r\n                title: _('common.confirm-delete-note'),\r\n                body: entry.data.note,\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(switchMap(res => (res ? this.dataService.order.deleteOrderNote(entry.id) : EMPTY)))\r\n            .subscribe(() => {\r\n                this.fetchHistory.next();\r\n                this.notificationService.success(_('common.notify-delete-success'), {\r\n                    entity: 'Note',\r\n                });\r\n            });\r\n    }\r\n\r\n    orderHasSettledPayments(order: OrderDetail.Fragment): boolean {\r\n        return !!order.payments?.find(p => p.state === 'Settled');\r\n    }\r\n\r\n    private cancelOrder(order: OrderDetail.Fragment) {\r\n        this.modalService\r\n            .fromComponent(CancelOrderDialogComponent, {\r\n                size: 'xl',\r\n                locals: {\r\n                    order,\r\n                },\r\n            })\r\n            .pipe(\r\n                switchMap(input => {\r\n                    if (input) {\r\n                        return this.dataService.order.cancelOrder(input);\r\n                    } else {\r\n                        return of(undefined);\r\n                    }\r\n                }),\r\n                switchMap(result => this.refetchOrder(result)),\r\n            )\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.notificationService.success(_('order.cancelled-order-success'));\r\n                }\r\n            });\r\n    }\r\n\r\n    private refundOrder(order: OrderDetail.Fragment) {\r\n        this.modalService\r\n            .fromComponent(RefundOrderDialogComponent, {\r\n                size: 'xl',\r\n                locals: {\r\n                    order,\r\n                },\r\n            })\r\n            .pipe(\r\n                switchMap(input => {\r\n                    if (!input) {\r\n                        return of(undefined);\r\n                    }\r\n\r\n                    const operations: Array<Observable<RefundOrder.RefundOrder | CancelOrder.CancelOrder>> =\r\n                        [];\r\n                    if (input.refund.lines.length) {\r\n                        operations.push(\r\n                            this.dataService.order\r\n                                .refundOrder(input.refund)\r\n                                .pipe(map(res => res.refundOrder)),\r\n                        );\r\n                    }\r\n                    if (input.cancel.lines?.length) {\r\n                        operations.push(\r\n                            this.dataService.order\r\n                                .cancelOrder(input.cancel)\r\n                                .pipe(map(res => res.cancelOrder)),\r\n                        );\r\n                    }\r\n                    return merge(...operations);\r\n                }),\r\n            )\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    switch (result.__typename) {\r\n                        case 'Order':\r\n                            this.refetchOrder(result).subscribe();\r\n                            this.notificationService.success(_('order.cancelled-order-success'));\r\n                            break;\r\n                        case 'Refund':\r\n                            this.refetchOrder(result).subscribe();\r\n                            if (result.state === 'Failed') {\r\n                                this.notificationService.error(_('order.refund-order-failed'));\r\n                            } else {\r\n                                this.notificationService.success(_('order.refund-order-success'));\r\n                            }\r\n                            break;\r\n                        case 'QuantityTooGreatError':\r\n                        case 'MultipleOrderError':\r\n                        case 'OrderStateTransitionError':\r\n                        case 'CancelActiveOrderError':\r\n                        case 'EmptyOrderLineSelectionError':\r\n                        case 'AlreadyRefundedError':\r\n                        case 'NothingToRefundError':\r\n                        case 'PaymentOrderMismatchError':\r\n                        case 'RefundOrderStateError':\r\n                        case 'RefundStateTransitionError':\r\n                            this.notificationService.error(result.message);\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    private refetchOrder(result: object | undefined): Observable<GetOrderQuery | undefined> {\r\n        this.fetchHistory.next();\r\n        if (result) {\r\n            return this.dataService.order.getOrder(this.id).single$;\r\n        } else {\r\n            return of(undefined);\r\n        }\r\n    }\r\n\r\n    protected setFormValues(entity: Order.Fragment): void {\r\n        // empty\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { CustomFieldConfig, Dialog, ModifyOrderInput, OrderDetail } from '@vendure/admin-ui/core';\r\n\r\nexport enum OrderEditResultType {\r\n    Refund,\r\n    Payment,\r\n    PriceUnchanged,\r\n    Cancel,\r\n}\r\n\r\ninterface OrderEditsRefundResult {\r\n    result: OrderEditResultType.Refund;\r\n    refundPaymentId: string;\r\n    refundNote?: string;\r\n}\r\ninterface OrderEditsPaymentResult {\r\n    result: OrderEditResultType.Payment;\r\n}\r\ninterface OrderEditsPriceUnchangedResult {\r\n    result: OrderEditResultType.PriceUnchanged;\r\n}\r\ninterface OrderEditsCancelResult {\r\n    result: OrderEditResultType.Cancel;\r\n}\r\ntype OrderEditResult =\r\n    | OrderEditsRefundResult\r\n    | OrderEditsPaymentResult\r\n    | OrderEditsPriceUnchangedResult\r\n    | OrderEditsCancelResult;\r\n\r\n@Component({\r\n    selector: 'vdr-order-edits-preview-dialog',\r\n    templateUrl: './order-edits-preview-dialog.component.html',\r\n    styleUrls: ['./order-edits-preview-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderEditsPreviewDialogComponent implements OnInit, Dialog<OrderEditResult> {\r\n    // Passed in via the modalService\r\n    order: OrderDetail.Fragment;\r\n    originalTotalWithTax: number;\r\n    orderLineCustomFields: CustomFieldConfig[];\r\n    modifyOrderInput: ModifyOrderInput;\r\n\r\n    selectedPayment?: OrderDetail.Payments;\r\n    refundNote: string;\r\n    resolveWith: (result?: OrderEditResult) => void;\r\n\r\n    get priceDifference(): number {\r\n        return this.order.totalWithTax - this.originalTotalWithTax;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.refundNote = this.modifyOrderInput.note || '';\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith({\r\n            result: OrderEditResultType.Cancel,\r\n        });\r\n    }\r\n\r\n    submit() {\r\n        if (0 < this.priceDifference) {\r\n            this.resolveWith({\r\n                result: OrderEditResultType.Payment,\r\n            });\r\n        } else if (this.priceDifference < 0) {\r\n            this.resolveWith({\r\n                result: OrderEditResultType.Refund,\r\n                // tslint:disable-next-line:no-non-null-assertion\r\n                refundPaymentId: this.selectedPayment!.id,\r\n                refundNote: this.refundNote,\r\n            });\r\n        } else {\r\n            this.resolveWith({\r\n                result: OrderEditResultType.PriceUnchanged,\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n    AddItemInput,\r\n    AdjustOrderLineInput,\r\n    BaseDetailComponent,\r\n    CustomFieldConfig,\r\n    DataService,\r\n    ErrorResult,\r\n    GetAvailableCountries,\r\n    HistoryEntryType,\r\n    LanguageCode,\r\n    ModalService,\r\n    ModifyOrderInput,\r\n    NotificationService,\r\n    OrderAddressFragment,\r\n    OrderDetail,\r\n    ProductSelectorSearch,\r\n    ServerConfigService,\r\n    SortOrder,\r\n    SurchargeInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { assertNever, notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { concat, EMPTY, Observable, of, Subject } from 'rxjs';\r\nimport {\r\n    distinctUntilChanged,\r\n    map,\r\n    mapTo,\r\n    shareReplay,\r\n    startWith,\r\n    switchMap,\r\n    takeUntil,\r\n} from 'rxjs/operators';\r\n\r\nimport { OrderTransitionService } from '../../providers/order-transition.service';\r\nimport {\r\n    OrderEditResultType,\r\n    OrderEditsPreviewDialogComponent,\r\n} from '../order-edits-preview-dialog/order-edits-preview-dialog.component';\r\n\r\ninterface AddedLine {\r\n    productVariantId: string;\r\n    productAsset?: ProductSelectorSearch.ProductAsset | null;\r\n    productVariantName: string;\r\n    sku: string;\r\n    priceWithTax: number;\r\n    price: number;\r\n    quantity: number;\r\n}\r\n\r\ntype ModifyOrderData = Omit<ModifyOrderInput, 'addItems' | 'adjustOrderLines'> & {\r\n    addItems: Array<AddItemInput & { customFields?: any }>;\r\n    adjustOrderLines: Array<AdjustOrderLineInput & { customFields?: any }>;\r\n};\r\n\r\n@Component({\r\n    selector: 'vdr-order-editor',\r\n    templateUrl: './order-editor.component.html',\r\n    styleUrls: ['./order-editor.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderEditorComponent\r\n    extends BaseDetailComponent<OrderDetail.Fragment>\r\n    implements OnInit, OnDestroy\r\n{\r\n    availableCountries$: Observable<GetAvailableCountries.Items[]>;\r\n    availableCouponCodes$: Observable<Array<{ code: string; promotionName: string }>>;\r\n    couponCodeInput$ = new Subject<string>();\r\n    addressCustomFields: CustomFieldConfig[];\r\n    detailForm = new FormGroup({});\r\n    couponCodesControl = new FormControl();\r\n    orderLineCustomFieldsFormArray: FormArray;\r\n    addItemCustomFieldsFormArray: FormArray;\r\n    addItemCustomFieldsForm: FormGroup;\r\n    addItemSelectedVariant: ProductSelectorSearch.Items | undefined;\r\n    orderLineCustomFields: CustomFieldConfig[];\r\n    modifyOrderInput: ModifyOrderData = {\r\n        dryRun: true,\r\n        orderId: '',\r\n        addItems: [],\r\n        adjustOrderLines: [],\r\n        surcharges: [],\r\n        note: '',\r\n        updateShippingAddress: {},\r\n        updateBillingAddress: {},\r\n    };\r\n    surchargeForm: FormGroup;\r\n    shippingAddressForm: FormGroup;\r\n    billingAddressForm: FormGroup;\r\n    note = '';\r\n    recalculateShipping = true;\r\n    previousState: string;\r\n    private addedVariants = new Map<string, ProductSelectorSearch.Items>();\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n        private orderTransitionService: OrderTransitionService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n    }\r\n\r\n    get addedLines(): AddedLine[] {\r\n        const getSinglePriceValue = (price: ProductSelectorSearch.Price) =>\r\n            price.__typename === 'SinglePrice' ? price.value : 0;\r\n        return (this.modifyOrderInput.addItems || [])\r\n            .map(row => {\r\n                const variantInfo = this.addedVariants.get(row.productVariantId);\r\n                if (variantInfo) {\r\n                    return {\r\n                        ...variantInfo,\r\n                        price: getSinglePriceValue(variantInfo.price),\r\n                        priceWithTax: getSinglePriceValue(variantInfo.priceWithTax),\r\n                        quantity: row.quantity,\r\n                    };\r\n                }\r\n            })\r\n            .filter(notNullOrUndefined);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.init();\r\n        this.dataService.promotion.getPromotions();\r\n        this.addressCustomFields = this.getCustomFieldConfig('Address');\r\n        this.modifyOrderInput.orderId = this.route.snapshot.paramMap.get('id') as string;\r\n        this.orderLineCustomFields = this.getCustomFieldConfig('OrderLine');\r\n        this.entity$.pipe(takeUntil(this.destroy$)).subscribe(order => {\r\n            if (order.couponCodes.length) {\r\n                this.couponCodesControl.setValue(order.couponCodes);\r\n            }\r\n            this.surchargeForm = new FormGroup({\r\n                description: new FormControl('', Validators.required),\r\n                sku: new FormControl(''),\r\n                price: new FormControl(0, Validators.required),\r\n                priceIncludesTax: new FormControl(true),\r\n                taxRate: new FormControl(0),\r\n                taxDescription: new FormControl(''),\r\n            });\r\n            if (!this.shippingAddressForm) {\r\n                this.shippingAddressForm = new FormGroup({\r\n                    fullName: new FormControl(order.shippingAddress?.fullName),\r\n                    company: new FormControl(order.shippingAddress?.company),\r\n                    streetLine1: new FormControl(order.shippingAddress?.streetLine1),\r\n                    streetLine2: new FormControl(order.shippingAddress?.streetLine2),\r\n                    city: new FormControl(order.shippingAddress?.city),\r\n                    province: new FormControl(order.shippingAddress?.province),\r\n                    postalCode: new FormControl(order.shippingAddress?.postalCode),\r\n                    countryCode: new FormControl(order.shippingAddress?.countryCode),\r\n                    phoneNumber: new FormControl(order.shippingAddress?.phoneNumber),\r\n                });\r\n                this.addAddressCustomFieldsFormGroup(this.shippingAddressForm, order.shippingAddress);\r\n            }\r\n            if (!this.billingAddressForm) {\r\n                this.billingAddressForm = new FormGroup({\r\n                    fullName: new FormControl(order.billingAddress?.fullName),\r\n                    company: new FormControl(order.billingAddress?.company),\r\n                    streetLine1: new FormControl(order.billingAddress?.streetLine1),\r\n                    streetLine2: new FormControl(order.billingAddress?.streetLine2),\r\n                    city: new FormControl(order.billingAddress?.city),\r\n                    province: new FormControl(order.billingAddress?.province),\r\n                    postalCode: new FormControl(order.billingAddress?.postalCode),\r\n                    countryCode: new FormControl(order.billingAddress?.countryCode),\r\n                    phoneNumber: new FormControl(order.billingAddress?.phoneNumber),\r\n                });\r\n                this.addAddressCustomFieldsFormGroup(this.billingAddressForm, order.billingAddress);\r\n            }\r\n            this.orderLineCustomFieldsFormArray = new FormArray([]);\r\n            for (const line of order.lines) {\r\n                const formGroup = new FormGroup({});\r\n                for (const { name } of this.orderLineCustomFields) {\r\n                    formGroup.addControl(name, new FormControl((line as any).customFields[name]));\r\n                }\r\n                formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\r\n                    let modifyRow = this.modifyOrderInput.adjustOrderLines.find(\r\n                        l => l.orderLineId === line.id,\r\n                    );\r\n                    if (!modifyRow) {\r\n                        modifyRow = {\r\n                            orderLineId: line.id,\r\n                            quantity: line.quantity,\r\n                        };\r\n                        this.modifyOrderInput.adjustOrderLines.push(modifyRow);\r\n                    }\r\n                    if (this.orderLineCustomFields.length) {\r\n                        modifyRow.customFields = value;\r\n                    }\r\n                });\r\n                this.orderLineCustomFieldsFormArray.push(formGroup);\r\n            }\r\n        });\r\n        this.availableCouponCodes$ = concat(\r\n            this.couponCodeInput$.pipe(\r\n                distinctUntilChanged(),\r\n                switchMap(\r\n                    term =>\r\n                        this.dataService.promotion.getPromotions(10, 0, {\r\n                            couponCode: { contains: term },\r\n                        }).single$,\r\n                ),\r\n                map(({ promotions }) =>\r\n                    // tslint:disable-next-line:no-non-null-assertion\r\n                    promotions.items.map(p => ({ code: p.couponCode!, promotionName: p.name })),\r\n                ),\r\n                startWith([]),\r\n            ),\r\n        );\r\n        this.addItemCustomFieldsFormArray = new FormArray([]);\r\n        this.addItemCustomFieldsForm = new FormGroup({});\r\n        for (const customField of this.orderLineCustomFields) {\r\n            this.addItemCustomFieldsForm.addControl(customField.name, new FormControl());\r\n        }\r\n        this.availableCountries$ = this.dataService.settings\r\n            .getAvailableCountries()\r\n            .mapSingle(result => result.countries.items)\r\n            .pipe(shareReplay(1));\r\n        this.dataService.order\r\n            .getOrderHistory(this.id, {\r\n                take: 1,\r\n                sort: {\r\n                    createdAt: SortOrder.DESC,\r\n                },\r\n                filter: { type: { eq: HistoryEntryType.ORDER_STATE_TRANSITION } },\r\n            })\r\n            .single$.subscribe(({ order }) => {\r\n                this.previousState = order?.history.items[0].data.from;\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    transitionToPriorState(order: OrderDetail.Fragment) {\r\n        this.orderTransitionService\r\n            .transitionToPreModifyingState(order.id, order.nextStates)\r\n            .subscribe(result => {\r\n                this.router.navigate(['..'], { relativeTo: this.route });\r\n            });\r\n    }\r\n\r\n    canPreviewChanges(): boolean {\r\n        const { addItems, adjustOrderLines, surcharges } = this.modifyOrderInput;\r\n        return (\r\n            !!addItems?.length ||\r\n            !!surcharges?.length ||\r\n            !!adjustOrderLines?.length ||\r\n            (this.shippingAddressForm.dirty && this.shippingAddressForm.valid) ||\r\n            (this.billingAddressForm.dirty && this.billingAddressForm.valid) ||\r\n            this.couponCodesControl.dirty\r\n        );\r\n    }\r\n\r\n    isLineModified(line: OrderDetail.Lines): boolean {\r\n        return !!this.modifyOrderInput.adjustOrderLines?.find(\r\n            l => l.orderLineId === line.id && l.quantity !== line.quantity,\r\n        );\r\n    }\r\n\r\n    updateLineQuantity(line: OrderDetail.Lines, quantity: string) {\r\n        const { adjustOrderLines } = this.modifyOrderInput;\r\n        let row = adjustOrderLines?.find(l => l.orderLineId === line.id);\r\n        if (row && +quantity === line.quantity) {\r\n            // Remove the modification if the quantity is the same as\r\n            // the original order\r\n            adjustOrderLines?.splice(adjustOrderLines?.indexOf(row), 1);\r\n        }\r\n        if (!row) {\r\n            row = { orderLineId: line.id, quantity: +quantity };\r\n            adjustOrderLines?.push(row);\r\n        }\r\n        row.quantity = +quantity;\r\n    }\r\n\r\n    updateAddedItemQuantity(item: AddedLine, quantity: string) {\r\n        const row = this.modifyOrderInput.addItems?.find(l => l.productVariantId === item.productVariantId);\r\n        if (row) {\r\n            row.quantity = +quantity;\r\n        }\r\n    }\r\n\r\n    trackByProductVariantId(index: number, item: AddedLine) {\r\n        return item.productVariantId;\r\n    }\r\n\r\n    getSelectedItemPrice(result: ProductSelectorSearch.Items | undefined): number {\r\n        switch (result?.priceWithTax.__typename) {\r\n            case 'SinglePrice':\r\n                return result.priceWithTax.value;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    addItemToOrder(result: ProductSelectorSearch.Items | undefined) {\r\n        if (!result) {\r\n            return;\r\n        }\r\n        const customFields = this.orderLineCustomFields.length\r\n            ? this.addItemCustomFieldsForm.value\r\n            : undefined;\r\n        let row = this.modifyOrderInput.addItems?.find(l =>\r\n            this.isMatchingAddItemRow(l, result, customFields),\r\n        );\r\n        if (!row) {\r\n            row = { productVariantId: result.productVariantId, quantity: 1 };\r\n            if (customFields) {\r\n                row.customFields = customFields;\r\n            }\r\n            this.modifyOrderInput.addItems?.push(row);\r\n        } else {\r\n            row.quantity++;\r\n        }\r\n        if (customFields) {\r\n            const formGroup = new FormGroup({});\r\n            for (const [key, value] of Object.entries(customFields)) {\r\n                formGroup.addControl(key, new FormControl(value));\r\n            }\r\n            this.addItemCustomFieldsFormArray.push(formGroup);\r\n            formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\r\n                if (row) {\r\n                    row.customFields = value;\r\n                }\r\n            });\r\n        }\r\n        this.addItemCustomFieldsForm.reset({});\r\n        this.addItemSelectedVariant = undefined;\r\n        this.addedVariants.set(result.productVariantId, result);\r\n    }\r\n\r\n    private isMatchingAddItemRow(\r\n        row: ModifyOrderData['addItems'][number],\r\n        result: ProductSelectorSearch.Items,\r\n        customFields: any,\r\n    ): boolean {\r\n        return (\r\n            row.productVariantId === result.productVariantId &&\r\n            JSON.stringify(row.customFields) === JSON.stringify(customFields)\r\n        );\r\n    }\r\n\r\n    removeAddedItem(index: number) {\r\n        this.modifyOrderInput.addItems.splice(index, 1);\r\n        if (-1 < index) {\r\n            this.addItemCustomFieldsFormArray.removeAt(index);\r\n        }\r\n    }\r\n\r\n    getSurchargePrices(surcharge: SurchargeInput) {\r\n        const priceWithTax = surcharge.priceIncludesTax\r\n            ? surcharge.price\r\n            : Math.round(surcharge.price * ((100 + (surcharge.taxRate || 0)) / 100));\r\n        const price = surcharge.priceIncludesTax\r\n            ? Math.round(surcharge.price / ((100 + (surcharge.taxRate || 0)) / 100))\r\n            : surcharge.price;\r\n        return {\r\n            price,\r\n            priceWithTax,\r\n        };\r\n    }\r\n\r\n    addSurcharge(value: any) {\r\n        this.modifyOrderInput.surcharges?.push(value);\r\n        this.surchargeForm.reset({\r\n            price: 0,\r\n            priceIncludesTax: true,\r\n            taxRate: 0,\r\n        });\r\n    }\r\n\r\n    removeSurcharge(index: number) {\r\n        this.modifyOrderInput.surcharges?.splice(index, 1);\r\n    }\r\n\r\n    previewAndModify(order: OrderDetail.Fragment) {\r\n        const input: ModifyOrderInput = {\r\n            ...this.modifyOrderInput,\r\n            ...(this.billingAddressForm.dirty ? { updateBillingAddress: this.billingAddressForm.value } : {}),\r\n            ...(this.shippingAddressForm.dirty\r\n                ? { updateShippingAddress: this.shippingAddressForm.value }\r\n                : {}),\r\n            dryRun: true,\r\n            couponCodes: this.couponCodesControl.dirty ? this.couponCodesControl.value : undefined,\r\n            note: this.note ?? '',\r\n            options: {\r\n                recalculateShipping: this.recalculateShipping,\r\n            },\r\n        };\r\n        const originalTotalWithTax = order.totalWithTax;\r\n        this.dataService.order\r\n            .modifyOrder(input)\r\n            .pipe(\r\n                switchMap(({ modifyOrder }) => {\r\n                    switch (modifyOrder.__typename) {\r\n                        case 'Order':\r\n                            return this.modalService.fromComponent(OrderEditsPreviewDialogComponent, {\r\n                                size: 'xl',\r\n                                closable: false,\r\n                                locals: {\r\n                                    originalTotalWithTax,\r\n                                    order: modifyOrder,\r\n                                    orderLineCustomFields: this.orderLineCustomFields,\r\n                                    modifyOrderInput: input,\r\n                                },\r\n                            });\r\n                        case 'InsufficientStockError':\r\n                        case 'NegativeQuantityError':\r\n                        case 'NoChangesSpecifiedError':\r\n                        case 'OrderLimitError':\r\n                        case 'OrderModificationStateError':\r\n                        case 'PaymentMethodMissingError':\r\n                        case 'RefundPaymentIdMissingError':\r\n                        case 'CouponCodeLimitError':\r\n                        case 'CouponCodeExpiredError':\r\n                        case 'CouponCodeInvalidError': {\r\n                            this.notificationService.error(modifyOrder.message);\r\n                            return of(false as const);\r\n                        }\r\n                        case null:\r\n                        case undefined:\r\n                            return of(false as const);\r\n                        default:\r\n                            assertNever(modifyOrder);\r\n                    }\r\n                }),\r\n                switchMap(result => {\r\n                    if (!result || result.result === OrderEditResultType.Cancel) {\r\n                        // re-fetch so that the preview values get overwritten in the cache.\r\n                        return this.dataService.order.getOrder(this.id).mapSingle(() => false);\r\n                    } else {\r\n                        // Do the modification\r\n                        const wetRunInput = {\r\n                            ...input,\r\n                            dryRun: false,\r\n                        };\r\n                        if (result.result === OrderEditResultType.Refund) {\r\n                            wetRunInput.refund = {\r\n                                paymentId: result.refundPaymentId,\r\n                                reason: result.refundNote,\r\n                            };\r\n                        }\r\n                        return this.dataService.order.modifyOrder(wetRunInput).pipe(\r\n                            switchMap(({ modifyOrder }) => {\r\n                                if (modifyOrder.__typename === 'Order') {\r\n                                    const priceDelta = modifyOrder.totalWithTax - originalTotalWithTax;\r\n                                    const nextState =\r\n                                        0 < priceDelta ? 'ArrangingAdditionalPayment' : this.previousState;\r\n\r\n                                    return this.dataService.order\r\n                                        .transitionToState(order.id, nextState)\r\n                                        .pipe(mapTo(true));\r\n                                } else {\r\n                                    this.notificationService.error((modifyOrder as ErrorResult).message);\r\n                                    return EMPTY;\r\n                                }\r\n                            }),\r\n                        );\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.router.navigate(['../'], { relativeTo: this.route });\r\n                }\r\n            });\r\n    }\r\n\r\n    private addAddressCustomFieldsFormGroup(\r\n        parentFormGroup: FormGroup,\r\n        address?: OrderAddressFragment | null,\r\n    ) {\r\n        if (address && this.addressCustomFields.length) {\r\n            const addressCustomFieldsFormGroup = new FormGroup({});\r\n            for (const customFieldDef of this.addressCustomFields) {\r\n                const name = customFieldDef.name;\r\n                const value = (address as any).customFields?.[name];\r\n                addressCustomFieldsFormGroup.addControl(name, new FormControl(value));\r\n            }\r\n            parentFormGroup.addControl('customFields', addressCustomFieldsFormGroup);\r\n        }\r\n    }\r\n\r\n    protected setFormValues(entity: OrderDetail.Fragment, languageCode: LanguageCode): void {\r\n        /* not used */\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport {\r\n    GetOrderHistory,\r\n    HistoryEntry,\r\n    HistoryEntryType,\r\n    OrderDetail,\r\n    OrderDetailFragment,\r\n    TimelineDisplayType,\r\n} from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-order-history',\r\n    templateUrl: './order-history.component.html',\r\n    styleUrls: ['./order-history.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderHistoryComponent {\r\n    @Input() order: OrderDetailFragment;\r\n    @Input() history: GetOrderHistory.Items[];\r\n    @Output() addNote = new EventEmitter<{ note: string; isPublic: boolean }>();\r\n    @Output() updateNote = new EventEmitter<HistoryEntry>();\r\n    @Output() deleteNote = new EventEmitter<HistoryEntry>();\r\n    note = '';\r\n    noteIsPrivate = true;\r\n    expanded = false;\r\n    readonly type = HistoryEntryType;\r\n\r\n    getDisplayType(entry: GetOrderHistory.Items): TimelineDisplayType {\r\n        if (entry.type === HistoryEntryType.ORDER_STATE_TRANSITION) {\r\n            if (entry.data.to === 'Delivered') {\r\n                return 'success';\r\n            }\r\n            if (entry.data.to === 'Cancelled') {\r\n                return 'error';\r\n            }\r\n        }\r\n        if (entry.type === HistoryEntryType.ORDER_FULFILLMENT_TRANSITION) {\r\n            if (entry.data.to === 'Delivered') {\r\n                return 'success';\r\n            }\r\n        }\r\n        if (entry.type === HistoryEntryType.ORDER_PAYMENT_TRANSITION) {\r\n            if (entry.data.to === 'Declined' || entry.data.to === 'Cancelled') {\r\n                return 'error';\r\n            }\r\n        }\r\n        if (entry.type === HistoryEntryType.ORDER_CANCELLATION) {\r\n            return 'error';\r\n        }\r\n        if (entry.type === HistoryEntryType.ORDER_REFUND_TRANSITION) {\r\n            return 'warning';\r\n        }\r\n        return 'default';\r\n    }\r\n\r\n    getTimelineIcon(entry: GetOrderHistory.Items) {\r\n        if (entry.type === HistoryEntryType.ORDER_STATE_TRANSITION) {\r\n            if (entry.data.to === 'Delivered') {\r\n                return ['success-standard', 'is-solid'];\r\n            }\r\n            if (entry.data.to === 'Cancelled') {\r\n                return 'ban';\r\n            }\r\n        }\r\n        if (entry.type === HistoryEntryType.ORDER_PAYMENT_TRANSITION) {\r\n            if (entry.data.to === 'Settled') {\r\n                return 'credit-card';\r\n            }\r\n        }\r\n        if (entry.type === HistoryEntryType.ORDER_NOTE) {\r\n            return 'note';\r\n        }\r\n        if (entry.type === HistoryEntryType.ORDER_MODIFIED) {\r\n            return 'pencil';\r\n        }\r\n        if (entry.type === HistoryEntryType.ORDER_FULFILLMENT_TRANSITION) {\r\n            if (entry.data.to === 'Shipped') {\r\n                return 'truck';\r\n            }\r\n            if (entry.data.to === 'Delivered') {\r\n                return 'truck';\r\n            }\r\n        }\r\n    }\r\n\r\n    isFeatured(entry: GetOrderHistory.Items): boolean {\r\n        switch (entry.type) {\r\n            case HistoryEntryType.ORDER_STATE_TRANSITION: {\r\n                return (\r\n                    entry.data.to === 'Delivered' ||\r\n                    entry.data.to === 'Cancelled' ||\r\n                    entry.data.to === 'Settled'\r\n                );\r\n            }\r\n            case HistoryEntryType.ORDER_PAYMENT_TRANSITION:\r\n                return entry.data.to === 'Settled' || entry.data.to === 'Cancelled';\r\n            case HistoryEntryType.ORDER_FULFILLMENT_TRANSITION:\r\n                return entry.data.to === 'Delivered' || entry.data.to === 'Shipped';\r\n            case HistoryEntryType.ORDER_NOTE:\r\n            case HistoryEntryType.ORDER_MODIFIED:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    getFulfillment(entry: GetOrderHistory.Items): OrderDetail.Fulfillments | undefined {\r\n        if (\r\n            (entry.type === HistoryEntryType.ORDER_FULFILLMENT ||\r\n                entry.type === HistoryEntryType.ORDER_FULFILLMENT_TRANSITION) &&\r\n            this.order.fulfillments\r\n        ) {\r\n            return this.order.fulfillments.find(f => f.id === entry.data.fulfillmentId);\r\n        }\r\n    }\r\n\r\n    getPayment(entry: GetOrderHistory.Items): OrderDetail.Payments | undefined {\r\n        if (entry.type === HistoryEntryType.ORDER_PAYMENT_TRANSITION && this.order.payments) {\r\n            return this.order.payments.find(p => p.id === entry.data.paymentId);\r\n        }\r\n    }\r\n\r\n    getCancelledItems(entry: GetOrderHistory.Items): Array<{ name: string; quantity: number }> {\r\n        const itemMap = new Map<string, number>();\r\n        const cancelledItemIds: string[] = entry.data.orderItemIds;\r\n        for (const line of this.order.lines) {\r\n            for (const item of line.items) {\r\n                if (cancelledItemIds.includes(item.id)) {\r\n                    const count = itemMap.get(line.productVariant.name);\r\n                    if (count != null) {\r\n                        itemMap.set(line.productVariant.name, count + 1);\r\n                    } else {\r\n                        itemMap.set(line.productVariant.name, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return Array.from(itemMap.entries()).map(([name, quantity]) => ({ name, quantity }));\r\n    }\r\n\r\n    getModification(id: string) {\r\n        return this.order.modifications.find(m => m.id === id);\r\n    }\r\n\r\n    getName(entry: GetOrderHistory.Items): string {\r\n        const { administrator } = entry;\r\n        if (administrator) {\r\n            return `${administrator.firstName} ${administrator.lastName}`;\r\n        } else {\r\n            const customer = this.order.customer;\r\n            if (customer) {\r\n                return `${customer.firstName} ${customer.lastName}`;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    addNoteToOrder() {\r\n        this.addNote.emit({ note: this.note, isPublic: !this.noteIsPrivate });\r\n        this.note = '';\r\n        this.noteIsPrivate = true;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseListComponent,\r\n    DataService,\r\n    GetOrderList,\r\n    LocalStorageService,\r\n    OrderListOptions,\r\n    ServerConfigService,\r\n    SortOrder,\r\n} from '@vendure/admin-ui/core';\r\nimport { Order } from '@vendure/common/lib/generated-types';\r\nimport { merge, Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map, skip, takeUntil, tap } from 'rxjs/operators';\r\n\r\ninterface OrderFilterConfig {\r\n    active?: boolean;\r\n    states?: string[];\r\n}\r\n\r\ninterface FilterPreset {\r\n    name: string;\r\n    label: string;\r\n    config: OrderFilterConfig;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-order-list',\r\n    templateUrl: './order-list.component.html',\r\n    styleUrls: ['./order-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderListComponent\r\n    extends BaseListComponent<GetOrderList.Query, GetOrderList.Items>\r\n    implements OnInit {\r\n    searchOrderCodeControl = new FormControl('');\r\n    searchLastNameControl = new FormControl('');\r\n    customFilterForm: FormGroup;\r\n    orderStates = this.serverConfigService.getOrderProcessStates().map(item => item.name);\r\n    filterPresets: FilterPreset[] = [\r\n        {\r\n            name: 'open',\r\n            label: _('order.filter-preset-open'),\r\n            config: {\r\n                active: false,\r\n                states: this.orderStates.filter(\r\n                    s => s !== 'Delivered' && s !== 'Cancelled' && s !== 'Shipped',\r\n                ),\r\n            },\r\n        },\r\n        {\r\n            name: 'shipped',\r\n            label: _('order.filter-preset-shipped'),\r\n            config: {\r\n                active: false,\r\n                states: ['Shipped'],\r\n            },\r\n        },\r\n        {\r\n            name: 'completed',\r\n            label: _('order.filter-preset-completed'),\r\n            config: {\r\n                active: false,\r\n                states: ['Delivered', 'Cancelled'],\r\n            },\r\n        },\r\n        {\r\n            name: 'active',\r\n            label: _('order.filter-preset-active'),\r\n            config: {\r\n                active: true,\r\n            },\r\n        },\r\n    ];\r\n    activePreset$: Observable<string>;\r\n\r\n    constructor(\r\n        private serverConfigService: ServerConfigService,\r\n        private dataService: DataService,\r\n        private localStorageService: LocalStorageService,\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n    ) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            // tslint:disable-next-line:no-shadowed-variable\r\n            (take, skip) => this.dataService.order.getOrders({ take, skip }).refetchOnChannelChange(),\r\n            data => data.orders,\r\n            // tslint:disable-next-line:no-shadowed-variable\r\n            (skip, take) =>\r\n                this.createQueryOptions(\r\n                    skip,\r\n                    take,\r\n                    this.searchOrderCodeControl.value,\r\n                    this.searchLastNameControl.value,\r\n                    this.route.snapshot.queryParamMap.get('filter') || 'open',\r\n                ),\r\n        );\r\n        const lastFilters = this.localStorageService.get('orderListLastCustomFilters');\r\n        if (lastFilters) {\r\n            this.setQueryParam(lastFilters, { replaceUrl: true });\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.activePreset$ = this.route.queryParamMap.pipe(\r\n            map(qpm => qpm.get('filter') || 'open'),\r\n            distinctUntilChanged(),\r\n        );\r\n        const searchTerms$ = merge(\r\n            this.searchOrderCodeControl.valueChanges,\r\n            this.searchLastNameControl.valueChanges,\r\n        ).pipe(\r\n            filter(value => 2 < value.length || value.length === 0),\r\n            debounceTime(250),\r\n        );\r\n        merge(searchTerms$, this.route.queryParamMap)\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(val => {\r\n                this.refresh();\r\n            });\r\n\r\n        const queryParamMap = this.route.snapshot.queryParamMap;\r\n        this.customFilterForm = new FormGroup({\r\n            states: new FormControl(queryParamMap.getAll('states') ?? []),\r\n            placedAtStart: new FormControl(queryParamMap.get('placedAtStart')),\r\n            placedAtEnd: new FormControl(queryParamMap.get('placedAtEnd')),\r\n        });\r\n    }\r\n\r\n    selectFilterPreset(presetName: string) {\r\n        const lastCustomFilters = this.localStorageService.get('orderListLastCustomFilters') ?? {};\r\n        const emptyCustomFilters = { states: undefined, placedAtStart: undefined, placedAtEnd: undefined };\r\n        const filters = presetName === 'custom' ? lastCustomFilters : emptyCustomFilters;\r\n        this.setQueryParam(\r\n            {\r\n                filter: presetName,\r\n                page: 1,\r\n                ...filters,\r\n            },\r\n            { replaceUrl: true },\r\n        );\r\n    }\r\n\r\n    applyCustomFilters() {\r\n        const formValue = this.customFilterForm.value;\r\n        const customFilters = {\r\n            states: formValue.states,\r\n            placedAtStart: formValue.placedAtStart,\r\n            placedAtEnd: formValue.placedAtEnd,\r\n        };\r\n        this.setQueryParam({\r\n            filter: 'custom',\r\n            ...customFilters,\r\n        });\r\n        this.customFilterForm.markAsPristine();\r\n        this.localStorageService.set('orderListLastCustomFilters', customFilters);\r\n    }\r\n\r\n    private createQueryOptions(\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        skip: number,\r\n        take: number,\r\n        orderCodeSearchTerm: string,\r\n        customerNameSearchTerm: string,\r\n        activeFilterPreset?: string,\r\n    ): { options: OrderListOptions } {\r\n        const filterConfig = this.filterPresets.find(p => p.name === activeFilterPreset);\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        const filter: any = {};\r\n        if (filterConfig) {\r\n            if (filterConfig.config.active != null) {\r\n                filter.active = {\r\n                    eq: filterConfig.config.active,\r\n                };\r\n            }\r\n            if (filterConfig.config.states) {\r\n                filter.state = {\r\n                    in: filterConfig.config.states,\r\n                };\r\n            }\r\n        } else if (activeFilterPreset === 'custom') {\r\n            const queryParams = this.route.snapshot.queryParamMap;\r\n            const states = queryParams.getAll('states') ?? [];\r\n            const placedAtStart = queryParams.get('placedAtStart');\r\n            const placedAtEnd = queryParams.get('placedAtEnd');\r\n            if (states.length) {\r\n                filter.state = {\r\n                    in: states,\r\n                };\r\n            }\r\n            if (placedAtStart && placedAtEnd) {\r\n                filter.orderPlacedAt = {\r\n                    between: {\r\n                        start: placedAtStart,\r\n                        end: placedAtEnd,\r\n                    },\r\n                };\r\n            } else if (placedAtStart) {\r\n                filter.orderPlacedAt = {\r\n                    after: placedAtStart,\r\n                };\r\n            } else if (placedAtEnd) {\r\n                filter.orderPlacedAt = {\r\n                    before: placedAtEnd,\r\n                };\r\n            }\r\n        }\r\n        if (customerNameSearchTerm) {\r\n            filter.customerLastName = {\r\n                contains: customerNameSearchTerm,\r\n            };\r\n        }\r\n        if (orderCodeSearchTerm) {\r\n            filter.code = {\r\n                contains: orderCodeSearchTerm,\r\n            };\r\n        }\r\n        return {\r\n            options: {\r\n                skip,\r\n                take,\r\n                filter: {\r\n                    ...(filter ?? {}),\r\n                },\r\n                sort: {\r\n                    updatedAt: SortOrder.DESC,\r\n                },\r\n            },\r\n        };\r\n    }\r\n\r\n    getShippingNames(order: Order) {\r\n        if (order.shippingLines.length) {\r\n            return order.shippingLines.map(shippingLine => shippingLine.shippingMethod.name).join(', ');\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { CurrencyCode } from '@vendure/admin-ui/core';\r\nimport { OrderDetail } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-order-payment-card',\r\n    templateUrl: './order-payment-card.component.html',\r\n    styleUrls: ['./order-payment-card.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderPaymentCardComponent {\r\n    @Input() payment: OrderDetail.Payments;\r\n    @Input() currencyCode: CurrencyCode;\r\n    @Output() settlePayment = new EventEmitter<OrderDetail.Payments>();\r\n    @Output() transitionPaymentState = new EventEmitter<{ payment: OrderDetail.Payments; state: string }>();\r\n    @Output() settleRefund = new EventEmitter<OrderDetail.Refunds>();\r\n\r\n    refundHasMetadata(refund?: OrderDetail.Refunds): boolean {\r\n        return !!refund && Object.keys(refund.metadata).length > 0;\r\n    }\r\n\r\n    nextOtherStates(): string[] {\r\n        if (!this.payment) {\r\n            return [];\r\n        }\r\n        return this.payment.nextStates.filter(s => s !== 'Settled');\r\n    }\r\n}\r\n","export const NODE_HEIGHT = 72;\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { OrderProcessNodeComponent } from './order-process-node.component';\r\n\r\n@Component({\r\n    selector: 'vdr-order-process-edge',\r\n    templateUrl: './order-process-edge.component.html',\r\n    styleUrls: ['./order-process-edge.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderProcessEdgeComponent implements OnInit {\r\n    @Input() from: OrderProcessNodeComponent;\r\n    @Input() to: OrderProcessNodeComponent;\r\n    @Input() index: number;\r\n    active$: Observable<boolean>;\r\n\r\n    ngOnInit() {\r\n        this.active$ = this.from.active$\r\n            .asObservable()\r\n            .pipe(tap((active) => this.to.activeTarget$.next(active)));\r\n    }\r\n\r\n    getStyle() {\r\n        const direction = this.from.index < this.to.index ? 'down' : 'up';\r\n        const startPos = this.from.getPos(direction === 'down' ? 'bottom' : 'top');\r\n        const endPos = this.to.getPos(direction === 'down' ? 'top' : 'bottom');\r\n        const dX = Math.abs(startPos.x - endPos.x);\r\n        const dY = Math.abs(startPos.y - endPos.y);\r\n        const length = Math.sqrt(dX ** 2 + dY ** 2);\r\n        return {\r\n            'top.px': startPos.y,\r\n            'left.px': startPos.x + (direction === 'down' ? 10 : 40) + this.index * 12,\r\n            'height.px': length,\r\n            'width.px': 1,\r\n            ...(direction === 'up'\r\n                ? {\r\n                      transform: 'rotateZ(180deg)',\r\n                      'transform-origin': 'top',\r\n                  }\r\n                : {}),\r\n        };\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    Input,\r\n    OnChanges,\r\n    SimpleChanges,\r\n} from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { NODE_HEIGHT } from './constants';\r\nimport { StateNode } from './types';\r\n\r\n@Component({\r\n    selector: 'vdr-order-process-node',\r\n    templateUrl: './order-process-node.component.html',\r\n    styleUrls: ['./order-process-node.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderProcessNodeComponent implements OnChanges {\r\n    @Input() node: StateNode;\r\n    @Input() index: number;\r\n    @Input() active: boolean;\r\n    active$ = new BehaviorSubject<boolean>(false);\r\n    activeTarget$ = new BehaviorSubject<boolean>(false);\r\n    isCancellable = false;\r\n    // We use a class field here to prevent the\r\n    // i18n extractor from extracting a \"Cancelled\" key\r\n    cancelledState = 'Cancelled';\r\n\r\n    constructor(private elementRef: ElementRef<HTMLDivElement>) {}\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.isCancellable = !!this.node.to.find((s) => s.name === 'Cancelled');\r\n        if (changes.active) {\r\n            this.active$.next(this.active);\r\n        }\r\n    }\r\n\r\n    getPos(origin: 'top' | 'bottom' = 'top'): { x: number; y: number } {\r\n        const rect = this.elementRef.nativeElement.getBoundingClientRect();\r\n        const nodeHeight =\r\n            this.elementRef.nativeElement.querySelector('.node')?.getBoundingClientRect().height ?? 0;\r\n        return {\r\n            x: 10,\r\n            y: this.index * NODE_HEIGHT + (origin === 'bottom' ? nodeHeight : 0),\r\n        };\r\n    }\r\n\r\n    getStyle() {\r\n        const pos = this.getPos();\r\n        return {\r\n            'top.px': pos.y,\r\n            'left.px': pos.x,\r\n        };\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    HostBinding,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    QueryList,\r\n    SimpleChanges,\r\n    ViewChildren,\r\n} from '@angular/core';\r\nimport { OrderProcessState } from '@vendure/admin-ui/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { NODE_HEIGHT } from './constants';\r\nimport { OrderProcessNodeComponent } from './order-process-node.component';\r\nimport { StateNode } from './types';\r\n\r\n@Component({\r\n    selector: 'vdr-order-process-graph',\r\n    templateUrl: './order-process-graph.component.html',\r\n    styleUrls: ['./order-process-graph.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderProcessGraphComponent implements OnInit, OnChanges, AfterViewInit {\r\n    @Input() states: OrderProcessState[];\r\n    @Input() initialState?: string;\r\n    setActiveState$ = new BehaviorSubject<string | undefined>(undefined);\r\n    activeState$: Observable<string | undefined>;\r\n    nodes: StateNode[] = [];\r\n    edges: Array<{ from: OrderProcessNodeComponent; to: OrderProcessNodeComponent; index: number }> = [];\r\n\r\n    @ViewChildren(OrderProcessNodeComponent) nodeComponents: QueryList<OrderProcessNodeComponent>;\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n    @HostBinding('style.height.px')\r\n    get outerHeight(): number {\r\n        return this.nodes.length * NODE_HEIGHT;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.setActiveState$.next(this.initialState);\r\n        this.activeState$ = this.setActiveState$.pipe(debounceTime(150));\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.populateNodes();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => this.populateEdges());\r\n    }\r\n\r\n    onMouseOver(stateName: string) {\r\n        this.setActiveState$.next(stateName);\r\n    }\r\n\r\n    onMouseOut() {\r\n        this.setActiveState$.next(this.initialState);\r\n    }\r\n\r\n    getNodeFor(state: string): OrderProcessNodeComponent | undefined {\r\n        if (this.nodeComponents) {\r\n            return this.nodeComponents.find((n) => n.node.name === state);\r\n        }\r\n    }\r\n\r\n    private populateNodes() {\r\n        const stateNodeMap = new Map<string, StateNode>();\r\n        for (const state of this.states) {\r\n            stateNodeMap.set(state.name, {\r\n                name: state.name,\r\n                to: [],\r\n            });\r\n        }\r\n\r\n        for (const [name, stateNode] of stateNodeMap.entries()) {\r\n            const targets = this.states.find((s) => s.name === name)?.to ?? [];\r\n            for (const target of targets) {\r\n                const targetNode = stateNodeMap.get(target);\r\n                if (targetNode) {\r\n                    stateNode.to.push(targetNode);\r\n                }\r\n            }\r\n        }\r\n        this.nodes = [...stateNodeMap.values()].filter((n) => n.name !== 'Cancelled');\r\n    }\r\n\r\n    private populateEdges() {\r\n        for (const node of this.nodes) {\r\n            const nodeCmp = this.getNodeFor(node.name);\r\n            let index = 0;\r\n            for (const to of node.to) {\r\n                const toCmp = this.getNodeFor(to.name);\r\n                if (nodeCmp && toCmp && nodeCmp !== toCmp) {\r\n                    this.edges.push({\r\n                        to: toCmp,\r\n                        from: nodeCmp,\r\n                        index,\r\n                    });\r\n                    index++;\r\n                }\r\n            }\r\n        }\r\n        this.edges = [...this.edges];\r\n        this.changeDetector.markForCheck();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { AdjustmentType, CustomFieldConfig, OrderDetail } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-order-table',\r\n    templateUrl: './order-table.component.html',\r\n    styleUrls: ['./order-table.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderTableComponent implements OnInit {\r\n    @Input() order: OrderDetail.Fragment;\r\n    @Input() orderLineCustomFields: CustomFieldConfig[];\r\n    orderLineCustomFieldsVisible = false;\r\n    customFieldsForLine: {\r\n        [lineId: string]: Array<{ config: CustomFieldConfig; formGroup: FormGroup; value: any }>;\r\n    } = {};\r\n\r\n    get visibleOrderLineCustomFields(): CustomFieldConfig[] {\r\n        return this.orderLineCustomFieldsVisible ? this.orderLineCustomFields : [];\r\n    }\r\n\r\n    get showElided(): boolean {\r\n        return !this.orderLineCustomFieldsVisible && 0 < this.orderLineCustomFields.length;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.orderLineCustomFieldsVisible = this.orderLineCustomFields.length < 2;\r\n        this.getLineCustomFields();\r\n    }\r\n\r\n    toggleOrderLineCustomFields() {\r\n        this.orderLineCustomFieldsVisible = !this.orderLineCustomFieldsVisible;\r\n    }\r\n\r\n    getLineDiscounts(line: OrderDetail.Lines) {\r\n        return line.discounts.filter(a => a.type === AdjustmentType.PROMOTION);\r\n    }\r\n\r\n    private getLineCustomFields() {\r\n        for (const line of this.order.lines) {\r\n            const formGroup = new FormGroup({});\r\n            const result = this.orderLineCustomFields\r\n                .map(config => {\r\n                    const value = (line as any).customFields[config.name];\r\n                    formGroup.addControl(config.name, new FormControl(value));\r\n                    return {\r\n                        config,\r\n                        formGroup,\r\n                        value,\r\n                    };\r\n                })\r\n                .filter(field => {\r\n                    return this.orderLineCustomFieldsVisible ? true : field.value != null;\r\n                });\r\n            this.customFieldsForLine[line.id] = result;\r\n        }\r\n    }\r\n\r\n    getPromotionLink(promotion: OrderDetail.Discounts): any[] {\r\n        const id = promotion.adjustmentSource.split(':')[1];\r\n        return ['/marketing', 'promotions', id];\r\n    }\r\n\r\n    getCouponCodeForAdjustment(\r\n        order: OrderDetail.Fragment,\r\n        promotionAdjustment: OrderDetail.Discounts,\r\n    ): string | undefined {\r\n        const id = promotionAdjustment.adjustmentSource.split(':')[1];\r\n        const promotion = order.promotions.find(p => p.id === id);\r\n        if (promotion) {\r\n            return promotion.couponCode || undefined;\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { CurrencyCode, OrderDetail } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-payment-detail',\r\n    templateUrl: './payment-detail.component.html',\r\n    styleUrls: ['./payment-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaymentDetailComponent {\r\n    @Input() payment: OrderDetail.Payments;\r\n    @Input() currencyCode: CurrencyCode;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-payment-state-label',\r\n    templateUrl: './payment-state-label.component.html',\r\n    styleUrls: ['./payment-state-label.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaymentStateLabelComponent {\r\n    @Input() state: string;\r\n\r\n    get chipColorType() {\r\n        switch (this.state) {\r\n            case 'Authorized':\r\n                return 'warning';\r\n            case 'Settled':\r\n                return 'success';\r\n            case 'Declined':\r\n            case 'Cancelled':\r\n                return 'error';\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-refund-state-label',\r\n    templateUrl: './refund-state-label.component.html',\r\n    styleUrls: ['./refund-state-label.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RefundStateLabelComponent {\r\n    @Input() state: string;\r\n\r\n    get chipColorType() {\r\n        switch (this.state) {\r\n            case 'Pending':\r\n                return 'warning';\r\n            case 'Settled':\r\n                return 'success';\r\n            case 'Failed':\r\n                return 'error';\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-simple-item-list',\r\n    templateUrl: './simple-item-list.component.html',\r\n    styleUrls: ['./simple-item-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SimpleItemListComponent {\r\n    @Input() items: Array<{ name: string; quantity: number }>;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { OrderDetail } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\n\r\n/**\r\n * Resolves the id from the path into a Customer entity.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class OrderResolver extends BaseEntityResolver<OrderDetail.Fragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'Order',\r\n                id: '',\r\n                code: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                total: 0,\r\n            } as any,\r\n            id => dataService.order.getOrder(id).mapStream(data => data.order),\r\n        );\r\n    }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BreadcrumbLabelLinkPair,\r\n    CanDeactivateDetailGuard,\r\n    createResolveData,\r\n    detailBreadcrumb,\r\n    OrderDetail,\r\n} from '@vendure/admin-ui/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { OrderDetailComponent } from './components/order-detail/order-detail.component';\r\nimport { OrderEditorComponent } from './components/order-editor/order-editor.component';\r\nimport { OrderListComponent } from './components/order-list/order-list.component';\r\nimport { OrderResolver } from './providers/routing/order-resolver';\r\n\r\nexport const orderRoutes: Route[] = [\r\n    {\r\n        path: '',\r\n        component: OrderListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.orders'),\r\n        },\r\n    },\r\n    {\r\n        path: ':id',\r\n        component: OrderDetailComponent,\r\n        resolve: createResolveData(OrderResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: orderBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: ':id/modify',\r\n        component: OrderEditorComponent,\r\n        resolve: createResolveData(OrderResolver),\r\n        // canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: modifyingOrderBreadcrumb,\r\n        },\r\n    },\r\n];\r\n\r\nexport function orderBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<OrderDetail.Fragment>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.orders',\r\n        getName: order => order.code,\r\n        route: '',\r\n    });\r\n}\r\n\r\nexport function modifyingOrderBreadcrumb(data: any, params: any) {\r\n    return orderBreadcrumb(data, params).pipe(\r\n        map((breadcrumbs: BreadcrumbLabelLinkPair[]) => {\r\n            const modifiedBreadcrumbs = breadcrumbs.slice();\r\n            modifiedBreadcrumbs[0].link[0] = '../';\r\n            modifiedBreadcrumbs[1].link[0] = '../orders';\r\n            return modifiedBreadcrumbs.concat({ label: _('breadcrumb.modifying'), link: [''] });\r\n        }) as any,\r\n    );\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '@vendure/admin-ui/core';\n\nimport { AddManualPaymentDialogComponent } from './components/add-manual-payment-dialog/add-manual-payment-dialog.component';\nimport { CancelOrderDialogComponent } from './components/cancel-order-dialog/cancel-order-dialog.component';\nimport { FulfillOrderDialogComponent } from './components/fulfill-order-dialog/fulfill-order-dialog.component';\nimport { FulfillmentCardComponent } from './components/fulfillment-card/fulfillment-card.component';\nimport { FulfillmentDetailComponent } from './components/fulfillment-detail/fulfillment-detail.component';\nimport { FulfillmentStateLabelComponent } from './components/fulfillment-state-label/fulfillment-state-label.component';\nimport { LineFulfillmentComponent } from './components/line-fulfillment/line-fulfillment.component';\nimport { LineRefundsComponent } from './components/line-refunds/line-refunds.component';\nimport { ModificationDetailComponent } from './components/modification-detail/modification-detail.component';\nimport { OrderCustomFieldsCardComponent } from './components/order-custom-fields-card/order-custom-fields-card.component';\nimport { OrderDetailComponent } from './components/order-detail/order-detail.component';\nimport { OrderEditorComponent } from './components/order-editor/order-editor.component';\nimport { OrderEditsPreviewDialogComponent } from './components/order-edits-preview-dialog/order-edits-preview-dialog.component';\nimport { OrderHistoryComponent } from './components/order-history/order-history.component';\nimport { OrderListComponent } from './components/order-list/order-list.component';\nimport { OrderPaymentCardComponent } from './components/order-payment-card/order-payment-card.component';\nimport { OrderProcessGraphDialogComponent } from './components/order-process-graph-dialog/order-process-graph-dialog.component';\nimport { OrderProcessEdgeComponent } from './components/order-process-graph/order-process-edge.component';\nimport { OrderProcessGraphComponent } from './components/order-process-graph/order-process-graph.component';\nimport { OrderProcessNodeComponent } from './components/order-process-graph/order-process-node.component';\nimport { OrderStateSelectDialogComponent } from './components/order-state-select-dialog/order-state-select-dialog.component';\nimport { OrderTableComponent } from './components/order-table/order-table.component';\nimport { PaymentDetailComponent } from './components/payment-detail/payment-detail.component';\nimport { PaymentStateLabelComponent } from './components/payment-state-label/payment-state-label.component';\nimport { RefundOrderDialogComponent } from './components/refund-order-dialog/refund-order-dialog.component';\nimport { RefundStateLabelComponent } from './components/refund-state-label/refund-state-label.component';\nimport { SettleRefundDialogComponent } from './components/settle-refund-dialog/settle-refund-dialog.component';\nimport { SimpleItemListComponent } from './components/simple-item-list/simple-item-list.component';\nimport { orderRoutes } from './order.routes';\n\n@NgModule({\n    imports: [SharedModule, RouterModule.forChild(orderRoutes)],\n    declarations: [\n        OrderListComponent,\n        OrderDetailComponent,\n        FulfillOrderDialogComponent,\n        LineFulfillmentComponent,\n        RefundOrderDialogComponent,\n        CancelOrderDialogComponent,\n        PaymentStateLabelComponent,\n        LineRefundsComponent,\n        OrderPaymentCardComponent,\n        RefundStateLabelComponent,\n        SettleRefundDialogComponent,\n        OrderHistoryComponent,\n        FulfillmentDetailComponent,\n        PaymentDetailComponent,\n        SimpleItemListComponent,\n        OrderCustomFieldsCardComponent,\n        OrderProcessGraphComponent,\n        OrderProcessNodeComponent,\n        OrderProcessEdgeComponent,\n        OrderProcessGraphDialogComponent,\n        FulfillmentStateLabelComponent,\n        FulfillmentCardComponent,\n        OrderEditorComponent,\n        OrderTableComponent,\n        OrderEditsPreviewDialogComponent,\n        ModificationDetailComponent,\n        AddManualPaymentDialogComponent,\n        OrderStateSelectDialogComponent,\n    ],\n})\nexport class OrderModule {}\n","// This file was generated by the build-public-api.ts script\nexport * from './components/add-manual-payment-dialog/add-manual-payment-dialog.component';\nexport * from './components/cancel-order-dialog/cancel-order-dialog.component';\nexport * from './components/fulfill-order-dialog/fulfill-order-dialog.component';\nexport * from './components/fulfillment-card/fulfillment-card.component';\nexport * from './components/fulfillment-detail/fulfillment-detail.component';\nexport * from './components/fulfillment-state-label/fulfillment-state-label.component';\nexport * from './components/line-fulfillment/line-fulfillment.component';\nexport * from './components/line-refunds/line-refunds.component';\nexport * from './components/modification-detail/modification-detail.component';\nexport * from './components/order-custom-fields-card/order-custom-fields-card.component';\nexport * from './components/order-detail/order-detail.component';\nexport * from './components/order-editor/order-editor.component';\nexport * from './components/order-edits-preview-dialog/order-edits-preview-dialog.component';\nexport * from './components/order-history/order-history.component';\nexport * from './components/order-list/order-list.component';\nexport * from './components/order-payment-card/order-payment-card.component';\nexport * from './components/order-process-graph/constants';\nexport * from './components/order-process-graph/order-process-edge.component';\nexport * from './components/order-process-graph/order-process-graph.component';\nexport * from './components/order-process-graph/order-process-node.component';\nexport * from './components/order-process-graph/types';\nexport * from './components/order-process-graph-dialog/order-process-graph-dialog.component';\nexport * from './components/order-state-select-dialog/order-state-select-dialog.component';\nexport * from './components/order-table/order-table.component';\nexport * from './components/payment-detail/payment-detail.component';\nexport * from './components/payment-state-label/payment-state-label.component';\nexport * from './components/refund-order-dialog/refund-order-dialog.component';\nexport * from './components/refund-state-label/refund-state-label.component';\nexport * from './components/settle-refund-dialog/settle-refund-dialog.component';\nexport * from './components/simple-item-list/simple-item-list.component';\nexport * from './order.module';\nexport * from './order.routes';\nexport * from './providers/order-transition.service';\nexport * from './providers/routing/order-resolver';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["_"],"mappings":"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"}