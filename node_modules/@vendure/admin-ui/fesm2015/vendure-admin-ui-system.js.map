{"version":3,"file":"vendure-admin-ui-system.js","sources":["../../src/lib/system/src/components/health-check/health-check.component.ts","../../src/lib/system/src/components/job-list/job-list.component.ts","../../src/lib/system/src/components/job-state-label/job-state-label.component.ts","../../src/lib/system/src/system.routes.ts","../../src/lib/system/src/system.module.ts","../../src/lib/system/src/public_api.ts","../../src/lib/system/src/vendure-admin-ui-system.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { HealthCheckService } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-health-check',\r\n    templateUrl: './health-check.component.html',\r\n    styleUrls: ['./health-check.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HealthCheckComponent {\r\n    constructor(public healthCheckService: HealthCheckService) {}\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n    BaseListComponent,\r\n    DataService,\r\n    GetAllJobs,\r\n    GetFacetList,\r\n    GetJobQueueList,\r\n    ModalService,\r\n    NotificationService,\r\n    SortOrder,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable, timer } from 'rxjs';\r\nimport { filter, map, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-job-list',\r\n    templateUrl: './job-list.component.html',\r\n    styleUrls: ['./job-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class JobListComponent\r\n    extends BaseListComponent<GetAllJobs.Query, GetAllJobs.Items>\r\n    implements OnInit {\r\n    queues$: Observable<GetJobQueueList.JobQueues[]>;\r\n    liveUpdate = new FormControl(true);\r\n    hideSettled = new FormControl(true);\r\n    queueFilter = new FormControl('all');\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private modalService: ModalService,\r\n        private notificationService: NotificationService,\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n    ) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => this.dataService.settings.getAllJobs(...args),\r\n            data => data.jobs,\r\n            (skip, take) => {\r\n                const queueFilter =\r\n                    this.queueFilter.value === 'all' ? null : { queueName: { eq: this.queueFilter.value } };\r\n                const hideSettled = this.hideSettled.value;\r\n                return {\r\n                    options: {\r\n                        skip,\r\n                        take,\r\n                        filter: {\r\n                            ...queueFilter,\r\n                            ...(hideSettled ? { isSettled: { eq: false } } : {}),\r\n                        },\r\n                        sort: {\r\n                            createdAt: SortOrder.DESC,\r\n                        },\r\n                    },\r\n                };\r\n            },\r\n        );\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        timer(5000, 2000)\r\n            .pipe(\r\n                takeUntil(this.destroy$),\r\n                filter(() => this.liveUpdate.value),\r\n            )\r\n            .subscribe(() => {\r\n                this.refresh();\r\n            });\r\n        this.queues$ = this.dataService.settings\r\n            .getJobQueues()\r\n            .mapStream(res => res.jobQueues)\r\n            .pipe(\r\n                map(queues => {\r\n                    return [{ name: 'all', running: true }, ...queues];\r\n                }),\r\n            );\r\n    }\r\n\r\n    hasResult(job: GetAllJobs.Items): boolean {\r\n        const result = job.result;\r\n        if (result == null) {\r\n            return false;\r\n        }\r\n        if (typeof result === 'object') {\r\n            return Object.keys(result).length > 0;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    cancelJob(id: string) {\r\n        this.dataService.settings.cancelJob(id).subscribe(() => this.refresh());\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { JobInfoFragment, JobState } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-job-state-label',\r\n    templateUrl: './job-state-label.component.html',\r\n    styleUrls: ['./job-state-label.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class JobStateLabelComponent {\r\n    @Input()\r\n    job: JobInfoFragment;\r\n\r\n    get iconShape(): string {\r\n        switch (this.job.state) {\r\n            case JobState.COMPLETED:\r\n                return 'check-circle';\r\n            case JobState.FAILED:\r\n                return 'exclamation-circle';\r\n            case JobState.CANCELLED:\r\n                return 'ban';\r\n            case JobState.PENDING:\r\n            case JobState.RETRYING:\r\n                return 'hourglass';\r\n            case JobState.RUNNING:\r\n                return 'sync';\r\n        }\r\n    }\r\n\r\n    get colorType(): string {\r\n        switch (this.job.state) {\r\n            case JobState.COMPLETED:\r\n                return 'success';\r\n            case JobState.FAILED:\r\n            case JobState.CANCELLED:\r\n                return 'error';\r\n            case JobState.PENDING:\r\n            case JobState.RETRYING:\r\n                return '';\r\n            case JobState.RUNNING:\r\n                return 'warning';\r\n        }\r\n    }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\n\r\nimport { HealthCheckComponent } from './components/health-check/health-check.component';\r\nimport { JobListComponent } from './components/job-list/job-list.component';\r\n\r\nexport const systemRoutes: Route[] = [\r\n    {\r\n        path: 'jobs',\r\n        component: JobListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.job-queue'),\r\n        },\r\n    },\r\n    {\r\n        path: 'system-status',\r\n        component: HealthCheckComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.system-status'),\r\n        },\r\n    },\r\n];\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '@vendure/admin-ui/core';\r\n\r\nimport { HealthCheckComponent } from './components/health-check/health-check.component';\r\nimport { JobListComponent } from './components/job-list/job-list.component';\r\nimport { JobStateLabelComponent } from './components/job-state-label/job-state-label.component';\r\nimport { systemRoutes } from './system.routes';\r\n\r\n@NgModule({\r\n    declarations: [HealthCheckComponent, JobListComponent, JobStateLabelComponent],\r\n    imports: [SharedModule, RouterModule.forChild(systemRoutes)],\r\n})\r\nexport class SystemModule {}\r\n","// This file was generated by the build-public-api.ts script\nexport * from './components/health-check/health-check.component';\nexport * from './components/job-list/job-list.component';\nexport * from './components/job-state-label/job-state-label.component';\nexport * from './system.module';\nexport * from './system.routes';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["_"],"mappings":"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"}