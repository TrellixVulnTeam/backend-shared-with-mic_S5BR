{"version":3,"file":"vendure-admin-ui-core.js","sources":["../../src/lib/core/src/data/definitions/administrator-definitions.ts","../../src/lib/core/src/data/providers/administrator-data.service.ts","../../src/lib/core/src/data/definitions/shared-definitions.ts","../../src/lib/core/src/data/definitions/auth-definitions.ts","../../src/lib/core/src/data/providers/auth-data.service.ts","../../src/lib/core/src/providers/local-storage/local-storage.service.ts","../../src/lib/core/src/data/definitions/client-definitions.ts","../../src/lib/core/src/data/query-result.ts","../../src/lib/core/src/data/definitions/settings-definitions.ts","../../src/lib/core/src/data/server-config.ts","../../src/lib/core/src/data/utils/add-custom-fields.ts","../../src/lib/core/src/data/utils/remove-readonly-custom-fields.ts","../../src/lib/core/src/data/utils/transform-relation-custom-field-inputs.ts","../../src/lib/core/src/data/providers/base-data.service.ts","../../src/lib/core/src/data/providers/client-data.service.ts","../../src/lib/core/src/data/definitions/product-definitions.ts","../../src/lib/core/src/data/definitions/collection-definitions.ts","../../src/lib/core/src/data/providers/collection-data.service.ts","../../src/lib/core/src/data/definitions/customer-definitions.ts","../../src/lib/core/src/data/providers/customer-data.service.ts","../../src/lib/core/src/data/definitions/facet-definitions.ts","../../src/lib/core/src/data/providers/facet-data.service.ts","../../src/lib/core/src/data/definitions/order-definitions.ts","../../src/lib/core/src/data/providers/order-data.service.ts","../../src/lib/core/src/common/generated-types.ts","../../src/lib/core/src/data/providers/product-data.service.ts","../../src/lib/core/src/data/definitions/promotion-definitions.ts","../../src/lib/core/src/data/providers/promotion-data.service.ts","../../src/lib/core/src/data/providers/settings-data.service.ts","../../src/lib/core/src/data/definitions/shipping-definitions.ts","../../src/lib/core/src/data/providers/shipping-method-data.service.ts","../../src/lib/core/src/data/providers/data.service.ts","../../src/lib/core/src/app.component.ts","../../src/lib/core/src/app.config.ts","../../src/lib/core/src/common/utilities/get-default-ui-language.ts","../../src/lib/core/src/providers/auth/auth.service.ts","../../src/lib/core/src/providers/i18n/i18n.service.ts","../../src/lib/core/src/shared/components/modal-dialog/modal-dialog.component.ts","../../src/lib/core/src/shared/components/simple-dialog/simple-dialog.component.ts","../../src/lib/core/src/providers/overlay-host/overlay-host.service.ts","../../src/lib/core/src/providers/modal/modal.service.ts","../../src/lib/core/src/components/ui-language-switcher-dialog/ui-language-switcher-dialog.component.ts","../../src/lib/core/src/components/app-shell/app-shell.component.ts","../../src/lib/core/src/components/breadcrumb/breadcrumb.component.ts","../../src/lib/core/src/components/channel-switcher/channel-switcher.component.ts","../../src/lib/core/src/data/utils/get-server-location.ts","../../src/lib/core/src/providers/health-check/health-check.service.ts","../../src/lib/core/src/providers/job-queue/job-queue.service.ts","../../src/lib/core/src/providers/nav-builder/nav-builder.service.ts","../../src/lib/core/src/components/main-nav/main-nav.component.ts","../../src/lib/core/src/components/notification/notification.component.ts","../../src/lib/core/src/components/overlay-host/overlay-host.component.ts","../../src/lib/core/src/components/theme-switcher/theme-switcher.component.ts","../../src/lib/core/src/components/user-menu/user-menu.component.ts","../../src/lib/core/src/common/introspection-result.ts","../../src/lib/core/src/common/introspection-result-wrapper.ts","../../src/lib/core/src/data/check-jobs-link.ts","../../src/lib/core/src/data/client-state/client-defaults.ts","../../src/lib/core/src/data/client-state/client-resolvers.ts","../../src/lib/core/src/data/omit-typename-link.ts","../../src/lib/core/src/data/providers/fetch-adapter.ts","../../src/lib/core/src/providers/notification/notification.service.ts","../../src/lib/core/src/data/providers/interceptor.ts","../../src/lib/core/src/data/data.module.ts","../../src/lib/core/src/providers/i18n/custom-http-loader.ts","../../src/lib/core/src/providers/i18n/custom-message-format-compiler.ts","../../src/lib/core/src/providers/component-registry/component-registry.service.ts","../../src/lib/core/src/providers/custom-field-component/custom-field-component.service.ts","../../src/lib/core/src/shared/dynamic-form-inputs/boolean-form-input/boolean-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/code-editor-form-input/json-editor-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/currency-form-input/currency-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/customer-group-form-input/customer-group-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/date-form-input/date-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/facet-value-form-input/facet-value-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/number-form-input/number-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/password-form-input/password-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/product-selector-form-input/product-selector-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/relation-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/rich-text-form-input/rich-text-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/select-form-input/select-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/text-form-input/text-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/textarea-form-input/textarea-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/register-dynamic-input-components.ts","../../src/lib/core/src/shared/components/action-bar-items/action-bar-items.component.ts","../../src/lib/core/src/shared/components/action-bar/action-bar.component.ts","../../src/lib/core/src/shared/components/address-form/address-form.component.ts","../../src/lib/core/src/shared/components/affixed-input/affixed-input.component.ts","../../src/lib/core/src/shared/components/affixed-input/percentage-suffix-input.component.ts","../../src/lib/core/src/shared/components/asset-file-input/asset-file-input.component.ts","../../src/lib/core/src/shared/components/asset-preview-dialog/asset-preview-dialog.component.ts","../../src/lib/core/src/shared/components/asset-gallery/asset-gallery.component.ts","../../src/lib/core/src/shared/components/asset-picker-dialog/asset-picker-dialog.component.ts","../../src/lib/core/src/shared/components/asset-preview-links/asset-preview-links.component.ts","../../src/lib/core/src/shared/components/manage-tags-dialog/manage-tags-dialog.component.ts","../../src/lib/core/src/shared/components/asset-preview/asset-preview.component.ts","../../src/lib/core/src/common/single-search-selection-model.ts","../../src/lib/core/src/shared/components/asset-search-input/asset-search-input.component.ts","../../src/lib/core/src/shared/components/channel-assignment-control/channel-assignment-control.component.ts","../../src/lib/core/src/shared/components/channel-badge/channel-badge.component.ts","../../src/lib/core/src/shared/components/chip/chip.component.ts","../../src/lib/core/src/common/utilities/configurable-operation-utils.ts","../../src/lib/core/src/common/utilities/interpolate-description.ts","../../src/lib/core/src/shared/components/configurable-input/configurable-input.component.ts","../../src/lib/core/src/shared/components/currency-input/currency-input.component.ts","../../src/lib/core/src/providers/custom-detail-component/custom-detail-component.service.ts","../../src/lib/core/src/shared/components/custom-detail-component-host/custom-detail-component-host.component.ts","../../src/lib/core/src/shared/components/custom-field-control/custom-field-control.component.ts","../../src/lib/core/src/shared/components/customer-label/customer-label.component.ts","../../src/lib/core/src/shared/components/data-table/data-table-column.component.ts","../../src/lib/core/src/shared/components/data-table/data-table.component.ts","../../src/lib/core/src/shared/components/datetime-picker/constants.ts","../../src/lib/core/src/shared/components/datetime-picker/datetime-picker.service.ts","../../src/lib/core/src/shared/components/datetime-picker/datetime-picker.component.ts","../../src/lib/core/src/shared/components/dropdown/dropdown.component.ts","../../src/lib/core/src/shared/components/dropdown/dropdown-item.directive.ts","../../src/lib/core/src/shared/components/dropdown/dropdown-menu.component.ts","../../src/lib/core/src/shared/components/dropdown/dropdown-trigger.directive.ts","../../src/lib/core/src/shared/components/edit-note-dialog/edit-note-dialog.component.ts","../../src/lib/core/src/shared/components/empty-placeholder/empty-placeholder.component.ts","../../src/lib/core/src/shared/components/entity-info/entity-info.component.ts","../../src/lib/core/src/shared/components/extension-host/extension-host.service.ts","../../src/lib/core/src/shared/components/extension-host/extension-host.component.ts","../../src/lib/core/src/shared/components/facet-value-chip/facet-value-chip.component.ts","../../src/lib/core/src/common/utilities/flatten-facet-values.ts","../../src/lib/core/src/shared/components/facet-value-selector/facet-value-selector.component.ts","../../src/lib/core/src/shared/components/focal-point-control/focal-point-control.component.ts","../../src/lib/core/src/shared/components/form-field/form-field-control.directive.ts","../../src/lib/core/src/shared/components/form-field/form-field.component.ts","../../src/lib/core/src/shared/components/form-item/form-item.component.ts","../../src/lib/core/src/shared/components/formatted-address/formatted-address.component.ts","../../src/lib/core/src/shared/components/help-tooltip/help-tooltip.component.ts","../../src/lib/core/src/shared/components/history-entry-detail/history-entry-detail.component.ts","../../src/lib/core/src/shared/components/items-per-page-controls/items-per-page-controls.component.ts","../../src/lib/core/src/shared/components/labeled-data/labeled-data.component.ts","../../src/lib/core/src/shared/components/language-selector/language-selector.component.ts","../../src/lib/core/src/shared/components/modal-dialog/dialog-buttons.directive.ts","../../src/lib/core/src/shared/components/modal-dialog/dialog-component-outlet.component.ts","../../src/lib/core/src/shared/components/modal-dialog/dialog-title.directive.ts","../../src/lib/core/src/shared/components/object-tree/object-tree.component.ts","../../src/lib/core/src/shared/components/order-state-label/order-state-label.component.ts","../../src/lib/core/src/shared/components/pagination-controls/pagination-controls.component.ts","../../src/lib/core/src/shared/components/product-selector/product-selector.component.ts","../../src/lib/core/src/shared/components/rich-text-editor/external-image-dialog/external-image-dialog.component.ts","../../src/lib/core/src/shared/components/rich-text-editor/link-dialog/link-dialog.component.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/inputrules.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/keymap.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/menu/menu-common.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/menu/images.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/menu/links.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/menu/menu.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/utils.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/plugins/link-select-plugin.ts","../../src/lib/core/src/shared/components/rich-text-editor/prosemirror/prosemirror.service.ts","../../src/lib/core/src/shared/components/rich-text-editor/rich-text-editor.component.ts","../../src/lib/core/src/shared/components/select-toggle/select-toggle.component.ts","../../src/lib/core/src/shared/components/status-badge/status-badge.component.ts","../../src/lib/core/src/shared/components/tabbed-custom-fields/tabbed-custom-fields.component.ts","../../src/lib/core/src/shared/components/table-row-action/table-row-action.component.ts","../../src/lib/core/src/shared/components/tag-selector/tag-selector.component.ts","../../src/lib/core/src/shared/components/timeline-entry/timeline-entry.component.ts","../../src/lib/core/src/shared/components/title-input/title-input.component.ts","../../src/lib/core/src/shared/components/ui-extension-point/ui-extension-point.component.ts","../../src/lib/core/src/shared/directives/disabled.directive.ts","../../src/lib/core/src/shared/directives/if-directive-base.ts","../../src/lib/core/src/shared/directives/if-default-channel-active.directive.ts","../../src/lib/core/src/shared/directives/if-multichannel.directive.ts","../../src/lib/core/src/shared/directives/if-permissions.directive.ts","../../src/lib/core/src/shared/dynamic-form-inputs/dynamic-form-input/dynamic-form-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/asset/relation-asset-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/relation-selector-dialog/relation-selector-dialog.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/customer/relation-customer-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/generic/relation-generic-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/product-variant/relation-product-variant-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/product/relation-product-input.component.ts","../../src/lib/core/src/shared/dynamic-form-inputs/relation-form-input/relation-card/relation-card.component.ts","../../src/lib/core/src/shared/pipes/asset-preview.pipe.ts","../../src/lib/core/src/shared/pipes/channel-label.pipe.ts","../../src/lib/core/src/shared/pipes/custom-field-label.pipe.ts","../../src/lib/core/src/shared/pipes/duration.pipe.ts","../../src/lib/core/src/shared/pipes/file-size.pipe.ts","../../src/lib/core/src/shared/pipes/has-permission.pipe.ts","../../src/lib/core/src/shared/pipes/locale-base.pipe.ts","../../src/lib/core/src/shared/pipes/locale-currency-name.pipe.ts","../../src/lib/core/src/shared/pipes/locale-currency.pipe.ts","../../src/lib/core/src/shared/pipes/locale-date.pipe.ts","../../src/lib/core/src/shared/pipes/locale-language-name.pipe.ts","../../src/lib/core/src/shared/pipes/locale-region-name.pipe.ts","../../src/lib/core/src/shared/pipes/sentence-case.pipe.ts","../../src/lib/core/src/shared/pipes/sort.pipe.ts","../../src/lib/core/src/shared/pipes/state-i18n-token.pipe.ts","../../src/lib/core/src/common/utilities/string-to-color.ts","../../src/lib/core/src/shared/pipes/string-to-color.pipe.ts","../../src/lib/core/src/shared/pipes/time-ago.pipe.ts","../../src/lib/core/src/shared/providers/routing/can-deactivate-detail-guard.ts","../../src/lib/core/src/shared/shared.module.ts","../../src/lib/core/src/core.module.ts","../../src/lib/core/src/app.component.module.ts","../../src/lib/core/src/common/base-detail.component.ts","../../src/lib/core/src/common/base-entity-resolver.ts","../../src/lib/core/src/common/base-list.component.ts","../../src/lib/core/src/common/detail-breadcrumb.ts","../../src/lib/core/src/common/utilities/find-translation.ts","../../src/lib/core/src/common/utilities/create-updated-translatable.ts","../../src/lib/core/src/common/version.ts","../../src/lib/core/src/providers/dashboard-widget/dashboard-widget.service.ts","../../src/lib/core/src/providers/dashboard-widget/register-dashboard-widget.ts","../../src/lib/core/src/providers/guard/auth.guard.ts","../../src/lib/core/src/shared/components/extension-host/extension-host-config.ts","../../src/lib/core/src/shared/components/extension-host/host-external-frame.ts","../../src/lib/core/src/validators/unicode-pattern.validator.ts","../../src/lib/core/src/public_api.ts","../../src/lib/core/src/vendure-admin-ui-core.ts"],"sourcesContent":["import { gql } from 'apollo-angular';\r\n\r\nexport const ROLE_FRAGMENT = gql`\r\n    fragment Role on Role {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        description\r\n        permissions\r\n        channels {\r\n            id\r\n            code\r\n            token\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADMINISTRATOR_FRAGMENT = gql`\r\n    fragment Administrator on Administrator {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        firstName\r\n        lastName\r\n        emailAddress\r\n        user {\r\n            id\r\n            identifier\r\n            lastLogin\r\n            roles {\r\n                ...Role\r\n            }\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ADMINISTRATORS = gql`\r\n    query GetAdministrators($options: AdministratorListOptions) {\r\n        administrators(options: $options) {\r\n            items {\r\n                ...Administrator\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ACTIVE_ADMINISTRATOR = gql`\r\n    query GetActiveAdministrator {\r\n        activeAdministrator {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ADMINISTRATOR = gql`\r\n    query GetAdministrator($id: ID!) {\r\n        administrator(id: $id) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_ADMINISTRATOR = gql`\r\n    mutation CreateAdministrator($input: CreateAdministratorInput!) {\r\n        createAdministrator(input: $input) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_ADMINISTRATOR = gql`\r\n    mutation UpdateAdministrator($input: UpdateAdministratorInput!) {\r\n        updateAdministrator(input: $input) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_ACTIVE_ADMINISTRATOR = gql`\r\n    mutation UpdateActiveAdministrator($input: UpdateActiveAdministratorInput!) {\r\n        updateActiveAdministrator(input: $input) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_ADMINISTRATOR = gql`\r\n    mutation DeleteAdministrator($id: ID!) {\r\n        deleteAdministrator(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_ROLES = gql`\r\n    query GetRoles($options: RoleListOptions) {\r\n        roles(options: $options) {\r\n            items {\r\n                ...Role\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ROLE = gql`\r\n    query GetRole($id: ID!) {\r\n        role(id: $id) {\r\n            ...Role\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_ROLE = gql`\r\n    mutation CreateRole($input: CreateRoleInput!) {\r\n        createRole(input: $input) {\r\n            ...Role\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_ROLE = gql`\r\n    mutation UpdateRole($input: UpdateRoleInput!) {\r\n        updateRole(input: $input) {\r\n            ...Role\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_ROLE = gql`\r\n    mutation DeleteRole($id: ID!) {\r\n        deleteRole(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ASSIGN_ROLE_TO_ADMINISTRATOR = gql`\r\n    mutation AssignRoleToAdministrator($administratorId: ID!, $roleId: ID!) {\r\n        assignRoleToAdministrator(administratorId: $administratorId, roleId: $roleId) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n","import { FetchPolicy } from '@apollo/client';\r\n\r\nimport {\r\n    CreateAdministrator,\r\n    CreateAdministratorInput,\r\n    CreateRole,\r\n    CreateRoleInput,\r\n    DeleteAdministrator,\r\n    DeleteRole,\r\n    GetActiveAdministrator,\r\n    GetAdministrator,\r\n    GetAdministrators,\r\n    GetRole,\r\n    GetRoles,\r\n    UpdateActiveAdministrator,\r\n    UpdateActiveAdministratorInput,\r\n    UpdateAdministrator,\r\n    UpdateAdministratorInput,\r\n    UpdateRole,\r\n    UpdateRoleInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    CREATE_ADMINISTRATOR,\r\n    CREATE_ROLE,\r\n    DELETE_ADMINISTRATOR,\r\n    DELETE_ROLE,\r\n    GET_ACTIVE_ADMINISTRATOR,\r\n    GET_ADMINISTRATOR,\r\n    GET_ADMINISTRATORS,\r\n    GET_ROLE,\r\n    GET_ROLES,\r\n    UPDATE_ACTIVE_ADMINISTRATOR,\r\n    UPDATE_ADMINISTRATOR,\r\n    UPDATE_ROLE,\r\n} from '../definitions/administrator-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class AdministratorDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getAdministrators(take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<GetAdministrators.Query, GetAdministrators.Variables>(\r\n            GET_ADMINISTRATORS,\r\n            {\r\n                options: {\r\n                    take,\r\n                    skip,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    getActiveAdministrator() {\r\n        return this.baseDataService.query<GetActiveAdministrator.Query>(GET_ACTIVE_ADMINISTRATOR, {});\r\n    }\r\n\r\n    getAdministrator(id: string) {\r\n        return this.baseDataService.query<GetAdministrator.Query, GetAdministrator.Variables>(\r\n            GET_ADMINISTRATOR,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    createAdministrator(input: CreateAdministratorInput) {\r\n        return this.baseDataService.mutate<CreateAdministrator.Mutation, CreateAdministrator.Variables>(\r\n            CREATE_ADMINISTRATOR,\r\n            { input },\r\n        );\r\n    }\r\n\r\n    updateAdministrator(input: UpdateAdministratorInput) {\r\n        return this.baseDataService.mutate<UpdateAdministrator.Mutation, UpdateAdministrator.Variables>(\r\n            UPDATE_ADMINISTRATOR,\r\n            { input },\r\n        );\r\n    }\r\n\r\n    updateActiveAdministrator(input: UpdateActiveAdministratorInput) {\r\n        return this.baseDataService.mutate<\r\n            UpdateActiveAdministrator.Mutation,\r\n            UpdateActiveAdministrator.Variables\r\n        >(UPDATE_ACTIVE_ADMINISTRATOR, { input });\r\n    }\r\n\r\n    deleteAdministrator(id: string) {\r\n        return this.baseDataService.mutate<DeleteAdministrator.Mutation, DeleteAdministrator.Variables>(\r\n            DELETE_ADMINISTRATOR,\r\n            { id },\r\n        );\r\n    }\r\n\r\n    getRoles(take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<GetRoles.Query, GetRoles.Variables>(GET_ROLES, {\r\n            options: {\r\n                take,\r\n                skip,\r\n            },\r\n        });\r\n    }\r\n\r\n    getRole(id: string) {\r\n        return this.baseDataService.query<GetRole.Query, GetRole.Variables>(GET_ROLE, { id });\r\n    }\r\n\r\n    createRole(input: CreateRoleInput) {\r\n        return this.baseDataService.mutate<CreateRole.Mutation, CreateRole.Variables>(CREATE_ROLE, { input });\r\n    }\r\n\r\n    updateRole(input: UpdateRoleInput) {\r\n        return this.baseDataService.mutate<UpdateRole.Mutation, UpdateRole.Variables>(UPDATE_ROLE, { input });\r\n    }\r\n\r\n    deleteRole(id: string) {\r\n        return this.baseDataService.mutate<DeleteRole.Mutation, DeleteRole.Variables>(DELETE_ROLE, { id });\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\n\nexport const CONFIGURABLE_OPERATION_FRAGMENT = gql`\n    fragment ConfigurableOperation on ConfigurableOperation {\n        args {\n            name\n            value\n        }\n        code\n    }\n`;\n\nexport const CONFIGURABLE_OPERATION_DEF_FRAGMENT = gql`\n    fragment ConfigurableOperationDef on ConfigurableOperationDefinition {\n        args {\n            name\n            type\n            required\n            defaultValue\n            list\n            ui\n            label\n        }\n        code\n        description\n    }\n`;\n\nexport const ERROR_RESULT_FRAGMENT = gql`\n    fragment ErrorResult on ErrorResult {\n        errorCode\n        message\n    }\n`;\n","import { gql } from 'apollo-angular';\r\n\r\nimport { ERROR_RESULT_FRAGMENT } from './shared-definitions';\r\n\r\nexport const CURRENT_USER_FRAGMENT = gql`\r\n    fragment CurrentUser on CurrentUser {\r\n        id\r\n        identifier\r\n        channels {\r\n            id\r\n            code\r\n            token\r\n            permissions\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ATTEMPT_LOGIN = gql`\r\n    mutation AttemptLogin($username: String!, $password: String!, $rememberMe: Boolean!) {\r\n        login(username: $username, password: $password, rememberMe: $rememberMe) {\r\n            ...CurrentUser\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${CURRENT_USER_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const LOG_OUT = gql`\r\n    mutation LogOut {\r\n        logout {\r\n            success\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CURRENT_USER = gql`\r\n    query GetCurrentUser {\r\n        me {\r\n            ...CurrentUser\r\n        }\r\n    }\r\n    ${CURRENT_USER_FRAGMENT}\r\n`;\r\n","import { AttemptLogin, GetCurrentUser, LogOut } from '../../common/generated-types';\r\nimport { ATTEMPT_LOGIN, GET_CURRENT_USER, LOG_OUT } from '../definitions/auth-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class AuthDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    currentUser() {\r\n        return this.baseDataService.query<GetCurrentUser.Query>(GET_CURRENT_USER);\r\n    }\r\n\r\n    attemptLogin(username: string, password: string, rememberMe: boolean) {\r\n        return this.baseDataService.mutate<AttemptLogin.Mutation, AttemptLogin.Variables>(ATTEMPT_LOGIN, {\r\n            username,\r\n            password,\r\n            rememberMe,\r\n        });\r\n    }\r\n\r\n    logOut() {\r\n        return this.baseDataService.mutate<LogOut.Mutation>(LOG_OUT);\r\n    }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { LanguageCode } from '../../common/generated-types';\r\nimport { WidgetLayoutDefinition } from '../dashboard-widget/dashboard-widget-types';\r\n\r\nexport type LocalStorageTypeMap = {\r\n    activeChannelToken: string;\r\n    authToken: string;\r\n    uiLanguageCode: LanguageCode;\r\n    uiLocale: string | undefined;\r\n    contentLanguageCode: LanguageCode;\r\n    orderListLastCustomFilters: any;\r\n    dashboardWidgetLayout: WidgetLayoutDefinition;\r\n    activeTheme: string;\r\n};\r\n\r\nexport type LocalStorageLocationBasedTypeMap = {\r\n    shippingTestOrder: any;\r\n    shippingTestAddress: any;\r\n};\r\n\r\nconst PREFIX = 'vnd_';\r\n\r\n/**\r\n * Wrapper around the browser's LocalStorage / SessionStorage object, for persisting data to the browser.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LocalStorageService {\r\n    constructor(private location: Location) {}\r\n    /**\r\n     * Set a key-value pair in the browser's LocalStorage\r\n     */\r\n    public set<K extends keyof LocalStorageTypeMap>(key: K, value: LocalStorageTypeMap[K]): void {\r\n        const keyName = this.keyName(key);\r\n        localStorage.setItem(keyName, JSON.stringify(value));\r\n    }\r\n\r\n    /**\r\n     * Set a key-value pair specific to the current location (url)\r\n     */\r\n    public setForCurrentLocation<K extends keyof LocalStorageLocationBasedTypeMap>(\r\n        key: K,\r\n        value: LocalStorageLocationBasedTypeMap[K],\r\n    ) {\r\n        const compositeKey = this.getLocationBasedKey(key);\r\n        this.set(compositeKey as any, value);\r\n    }\r\n\r\n    /**\r\n     * Set a key-value pair in the browser's SessionStorage\r\n     */\r\n    public setForSession<K extends keyof LocalStorageTypeMap>(key: K, value: LocalStorageTypeMap[K]): void {\r\n        const keyName = this.keyName(key);\r\n        sessionStorage.setItem(keyName, JSON.stringify(value));\r\n    }\r\n\r\n    /**\r\n     * Get the value of the given key from the SessionStorage or LocalStorage.\r\n     */\r\n    public get<K extends keyof LocalStorageTypeMap>(key: K): LocalStorageTypeMap[K] | null {\r\n        const keyName = this.keyName(key);\r\n        const item = sessionStorage.getItem(keyName) || localStorage.getItem(keyName);\r\n        let result: any;\r\n        try {\r\n            result = JSON.parse(item || 'null');\r\n        } catch (e) {\r\n            // tslint:disable-next-line:no-console\r\n            console.error(`Could not parse the localStorage value for \"${key}\" (${item})`);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Get the value of the given key for the current location (url)\r\n     */\r\n    public getForCurrentLocation<K extends keyof LocalStorageLocationBasedTypeMap>(\r\n        key: K,\r\n    ): LocalStorageLocationBasedTypeMap[K] {\r\n        const compositeKey = this.getLocationBasedKey(key);\r\n        return this.get(compositeKey as any);\r\n    }\r\n\r\n    public remove(key: keyof LocalStorageTypeMap): void {\r\n        const keyName = this.keyName(key);\r\n        sessionStorage.removeItem(keyName);\r\n        localStorage.removeItem(keyName);\r\n    }\r\n\r\n    private getLocationBasedKey(key: string) {\r\n        const path = this.location.path();\r\n        return key + path;\r\n    }\r\n\r\n    private keyName(key: keyof LocalStorageTypeMap): string {\r\n        return PREFIX + key;\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nexport const REQUEST_STARTED = gql`\r\n    mutation RequestStarted {\r\n        requestStarted @client\r\n    }\r\n`;\r\n\r\nexport const REQUEST_COMPLETED = gql`\r\n    mutation RequestCompleted {\r\n        requestCompleted @client\r\n    }\r\n`;\r\n\r\nexport const USER_STATUS_FRAGMENT = gql`\r\n    fragment UserStatus on UserStatus {\r\n        username\r\n        isLoggedIn\r\n        loginTime\r\n        activeChannelId\r\n        permissions\r\n        channels {\r\n            id\r\n            code\r\n            token\r\n            permissions\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SET_AS_LOGGED_IN = gql`\r\n    mutation SetAsLoggedIn($input: UserStatusInput!) {\r\n        setAsLoggedIn(input: $input) @client {\r\n            ...UserStatus\r\n        }\r\n    }\r\n    ${USER_STATUS_FRAGMENT}\r\n`;\r\n\r\nexport const SET_AS_LOGGED_OUT = gql`\r\n    mutation SetAsLoggedOut {\r\n        setAsLoggedOut @client {\r\n            ...UserStatus\r\n        }\r\n    }\r\n    ${USER_STATUS_FRAGMENT}\r\n`;\r\n\r\nexport const SET_UI_LANGUAGE_AND_LOCALE = gql`\r\n    mutation SetUiLanguage($languageCode: LanguageCode!, $locale: String) {\r\n        setUiLanguage(languageCode: $languageCode) @client\r\n        setUiLocale(locale: $locale) @client\r\n    }\r\n`;\r\n\r\nexport const SET_UI_LOCALE = gql`\r\n    mutation SetUiLocale($locale: String) {\r\n        setUiLocale(locale: $locale) @client\r\n    }\r\n`;\r\n\r\nexport const SET_DISPLAY_UI_EXTENSION_POINTS = gql`\r\n    mutation SetDisplayUiExtensionPoints($display: Boolean!) {\r\n        setDisplayUiExtensionPoints(display: $display) @client\r\n    }\r\n`;\r\n\r\nexport const SET_CONTENT_LANGUAGE = gql`\r\n    mutation SetContentLanguage($languageCode: LanguageCode!) {\r\n        setContentLanguage(languageCode: $languageCode) @client\r\n    }\r\n`;\r\n\r\nexport const SET_UI_THEME = gql`\r\n    mutation SetUiTheme($theme: String!) {\r\n        setUiTheme(theme: $theme) @client\r\n    }\r\n`;\r\n\r\nexport const GET_NEWTORK_STATUS = gql`\r\n    query GetNetworkStatus {\r\n        networkStatus @client {\r\n            inFlightRequests\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_USER_STATUS = gql`\r\n    query GetUserStatus {\r\n        userStatus @client {\r\n            ...UserStatus\r\n        }\r\n    }\r\n    ${USER_STATUS_FRAGMENT}\r\n`;\r\n\r\nexport const GET_UI_STATE = gql`\r\n    query GetUiState {\r\n        uiState @client {\r\n            language\r\n            locale\r\n            contentLanguage\r\n            theme\r\n            displayUiExtensionPoints\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CLIENT_STATE = gql`\r\n    query GetClientState {\r\n        networkStatus @client {\r\n            inFlightRequests\r\n        }\r\n        userStatus @client {\r\n            ...UserStatus\r\n        }\r\n        uiState @client {\r\n            language\r\n            locale\r\n            contentLanguage\r\n            theme\r\n            displayUiExtensionPoints\r\n        }\r\n    }\r\n    ${USER_STATUS_FRAGMENT}\r\n`;\r\n\r\nexport const SET_ACTIVE_CHANNEL = gql`\r\n    mutation SetActiveChannel($channelId: ID!) {\r\n        setActiveChannel(channelId: $channelId) @client {\r\n            ...UserStatus\r\n        }\r\n    }\r\n    ${USER_STATUS_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_USER_CHANNELS = gql`\r\n    mutation UpdateUserChannels($channels: [CurrentUserChannelInput!]!) {\r\n        updateUserChannels(channels: $channels) @client {\r\n            ...UserStatus\r\n        }\r\n    }\r\n    ${USER_STATUS_FRAGMENT}\r\n`;\r\n","import { ApolloQueryResult, NetworkStatus } from '@apollo/client/core';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { Apollo, QueryRef } from 'apollo-angular';\r\nimport { merge, Observable, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, filter, finalize, map, skip, take, takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport { GetUserStatus } from '../common/generated-types';\r\n\r\nimport { GET_USER_STATUS } from './definitions/client-definitions';\r\n\r\n/**\r\n * @description\r\n * This class wraps the Apollo Angular QueryRef object and exposes some getters\r\n * for convenience.\r\n *\r\n * @docsCategory providers\r\n * @docsPage DataService\r\n */\r\nexport class QueryResult<T, V = Record<string, any>> {\r\n    constructor(private queryRef: QueryRef<T, V>, private apollo: Apollo) {\r\n        this.valueChanges = queryRef.valueChanges;\r\n    }\r\n\r\n    completed$ = new Subject();\r\n    private valueChanges: Observable<ApolloQueryResult<T>>;\r\n\r\n    /**\r\n     * @description\r\n     * Re-fetch this query whenever the active Channel changes.\r\n     */\r\n    refetchOnChannelChange(): QueryResult<T, V> {\r\n        const userStatus$ = this.apollo.watchQuery<GetUserStatus.Query>({\r\n            query: GET_USER_STATUS,\r\n        }).valueChanges;\r\n        const activeChannelId$ = userStatus$.pipe(\r\n            map(data => data.data.userStatus.activeChannelId),\r\n            filter(notNullOrUndefined),\r\n            distinctUntilChanged(),\r\n            skip(1),\r\n            takeUntil(this.completed$),\r\n        );\r\n        const loggedOut$ = userStatus$.pipe(\r\n            map(data => data.data.userStatus.isLoggedIn),\r\n            distinctUntilChanged(),\r\n            skip(1),\r\n            filter(isLoggedIn => !isLoggedIn),\r\n            takeUntil(this.completed$),\r\n        );\r\n\r\n        this.valueChanges = merge(activeChannelId$, this.queryRef.valueChanges).pipe(\r\n            tap(val => {\r\n                if (typeof val === 'string') {\r\n                    new Promise(resolve => setTimeout(resolve, 50)).then(() => this.queryRef.refetch());\r\n                }\r\n            }),\r\n            filter<any>(val => typeof val !== 'string'),\r\n            takeUntil(loggedOut$),\r\n            takeUntil(this.completed$),\r\n        );\r\n        this.queryRef.valueChanges = this.valueChanges;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Returns an Observable which emits a single result and then completes.\r\n     */\r\n    get single$(): Observable<T> {\r\n        return this.valueChanges.pipe(\r\n            filter(result => result.networkStatus === NetworkStatus.ready),\r\n            take(1),\r\n            map(result => result.data),\r\n            finalize(() => {\r\n                this.completed$.next();\r\n                this.completed$.complete();\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Returns an Observable which emits until unsubscribed.\r\n     */\r\n    get stream$(): Observable<T> {\r\n        return this.valueChanges.pipe(\r\n            filter(result => result.networkStatus === NetworkStatus.ready),\r\n            map(result => result.data),\r\n            finalize(() => {\r\n                this.completed$.next();\r\n                this.completed$.complete();\r\n            }),\r\n        );\r\n    }\r\n\r\n    get ref(): QueryRef<T, V> {\r\n        return this.queryRef;\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Returns a single-result Observable after applying the map function.\r\n     */\r\n    mapSingle<R>(mapFn: (item: T) => R): Observable<R> {\r\n        return this.single$.pipe(map(mapFn));\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Returns a multiple-result Observable after applying the map function.\r\n     */\r\n    mapStream<R>(mapFn: (item: T) => R): Observable<R> {\r\n        return this.stream$.pipe(map(mapFn));\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nimport {\r\n    CONFIGURABLE_OPERATION_DEF_FRAGMENT,\r\n    CONFIGURABLE_OPERATION_FRAGMENT,\r\n    ERROR_RESULT_FRAGMENT,\r\n} from './shared-definitions';\r\n\r\nexport const COUNTRY_FRAGMENT = gql`\r\n    fragment Country on Country {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        name\r\n        enabled\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_COUNTRY_LIST = gql`\r\n    query GetCountryList($options: CountryListOptions) {\r\n        countries(options: $options) {\r\n            items {\r\n                id\r\n                code\r\n                name\r\n                enabled\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_AVAILABLE_COUNTRIES = gql`\r\n    query GetAvailableCountries {\r\n        countries(options: { filter: { enabled: { eq: true } } }) {\r\n            items {\r\n                id\r\n                code\r\n                name\r\n                enabled\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_COUNTRY = gql`\r\n    query GetCountry($id: ID!) {\r\n        country(id: $id) {\r\n            ...Country\r\n        }\r\n    }\r\n    ${COUNTRY_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_COUNTRY = gql`\r\n    mutation CreateCountry($input: CreateCountryInput!) {\r\n        createCountry(input: $input) {\r\n            ...Country\r\n        }\r\n    }\r\n    ${COUNTRY_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_COUNTRY = gql`\r\n    mutation UpdateCountry($input: UpdateCountryInput!) {\r\n        updateCountry(input: $input) {\r\n            ...Country\r\n        }\r\n    }\r\n    ${COUNTRY_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_COUNTRY = gql`\r\n    mutation DeleteCountry($id: ID!) {\r\n        deleteCountry(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ZONE_FRAGMENT = gql`\r\n    fragment Zone on Zone {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        members {\r\n            ...Country\r\n        }\r\n    }\r\n    ${COUNTRY_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ZONES = gql`\r\n    query GetZones {\r\n        zones {\r\n            ...Zone\r\n            members {\r\n                createdAt\r\n                updatedAt\r\n                id\r\n                name\r\n                code\r\n                enabled\r\n            }\r\n        }\r\n    }\r\n    ${ZONE_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ZONE = gql`\r\n    query GetZone($id: ID!) {\r\n        zone(id: $id) {\r\n            ...Zone\r\n        }\r\n    }\r\n    ${ZONE_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_ZONE = gql`\r\n    mutation CreateZone($input: CreateZoneInput!) {\r\n        createZone(input: $input) {\r\n            ...Zone\r\n        }\r\n    }\r\n    ${ZONE_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_ZONE = gql`\r\n    mutation UpdateZone($input: UpdateZoneInput!) {\r\n        updateZone(input: $input) {\r\n            ...Zone\r\n        }\r\n    }\r\n    ${ZONE_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_ZONE = gql`\r\n    mutation DeleteZone($id: ID!) {\r\n        deleteZone(id: $id) {\r\n            message\r\n            result\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_MEMBERS_TO_ZONE = gql`\r\n    mutation AddMembersToZone($zoneId: ID!, $memberIds: [ID!]!) {\r\n        addMembersToZone(zoneId: $zoneId, memberIds: $memberIds) {\r\n            ...Zone\r\n        }\r\n    }\r\n    ${ZONE_FRAGMENT}\r\n`;\r\n\r\nexport const REMOVE_MEMBERS_FROM_ZONE = gql`\r\n    mutation RemoveMembersFromZone($zoneId: ID!, $memberIds: [ID!]!) {\r\n        removeMembersFromZone(zoneId: $zoneId, memberIds: $memberIds) {\r\n            ...Zone\r\n        }\r\n    }\r\n    ${ZONE_FRAGMENT}\r\n`;\r\n\r\nexport const TAX_CATEGORY_FRAGMENT = gql`\r\n    fragment TaxCategory on TaxCategory {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        isDefault\r\n    }\r\n`;\r\n\r\nexport const GET_TAX_CATEGORIES = gql`\r\n    query GetTaxCategories {\r\n        taxCategories {\r\n            ...TaxCategory\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\r\n\r\nexport const GET_TAX_CATEGORY = gql`\r\n    query GetTaxCategory($id: ID!) {\r\n        taxCategory(id: $id) {\r\n            ...TaxCategory\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_TAX_CATEGORY = gql`\r\n    mutation CreateTaxCategory($input: CreateTaxCategoryInput!) {\r\n        createTaxCategory(input: $input) {\r\n            ...TaxCategory\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_TAX_CATEGORY = gql`\r\n    mutation UpdateTaxCategory($input: UpdateTaxCategoryInput!) {\r\n        updateTaxCategory(input: $input) {\r\n            ...TaxCategory\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_TAX_CATEGORY = gql`\r\n    mutation DeleteTaxCategory($id: ID!) {\r\n        deleteTaxCategory(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TAX_RATE_FRAGMENT = gql`\r\n    fragment TaxRate on TaxRate {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        enabled\r\n        value\r\n        category {\r\n            id\r\n            name\r\n        }\r\n        zone {\r\n            id\r\n            name\r\n        }\r\n        customerGroup {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_TAX_RATE_LIST = gql`\r\n    query GetTaxRateList($options: TaxRateListOptions) {\r\n        taxRates(options: $options) {\r\n            items {\r\n                ...TaxRate\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\r\n\r\nexport const GET_TAX_RATE_LIST_SIMPLE = gql`\r\n    query GetTaxRateListSimple($options: TaxRateListOptions) {\r\n        taxRates(options: $options) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                enabled\r\n                value\r\n                category {\r\n                    id\r\n                    name\r\n                }\r\n                zone {\r\n                    id\r\n                    name\r\n                }\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_TAX_RATE = gql`\r\n    query GetTaxRate($id: ID!) {\r\n        taxRate(id: $id) {\r\n            ...TaxRate\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_TAX_RATE = gql`\r\n    mutation CreateTaxRate($input: CreateTaxRateInput!) {\r\n        createTaxRate(input: $input) {\r\n            ...TaxRate\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_TAX_RATE = gql`\r\n    mutation UpdateTaxRate($input: UpdateTaxRateInput!) {\r\n        updateTaxRate(input: $input) {\r\n            ...TaxRate\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_TAX_RATE = gql`\r\n    mutation DeleteTaxRate($id: ID!) {\r\n        deleteTaxRate(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CHANNEL_FRAGMENT = gql`\r\n    fragment Channel on Channel {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        token\r\n        pricesIncludeTax\r\n        currencyCode\r\n        defaultLanguageCode\r\n        defaultShippingZone {\r\n            id\r\n            name\r\n        }\r\n        defaultTaxZone {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CHANNELS = gql`\r\n    query GetChannels {\r\n        channels {\r\n            ...Channel\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n`;\r\n\r\nexport const GET_CHANNEL = gql`\r\n    query GetChannel($id: ID!) {\r\n        channel(id: $id) {\r\n            ...Channel\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ACTIVE_CHANNEL = gql`\r\n    query GetActiveChannel {\r\n        activeChannel {\r\n            ...Channel\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_CHANNEL = gql`\r\n    mutation CreateChannel($input: CreateChannelInput!) {\r\n        createChannel(input: $input) {\r\n            ...Channel\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_CHANNEL = gql`\r\n    mutation UpdateChannel($input: UpdateChannelInput!) {\r\n        updateChannel(input: $input) {\r\n            ...Channel\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_CHANNEL = gql`\r\n    mutation DeleteChannel($id: ID!) {\r\n        deleteChannel(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PAYMENT_METHOD_FRAGMENT = gql`\r\n    fragment PaymentMethod on PaymentMethod {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        code\r\n        description\r\n        enabled\r\n        checker {\r\n            ...ConfigurableOperation\r\n        }\r\n        handler {\r\n            ...ConfigurableOperation\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PAYMENT_METHOD_LIST = gql`\r\n    query GetPaymentMethodList($options: PaymentMethodListOptions!) {\r\n        paymentMethods(options: $options) {\r\n            items {\r\n                ...PaymentMethod\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PAYMENT_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PAYMENT_METHOD_OPERATIONS = gql`\r\n    query GetPaymentMethodOperations {\r\n        paymentMethodEligibilityCheckers {\r\n            ...ConfigurableOperationDef\r\n        }\r\n        paymentMethodHandlers {\r\n            ...ConfigurableOperationDef\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_DEF_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PAYMENT_METHOD = gql`\r\n    query GetPaymentMethod($id: ID!) {\r\n        paymentMethod(id: $id) {\r\n            ...PaymentMethod\r\n        }\r\n    }\r\n    ${PAYMENT_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_PAYMENT_METHOD = gql`\r\n    mutation CreatePaymentMethod($input: CreatePaymentMethodInput!) {\r\n        createPaymentMethod(input: $input) {\r\n            ...PaymentMethod\r\n        }\r\n    }\r\n    ${PAYMENT_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_PAYMENT_METHOD = gql`\r\n    mutation UpdatePaymentMethod($input: UpdatePaymentMethodInput!) {\r\n        updatePaymentMethod(input: $input) {\r\n            ...PaymentMethod\r\n        }\r\n    }\r\n    ${PAYMENT_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_PAYMENT_METHOD = gql`\r\n    mutation DeletePaymentMethod($id: ID!, $force: Boolean) {\r\n        deletePaymentMethod(id: $id, force: $force) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GLOBAL_SETTINGS_FRAGMENT = gql`\r\n    fragment GlobalSettings on GlobalSettings {\r\n        id\r\n        availableLanguages\r\n        trackInventory\r\n        outOfStockThreshold\r\n        serverConfig {\r\n            permissions {\r\n                name\r\n                description\r\n                assignable\r\n            }\r\n            orderProcess {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_GLOBAL_SETTINGS = gql`\r\n    query GetGlobalSettings {\r\n        globalSettings {\r\n            ...GlobalSettings\r\n        }\r\n    }\r\n    ${GLOBAL_SETTINGS_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_GLOBAL_SETTINGS = gql`\r\n    mutation UpdateGlobalSettings($input: UpdateGlobalSettingsInput!) {\r\n        updateGlobalSettings(input: $input) {\r\n            ...GlobalSettings\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${GLOBAL_SETTINGS_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const CUSTOM_FIELD_CONFIG_FRAGMENT = gql`\r\n    fragment CustomFieldConfig on CustomField {\r\n        name\r\n        type\r\n        list\r\n        description {\r\n            languageCode\r\n            value\r\n        }\r\n        label {\r\n            languageCode\r\n            value\r\n        }\r\n        readonly\r\n        nullable\r\n        ui\r\n    }\r\n`;\r\n\r\nexport const STRING_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment StringCustomField on StringCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n        pattern\r\n        options {\r\n            label {\r\n                languageCode\r\n                value\r\n            }\r\n            value\r\n        }\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const LOCALE_STRING_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment LocaleStringCustomField on LocaleStringCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n        pattern\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const TEXT_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment TextCustomField on TextCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const BOOLEAN_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment BooleanCustomField on BooleanCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const INT_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment IntCustomField on IntCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n        intMin: min\r\n        intMax: max\r\n        intStep: step\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const FLOAT_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment FloatCustomField on FloatCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n        floatMin: min\r\n        floatMax: max\r\n        floatStep: step\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const DATE_TIME_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment DateTimeCustomField on DateTimeCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n        datetimeMin: min\r\n        datetimeMax: max\r\n        datetimeStep: step\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\nexport const RELATION_CUSTOM_FIELD_FRAGMENT = gql`\r\n    fragment RelationCustomField on RelationCustomFieldConfig {\r\n        ...CustomFieldConfig\r\n        entity\r\n        scalarFields\r\n    }\r\n    ${CUSTOM_FIELD_CONFIG_FRAGMENT}\r\n`;\r\n\r\nexport const ALL_CUSTOM_FIELDS_FRAGMENT = gql`\r\n    fragment CustomFields on CustomField {\r\n        ... on StringCustomFieldConfig {\r\n            ...StringCustomField\r\n        }\r\n        ... on LocaleStringCustomFieldConfig {\r\n            ...LocaleStringCustomField\r\n        }\r\n        ... on TextCustomFieldConfig {\r\n            ...TextCustomField\r\n        }\r\n        ... on BooleanCustomFieldConfig {\r\n            ...BooleanCustomField\r\n        }\r\n        ... on IntCustomFieldConfig {\r\n            ...IntCustomField\r\n        }\r\n        ... on FloatCustomFieldConfig {\r\n            ...FloatCustomField\r\n        }\r\n        ... on DateTimeCustomFieldConfig {\r\n            ...DateTimeCustomField\r\n        }\r\n        ... on RelationCustomFieldConfig {\r\n            ...RelationCustomField\r\n        }\r\n    }\r\n    ${STRING_CUSTOM_FIELD_FRAGMENT}\r\n    ${LOCALE_STRING_CUSTOM_FIELD_FRAGMENT}\r\n    ${TEXT_CUSTOM_FIELD_FRAGMENT}\r\n    ${BOOLEAN_CUSTOM_FIELD_FRAGMENT}\r\n    ${INT_CUSTOM_FIELD_FRAGMENT}\r\n    ${FLOAT_CUSTOM_FIELD_FRAGMENT}\r\n    ${DATE_TIME_CUSTOM_FIELD_FRAGMENT}\r\n    ${RELATION_CUSTOM_FIELD_FRAGMENT}\r\n`;\r\n\r\nexport const GET_SERVER_CONFIG = gql`\r\n    query GetServerConfig {\r\n        globalSettings {\r\n            id\r\n            serverConfig {\r\n                orderProcess {\r\n                    name\r\n                    to\r\n                }\r\n                permittedAssetTypes\r\n                permissions {\r\n                    name\r\n                    description\r\n                    assignable\r\n                }\r\n                customFieldConfig {\r\n                    Address {\r\n                        ...CustomFields\r\n                    }\r\n                    Administrator {\r\n                        ...CustomFields\r\n                    }\r\n                    Asset {\r\n                        ...CustomFields\r\n                    }\r\n                    Channel {\r\n                        ...CustomFields\r\n                    }\r\n                    Collection {\r\n                        ...CustomFields\r\n                    }\r\n                    Country {\r\n                        ...CustomFields\r\n                    }\r\n                    Customer {\r\n                        ...CustomFields\r\n                    }\r\n                    CustomerGroup {\r\n                        ...CustomFields\r\n                    }\r\n                    Facet {\r\n                        ...CustomFields\r\n                    }\r\n                    FacetValue {\r\n                        ...CustomFields\r\n                    }\r\n                    Fulfillment {\r\n                        ...CustomFields\r\n                    }\r\n                    GlobalSettings {\r\n                        ...CustomFields\r\n                    }\r\n                    Order {\r\n                        ...CustomFields\r\n                    }\r\n                    OrderLine {\r\n                        ...CustomFields\r\n                    }\r\n                    PaymentMethod {\r\n                        ...CustomFields\r\n                    }\r\n                    Product {\r\n                        ...CustomFields\r\n                    }\r\n                    ProductOption {\r\n                        ...CustomFields\r\n                    }\r\n                    ProductOptionGroup {\r\n                        ...CustomFields\r\n                    }\r\n                    ProductVariant {\r\n                        ...CustomFields\r\n                    }\r\n                    Promotion {\r\n                        ...CustomFields\r\n                    }\r\n                    ShippingMethod {\r\n                        ...CustomFields\r\n                    }\r\n                    TaxCategory {\r\n                        ...CustomFields\r\n                    }\r\n                    TaxRate {\r\n                        ...CustomFields\r\n                    }\r\n                    User {\r\n                        ...CustomFields\r\n                    }\r\n                    Zone {\r\n                        ...CustomFields\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ${ALL_CUSTOM_FIELDS_FRAGMENT}\r\n`;\r\n\r\nexport const JOB_INFO_FRAGMENT = gql`\r\n    fragment JobInfo on Job {\r\n        id\r\n        createdAt\r\n        startedAt\r\n        settledAt\r\n        queueName\r\n        state\r\n        isSettled\r\n        progress\r\n        duration\r\n        data\r\n        result\r\n        error\r\n        retries\r\n        attempts\r\n    }\r\n`;\r\n\r\nexport const GET_JOB_INFO = gql`\r\n    query GetJobInfo($id: ID!) {\r\n        job(jobId: $id) {\r\n            ...JobInfo\r\n        }\r\n    }\r\n    ${JOB_INFO_FRAGMENT}\r\n`;\r\n\r\nexport const GET_JOBS_LIST = gql`\r\n    query GetAllJobs($options: JobListOptions) {\r\n        jobs(options: $options) {\r\n            items {\r\n                ...JobInfo\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${JOB_INFO_FRAGMENT}\r\n`;\r\n\r\nexport const GET_JOBS_BY_ID = gql`\r\n    query GetJobsById($ids: [ID!]!) {\r\n        jobsById(jobIds: $ids) {\r\n            ...JobInfo\r\n        }\r\n    }\r\n    ${JOB_INFO_FRAGMENT}\r\n`;\r\n\r\nexport const GET_JOB_QUEUE_LIST = gql`\r\n    query GetJobQueueList {\r\n        jobQueues {\r\n            name\r\n            running\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CANCEL_JOB = gql`\r\n    mutation CancelJob($id: ID!) {\r\n        cancelJob(jobId: $id) {\r\n            ...JobInfo\r\n        }\r\n    }\r\n    ${JOB_INFO_FRAGMENT}\r\n`;\r\n\r\nexport const REINDEX = gql`\r\n    mutation Reindex {\r\n        reindex {\r\n            ...JobInfo\r\n        }\r\n    }\r\n    ${JOB_INFO_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PENDING_SEARCH_INDEX_UPDATES = gql`\r\n    query GetPendingSearchIndexUpdates {\r\n        pendingSearchIndexUpdates\r\n    }\r\n`;\r\n\r\nexport const RUN_PENDING_SEARCH_INDEX_UPDATES = gql`\r\n    mutation RunPendingSearchIndexUpdates {\r\n        runPendingSearchIndexUpdates {\r\n            success\r\n        }\r\n    }\r\n`;\r\n","import { Injectable, Injector } from '@angular/core';\r\n\r\nimport {\r\n    CustomFieldConfig,\r\n    CustomFields,\r\n    GetGlobalSettings,\r\n    GetServerConfig,\r\n    OrderProcessState,\r\n    PermissionDefinition,\r\n    ServerConfig,\r\n} from '../common/generated-types';\r\n\r\nimport { GET_GLOBAL_SETTINGS, GET_SERVER_CONFIG } from './definitions/settings-definitions';\r\nimport { BaseDataService } from './providers/base-data.service';\r\n\r\nexport function initializeServerConfigService(serverConfigService: ServerConfigService): () => Promise<any> {\r\n    return serverConfigService.init();\r\n}\r\n\r\n/**\r\n * A service which fetches the config from the server upon initialization, and then provides that config\r\n * to the components which require it.\r\n */\r\n@Injectable()\r\nexport class ServerConfigService {\r\n    private _serverConfig: ServerConfig = {} as any;\r\n\r\n    private get baseDataService() {\r\n        return this.injector.get<BaseDataService>(BaseDataService);\r\n    }\r\n\r\n    constructor(private injector: Injector) {}\r\n\r\n    /**\r\n     * Fetches the ServerConfig. Should be run as part of the app bootstrap process by attaching\r\n     * to the Angular APP_INITIALIZER token.\r\n     */\r\n    init(): () => Promise<any> {\r\n        return () => this.getServerConfig();\r\n    }\r\n\r\n    /**\r\n     * Fetch the ServerConfig. Should be run on app init (in case user is already logged in) and on successful login.\r\n     */\r\n    getServerConfig() {\r\n        return this.baseDataService\r\n            .query<GetServerConfig.Query>(GET_SERVER_CONFIG)\r\n            .single$.toPromise()\r\n            .then(\r\n                result => {\r\n                    this._serverConfig = result.globalSettings.serverConfig;\r\n                },\r\n                err => {\r\n                    // Let the error fall through to be caught by the http interceptor.\r\n                },\r\n            );\r\n    }\r\n\r\n    getAvailableLanguages() {\r\n        return this.baseDataService\r\n            .query<GetGlobalSettings.Query>(GET_GLOBAL_SETTINGS, {}, 'cache-first')\r\n            .mapSingle(res => res.globalSettings.availableLanguages);\r\n    }\r\n\r\n    /**\r\n     * When any of the GlobalSettings are modified, this method should be called to update the Apollo cache.\r\n     */\r\n    refreshGlobalSettings() {\r\n        return this.baseDataService.query<GetGlobalSettings.Query>(GET_GLOBAL_SETTINGS, {}, 'network-only')\r\n            .single$;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the custom field configs for the given entity type.\r\n     */\r\n    getCustomFieldsFor(type: Exclude<keyof CustomFields, '__typename'>): CustomFieldConfig[] {\r\n        return this.serverConfig.customFieldConfig[type] || [];\r\n    }\r\n\r\n    getOrderProcessStates(): OrderProcessState[] {\r\n        return this.serverConfig.orderProcess;\r\n    }\r\n\r\n    getPermittedAssetTypes(): string[] {\r\n        return this.serverConfig.permittedAssetTypes;\r\n    }\r\n\r\n    getPermissionDefinitions(): PermissionDefinition[] {\r\n        return this.serverConfig.permissions;\r\n    }\r\n\r\n    get serverConfig(): ServerConfig {\r\n        return this._serverConfig;\r\n    }\r\n}\r\n","import {\r\n    DefinitionNode,\r\n    DocumentNode,\r\n    FieldNode,\r\n    FragmentDefinitionNode,\r\n    Kind,\r\n    SelectionNode,\r\n} from 'graphql';\r\n\r\nimport { CustomFields, RelationCustomField, RelationCustomFieldFragment } from '../../common/generated-types';\r\n\r\n/**\r\n * Given a GraphQL AST (DocumentNode), this function looks for fragment definitions and adds and configured\r\n * custom fields to those fragments.\r\n */\r\nexport function addCustomFields(documentNode: DocumentNode, customFields: CustomFields): DocumentNode {\r\n    const fragmentDefs = documentNode.definitions.filter(isFragmentDefinition);\r\n\r\n    for (const fragmentDef of fragmentDefs) {\r\n        let entityType = fragmentDef.typeCondition.name.value as keyof Pick<\r\n            CustomFields,\r\n            Exclude<keyof CustomFields, '__typename'>\r\n        >;\r\n\r\n        if (entityType === ('OrderAddress' as any)) {\r\n            // OrderAddress is a special case of the Address entity, and shares its custom fields\r\n            // so we treat it as an alias\r\n            entityType = 'Address';\r\n        }\r\n\r\n        const customFieldsForType = customFields[entityType];\r\n        if (customFieldsForType && customFieldsForType.length) {\r\n            (fragmentDef.selectionSet.selections as SelectionNode[]).push({\r\n                name: {\r\n                    kind: Kind.NAME,\r\n                    value: 'customFields',\r\n                },\r\n                kind: Kind.FIELD,\r\n                selectionSet: {\r\n                    kind: Kind.SELECTION_SET,\r\n                    selections: customFieldsForType.map(customField => {\r\n                        return {\r\n                            kind: Kind.FIELD,\r\n                            name: {\r\n                                kind: Kind.NAME,\r\n                                value: customField.name,\r\n                            },\r\n                            // For \"relation\" custom fields, we need to also select\r\n                            // all the scalar fields of the related type\r\n                            ...(customField.type === 'relation'\r\n                                ? {\r\n                                      selectionSet: {\r\n                                          kind: Kind.SELECTION_SET,\r\n                                          selections: (customField as RelationCustomFieldFragment).scalarFields.map(\r\n                                              f => ({\r\n                                                  kind: Kind.FIELD,\r\n                                                  name: { kind: Kind.NAME, value: f },\r\n                                              }),\r\n                                          ),\r\n                                      },\r\n                                  }\r\n                                : {}),\r\n                        } as FieldNode;\r\n                    }),\r\n                },\r\n            });\r\n\r\n            const localeStrings = customFieldsForType.filter(field => field.type === 'localeString');\r\n\r\n            const translationsField = fragmentDef.selectionSet.selections\r\n                .filter(isFieldNode)\r\n                .find(field => field.name.value === 'translations');\r\n\r\n            if (localeStrings.length && translationsField && translationsField.selectionSet) {\r\n                (translationsField.selectionSet.selections as SelectionNode[]).push({\r\n                    name: {\r\n                        kind: Kind.NAME,\r\n                        value: 'customFields',\r\n                    },\r\n                    kind: Kind.FIELD,\r\n                    selectionSet: {\r\n                        kind: Kind.SELECTION_SET,\r\n                        selections: localeStrings.map(customField => {\r\n                            return {\r\n                                kind: Kind.FIELD,\r\n                                name: {\r\n                                    kind: Kind.NAME,\r\n                                    value: customField.name,\r\n                                },\r\n                            } as FieldNode;\r\n                        }),\r\n                    },\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return documentNode;\r\n}\r\n\r\nfunction isFragmentDefinition(value: DefinitionNode): value is FragmentDefinitionNode {\r\n    return value.kind === Kind.FRAGMENT_DEFINITION;\r\n}\r\n\r\nfunction isFieldNode(value: SelectionNode): value is FieldNode {\r\n    return value.kind === Kind.FIELD;\r\n}\r\n","import { simpleDeepClone } from '@vendure/common/lib/simple-deep-clone';\r\nimport { DocumentNode, getOperationAST, NamedTypeNode, TypeNode } from 'graphql';\r\n\r\nimport { CustomFieldConfig } from '../../common/generated-types';\r\n\r\nconst CREATE_ENTITY_REGEX = /Create([A-Za-z]+)Input/;\r\nconst UPDATE_ENTITY_REGEX = /Update([A-Za-z]+)Input/;\r\n\r\ntype InputWithOptionalCustomFields = Record<string, any> & {\r\n    customFields?: Record<string, any>;\r\n};\r\ntype InputWithCustomFields = Record<string, any> & {\r\n    customFields: Record<string, any>;\r\n};\r\n\r\ntype EntityInput = InputWithOptionalCustomFields & {\r\n    translations?: InputWithOptionalCustomFields[];\r\n};\r\n\r\n/**\r\n * Checks the current documentNode for an operation with a variable named \"Create<Entity>Input\" or \"Update<Entity>Input\"\r\n * and if a match is found, returns the <Entity> name.\r\n */\r\nexport function isEntityCreateOrUpdateMutation(documentNode: DocumentNode): string | undefined {\r\n    const operationDef = getOperationAST(documentNode, null);\r\n    if (operationDef && operationDef.variableDefinitions) {\r\n        for (const variableDef of operationDef.variableDefinitions) {\r\n            const namedType = extractInputType(variableDef.type);\r\n            const inputTypeName = namedType.name.value;\r\n\r\n            // special cases which don't follow the usual pattern\r\n            if (inputTypeName === 'UpdateActiveAdministratorInput') {\r\n                return 'Administrator';\r\n            }\r\n\r\n            const createMatch = inputTypeName.match(CREATE_ENTITY_REGEX);\r\n            if (createMatch) {\r\n                return createMatch[1];\r\n            }\r\n            const updateMatch = inputTypeName.match(UPDATE_ENTITY_REGEX);\r\n            if (updateMatch) {\r\n                return updateMatch[1];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction extractInputType(type: TypeNode): NamedTypeNode {\r\n    if (type.kind === 'NonNullType') {\r\n        return extractInputType(type.type);\r\n    }\r\n    if (type.kind === 'ListType') {\r\n        return extractInputType(type.type);\r\n    }\r\n    return type;\r\n}\r\n\r\n/**\r\n * Removes any `readonly` custom fields from an entity (including its translations).\r\n * To be used before submitting the entity for a create or update request.\r\n */\r\nexport function removeReadonlyCustomFields(\r\n    variables: { input?: EntityInput | EntityInput[] } | EntityInput | EntityInput[],\r\n    customFieldConfig: CustomFieldConfig[],\r\n): { input?: EntityInput | EntityInput[] } | EntityInput | EntityInput[] {\r\n    if (!Array.isArray(variables)) {\r\n        if (Array.isArray(variables.input)) {\r\n            for (const input of variables.input) {\r\n                removeReadonly(input, customFieldConfig);\r\n            }\r\n        } else {\r\n            removeReadonly(variables.input, customFieldConfig);\r\n        }\r\n    } else {\r\n        for (const input of variables) {\r\n            removeReadonly(input, customFieldConfig);\r\n        }\r\n    }\r\n    return removeReadonly(variables, customFieldConfig);\r\n}\r\n\r\nfunction removeReadonly(input: InputWithOptionalCustomFields, customFieldConfig: CustomFieldConfig[]) {\r\n    for (const field of customFieldConfig) {\r\n        if (field.readonly) {\r\n            if (field.type === 'localeString') {\r\n                if (hasTranslations(input)) {\r\n                    for (const translation of input.translations) {\r\n                        if (\r\n                            hasCustomFields(translation) &&\r\n                            translation.customFields[field.name] !== undefined\r\n                        ) {\r\n                            delete translation.customFields[field.name];\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (hasCustomFields(input) && input.customFields[field.name] !== undefined) {\r\n                    delete input.customFields[field.name];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return input;\r\n}\r\n\r\nfunction hasCustomFields(input: any): input is InputWithCustomFields {\r\n    return input != null && input.hasOwnProperty('customFields');\r\n}\r\n\r\nfunction hasTranslations(input: any): input is { translations: InputWithOptionalCustomFields[] } {\r\n    return input != null && input.hasOwnProperty('translations');\r\n}\r\n","import { getGraphQlInputName } from '@vendure/common/lib/shared-utils';\r\nimport { simpleDeepClone } from '@vendure/common/lib/simple-deep-clone';\r\n\r\nimport { CustomFieldConfig } from '../../common/generated-types';\r\n\r\n/**\r\n * Transforms any custom field \"relation\" type inputs into the corresponding `<name>Id` format,\r\n * as expected by the server.\r\n */\r\nexport function transformRelationCustomFieldInputs<\r\n    T extends { input?: Record<string, any> | Array<Record<string, any>> } & Record<string, any> = any\r\n>(variables: T, customFieldConfig: CustomFieldConfig[]): T {\r\n    if (variables.input) {\r\n        if (Array.isArray(variables.input)) {\r\n            for (const item of variables.input) {\r\n                transformRelations(item, customFieldConfig);\r\n            }\r\n        } else {\r\n            transformRelations(variables.input, customFieldConfig);\r\n        }\r\n    }\r\n    return transformRelations(variables, customFieldConfig);\r\n}\r\n\r\n/**\r\n * @description\r\n * When persisting custom fields, we need to send just the IDs of the relations,\r\n * rather than the objects themselves.\r\n */\r\nfunction transformRelations<T>(input: T, customFieldConfig: CustomFieldConfig[]) {\r\n    for (const field of customFieldConfig) {\r\n        if (field.type === 'relation') {\r\n            if (hasCustomFields(input)) {\r\n                const entityValue = input.customFields[field.name];\r\n                if (input.customFields.hasOwnProperty(field.name)) {\r\n                    delete input.customFields[field.name];\r\n                    input.customFields[getGraphQlInputName(field)] =\r\n                        field.list && Array.isArray(entityValue)\r\n                            ? entityValue.map(v => v?.id)\r\n                            : entityValue === null\r\n                            ? null\r\n                            : entityValue?.id;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return input;\r\n}\r\n\r\nfunction hasCustomFields(input: any): input is { customFields: { [key: string]: any } } {\r\n    return input != null && input.hasOwnProperty('customFields') && typeof input.customFields === 'object';\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { DataProxy, MutationUpdaterFn, WatchQueryFetchPolicy } from '@apollo/client/core';\r\nimport { simpleDeepClone } from '@vendure/common/lib/simple-deep-clone';\r\nimport { Apollo } from 'apollo-angular';\r\nimport { DocumentNode } from 'graphql/language/ast';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { CustomFields } from '../../common/generated-types';\r\nimport { LocalStorageService } from '../../providers/local-storage/local-storage.service';\r\nimport { QueryResult } from '../query-result';\r\nimport { ServerConfigService } from '../server-config';\r\nimport { addCustomFields } from '../utils/add-custom-fields';\r\nimport {\r\n    isEntityCreateOrUpdateMutation,\r\n    removeReadonlyCustomFields,\r\n} from '../utils/remove-readonly-custom-fields';\r\nimport { transformRelationCustomFieldInputs } from '../utils/transform-relation-custom-field-inputs';\r\n\r\n@Injectable()\r\nexport class BaseDataService {\r\n    constructor(\r\n        private apollo: Apollo,\r\n        private httpClient: HttpClient,\r\n        private localStorageService: LocalStorageService,\r\n        private serverConfigService: ServerConfigService,\r\n    ) {}\r\n\r\n    private get customFields(): CustomFields {\r\n        return this.serverConfigService.serverConfig.customFieldConfig || {};\r\n    }\r\n\r\n    /**\r\n     * Performs a GraphQL watch query\r\n     */\r\n    query<T, V = Record<string, any>>(\r\n        query: DocumentNode,\r\n        variables?: V,\r\n        fetchPolicy: WatchQueryFetchPolicy = 'cache-and-network',\r\n    ): QueryResult<T, V> {\r\n        const withCustomFields = addCustomFields(query, this.customFields);\r\n        const queryRef = this.apollo.watchQuery<T, V>({\r\n            query: withCustomFields,\r\n            variables,\r\n            fetchPolicy,\r\n        });\r\n        const queryResult = new QueryResult<T, any>(queryRef, this.apollo);\r\n        return queryResult;\r\n    }\r\n\r\n    /**\r\n     * Performs a GraphQL mutation\r\n     */\r\n    mutate<T, V = Record<string, any>>(\r\n        mutation: DocumentNode,\r\n        variables?: V,\r\n        update?: MutationUpdaterFn<T>,\r\n    ): Observable<T> {\r\n        const withCustomFields = addCustomFields(mutation, this.customFields);\r\n        const withoutReadonlyFields = this.prepareCustomFields(mutation, variables);\r\n\r\n        return this.apollo\r\n            .mutate<T, V>({\r\n                mutation: withCustomFields,\r\n                variables: withoutReadonlyFields,\r\n                update,\r\n            })\r\n            .pipe(map(result => result.data as T));\r\n    }\r\n\r\n    private prepareCustomFields<V>(mutation: DocumentNode, variables: V): V {\r\n        const entity = isEntityCreateOrUpdateMutation(mutation);\r\n        if (entity) {\r\n            const customFieldConfig = this.customFields[entity];\r\n            if (variables && customFieldConfig) {\r\n                let variablesClone = simpleDeepClone(variables as any);\r\n                variablesClone = removeReadonlyCustomFields(variablesClone, customFieldConfig);\r\n                variablesClone = transformRelationCustomFieldInputs(variablesClone, customFieldConfig);\r\n                return variablesClone;\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n}\r\n","import {\r\n    CurrentUserChannel,\r\n    CurrentUserChannelInput,\r\n    GetNetworkStatus,\r\n    GetUiState,\r\n    GetUserStatus,\r\n    LanguageCode,\r\n    RequestCompleted,\r\n    RequestStarted,\r\n    SetActiveChannel,\r\n    SetAsLoggedIn,\r\n    SetContentLanguage,\r\n    SetDisplayUiExtensionPoints,\r\n    SetUiLanguage,\r\n    SetUiLocale,\r\n    SetUiTheme,\r\n    UpdateUserChannels,\r\n} from '../../common/generated-types';\r\nimport {\r\n    GET_NEWTORK_STATUS,\r\n    GET_UI_STATE,\r\n    GET_USER_STATUS,\r\n    REQUEST_COMPLETED,\r\n    REQUEST_STARTED,\r\n    SET_ACTIVE_CHANNEL,\r\n    SET_AS_LOGGED_IN,\r\n    SET_AS_LOGGED_OUT,\r\n    SET_CONTENT_LANGUAGE,\r\n    SET_DISPLAY_UI_EXTENSION_POINTS,\r\n    SET_UI_LANGUAGE_AND_LOCALE,\r\n    SET_UI_LOCALE,\r\n    SET_UI_THEME,\r\n    UPDATE_USER_CHANNELS,\r\n} from '../definitions/client-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\n/**\r\n * Note: local queries all have a fetch-policy of \"cache-first\" explicitly specified due to:\r\n * https://github.com/apollographql/apollo-link-state/issues/236\r\n */\r\nexport class ClientDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    startRequest() {\r\n        return this.baseDataService.mutate<RequestStarted.Mutation>(REQUEST_STARTED);\r\n    }\r\n\r\n    completeRequest() {\r\n        return this.baseDataService.mutate<RequestCompleted.Mutation>(REQUEST_COMPLETED);\r\n    }\r\n\r\n    getNetworkStatus() {\r\n        return this.baseDataService.query<GetNetworkStatus.Query>(GET_NEWTORK_STATUS, {}, 'cache-first');\r\n    }\r\n\r\n    loginSuccess(username: string, activeChannelId: string, channels: CurrentUserChannel[]) {\r\n        return this.baseDataService.mutate<SetAsLoggedIn.Mutation, SetAsLoggedIn.Variables>(\r\n            SET_AS_LOGGED_IN,\r\n            {\r\n                input: {\r\n                    username,\r\n                    loginTime: Date.now().toString(),\r\n                    activeChannelId,\r\n                    channels,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    logOut() {\r\n        return this.baseDataService.mutate(SET_AS_LOGGED_OUT);\r\n    }\r\n\r\n    userStatus() {\r\n        return this.baseDataService.query<GetUserStatus.Query>(GET_USER_STATUS, {}, 'cache-first');\r\n    }\r\n\r\n    uiState() {\r\n        return this.baseDataService.query<GetUiState.Query>(GET_UI_STATE, {}, 'cache-first');\r\n    }\r\n\r\n    setUiLanguage(languageCode: LanguageCode, locale?: string) {\r\n        return this.baseDataService.mutate<SetUiLanguage.Mutation, SetUiLanguage.Variables>(\r\n            SET_UI_LANGUAGE_AND_LOCALE,\r\n            {\r\n                languageCode,\r\n                locale,\r\n            },\r\n        );\r\n    }\r\n\r\n    setUiLocale(locale: string | undefined) {\r\n        return this.baseDataService.mutate<SetUiLocale.Mutation, SetUiLocale.Variables>(SET_UI_LOCALE, {\r\n            locale,\r\n        });\r\n    }\r\n\r\n    setContentLanguage(languageCode: LanguageCode) {\r\n        return this.baseDataService.mutate<SetContentLanguage.Mutation, SetContentLanguage.Variables>(\r\n            SET_CONTENT_LANGUAGE,\r\n            {\r\n                languageCode,\r\n            },\r\n        );\r\n    }\r\n\r\n    setUiTheme(theme: string) {\r\n        return this.baseDataService.mutate<SetUiTheme.Mutation, SetUiTheme.Variables>(SET_UI_THEME, {\r\n            theme,\r\n        });\r\n    }\r\n\r\n    setDisplayUiExtensionPoints(display: boolean) {\r\n        return this.baseDataService.mutate<\r\n            SetDisplayUiExtensionPoints.Mutation,\r\n            SetDisplayUiExtensionPoints.Variables\r\n        >(SET_DISPLAY_UI_EXTENSION_POINTS, {\r\n            display,\r\n        });\r\n    }\r\n\r\n    setActiveChannel(channelId: string) {\r\n        return this.baseDataService.mutate<SetActiveChannel.Mutation, SetActiveChannel.Variables>(\r\n            SET_ACTIVE_CHANNEL,\r\n            {\r\n                channelId,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateUserChannels(channels: CurrentUserChannelInput[]) {\r\n        return this.baseDataService.mutate<UpdateUserChannels.Mutation, UpdateUserChannels.Variables>(\r\n            UPDATE_USER_CHANNELS,\r\n            {\r\n                channels,\r\n            },\r\n        );\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nimport { ERROR_RESULT_FRAGMENT } from './shared-definitions';\r\n\r\nexport const ASSET_FRAGMENT = gql`\r\n    fragment Asset on Asset {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        fileSize\r\n        mimeType\r\n        type\r\n        preview\r\n        source\r\n        width\r\n        height\r\n        focalPoint {\r\n            x\r\n            y\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TAG_FRAGMENT = gql`\r\n    fragment Tag on Tag {\r\n        id\r\n        value\r\n    }\r\n`;\r\n\r\nexport const PRODUCT_OPTION_GROUP_FRAGMENT = gql`\r\n    fragment ProductOptionGroup on ProductOptionGroup {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        languageCode\r\n        name\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PRODUCT_OPTION_FRAGMENT = gql`\r\n    fragment ProductOption on ProductOption {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        languageCode\r\n        name\r\n        groupId\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PRODUCT_VARIANT_FRAGMENT = gql`\r\n    fragment ProductVariant on ProductVariant {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        enabled\r\n        languageCode\r\n        name\r\n        price\r\n        currencyCode\r\n        priceWithTax\r\n        stockOnHand\r\n        stockAllocated\r\n        trackInventory\r\n        outOfStockThreshold\r\n        useGlobalOutOfStockThreshold\r\n        taxRateApplied {\r\n            id\r\n            name\r\n            value\r\n        }\r\n        taxCategory {\r\n            id\r\n            name\r\n        }\r\n        sku\r\n        options {\r\n            ...ProductOption\r\n        }\r\n        facetValues {\r\n            id\r\n            code\r\n            name\r\n            facet {\r\n                id\r\n                name\r\n            }\r\n        }\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n        assets {\r\n            ...Asset\r\n        }\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n        channels {\r\n            id\r\n            code\r\n        }\r\n    }\r\n    ${PRODUCT_OPTION_FRAGMENT}\r\n    ${ASSET_FRAGMENT}\r\n`;\r\n\r\nexport const PRODUCT_DETAIL_FRAGMENT = gql`\r\n    fragment ProductDetail on Product {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        enabled\r\n        languageCode\r\n        name\r\n        slug\r\n        description\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n        assets {\r\n            ...Asset\r\n        }\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n            slug\r\n            description\r\n        }\r\n        optionGroups {\r\n            ...ProductOptionGroup\r\n        }\r\n        facetValues {\r\n            id\r\n            code\r\n            name\r\n            facet {\r\n                id\r\n                name\r\n            }\r\n        }\r\n        channels {\r\n            id\r\n            code\r\n        }\r\n    }\r\n    ${PRODUCT_OPTION_GROUP_FRAGMENT}\r\n    ${ASSET_FRAGMENT}\r\n`;\r\n\r\nexport const PRODUCT_OPTION_GROUP_WITH_OPTIONS_FRAGMENT = gql`\r\n    fragment ProductOptionGroupWithOptions on ProductOptionGroup {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        languageCode\r\n        code\r\n        name\r\n        translations {\r\n            id\r\n            name\r\n        }\r\n        options {\r\n            id\r\n            languageCode\r\n            name\r\n            code\r\n            translations {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_PRODUCT = gql`\r\n    mutation UpdateProduct($input: UpdateProductInput!, $variantListOptions: ProductVariantListOptions) {\r\n        updateProduct(input: $input) {\r\n            ...ProductDetail\r\n            variantList(options: $variantListOptions) {\r\n                items {\r\n                    ...ProductVariant\r\n                }\r\n                totalItems\r\n            }\r\n        }\r\n    }\r\n    ${PRODUCT_DETAIL_FRAGMENT}\r\n    ${PRODUCT_VARIANT_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_PRODUCT = gql`\r\n    mutation CreateProduct($input: CreateProductInput!, $variantListOptions: ProductVariantListOptions) {\r\n        createProduct(input: $input) {\r\n            ...ProductDetail\r\n            variantList(options: $variantListOptions) {\r\n                items {\r\n                    ...ProductVariant\r\n                }\r\n                totalItems\r\n            }\r\n        }\r\n    }\r\n    ${PRODUCT_DETAIL_FRAGMENT}\r\n    ${PRODUCT_VARIANT_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_PRODUCT = gql`\r\n    mutation DeleteProduct($id: ID!) {\r\n        deleteProduct(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_PRODUCT_VARIANTS = gql`\r\n    mutation CreateProductVariants($input: [CreateProductVariantInput!]!) {\r\n        createProductVariants(input: $input) {\r\n            ...ProductVariant\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_PRODUCT_VARIANTS = gql`\r\n    mutation UpdateProductVariants($input: [UpdateProductVariantInput!]!) {\r\n        updateProductVariants(input: $input) {\r\n            ...ProductVariant\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_PRODUCT_OPTION_GROUP = gql`\r\n    mutation CreateProductOptionGroup($input: CreateProductOptionGroupInput!) {\r\n        createProductOptionGroup(input: $input) {\r\n            ...ProductOptionGroupWithOptions\r\n        }\r\n    }\r\n    ${PRODUCT_OPTION_GROUP_WITH_OPTIONS_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PRODUCT_OPTION_GROUP = gql`\r\n    query GetProductOptionGroup($id: ID!) {\r\n        productOptionGroup(id: $id) {\r\n            ...ProductOptionGroupWithOptions\r\n        }\r\n    }\r\n    ${PRODUCT_OPTION_GROUP_WITH_OPTIONS_FRAGMENT}\r\n`;\r\n\r\nexport const ADD_OPTION_TO_GROUP = gql`\r\n    mutation AddOptionToGroup($input: CreateProductOptionInput!) {\r\n        createProductOption(input: $input) {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            code\r\n            groupId\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_OPTION_GROUP_TO_PRODUCT = gql`\r\n    mutation AddOptionGroupToProduct($productId: ID!, $optionGroupId: ID!) {\r\n        addOptionGroupToProduct(productId: $productId, optionGroupId: $optionGroupId) {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            optionGroups {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                code\r\n                options {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    code\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const REMOVE_OPTION_GROUP_FROM_PRODUCT = gql`\r\n    mutation RemoveOptionGroupFromProduct($productId: ID!, $optionGroupId: ID!) {\r\n        removeOptionGroupFromProduct(productId: $productId, optionGroupId: $optionGroupId) {\r\n            ... on Product {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                optionGroups {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    code\r\n                    options {\r\n                        id\r\n                        createdAt\r\n                        updatedAt\r\n                        code\r\n                    }\r\n                }\r\n            }\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PRODUCT_WITH_VARIANTS = gql`\r\n    query GetProductWithVariants($id: ID!, $variantListOptions: ProductVariantListOptions) {\r\n        product(id: $id) {\r\n            ...ProductDetail\r\n            variantList(options: $variantListOptions) {\r\n                items {\r\n                    ...ProductVariant\r\n                }\r\n                totalItems\r\n            }\r\n        }\r\n    }\r\n    ${PRODUCT_DETAIL_FRAGMENT}\r\n    ${PRODUCT_VARIANT_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PRODUCT_SIMPLE = gql`\r\n    query GetProductSimple($id: ID!) {\r\n        product(id: $id) {\r\n            id\r\n            name\r\n            featuredAsset {\r\n                ...Asset\r\n            }\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PRODUCT_LIST = gql`\r\n    query GetProductList($options: ProductListOptions) {\r\n        products(options: $options) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                enabled\r\n                languageCode\r\n                name\r\n                slug\r\n                featuredAsset {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    preview\r\n                }\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_PRODUCT_OPTION_GROUPS = gql`\r\n    query GetProductOptionGroups($filterTerm: String) {\r\n        productOptionGroups(filterTerm: $filterTerm) {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            languageCode\r\n            code\r\n            name\r\n            options {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                languageCode\r\n                code\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_ASSET_LIST = gql`\r\n    query GetAssetList($options: AssetListOptions) {\r\n        assets(options: $options) {\r\n            items {\r\n                ...Asset\r\n                tags {\r\n                    ...Tag\r\n                }\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n    ${TAG_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ASSET = gql`\r\n    query GetAsset($id: ID!) {\r\n        asset(id: $id) {\r\n            ...Asset\r\n            tags {\r\n                ...Tag\r\n            }\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n    ${TAG_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_ASSETS = gql`\r\n    mutation CreateAssets($input: [CreateAssetInput!]!) {\r\n        createAssets(input: $input) {\r\n            ...Asset\r\n            ... on Asset {\r\n                tags {\r\n                    ...Tag\r\n                }\r\n            }\r\n            ... on ErrorResult {\r\n                message\r\n            }\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n    ${TAG_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_ASSET = gql`\r\n    mutation UpdateAsset($input: UpdateAssetInput!) {\r\n        updateAsset(input: $input) {\r\n            ...Asset\r\n            tags {\r\n                ...Tag\r\n            }\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n    ${TAG_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_ASSETS = gql`\r\n    mutation DeleteAssets($input: DeleteAssetsInput!) {\r\n        deleteAssets(input: $input) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SEARCH_PRODUCTS = gql`\r\n    query SearchProducts($input: SearchInput!) {\r\n        search(input: $input) {\r\n            totalItems\r\n            items {\r\n                enabled\r\n                productId\r\n                productName\r\n                productAsset {\r\n                    id\r\n                    preview\r\n                    focalPoint {\r\n                        x\r\n                        y\r\n                    }\r\n                }\r\n                productVariantId\r\n                productVariantName\r\n                productVariantAsset {\r\n                    id\r\n                    preview\r\n                    focalPoint {\r\n                        x\r\n                        y\r\n                    }\r\n                }\r\n                sku\r\n                channelIds\r\n            }\r\n            facetValues {\r\n                count\r\n                facetValue {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    name\r\n                    facet {\r\n                        id\r\n                        createdAt\r\n                        updatedAt\r\n                        name\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PRODUCT_SELECTOR_SEARCH = gql`\r\n    query ProductSelectorSearch($term: String!, $take: Int!) {\r\n        search(input: { groupByProduct: false, term: $term, take: $take }) {\r\n            items {\r\n                productVariantId\r\n                productVariantName\r\n                productAsset {\r\n                    id\r\n                    preview\r\n                    focalPoint {\r\n                        x\r\n                        y\r\n                    }\r\n                }\r\n                price {\r\n                    ... on SinglePrice {\r\n                        value\r\n                    }\r\n                }\r\n                priceWithTax {\r\n                    ... on SinglePrice {\r\n                        value\r\n                    }\r\n                }\r\n                sku\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_PRODUCT_OPTION_GROUP = gql`\r\n    mutation UpdateProductOptionGroup($input: UpdateProductOptionGroupInput!) {\r\n        updateProductOptionGroup(input: $input) {\r\n            ...ProductOptionGroup\r\n        }\r\n    }\r\n    ${PRODUCT_OPTION_GROUP_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_PRODUCT_OPTION = gql`\r\n    mutation UpdateProductOption($input: UpdateProductOptionInput!) {\r\n        updateProductOption(input: $input) {\r\n            ...ProductOption\r\n        }\r\n    }\r\n    ${PRODUCT_OPTION_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_PRODUCT_VARIANT = gql`\r\n    mutation DeleteProductVariant($id: ID!) {\r\n        deleteProductVariant(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_PRODUCT_VARIANT_OPTIONS = gql`\r\n    query GetProductVariantOptions($id: ID!) {\r\n        product(id: $id) {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            optionGroups {\r\n                ...ProductOptionGroup\r\n                options {\r\n                    ...ProductOption\r\n                }\r\n            }\r\n            variants {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                enabled\r\n                name\r\n                sku\r\n                price\r\n                stockOnHand\r\n                enabled\r\n                options {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    name\r\n                    code\r\n                    groupId\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ${PRODUCT_OPTION_GROUP_FRAGMENT}\r\n    ${PRODUCT_OPTION_FRAGMENT}\r\n`;\r\n\r\nexport const ASSIGN_PRODUCTS_TO_CHANNEL = gql`\r\n    mutation AssignProductsToChannel($input: AssignProductsToChannelInput!) {\r\n        assignProductsToChannel(input: $input) {\r\n            id\r\n            channels {\r\n                id\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ASSIGN_VARIANTS_TO_CHANNEL = gql`\r\n    mutation AssignVariantsToChannel($input: AssignProductVariantsToChannelInput!) {\r\n        assignProductVariantsToChannel(input: $input) {\r\n            id\r\n            channels {\r\n                id\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const REMOVE_PRODUCTS_FROM_CHANNEL = gql`\r\n    mutation RemoveProductsFromChannel($input: RemoveProductsFromChannelInput!) {\r\n        removeProductsFromChannel(input: $input) {\r\n            id\r\n            channels {\r\n                id\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const REMOVE_VARIANTS_FROM_CHANNEL = gql`\r\n    mutation RemoveVariantsFromChannel($input: RemoveProductVariantsFromChannelInput!) {\r\n        removeProductVariantsFromChannel(input: $input) {\r\n            id\r\n            channels {\r\n                id\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_PRODUCT_VARIANT = gql`\r\n    query GetProductVariant($id: ID!) {\r\n        productVariant(id: $id) {\r\n            id\r\n            name\r\n            sku\r\n            featuredAsset {\r\n                id\r\n                preview\r\n                focalPoint {\r\n                    x\r\n                    y\r\n                }\r\n            }\r\n            product {\r\n                id\r\n                featuredAsset {\r\n                    id\r\n                    preview\r\n                    focalPoint {\r\n                        x\r\n                        y\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_PRODUCT_VARIANT_LIST_SIMPLE = gql`\r\n    query GetProductVariantListSimple($options: ProductVariantListOptions!, $productId: ID) {\r\n        productVariants(options: $options, productId: $productId) {\r\n            items {\r\n                id\r\n                name\r\n                sku\r\n                featuredAsset {\r\n                    id\r\n                    preview\r\n                    focalPoint {\r\n                        x\r\n                        y\r\n                    }\r\n                }\r\n                product {\r\n                    id\r\n                    featuredAsset {\r\n                        id\r\n                        preview\r\n                        focalPoint {\r\n                            x\r\n                            y\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_PRODUCT_VARIANT_LIST = gql`\r\n    query GetProductVariantList($options: ProductVariantListOptions!, $productId: ID) {\r\n        productVariants(options: $options, productId: $productId) {\r\n            items {\r\n                ...ProductVariant\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_FRAGMENT}\r\n`;\r\n\r\nexport const GET_TAG_LIST = gql`\r\n    query GetTagList($options: TagListOptions) {\r\n        tags(options: $options) {\r\n            items {\r\n                ...Tag\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${TAG_FRAGMENT}\r\n`;\r\n\r\nexport const GET_TAG = gql`\r\n    query GetTag($id: ID!) {\r\n        tag(id: $id) {\r\n            ...Tag\r\n        }\r\n    }\r\n    ${TAG_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_TAG = gql`\r\n    mutation CreateTag($input: CreateTagInput!) {\r\n        createTag(input: $input) {\r\n            ...Tag\r\n        }\r\n    }\r\n    ${TAG_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_TAG = gql`\r\n    mutation UpdateTag($input: UpdateTagInput!) {\r\n        updateTag(input: $input) {\r\n            ...Tag\r\n        }\r\n    }\r\n    ${TAG_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_TAG = gql`\r\n    mutation DeleteTag($id: ID!) {\r\n        deleteTag(id: $id) {\r\n            message\r\n            result\r\n        }\r\n    }\r\n`;\r\n","import { gql } from 'apollo-angular';\r\n\r\nimport { ASSET_FRAGMENT } from './product-definitions';\r\nimport { CONFIGURABLE_OPERATION_DEF_FRAGMENT, CONFIGURABLE_OPERATION_FRAGMENT } from './shared-definitions';\r\n\r\nexport const GET_COLLECTION_FILTERS = gql`\r\n    query GetCollectionFilters {\r\n        collectionFilters {\r\n            ...ConfigurableOperationDef\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_DEF_FRAGMENT}\r\n`;\r\n\r\nexport const COLLECTION_FRAGMENT = gql`\r\n    fragment Collection on Collection {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        slug\r\n        description\r\n        isPrivate\r\n        languageCode\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n        assets {\r\n            ...Asset\r\n        }\r\n        filters {\r\n            ...ConfigurableOperation\r\n        }\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n            slug\r\n            description\r\n        }\r\n        parent {\r\n            id\r\n            name\r\n        }\r\n        children {\r\n            id\r\n            name\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n    ${CONFIGURABLE_OPERATION_FRAGMENT}\r\n`;\r\n\r\nexport const GET_COLLECTION_LIST = gql`\r\n    query GetCollectionList($options: CollectionListOptions) {\r\n        collections(options: $options) {\r\n            items {\r\n                id\r\n                name\r\n                slug\r\n                description\r\n                isPrivate\r\n                featuredAsset {\r\n                    ...Asset\r\n                }\r\n                parent {\r\n                    id\r\n                }\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n`;\r\n\r\nexport const GET_COLLECTION = gql`\r\n    query GetCollection($id: ID!) {\r\n        collection(id: $id) {\r\n            ...Collection\r\n        }\r\n    }\r\n    ${COLLECTION_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_COLLECTION = gql`\r\n    mutation CreateCollection($input: CreateCollectionInput!) {\r\n        createCollection(input: $input) {\r\n            ...Collection\r\n        }\r\n    }\r\n    ${COLLECTION_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_COLLECTION = gql`\r\n    mutation UpdateCollection($input: UpdateCollectionInput!) {\r\n        updateCollection(input: $input) {\r\n            ...Collection\r\n        }\r\n    }\r\n    ${COLLECTION_FRAGMENT}\r\n`;\r\n\r\nexport const MOVE_COLLECTION = gql`\r\n    mutation MoveCollection($input: MoveCollectionInput!) {\r\n        moveCollection(input: $input) {\r\n            ...Collection\r\n        }\r\n    }\r\n    ${COLLECTION_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_COLLECTION = gql`\r\n    mutation DeleteCollection($id: ID!) {\r\n        deleteCollection(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_COLLECTION_CONTENTS = gql`\r\n    query GetCollectionContents($id: ID!, $options: ProductVariantListOptions) {\r\n        collection(id: $id) {\r\n            id\r\n            name\r\n            productVariants(options: $options) {\r\n                items {\r\n                    id\r\n                    productId\r\n                    name\r\n                }\r\n                totalItems\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import { pick } from '@vendure/common/lib/pick';\r\nimport { from } from 'rxjs';\r\nimport { bufferCount, concatMap } from 'rxjs/operators';\r\n\r\nimport {\r\n    CollectionFilterParameter,\r\n    CreateCollection,\r\n    CreateCollectionInput,\r\n    DeleteCollection,\r\n    GetCollection,\r\n    GetCollectionContents,\r\n    GetCollectionFilters,\r\n    GetCollectionList,\r\n    MoveCollection,\r\n    MoveCollectionInput,\r\n    UpdateCollection,\r\n    UpdateCollectionInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    CREATE_COLLECTION,\r\n    DELETE_COLLECTION,\r\n    GET_COLLECTION,\r\n    GET_COLLECTION_CONTENTS,\r\n    GET_COLLECTION_FILTERS,\r\n    GET_COLLECTION_LIST,\r\n    MOVE_COLLECTION,\r\n    UPDATE_COLLECTION,\r\n} from '../definitions/collection-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class CollectionDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getCollectionFilters() {\r\n        return this.baseDataService.query<GetCollectionFilters.Query>(GET_COLLECTION_FILTERS);\r\n    }\r\n\r\n    getCollections(take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<GetCollectionList.Query, GetCollectionList.Variables>(\r\n            GET_COLLECTION_LIST,\r\n            {\r\n                options: {\r\n                    take,\r\n                    skip,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    getCollection(id: string) {\r\n        return this.baseDataService.query<GetCollection.Query, GetCollection.Variables>(GET_COLLECTION, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    createCollection(input: CreateCollectionInput) {\r\n        return this.baseDataService.mutate<CreateCollection.Mutation, CreateCollection.Variables>(\r\n            CREATE_COLLECTION,\r\n            {\r\n                input: pick(input, [\r\n                    'translations',\r\n                    'parentId',\r\n                    'assetIds',\r\n                    'featuredAssetId',\r\n                    'filters',\r\n                    'customFields',\r\n                ]),\r\n            },\r\n        );\r\n    }\r\n\r\n    updateCollection(input: UpdateCollectionInput) {\r\n        return this.baseDataService.mutate<UpdateCollection.Mutation, UpdateCollection.Variables>(\r\n            UPDATE_COLLECTION,\r\n            {\r\n                input: pick(input, [\r\n                    'id',\r\n                    'isPrivate',\r\n                    'translations',\r\n                    'assetIds',\r\n                    'featuredAssetId',\r\n                    'filters',\r\n                    'customFields',\r\n                ]),\r\n            },\r\n        );\r\n    }\r\n\r\n    moveCollection(inputs: MoveCollectionInput[]) {\r\n        return from(inputs).pipe(\r\n            concatMap(input =>\r\n                this.baseDataService.mutate<MoveCollection.Mutation, MoveCollection.Variables>(\r\n                    MOVE_COLLECTION,\r\n                    { input },\r\n                ),\r\n            ),\r\n            bufferCount(inputs.length),\r\n        );\r\n    }\r\n\r\n    deleteCollection(id: string) {\r\n        return this.baseDataService.mutate<DeleteCollection.Mutation, DeleteCollection.Variables>(\r\n            DELETE_COLLECTION,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    getCollectionContents(id: string, take: number = 10, skip: number = 0, filterTerm?: string) {\r\n        const filter = filterTerm\r\n            ? ({ name: { contains: filterTerm } } as CollectionFilterParameter)\r\n            : undefined;\r\n        return this.baseDataService.query<GetCollectionContents.Query, GetCollectionContents.Variables>(\r\n            GET_COLLECTION_CONTENTS,\r\n            {\r\n                id,\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter,\r\n                },\r\n            },\r\n        );\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nimport { ERROR_RESULT_FRAGMENT } from './shared-definitions';\r\n\r\nexport const ADDRESS_FRAGMENT = gql`\r\n    fragment Address on Address {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        fullName\r\n        company\r\n        streetLine1\r\n        streetLine2\r\n        city\r\n        province\r\n        postalCode\r\n        country {\r\n            id\r\n            code\r\n            name\r\n        }\r\n        phoneNumber\r\n        defaultShippingAddress\r\n        defaultBillingAddress\r\n    }\r\n`;\r\n\r\nexport const CUSTOMER_FRAGMENT = gql`\r\n    fragment Customer on Customer {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        title\r\n        firstName\r\n        lastName\r\n        phoneNumber\r\n        emailAddress\r\n        user {\r\n            id\r\n            identifier\r\n            verified\r\n            lastLogin\r\n        }\r\n        addresses {\r\n            ...Address\r\n        }\r\n    }\r\n    ${ADDRESS_FRAGMENT}\r\n`;\r\n\r\nexport const CUSTOMER_GROUP_FRAGMENT = gql`\r\n    fragment CustomerGroup on CustomerGroup {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\r\n\r\nexport const GET_CUSTOMER_LIST = gql`\r\n    query GetCustomerList($options: CustomerListOptions) {\r\n        customers(options: $options) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                title\r\n                firstName\r\n                lastName\r\n                emailAddress\r\n                user {\r\n                    id\r\n                    verified\r\n                }\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CUSTOMER = gql`\r\n    query GetCustomer($id: ID!, $orderListOptions: OrderListOptions) {\r\n        customer(id: $id) {\r\n            ...Customer\r\n            groups {\r\n                id\r\n                name\r\n            }\r\n            orders(options: $orderListOptions) {\r\n                items {\r\n                    id\r\n                    code\r\n                    state\r\n                    totalWithTax\r\n                    currencyCode\r\n                    updatedAt\r\n                }\r\n                totalItems\r\n            }\r\n        }\r\n    }\r\n    ${CUSTOMER_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_CUSTOMER = gql`\r\n    mutation CreateCustomer($input: CreateCustomerInput!, $password: String) {\r\n        createCustomer(input: $input, password: $password) {\r\n            ...Customer\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${CUSTOMER_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_CUSTOMER = gql`\r\n    mutation UpdateCustomer($input: UpdateCustomerInput!) {\r\n        updateCustomer(input: $input) {\r\n            ...Customer\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${CUSTOMER_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_CUSTOMER = gql`\r\n    mutation DeleteCustomer($id: ID!) {\r\n        deleteCustomer(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_CUSTOMER_ADDRESS = gql`\r\n    mutation CreateCustomerAddress($customerId: ID!, $input: CreateAddressInput!) {\r\n        createCustomerAddress(customerId: $customerId, input: $input) {\r\n            ...Address\r\n        }\r\n    }\r\n    ${ADDRESS_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_CUSTOMER_ADDRESS = gql`\r\n    mutation UpdateCustomerAddress($input: UpdateAddressInput!) {\r\n        updateCustomerAddress(input: $input) {\r\n            ...Address\r\n        }\r\n    }\r\n    ${ADDRESS_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_CUSTOMER_ADDRESS = gql`\r\n    mutation DeleteCustomerAddress($id: ID!) {\r\n        deleteCustomerAddress(id: $id) {\r\n            success\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_CUSTOMER_GROUP = gql`\r\n    mutation CreateCustomerGroup($input: CreateCustomerGroupInput!) {\r\n        createCustomerGroup(input: $input) {\r\n            ...CustomerGroup\r\n        }\r\n    }\r\n    ${CUSTOMER_GROUP_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_CUSTOMER_GROUP = gql`\r\n    mutation UpdateCustomerGroup($input: UpdateCustomerGroupInput!) {\r\n        updateCustomerGroup(input: $input) {\r\n            ...CustomerGroup\r\n        }\r\n    }\r\n    ${CUSTOMER_GROUP_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_CUSTOMER_GROUP = gql`\r\n    mutation DeleteCustomerGroup($id: ID!) {\r\n        deleteCustomerGroup(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CUSTOMER_GROUPS = gql`\r\n    query GetCustomerGroups($options: CustomerGroupListOptions) {\r\n        customerGroups(options: $options) {\r\n            items {\r\n                ...CustomerGroup\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${CUSTOMER_GROUP_FRAGMENT}\r\n`;\r\n\r\nexport const GET_CUSTOMER_GROUP_WITH_CUSTOMERS = gql`\r\n    query GetCustomerGroupWithCustomers($id: ID!, $options: CustomerListOptions) {\r\n        customerGroup(id: $id) {\r\n            ...CustomerGroup\r\n            customers(options: $options) {\r\n                items {\r\n                    id\r\n                    createdAt\r\n                    updatedAt\r\n                    emailAddress\r\n                    firstName\r\n                    lastName\r\n                }\r\n                totalItems\r\n            }\r\n        }\r\n    }\r\n    ${CUSTOMER_GROUP_FRAGMENT}\r\n`;\r\n\r\nexport const ADD_CUSTOMERS_TO_GROUP = gql`\r\n    mutation AddCustomersToGroup($groupId: ID!, $customerIds: [ID!]!) {\r\n        addCustomersToGroup(customerGroupId: $groupId, customerIds: $customerIds) {\r\n            ...CustomerGroup\r\n        }\r\n    }\r\n    ${CUSTOMER_GROUP_FRAGMENT}\r\n`;\r\n\r\nexport const REMOVE_CUSTOMERS_FROM_GROUP = gql`\r\n    mutation RemoveCustomersFromGroup($groupId: ID!, $customerIds: [ID!]!) {\r\n        removeCustomersFromGroup(customerGroupId: $groupId, customerIds: $customerIds) {\r\n            ...CustomerGroup\r\n        }\r\n    }\r\n    ${CUSTOMER_GROUP_FRAGMENT}\r\n`;\r\n\r\nexport const GET_CUSTOMER_HISTORY = gql`\r\n    query GetCustomerHistory($id: ID!, $options: HistoryEntryListOptions) {\r\n        customer(id: $id) {\r\n            id\r\n            history(options: $options) {\r\n                totalItems\r\n                items {\r\n                    id\r\n                    type\r\n                    createdAt\r\n                    isPublic\r\n                    administrator {\r\n                        id\r\n                        firstName\r\n                        lastName\r\n                    }\r\n                    data\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_NOTE_TO_CUSTOMER = gql`\r\n    mutation AddNoteToCustomer($input: AddNoteToCustomerInput!) {\r\n        addNoteToCustomer(input: $input) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_CUSTOMER_NOTE = gql`\r\n    mutation UpdateCustomerNote($input: UpdateCustomerNoteInput!) {\r\n        updateCustomerNote(input: $input) {\r\n            id\r\n            data\r\n            isPublic\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_CUSTOMER_NOTE = gql`\r\n    mutation DeleteCustomerNote($id: ID!) {\r\n        deleteCustomerNote(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n","import {\r\n    AddCustomersToGroup,\r\n    AddNoteToCustomer,\r\n    CreateAddressInput,\r\n    CreateCustomer,\r\n    CreateCustomerAddress,\r\n    CreateCustomerGroup,\r\n    CreateCustomerGroupInput,\r\n    CreateCustomerInput,\r\n    CustomerGroupListOptions,\r\n    CustomerListOptions,\r\n    DeleteCustomer,\r\n    DeleteCustomerAddress,\r\n    DeleteCustomerGroup,\r\n    DeleteCustomerNote,\r\n    GetCustomer,\r\n    GetCustomerGroups,\r\n    GetCustomerGroupWithCustomers,\r\n    GetCustomerHistory,\r\n    GetCustomerList,\r\n    HistoryEntryListOptions,\r\n    OrderListOptions,\r\n    RemoveCustomersFromGroup,\r\n    UpdateAddressInput,\r\n    UpdateCustomer,\r\n    UpdateCustomerAddress,\r\n    UpdateCustomerGroup,\r\n    UpdateCustomerGroupInput,\r\n    UpdateCustomerInput,\r\n    UpdateCustomerNote,\r\n    UpdateCustomerNoteInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    ADD_CUSTOMERS_TO_GROUP,\r\n    ADD_NOTE_TO_CUSTOMER,\r\n    CREATE_CUSTOMER,\r\n    CREATE_CUSTOMER_ADDRESS,\r\n    CREATE_CUSTOMER_GROUP,\r\n    DELETE_CUSTOMER,\r\n    DELETE_CUSTOMER_ADDRESS,\r\n    DELETE_CUSTOMER_GROUP,\r\n    DELETE_CUSTOMER_NOTE,\r\n    GET_CUSTOMER,\r\n    GET_CUSTOMER_GROUPS,\r\n    GET_CUSTOMER_GROUP_WITH_CUSTOMERS,\r\n    GET_CUSTOMER_HISTORY,\r\n    GET_CUSTOMER_LIST,\r\n    REMOVE_CUSTOMERS_FROM_GROUP,\r\n    UPDATE_CUSTOMER,\r\n    UPDATE_CUSTOMER_ADDRESS,\r\n    UPDATE_CUSTOMER_GROUP,\r\n    UPDATE_CUSTOMER_NOTE,\r\n} from '../definitions/customer-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class CustomerDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getCustomerList(take: number = 10, skip: number = 0, filterTerm?: string) {\r\n        const filter = filterTerm\r\n            ? {\r\n                  filter: {\r\n                      emailAddress: {\r\n                          contains: filterTerm,\r\n                      },\r\n                  },\r\n              }\r\n            : {};\r\n        return this.baseDataService.query<GetCustomerList.Query, GetCustomerList.Variables>(\r\n            GET_CUSTOMER_LIST,\r\n            {\r\n                options: {\r\n                    take,\r\n                    skip,\r\n                    ...filter,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    getCustomer(id: string, orderListOptions?: OrderListOptions) {\r\n        return this.baseDataService.query<GetCustomer.Query, GetCustomer.Variables>(GET_CUSTOMER, {\r\n            id,\r\n            orderListOptions,\r\n        });\r\n    }\r\n\r\n    createCustomer(input: CreateCustomerInput, password?: string) {\r\n        return this.baseDataService.mutate<CreateCustomer.Mutation, CreateCustomer.Variables>(\r\n            CREATE_CUSTOMER,\r\n            {\r\n                input,\r\n                password,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateCustomer(input: UpdateCustomerInput) {\r\n        return this.baseDataService.mutate<UpdateCustomer.Mutation, UpdateCustomer.Variables>(\r\n            UPDATE_CUSTOMER,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deleteCustomer(id: string) {\r\n        return this.baseDataService.mutate<DeleteCustomer.Mutation, DeleteCustomer.Variables>(\r\n            DELETE_CUSTOMER,\r\n            { id },\r\n        );\r\n    }\r\n\r\n    createCustomerAddress(customerId: string, input: CreateAddressInput) {\r\n        return this.baseDataService.mutate<CreateCustomerAddress.Mutation, CreateCustomerAddress.Variables>(\r\n            CREATE_CUSTOMER_ADDRESS,\r\n            {\r\n                customerId,\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateCustomerAddress(input: UpdateAddressInput) {\r\n        return this.baseDataService.mutate<UpdateCustomerAddress.Mutation, UpdateCustomerAddress.Variables>(\r\n            UPDATE_CUSTOMER_ADDRESS,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deleteCustomerAddress(id: string) {\r\n        return this.baseDataService.mutate<DeleteCustomerAddress.Mutation, DeleteCustomerAddress.Variables>(\r\n            DELETE_CUSTOMER_ADDRESS,\r\n            { id },\r\n        );\r\n    }\r\n\r\n    createCustomerGroup(input: CreateCustomerGroupInput) {\r\n        return this.baseDataService.mutate<CreateCustomerGroup.Mutation, CreateCustomerGroup.Variables>(\r\n            CREATE_CUSTOMER_GROUP,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateCustomerGroup(input: UpdateCustomerGroupInput) {\r\n        return this.baseDataService.mutate<UpdateCustomerGroup.Mutation, UpdateCustomerGroup.Variables>(\r\n            UPDATE_CUSTOMER_GROUP,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deleteCustomerGroup(id: string) {\r\n        return this.baseDataService.mutate<DeleteCustomerGroup.Mutation, DeleteCustomerGroup.Variables>(\r\n            DELETE_CUSTOMER_GROUP,\r\n            { id },\r\n        );\r\n    }\r\n\r\n    getCustomerGroupList(options?: CustomerGroupListOptions) {\r\n        return this.baseDataService.query<GetCustomerGroups.Query, GetCustomerGroups.Variables>(\r\n            GET_CUSTOMER_GROUPS,\r\n            {\r\n                options,\r\n            },\r\n        );\r\n    }\r\n\r\n    getCustomerGroupWithCustomers(id: string, options: CustomerListOptions) {\r\n        return this.baseDataService.query<\r\n            GetCustomerGroupWithCustomers.Query,\r\n            GetCustomerGroupWithCustomers.Variables\r\n        >(GET_CUSTOMER_GROUP_WITH_CUSTOMERS, {\r\n            id,\r\n            options,\r\n        });\r\n    }\r\n\r\n    addCustomersToGroup(groupId: string, customerIds: string[]) {\r\n        return this.baseDataService.mutate<AddCustomersToGroup.Mutation, AddCustomersToGroup.Variables>(\r\n            ADD_CUSTOMERS_TO_GROUP,\r\n            {\r\n                groupId,\r\n                customerIds,\r\n            },\r\n        );\r\n    }\r\n\r\n    removeCustomersFromGroup(groupId: string, customerIds: string[]) {\r\n        return this.baseDataService.mutate<\r\n            RemoveCustomersFromGroup.Mutation,\r\n            RemoveCustomersFromGroup.Variables\r\n        >(REMOVE_CUSTOMERS_FROM_GROUP, {\r\n            groupId,\r\n            customerIds,\r\n        });\r\n    }\r\n\r\n    getCustomerHistory(id: string, options?: HistoryEntryListOptions) {\r\n        return this.baseDataService.query<GetCustomerHistory.Query, GetCustomerHistory.Variables>(\r\n            GET_CUSTOMER_HISTORY,\r\n            {\r\n                id,\r\n                options,\r\n            },\r\n        );\r\n    }\r\n\r\n    addNoteToCustomer(customerId: string, note: string) {\r\n        return this.baseDataService.mutate<AddNoteToCustomer.Mutation, AddNoteToCustomer.Variables>(\r\n            ADD_NOTE_TO_CUSTOMER,\r\n            {\r\n                input: {\r\n                    note,\r\n                    isPublic: false,\r\n                    id: customerId,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    updateCustomerNote(input: UpdateCustomerNoteInput) {\r\n        return this.baseDataService.mutate<UpdateCustomerNote.Mutation, UpdateCustomerNote.Variables>(\r\n            UPDATE_CUSTOMER_NOTE,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deleteCustomerNote(id: string) {\r\n        return this.baseDataService.mutate<DeleteCustomerNote.Mutation, DeleteCustomerNote.Variables>(\r\n            DELETE_CUSTOMER_NOTE,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nexport const FACET_VALUE_FRAGMENT = gql`\r\n    fragment FacetValue on FacetValue {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        languageCode\r\n        code\r\n        name\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n        facet {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const FACET_WITH_VALUES_FRAGMENT = gql`\r\n    fragment FacetWithValues on Facet {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        languageCode\r\n        isPrivate\r\n        code\r\n        name\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n        values {\r\n            ...FacetValue\r\n        }\r\n    }\r\n    ${FACET_VALUE_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_FACET = gql`\r\n    mutation CreateFacet($input: CreateFacetInput!) {\r\n        createFacet(input: $input) {\r\n            ...FacetWithValues\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUES_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_FACET = gql`\r\n    mutation UpdateFacet($input: UpdateFacetInput!) {\r\n        updateFacet(input: $input) {\r\n            ...FacetWithValues\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUES_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_FACET = gql`\r\n    mutation DeleteFacet($id: ID!, $force: Boolean) {\r\n        deleteFacet(id: $id, force: $force) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_FACET_VALUES = gql`\r\n    mutation CreateFacetValues($input: [CreateFacetValueInput!]!) {\r\n        createFacetValues(input: $input) {\r\n            ...FacetValue\r\n        }\r\n    }\r\n    ${FACET_VALUE_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_FACET_VALUES = gql`\r\n    mutation UpdateFacetValues($input: [UpdateFacetValueInput!]!) {\r\n        updateFacetValues(input: $input) {\r\n            ...FacetValue\r\n        }\r\n    }\r\n    ${FACET_VALUE_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_FACET_VALUES = gql`\r\n    mutation DeleteFacetValues($ids: [ID!]!, $force: Boolean) {\r\n        deleteFacetValues(ids: $ids, force: $force) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_FACET_LIST = gql`\r\n    query GetFacetList($options: FacetListOptions) {\r\n        facets(options: $options) {\r\n            items {\r\n                ...FacetWithValues\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUES_FRAGMENT}\r\n`;\r\n\r\nexport const GET_FACET_WITH_VALUES = gql`\r\n    query GetFacetWithValues($id: ID!) {\r\n        facet(id: $id) {\r\n            ...FacetWithValues\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUES_FRAGMENT}\r\n`;\r\n","import { pick } from '@vendure/common/lib/pick';\r\n\r\nimport {\r\n    CreateFacet,\r\n    CreateFacetInput,\r\n    CreateFacetValueInput,\r\n    CreateFacetValues,\r\n    DeleteFacet,\r\n    DeleteFacetValues,\r\n    GetFacetList,\r\n    GetFacetWithValues,\r\n    UpdateFacet,\r\n    UpdateFacetInput,\r\n    UpdateFacetValueInput,\r\n    UpdateFacetValues,\r\n} from '../../common/generated-types';\r\nimport {\r\n    CREATE_FACET,\r\n    CREATE_FACET_VALUES,\r\n    DELETE_FACET,\r\n    DELETE_FACET_VALUES,\r\n    GET_FACET_LIST,\r\n    GET_FACET_WITH_VALUES,\r\n    UPDATE_FACET,\r\n    UPDATE_FACET_VALUES,\r\n} from '../definitions/facet-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class FacetDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getFacets(take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<GetFacetList.Query, GetFacetList.Variables>(GET_FACET_LIST, {\r\n            options: {\r\n                take,\r\n                skip,\r\n            },\r\n        });\r\n    }\r\n\r\n    getAllFacets() {\r\n        return this.baseDataService.query<GetFacetList.Query, GetFacetList.Variables>(GET_FACET_LIST, {});\r\n    }\r\n\r\n    getFacet(id: string) {\r\n        return this.baseDataService.query<GetFacetWithValues.Query, GetFacetWithValues.Variables>(\r\n            GET_FACET_WITH_VALUES,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    createFacet(facet: CreateFacetInput) {\r\n        const input: CreateFacet.Variables = {\r\n            input: pick(facet, ['code', 'isPrivate', 'translations', 'values', 'customFields']),\r\n        };\r\n        return this.baseDataService.mutate<CreateFacet.Mutation, CreateFacet.Variables>(CREATE_FACET, input);\r\n    }\r\n\r\n    updateFacet(facet: UpdateFacetInput) {\r\n        const input: UpdateFacet.Variables = {\r\n            input: pick(facet, ['id', 'code', 'isPrivate', 'translations', 'customFields']),\r\n        };\r\n        return this.baseDataService.mutate<UpdateFacet.Mutation, UpdateFacet.Variables>(UPDATE_FACET, input);\r\n    }\r\n\r\n    deleteFacet(id: string, force: boolean) {\r\n        return this.baseDataService.mutate<DeleteFacet.Mutation, DeleteFacet.Variables>(DELETE_FACET, {\r\n            id,\r\n            force,\r\n        });\r\n    }\r\n\r\n    createFacetValues(facetValues: CreateFacetValueInput[]) {\r\n        const input: CreateFacetValues.Variables = {\r\n            input: facetValues.map(pick(['facetId', 'code', 'translations', 'customFields'])),\r\n        };\r\n        return this.baseDataService.mutate<CreateFacetValues.Mutation, CreateFacetValues.Variables>(\r\n            CREATE_FACET_VALUES,\r\n            input,\r\n        );\r\n    }\r\n\r\n    updateFacetValues(facetValues: UpdateFacetValueInput[]) {\r\n        const input: UpdateFacetValues.Variables = {\r\n            input: facetValues.map(pick(['id', 'code', 'translations', 'customFields'])),\r\n        };\r\n        return this.baseDataService.mutate<UpdateFacetValues.Mutation, UpdateFacetValues.Variables>(\r\n            UPDATE_FACET_VALUES,\r\n            input,\r\n        );\r\n    }\r\n\r\n    deleteFacetValues(ids: string[], force: boolean) {\r\n        return this.baseDataService.mutate<DeleteFacetValues.Mutation, DeleteFacetValues.Variables>(\r\n            DELETE_FACET_VALUES,\r\n            {\r\n                ids,\r\n                force,\r\n            },\r\n        );\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nimport { ERROR_RESULT_FRAGMENT } from './shared-definitions';\r\n\r\nexport const DISCOUNT_FRAGMENT = gql`\r\n    fragment Discount on Discount {\r\n        adjustmentSource\r\n        amount\r\n        amountWithTax\r\n        description\r\n        type\r\n    }\r\n`;\r\n\r\nexport const REFUND_FRAGMENT = gql`\r\n    fragment Refund on Refund {\r\n        id\r\n        state\r\n        items\r\n        shipping\r\n        adjustment\r\n        transactionId\r\n        paymentId\r\n    }\r\n`;\r\n\r\nexport const ORDER_ADDRESS_FRAGMENT = gql`\r\n    fragment OrderAddress on OrderAddress {\r\n        fullName\r\n        company\r\n        streetLine1\r\n        streetLine2\r\n        city\r\n        province\r\n        postalCode\r\n        country\r\n        countryCode\r\n        phoneNumber\r\n    }\r\n`;\r\n\r\nexport const ORDER_FRAGMENT = gql`\r\n    fragment Order on Order {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        orderPlacedAt\r\n        code\r\n        state\r\n        nextStates\r\n        total\r\n        currencyCode\r\n        customer {\r\n            id\r\n            firstName\r\n            lastName\r\n        }\r\n        shippingLines {\r\n            shippingMethod {\r\n                name\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const FULFILLMENT_FRAGMENT = gql`\r\n    fragment Fulfillment on Fulfillment {\r\n        id\r\n        state\r\n        nextStates\r\n        createdAt\r\n        updatedAt\r\n        method\r\n        orderItems {\r\n            id\r\n        }\r\n        trackingCode\r\n    }\r\n`;\r\n\r\nexport const ORDER_LINE_FRAGMENT = gql`\r\n    fragment OrderLine on OrderLine {\r\n        id\r\n        featuredAsset {\r\n            preview\r\n        }\r\n        productVariant {\r\n            id\r\n            name\r\n            sku\r\n            trackInventory\r\n            stockOnHand\r\n        }\r\n        discounts {\r\n            ...Discount\r\n        }\r\n        unitPrice\r\n        unitPriceWithTax\r\n        proratedUnitPrice\r\n        proratedUnitPriceWithTax\r\n        quantity\r\n        items {\r\n            id\r\n            unitPrice\r\n            unitPriceWithTax\r\n            taxRate\r\n            refundId\r\n            cancelled\r\n            fulfillment {\r\n                ...Fulfillment\r\n            }\r\n        }\r\n        linePrice\r\n        lineTax\r\n        linePriceWithTax\r\n        discountedLinePrice\r\n        discountedLinePriceWithTax\r\n    }\r\n`;\r\n\r\nexport const ORDER_DETAIL_FRAGMENT = gql`\r\n    fragment OrderDetail on Order {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        state\r\n        nextStates\r\n        active\r\n        couponCodes\r\n        customer {\r\n            id\r\n            firstName\r\n            lastName\r\n        }\r\n        lines {\r\n            ...OrderLine\r\n        }\r\n        surcharges {\r\n            id\r\n            sku\r\n            description\r\n            price\r\n            priceWithTax\r\n            taxRate\r\n        }\r\n        discounts {\r\n            ...Discount\r\n        }\r\n        promotions {\r\n            id\r\n            couponCode\r\n        }\r\n        subTotal\r\n        subTotalWithTax\r\n        total\r\n        totalWithTax\r\n        currencyCode\r\n        shipping\r\n        shippingWithTax\r\n        shippingLines {\r\n            shippingMethod {\r\n                id\r\n                code\r\n                name\r\n                fulfillmentHandlerCode\r\n                description\r\n            }\r\n        }\r\n        taxSummary {\r\n            description\r\n            taxBase\r\n            taxRate\r\n            taxTotal\r\n        }\r\n        shippingAddress {\r\n            ...OrderAddress\r\n        }\r\n        billingAddress {\r\n            ...OrderAddress\r\n        }\r\n        payments {\r\n            id\r\n            createdAt\r\n            transactionId\r\n            amount\r\n            method\r\n            state\r\n            nextStates\r\n            errorMessage\r\n            metadata\r\n            refunds {\r\n                id\r\n                createdAt\r\n                state\r\n                items\r\n                adjustment\r\n                total\r\n                paymentId\r\n                reason\r\n                transactionId\r\n                method\r\n                metadata\r\n                orderItems {\r\n                    id\r\n                }\r\n            }\r\n        }\r\n        fulfillments {\r\n            ...Fulfillment\r\n        }\r\n        modifications {\r\n            id\r\n            createdAt\r\n            isSettled\r\n            priceChange\r\n            note\r\n            payment {\r\n                id\r\n                amount\r\n            }\r\n            orderItems {\r\n                id\r\n            }\r\n            refund {\r\n                id\r\n                paymentId\r\n                total\r\n            }\r\n            surcharges {\r\n                id\r\n            }\r\n        }\r\n    }\r\n    ${DISCOUNT_FRAGMENT}\r\n    ${ORDER_ADDRESS_FRAGMENT}\r\n    ${FULFILLMENT_FRAGMENT}\r\n    ${ORDER_LINE_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ORDERS_LIST = gql`\r\n    query GetOrderList($options: OrderListOptions) {\r\n        orders(options: $options) {\r\n            items {\r\n                ...Order\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${ORDER_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ORDER = gql`\r\n    query GetOrder($id: ID!) {\r\n        order(id: $id) {\r\n            ...OrderDetail\r\n        }\r\n    }\r\n    ${ORDER_DETAIL_FRAGMENT}\r\n`;\r\n\r\nexport const SETTLE_PAYMENT = gql`\r\n    mutation SettlePayment($id: ID!) {\r\n        settlePayment(id: $id) {\r\n            ... on Payment {\r\n                id\r\n                transactionId\r\n                amount\r\n                method\r\n                state\r\n                metadata\r\n            }\r\n            ...ErrorResult\r\n            ... on SettlePaymentError {\r\n                paymentErrorMessage\r\n            }\r\n            ... on PaymentStateTransitionError {\r\n                transitionError\r\n            }\r\n            ... on OrderStateTransitionError {\r\n                transitionError\r\n            }\r\n        }\r\n    }\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const TRANSITION_PAYMENT_TO_STATE = gql`\r\n    mutation TransitionPaymentToState($id: ID!, $state: String!) {\r\n        transitionPaymentToState(id: $id, state: $state) {\r\n            ... on Payment {\r\n                id\r\n                transactionId\r\n                amount\r\n                method\r\n                state\r\n                metadata\r\n            }\r\n            ...ErrorResult\r\n            ... on PaymentStateTransitionError {\r\n                transitionError\r\n            }\r\n        }\r\n    }\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_FULFILLMENT = gql`\r\n    mutation CreateFulfillment($input: FulfillOrderInput!) {\r\n        addFulfillmentToOrder(input: $input) {\r\n            ...Fulfillment\r\n            ... on CreateFulfillmentError {\r\n                errorCode\r\n                message\r\n                fulfillmentHandlerError\r\n            }\r\n            ... on FulfillmentStateTransitionError {\r\n                errorCode\r\n                message\r\n                transitionError\r\n            }\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${FULFILLMENT_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const CANCEL_ORDER = gql`\r\n    mutation CancelOrder($input: CancelOrderInput!) {\r\n        cancelOrder(input: $input) {\r\n            ...OrderDetail\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${ORDER_DETAIL_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const REFUND_ORDER = gql`\r\n    mutation RefundOrder($input: RefundOrderInput!) {\r\n        refundOrder(input: $input) {\r\n            ...Refund\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${REFUND_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const SETTLE_REFUND = gql`\r\n    mutation SettleRefund($input: SettleRefundInput!) {\r\n        settleRefund(input: $input) {\r\n            ...Refund\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${REFUND_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ORDER_HISTORY = gql`\r\n    query GetOrderHistory($id: ID!, $options: HistoryEntryListOptions) {\r\n        order(id: $id) {\r\n            id\r\n            history(options: $options) {\r\n                totalItems\r\n                items {\r\n                    id\r\n                    type\r\n                    createdAt\r\n                    isPublic\r\n                    administrator {\r\n                        id\r\n                        firstName\r\n                        lastName\r\n                    }\r\n                    data\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_NOTE_TO_ORDER = gql`\r\n    mutation AddNoteToOrder($input: AddNoteToOrderInput!) {\r\n        addNoteToOrder(input: $input) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_ORDER_NOTE = gql`\r\n    mutation UpdateOrderNote($input: UpdateOrderNoteInput!) {\r\n        updateOrderNote(input: $input) {\r\n            id\r\n            data\r\n            isPublic\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_ORDER_NOTE = gql`\r\n    mutation DeleteOrderNote($id: ID!) {\r\n        deleteOrderNote(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TRANSITION_ORDER_TO_STATE = gql`\r\n    mutation TransitionOrderToState($id: ID!, $state: String!) {\r\n        transitionOrderToState(id: $id, state: $state) {\r\n            ...Order\r\n            ...ErrorResult\r\n            ... on OrderStateTransitionError {\r\n                transitionError\r\n            }\r\n        }\r\n    }\r\n    ${ORDER_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_ORDER_CUSTOM_FIELDS = gql`\r\n    mutation UpdateOrderCustomFields($input: UpdateOrderInput!) {\r\n        setOrderCustomFields(input: $input) {\r\n            ...Order\r\n        }\r\n    }\r\n    ${ORDER_FRAGMENT}\r\n`;\r\n\r\nexport const TRANSITION_FULFILLMENT_TO_STATE = gql`\r\n    mutation TransitionFulfillmentToState($id: ID!, $state: String!) {\r\n        transitionFulfillmentToState(id: $id, state: $state) {\r\n            ...Fulfillment\r\n            ...ErrorResult\r\n            ... on FulfillmentStateTransitionError {\r\n                transitionError\r\n            }\r\n        }\r\n    }\r\n    ${FULFILLMENT_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ORDER_SUMMARY = gql`\r\n    query GetOrderSummary($start: DateTime!, $end: DateTime!) {\r\n        orders(options: { filter: { orderPlacedAt: { between: { start: $start, end: $end } } } }) {\r\n            totalItems\r\n            items {\r\n                id\r\n                total\r\n                currencyCode\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MODIFY_ORDER = gql`\r\n    mutation ModifyOrder($input: ModifyOrderInput!) {\r\n        modifyOrder(input: $input) {\r\n            ...OrderDetail\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${ORDER_DETAIL_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const ADD_MANUAL_PAYMENT_TO_ORDER = gql`\r\n    mutation AddManualPayment($input: ManualPaymentInput!) {\r\n        addManualPaymentToOrder(input: $input) {\r\n            ...OrderDetail\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${ORDER_DETAIL_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n","import {\r\n    AddManualPayment,\r\n    AddNoteToOrder,\r\n    AddNoteToOrderInput,\r\n    CancelOrder,\r\n    CancelOrderInput,\r\n    CreateFulfillment,\r\n    DeleteOrderNote,\r\n    FulfillOrderInput,\r\n    GetOrder,\r\n    GetOrderHistory,\r\n    GetOrderList,\r\n    GetOrderSummary,\r\n    HistoryEntryListOptions,\r\n    ManualPaymentInput,\r\n    ModifyOrder,\r\n    ModifyOrderInput,\r\n    OrderListOptions,\r\n    RefundOrder,\r\n    RefundOrderInput,\r\n    SettlePayment,\r\n    SettleRefund,\r\n    SettleRefundInput,\r\n    TransitionFulfillmentToState,\r\n    TransitionOrderToState,\r\n    TransitionPaymentToState,\r\n    UpdateOrderCustomFields,\r\n    UpdateOrderInput,\r\n    UpdateOrderNote,\r\n    UpdateOrderNoteInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    ADD_MANUAL_PAYMENT_TO_ORDER,\r\n    ADD_NOTE_TO_ORDER,\r\n    CANCEL_ORDER,\r\n    CREATE_FULFILLMENT,\r\n    DELETE_ORDER_NOTE,\r\n    GET_ORDER,\r\n    GET_ORDERS_LIST,\r\n    GET_ORDER_HISTORY,\r\n    GET_ORDER_SUMMARY,\r\n    MODIFY_ORDER,\r\n    REFUND_ORDER,\r\n    SETTLE_PAYMENT,\r\n    SETTLE_REFUND,\r\n    TRANSITION_FULFILLMENT_TO_STATE,\r\n    TRANSITION_ORDER_TO_STATE,\r\n    TRANSITION_PAYMENT_TO_STATE,\r\n    UPDATE_ORDER_CUSTOM_FIELDS,\r\n    UPDATE_ORDER_NOTE,\r\n} from '../definitions/order-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class OrderDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getOrders(options: OrderListOptions = { take: 10 }) {\r\n        return this.baseDataService.query<GetOrderList.Query, GetOrderList.Variables>(GET_ORDERS_LIST, {\r\n            options,\r\n        });\r\n    }\r\n\r\n    getOrder(id: string) {\r\n        return this.baseDataService.query<GetOrder.Query, GetOrder.Variables>(GET_ORDER, { id });\r\n    }\r\n\r\n    getOrderHistory(id: string, options?: HistoryEntryListOptions) {\r\n        return this.baseDataService.query<GetOrderHistory.Query, GetOrderHistory.Variables>(\r\n            GET_ORDER_HISTORY,\r\n            {\r\n                id,\r\n                options,\r\n            },\r\n        );\r\n    }\r\n\r\n    settlePayment(id: string) {\r\n        return this.baseDataService.mutate<SettlePayment.Mutation, SettlePayment.Variables>(SETTLE_PAYMENT, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    transitionPaymentToState(id: string, state: string) {\r\n        return this.baseDataService.mutate<\r\n            TransitionPaymentToState.Mutation,\r\n            TransitionPaymentToState.Variables\r\n        >(TRANSITION_PAYMENT_TO_STATE, {\r\n            id,\r\n            state,\r\n        });\r\n    }\r\n\r\n    createFulfillment(input: FulfillOrderInput) {\r\n        return this.baseDataService.mutate<CreateFulfillment.Mutation, CreateFulfillment.Variables>(\r\n            CREATE_FULFILLMENT,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    transitionFulfillmentToState(id: string, state: string) {\r\n        return this.baseDataService.mutate<\r\n            TransitionFulfillmentToState.Mutation,\r\n            TransitionFulfillmentToState.Variables\r\n        >(TRANSITION_FULFILLMENT_TO_STATE, {\r\n            id,\r\n            state,\r\n        });\r\n    }\r\n\r\n    cancelOrder(input: CancelOrderInput) {\r\n        return this.baseDataService.mutate<CancelOrder.Mutation, CancelOrder.Variables>(CANCEL_ORDER, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    refundOrder(input: RefundOrderInput) {\r\n        return this.baseDataService.mutate<RefundOrder.Mutation, RefundOrder.Variables>(REFUND_ORDER, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    settleRefund(input: SettleRefundInput, orderId: string) {\r\n        return this.baseDataService.mutate<SettleRefund.Mutation, SettleRefund.Variables>(SETTLE_REFUND, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    addNoteToOrder(input: AddNoteToOrderInput) {\r\n        return this.baseDataService.mutate<AddNoteToOrder.Mutation, AddNoteToOrder.Variables>(\r\n            ADD_NOTE_TO_ORDER,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateOrderNote(input: UpdateOrderNoteInput) {\r\n        return this.baseDataService.mutate<UpdateOrderNote.Mutation, UpdateOrderNote.Variables>(\r\n            UPDATE_ORDER_NOTE,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deleteOrderNote(id: string) {\r\n        return this.baseDataService.mutate<DeleteOrderNote.Mutation, DeleteOrderNote.Variables>(\r\n            DELETE_ORDER_NOTE,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    transitionToState(id: string, state: string) {\r\n        return this.baseDataService.mutate<TransitionOrderToState.Mutation, TransitionOrderToState.Variables>(\r\n            TRANSITION_ORDER_TO_STATE,\r\n            {\r\n                id,\r\n                state,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateOrderCustomFields(input: UpdateOrderInput) {\r\n        return this.baseDataService.mutate<\r\n            UpdateOrderCustomFields.Mutation,\r\n            UpdateOrderCustomFields.Variables\r\n        >(UPDATE_ORDER_CUSTOM_FIELDS, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    getOrderSummary(start: Date, end: Date) {\r\n        return this.baseDataService.query<GetOrderSummary.Query, GetOrderSummary.Variables>(\r\n            GET_ORDER_SUMMARY,\r\n            {\r\n                start: start.toISOString(),\r\n                end: end.toISOString(),\r\n            },\r\n        );\r\n    }\r\n\r\n    modifyOrder(input: ModifyOrderInput) {\r\n        return this.baseDataService.mutate<ModifyOrder.Mutation, ModifyOrder.Variables>(MODIFY_ORDER, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    addManualPaymentToOrder(input: ManualPaymentInput) {\r\n        return this.baseDataService.mutate<AddManualPayment.Mutation, AddManualPayment.Variables>(\r\n            ADD_MANUAL_PAYMENT_TO_ORDER,\r\n            { input },\r\n        );\r\n    }\r\n}\r\n","// tslint:disable\r\nexport type Maybe<T> = T | null;\r\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\r\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\r\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\r\n/** All built-in and custom scalars, mapped to their actual values */\r\nexport type Scalars = {\r\n  ID: string;\r\n  String: string;\r\n  Boolean: boolean;\r\n  Int: number;\r\n  Float: number;\r\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\r\n  DateTime: any;\r\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\r\n  JSON: any;\r\n  /** The `Upload` scalar type represents a file upload. */\r\n  Upload: any;\r\n};\r\n\r\n\r\nexport type AddFulfillmentToOrderResult = Fulfillment | EmptyOrderLineSelectionError | ItemsAlreadyFulfilledError | InsufficientStockOnHandError | InvalidFulfillmentHandlerError | FulfillmentStateTransitionError | CreateFulfillmentError;\r\n\r\nexport type AddItemInput = {\r\n  productVariantId: Scalars['ID'];\r\n  quantity: Scalars['Int'];\r\n};\r\n\r\nexport type AddManualPaymentToOrderResult = Order | ManualPaymentStateError;\r\n\r\nexport type AddNoteToCustomerInput = {\r\n  id: Scalars['ID'];\r\n  note: Scalars['String'];\r\n  isPublic: Scalars['Boolean'];\r\n};\r\n\r\nexport type AddNoteToOrderInput = {\r\n  id: Scalars['ID'];\r\n  note: Scalars['String'];\r\n  isPublic: Scalars['Boolean'];\r\n};\r\n\r\nexport type Address = Node & {\r\n  __typename?: 'Address';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  fullName?: Maybe<Scalars['String']>;\r\n  company?: Maybe<Scalars['String']>;\r\n  streetLine1: Scalars['String'];\r\n  streetLine2?: Maybe<Scalars['String']>;\r\n  city?: Maybe<Scalars['String']>;\r\n  province?: Maybe<Scalars['String']>;\r\n  postalCode?: Maybe<Scalars['String']>;\r\n  country: Country;\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\r\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type AdjustOrderLineInput = {\r\n  orderLineId: Scalars['ID'];\r\n  quantity: Scalars['Int'];\r\n};\r\n\r\nexport type Adjustment = {\r\n  __typename?: 'Adjustment';\r\n  adjustmentSource: Scalars['String'];\r\n  type: AdjustmentType;\r\n  description: Scalars['String'];\r\n  amount: Scalars['Int'];\r\n};\r\n\r\nexport enum AdjustmentType {\r\n  PROMOTION = 'PROMOTION',\r\n  DISTRIBUTED_ORDER_PROMOTION = 'DISTRIBUTED_ORDER_PROMOTION',\r\n  OTHER = 'OTHER'\r\n}\r\n\r\nexport type Administrator = Node & {\r\n  __typename?: 'Administrator';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  firstName: Scalars['String'];\r\n  lastName: Scalars['String'];\r\n  emailAddress: Scalars['String'];\r\n  user: User;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type AdministratorFilterParameter = {\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  firstName?: Maybe<StringOperators>;\r\n  lastName?: Maybe<StringOperators>;\r\n  emailAddress?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type AdministratorList = PaginatedList & {\r\n  __typename?: 'AdministratorList';\r\n  items: Array<Administrator>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type AdministratorListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<AdministratorSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<AdministratorFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type AdministratorPaymentInput = {\r\n  paymentMethod?: Maybe<Scalars['String']>;\r\n  metadata?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type AdministratorRefundInput = {\r\n  paymentId: Scalars['ID'];\r\n  reason?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type AdministratorSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  firstName?: Maybe<SortOrder>;\r\n  lastName?: Maybe<SortOrder>;\r\n  emailAddress?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type Allocation = Node & StockMovement & {\r\n  __typename?: 'Allocation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  type: StockMovementType;\r\n  quantity: Scalars['Int'];\r\n  orderLine: OrderLine;\r\n};\r\n\r\n/** Returned if an attempting to refund an OrderItem which has already been refunded */\r\nexport type AlreadyRefundedError = ErrorResult & {\r\n  __typename?: 'AlreadyRefundedError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  refundId: Scalars['ID'];\r\n};\r\n\r\nexport type Asset = Node & {\r\n  __typename?: 'Asset';\r\n  tags: Array<Tag>;\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  name: Scalars['String'];\r\n  type: AssetType;\r\n  fileSize: Scalars['Int'];\r\n  mimeType: Scalars['String'];\r\n  width: Scalars['Int'];\r\n  height: Scalars['Int'];\r\n  source: Scalars['String'];\r\n  preview: Scalars['String'];\r\n  focalPoint?: Maybe<Coordinate>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type AssetFilterParameter = {\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  type?: Maybe<StringOperators>;\r\n  fileSize?: Maybe<NumberOperators>;\r\n  mimeType?: Maybe<StringOperators>;\r\n  width?: Maybe<NumberOperators>;\r\n  height?: Maybe<NumberOperators>;\r\n  source?: Maybe<StringOperators>;\r\n  preview?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type AssetList = PaginatedList & {\r\n  __typename?: 'AssetList';\r\n  items: Array<Asset>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type AssetListOptions = {\r\n  tags?: Maybe<Array<Scalars['String']>>;\r\n  tagsOperator?: Maybe<LogicalOperator>;\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<AssetSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<AssetFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type AssetSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  fileSize?: Maybe<SortOrder>;\r\n  mimeType?: Maybe<SortOrder>;\r\n  width?: Maybe<SortOrder>;\r\n  height?: Maybe<SortOrder>;\r\n  source?: Maybe<SortOrder>;\r\n  preview?: Maybe<SortOrder>;\r\n};\r\n\r\nexport enum AssetType {\r\n  IMAGE = 'IMAGE',\r\n  VIDEO = 'VIDEO',\r\n  BINARY = 'BINARY'\r\n}\r\n\r\nexport type AssignAssetsToChannelInput = {\r\n  assetIds: Array<Scalars['ID']>;\r\n  channelId: Scalars['ID'];\r\n};\r\n\r\nexport type AssignProductVariantsToChannelInput = {\r\n  productVariantIds: Array<Scalars['ID']>;\r\n  channelId: Scalars['ID'];\r\n  priceFactor?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type AssignProductsToChannelInput = {\r\n  productIds: Array<Scalars['ID']>;\r\n  channelId: Scalars['ID'];\r\n  priceFactor?: Maybe<Scalars['Float']>;\r\n};\r\n\r\nexport type AssignPromotionsToChannelInput = {\r\n  promotionIds: Array<Scalars['ID']>;\r\n  channelId: Scalars['ID'];\r\n};\r\n\r\nexport type AuthenticationInput = {\r\n  native?: Maybe<NativeAuthInput>;\r\n};\r\n\r\nexport type AuthenticationMethod = Node & {\r\n  __typename?: 'AuthenticationMethod';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  strategy: Scalars['String'];\r\n};\r\n\r\nexport type AuthenticationResult = CurrentUser | InvalidCredentialsError;\r\n\r\nexport type BooleanCustomFieldConfig = CustomField & {\r\n  __typename?: 'BooleanCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  list: Scalars['Boolean'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  nullable?: Maybe<Scalars['Boolean']>;\r\n  ui?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n/** Operators for filtering on a list of Boolean fields */\r\nexport type BooleanListOperators = {\r\n  inList: Scalars['Boolean'];\r\n};\r\n\r\n/** Operators for filtering on a Boolean field */\r\nexport type BooleanOperators = {\r\n  eq?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\n/** Returned if an attempting to cancel lines from an Order which is still active */\r\nexport type CancelActiveOrderError = ErrorResult & {\r\n  __typename?: 'CancelActiveOrderError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  orderState: Scalars['String'];\r\n};\r\n\r\nexport type CancelOrderInput = {\r\n  /** The id of the order to be cancelled */\r\n  orderId: Scalars['ID'];\r\n  /** Optionally specify which OrderLines to cancel. If not provided, all OrderLines will be cancelled */\r\n  lines?: Maybe<Array<OrderLineInput>>;\r\n  /** Specify whether the shipping charges should also be cancelled. Defaults to false */\r\n  cancelShipping?: Maybe<Scalars['Boolean']>;\r\n  reason?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type CancelOrderResult = Order | EmptyOrderLineSelectionError | QuantityTooGreatError | MultipleOrderError | CancelActiveOrderError | OrderStateTransitionError;\r\n\r\nexport type Cancellation = Node & StockMovement & {\r\n  __typename?: 'Cancellation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  type: StockMovementType;\r\n  quantity: Scalars['Int'];\r\n  orderLine: OrderLine;\r\n};\r\n\r\nexport type Channel = Node & {\r\n  __typename?: 'Channel';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  code: Scalars['String'];\r\n  token: Scalars['String'];\r\n  defaultTaxZone?: Maybe<Zone>;\r\n  defaultShippingZone?: Maybe<Zone>;\r\n  defaultLanguageCode: LanguageCode;\r\n  currencyCode: CurrencyCode;\r\n  pricesIncludeTax: Scalars['Boolean'];\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n/**\r\n * Returned when the default LanguageCode of a Channel is no longer found in the `availableLanguages`\r\n * of the GlobalSettings\r\n */\r\nexport type ChannelDefaultLanguageError = ErrorResult & {\r\n  __typename?: 'ChannelDefaultLanguageError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  language: Scalars['String'];\r\n  channelCode: Scalars['String'];\r\n};\r\n\r\nexport type Collection = Node & {\r\n  __typename?: 'Collection';\r\n  isPrivate: Scalars['Boolean'];\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode?: Maybe<LanguageCode>;\r\n  name: Scalars['String'];\r\n  slug: Scalars['String'];\r\n  breadcrumbs: Array<CollectionBreadcrumb>;\r\n  position: Scalars['Int'];\r\n  description: Scalars['String'];\r\n  featuredAsset?: Maybe<Asset>;\r\n  assets: Array<Asset>;\r\n  parent?: Maybe<Collection>;\r\n  children?: Maybe<Array<Collection>>;\r\n  filters: Array<ConfigurableOperation>;\r\n  translations: Array<CollectionTranslation>;\r\n  productVariants: ProductVariantList;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n\r\nexport type CollectionProductVariantsArgs = {\r\n  options?: Maybe<ProductVariantListOptions>;\r\n};\r\n\r\nexport type CollectionBreadcrumb = {\r\n  __typename?: 'CollectionBreadcrumb';\r\n  id: Scalars['ID'];\r\n  name: Scalars['String'];\r\n  slug: Scalars['String'];\r\n};\r\n\r\nexport type CollectionFilterParameter = {\r\n  isPrivate?: Maybe<BooleanOperators>;\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  languageCode?: Maybe<StringOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  slug?: Maybe<StringOperators>;\r\n  position?: Maybe<NumberOperators>;\r\n  description?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type CollectionList = PaginatedList & {\r\n  __typename?: 'CollectionList';\r\n  items: Array<Collection>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type CollectionListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<CollectionSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<CollectionFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\n/**\r\n * Which Collections are present in the products returned\r\n * by the search, and in what quantity.\r\n */\r\nexport type CollectionResult = {\r\n  __typename?: 'CollectionResult';\r\n  collection: Collection;\r\n  count: Scalars['Int'];\r\n};\r\n\r\nexport type CollectionSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  slug?: Maybe<SortOrder>;\r\n  position?: Maybe<SortOrder>;\r\n  description?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type CollectionTranslation = {\r\n  __typename?: 'CollectionTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n  slug: Scalars['String'];\r\n  description: Scalars['String'];\r\n};\r\n\r\nexport type ConfigArg = {\r\n  __typename?: 'ConfigArg';\r\n  name: Scalars['String'];\r\n  value: Scalars['String'];\r\n};\r\n\r\nexport type ConfigArgDefinition = {\r\n  __typename?: 'ConfigArgDefinition';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  list: Scalars['Boolean'];\r\n  required: Scalars['Boolean'];\r\n  defaultValue?: Maybe<Scalars['JSON']>;\r\n  label?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n  ui?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ConfigArgInput = {\r\n  name: Scalars['String'];\r\n  /** A JSON stringified representation of the actual value */\r\n  value: Scalars['String'];\r\n};\r\n\r\nexport type ConfigurableOperation = {\r\n  __typename?: 'ConfigurableOperation';\r\n  code: Scalars['String'];\r\n  args: Array<ConfigArg>;\r\n};\r\n\r\nexport type ConfigurableOperationDefinition = {\r\n  __typename?: 'ConfigurableOperationDefinition';\r\n  code: Scalars['String'];\r\n  args: Array<ConfigArgDefinition>;\r\n  description: Scalars['String'];\r\n};\r\n\r\nexport type ConfigurableOperationInput = {\r\n  code: Scalars['String'];\r\n  arguments: Array<ConfigArgInput>;\r\n};\r\n\r\nexport type Coordinate = {\r\n  __typename?: 'Coordinate';\r\n  x: Scalars['Float'];\r\n  y: Scalars['Float'];\r\n};\r\n\r\nexport type CoordinateInput = {\r\n  x: Scalars['Float'];\r\n  y: Scalars['Float'];\r\n};\r\n\r\nexport type Country = Node & {\r\n  __typename?: 'Country';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  code: Scalars['String'];\r\n  name: Scalars['String'];\r\n  enabled: Scalars['Boolean'];\r\n  translations: Array<CountryTranslation>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CountryFilterParameter = {\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  languageCode?: Maybe<StringOperators>;\r\n  code?: Maybe<StringOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  enabled?: Maybe<BooleanOperators>;\r\n};\r\n\r\nexport type CountryList = PaginatedList & {\r\n  __typename?: 'CountryList';\r\n  items: Array<Country>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type CountryListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<CountrySortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<CountryFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type CountrySortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  code?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type CountryTranslation = {\r\n  __typename?: 'CountryTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type CountryTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n/** Returned if the provided coupon code is invalid */\r\nexport type CouponCodeExpiredError = ErrorResult & {\r\n  __typename?: 'CouponCodeExpiredError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  couponCode: Scalars['String'];\r\n};\r\n\r\n/** Returned if the provided coupon code is invalid */\r\nexport type CouponCodeInvalidError = ErrorResult & {\r\n  __typename?: 'CouponCodeInvalidError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  couponCode: Scalars['String'];\r\n};\r\n\r\n/** Returned if the provided coupon code is invalid */\r\nexport type CouponCodeLimitError = ErrorResult & {\r\n  __typename?: 'CouponCodeLimitError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  couponCode: Scalars['String'];\r\n  limit: Scalars['Int'];\r\n};\r\n\r\nexport type CreateAddressInput = {\r\n  fullName?: Maybe<Scalars['String']>;\r\n  company?: Maybe<Scalars['String']>;\r\n  streetLine1: Scalars['String'];\r\n  streetLine2?: Maybe<Scalars['String']>;\r\n  city?: Maybe<Scalars['String']>;\r\n  province?: Maybe<Scalars['String']>;\r\n  postalCode?: Maybe<Scalars['String']>;\r\n  countryCode: Scalars['String'];\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\r\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateAdministratorInput = {\r\n  firstName: Scalars['String'];\r\n  lastName: Scalars['String'];\r\n  emailAddress: Scalars['String'];\r\n  password: Scalars['String'];\r\n  roleIds: Array<Scalars['ID']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateAssetInput = {\r\n  file: Scalars['Upload'];\r\n  tags?: Maybe<Array<Scalars['String']>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateAssetResult = Asset | MimeTypeError;\r\n\r\nexport type CreateChannelInput = {\r\n  code: Scalars['String'];\r\n  token: Scalars['String'];\r\n  defaultLanguageCode: LanguageCode;\r\n  pricesIncludeTax: Scalars['Boolean'];\r\n  currencyCode: CurrencyCode;\r\n  defaultTaxZoneId: Scalars['ID'];\r\n  defaultShippingZoneId: Scalars['ID'];\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateChannelResult = Channel | LanguageNotAvailableError;\r\n\r\nexport type CreateCollectionInput = {\r\n  isPrivate?: Maybe<Scalars['Boolean']>;\r\n  featuredAssetId?: Maybe<Scalars['ID']>;\r\n  assetIds?: Maybe<Array<Scalars['ID']>>;\r\n  parentId?: Maybe<Scalars['ID']>;\r\n  filters: Array<ConfigurableOperationInput>;\r\n  translations: Array<CreateCollectionTranslationInput>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateCollectionTranslationInput = {\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n  slug: Scalars['String'];\r\n  description: Scalars['String'];\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateCountryInput = {\r\n  code: Scalars['String'];\r\n  translations: Array<CountryTranslationInput>;\r\n  enabled: Scalars['Boolean'];\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateCustomerGroupInput = {\r\n  name: Scalars['String'];\r\n  customerIds?: Maybe<Array<Scalars['ID']>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateCustomerInput = {\r\n  title?: Maybe<Scalars['String']>;\r\n  firstName: Scalars['String'];\r\n  lastName: Scalars['String'];\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n  emailAddress: Scalars['String'];\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateCustomerResult = Customer | EmailAddressConflictError;\r\n\r\nexport type CreateFacetInput = {\r\n  code: Scalars['String'];\r\n  isPrivate: Scalars['Boolean'];\r\n  translations: Array<FacetTranslationInput>;\r\n  values?: Maybe<Array<CreateFacetValueWithFacetInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateFacetValueInput = {\r\n  facetId: Scalars['ID'];\r\n  code: Scalars['String'];\r\n  translations: Array<FacetValueTranslationInput>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateFacetValueWithFacetInput = {\r\n  code: Scalars['String'];\r\n  translations: Array<FacetValueTranslationInput>;\r\n};\r\n\r\n/** Returned if an error is thrown in a FulfillmentHandler's createFulfillment method */\r\nexport type CreateFulfillmentError = ErrorResult & {\r\n  __typename?: 'CreateFulfillmentError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  fulfillmentHandlerError: Scalars['String'];\r\n};\r\n\r\nexport type CreateGroupOptionInput = {\r\n  code: Scalars['String'];\r\n  translations: Array<ProductOptionGroupTranslationInput>;\r\n};\r\n\r\nexport type CreatePaymentMethodInput = {\r\n  name: Scalars['String'];\r\n  code: Scalars['String'];\r\n  description?: Maybe<Scalars['String']>;\r\n  enabled: Scalars['Boolean'];\r\n  checker?: Maybe<ConfigurableOperationInput>;\r\n  handler: ConfigurableOperationInput;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateProductInput = {\r\n  featuredAssetId?: Maybe<Scalars['ID']>;\r\n  enabled?: Maybe<Scalars['Boolean']>;\r\n  assetIds?: Maybe<Array<Scalars['ID']>>;\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\r\n  translations: Array<ProductTranslationInput>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateProductOptionGroupInput = {\r\n  code: Scalars['String'];\r\n  translations: Array<ProductOptionGroupTranslationInput>;\r\n  options: Array<CreateGroupOptionInput>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateProductOptionInput = {\r\n  productOptionGroupId: Scalars['ID'];\r\n  code: Scalars['String'];\r\n  translations: Array<ProductOptionGroupTranslationInput>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateProductVariantInput = {\r\n  productId: Scalars['ID'];\r\n  translations: Array<ProductVariantTranslationInput>;\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\r\n  sku: Scalars['String'];\r\n  price?: Maybe<Scalars['Int']>;\r\n  taxCategoryId?: Maybe<Scalars['ID']>;\r\n  optionIds?: Maybe<Array<Scalars['ID']>>;\r\n  featuredAssetId?: Maybe<Scalars['ID']>;\r\n  assetIds?: Maybe<Array<Scalars['ID']>>;\r\n  stockOnHand?: Maybe<Scalars['Int']>;\r\n  outOfStockThreshold?: Maybe<Scalars['Int']>;\r\n  useGlobalOutOfStockThreshold?: Maybe<Scalars['Boolean']>;\r\n  trackInventory?: Maybe<GlobalFlag>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateProductVariantOptionInput = {\r\n  optionGroupId: Scalars['ID'];\r\n  code: Scalars['String'];\r\n  translations: Array<ProductOptionTranslationInput>;\r\n};\r\n\r\nexport type CreatePromotionInput = {\r\n  name: Scalars['String'];\r\n  enabled: Scalars['Boolean'];\r\n  startsAt?: Maybe<Scalars['DateTime']>;\r\n  endsAt?: Maybe<Scalars['DateTime']>;\r\n  couponCode?: Maybe<Scalars['String']>;\r\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\r\n  conditions: Array<ConfigurableOperationInput>;\r\n  actions: Array<ConfigurableOperationInput>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreatePromotionResult = Promotion | MissingConditionsError;\r\n\r\nexport type CreateRoleInput = {\r\n  code: Scalars['String'];\r\n  description: Scalars['String'];\r\n  permissions: Array<Permission>;\r\n  channelIds?: Maybe<Array<Scalars['ID']>>;\r\n};\r\n\r\nexport type CreateShippingMethodInput = {\r\n  code: Scalars['String'];\r\n  fulfillmentHandler: Scalars['String'];\r\n  checker: ConfigurableOperationInput;\r\n  calculator: ConfigurableOperationInput;\r\n  translations: Array<ShippingMethodTranslationInput>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateTagInput = {\r\n  value: Scalars['String'];\r\n};\r\n\r\nexport type CreateTaxCategoryInput = {\r\n  name: Scalars['String'];\r\n  isDefault?: Maybe<Scalars['Boolean']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateTaxRateInput = {\r\n  name: Scalars['String'];\r\n  enabled: Scalars['Boolean'];\r\n  value: Scalars['Float'];\r\n  categoryId: Scalars['ID'];\r\n  zoneId: Scalars['ID'];\r\n  customerGroupId?: Maybe<Scalars['ID']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CreateZoneInput = {\r\n  name: Scalars['String'];\r\n  memberIds?: Maybe<Array<Scalars['ID']>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n/**\r\n * @description\r\n * ISO 4217 currency code\r\n *\r\n * @docsCategory common\r\n */\r\nexport enum CurrencyCode {\r\n  /** United Arab Emirates dirham */\r\n  AED = 'AED',\r\n  /** Afghan afghani */\r\n  AFN = 'AFN',\r\n  /** Albanian lek */\r\n  ALL = 'ALL',\r\n  /** Armenian dram */\r\n  AMD = 'AMD',\r\n  /** Netherlands Antillean guilder */\r\n  ANG = 'ANG',\r\n  /** Angolan kwanza */\r\n  AOA = 'AOA',\r\n  /** Argentine peso */\r\n  ARS = 'ARS',\r\n  /** Australian dollar */\r\n  AUD = 'AUD',\r\n  /** Aruban florin */\r\n  AWG = 'AWG',\r\n  /** Azerbaijani manat */\r\n  AZN = 'AZN',\r\n  /** Bosnia and Herzegovina convertible mark */\r\n  BAM = 'BAM',\r\n  /** Barbados dollar */\r\n  BBD = 'BBD',\r\n  /** Bangladeshi taka */\r\n  BDT = 'BDT',\r\n  /** Bulgarian lev */\r\n  BGN = 'BGN',\r\n  /** Bahraini dinar */\r\n  BHD = 'BHD',\r\n  /** Burundian franc */\r\n  BIF = 'BIF',\r\n  /** Bermudian dollar */\r\n  BMD = 'BMD',\r\n  /** Brunei dollar */\r\n  BND = 'BND',\r\n  /** Boliviano */\r\n  BOB = 'BOB',\r\n  /** Brazilian real */\r\n  BRL = 'BRL',\r\n  /** Bahamian dollar */\r\n  BSD = 'BSD',\r\n  /** Bhutanese ngultrum */\r\n  BTN = 'BTN',\r\n  /** Botswana pula */\r\n  BWP = 'BWP',\r\n  /** Belarusian ruble */\r\n  BYN = 'BYN',\r\n  /** Belize dollar */\r\n  BZD = 'BZD',\r\n  /** Canadian dollar */\r\n  CAD = 'CAD',\r\n  /** Congolese franc */\r\n  CDF = 'CDF',\r\n  /** Swiss franc */\r\n  CHF = 'CHF',\r\n  /** Chilean peso */\r\n  CLP = 'CLP',\r\n  /** Renminbi (Chinese) yuan */\r\n  CNY = 'CNY',\r\n  /** Colombian peso */\r\n  COP = 'COP',\r\n  /** Costa Rican colon */\r\n  CRC = 'CRC',\r\n  /** Cuban convertible peso */\r\n  CUC = 'CUC',\r\n  /** Cuban peso */\r\n  CUP = 'CUP',\r\n  /** Cape Verde escudo */\r\n  CVE = 'CVE',\r\n  /** Czech koruna */\r\n  CZK = 'CZK',\r\n  /** Djiboutian franc */\r\n  DJF = 'DJF',\r\n  /** Danish krone */\r\n  DKK = 'DKK',\r\n  /** Dominican peso */\r\n  DOP = 'DOP',\r\n  /** Algerian dinar */\r\n  DZD = 'DZD',\r\n  /** Egyptian pound */\r\n  EGP = 'EGP',\r\n  /** Eritrean nakfa */\r\n  ERN = 'ERN',\r\n  /** Ethiopian birr */\r\n  ETB = 'ETB',\r\n  /** Euro */\r\n  EUR = 'EUR',\r\n  /** Fiji dollar */\r\n  FJD = 'FJD',\r\n  /** Falkland Islands pound */\r\n  FKP = 'FKP',\r\n  /** Pound sterling */\r\n  GBP = 'GBP',\r\n  /** Georgian lari */\r\n  GEL = 'GEL',\r\n  /** Ghanaian cedi */\r\n  GHS = 'GHS',\r\n  /** Gibraltar pound */\r\n  GIP = 'GIP',\r\n  /** Gambian dalasi */\r\n  GMD = 'GMD',\r\n  /** Guinean franc */\r\n  GNF = 'GNF',\r\n  /** Guatemalan quetzal */\r\n  GTQ = 'GTQ',\r\n  /** Guyanese dollar */\r\n  GYD = 'GYD',\r\n  /** Hong Kong dollar */\r\n  HKD = 'HKD',\r\n  /** Honduran lempira */\r\n  HNL = 'HNL',\r\n  /** Croatian kuna */\r\n  HRK = 'HRK',\r\n  /** Haitian gourde */\r\n  HTG = 'HTG',\r\n  /** Hungarian forint */\r\n  HUF = 'HUF',\r\n  /** Indonesian rupiah */\r\n  IDR = 'IDR',\r\n  /** Israeli new shekel */\r\n  ILS = 'ILS',\r\n  /** Indian rupee */\r\n  INR = 'INR',\r\n  /** Iraqi dinar */\r\n  IQD = 'IQD',\r\n  /** Iranian rial */\r\n  IRR = 'IRR',\r\n  /** Icelandic króna */\r\n  ISK = 'ISK',\r\n  /** Jamaican dollar */\r\n  JMD = 'JMD',\r\n  /** Jordanian dinar */\r\n  JOD = 'JOD',\r\n  /** Japanese yen */\r\n  JPY = 'JPY',\r\n  /** Kenyan shilling */\r\n  KES = 'KES',\r\n  /** Kyrgyzstani som */\r\n  KGS = 'KGS',\r\n  /** Cambodian riel */\r\n  KHR = 'KHR',\r\n  /** Comoro franc */\r\n  KMF = 'KMF',\r\n  /** North Korean won */\r\n  KPW = 'KPW',\r\n  /** South Korean won */\r\n  KRW = 'KRW',\r\n  /** Kuwaiti dinar */\r\n  KWD = 'KWD',\r\n  /** Cayman Islands dollar */\r\n  KYD = 'KYD',\r\n  /** Kazakhstani tenge */\r\n  KZT = 'KZT',\r\n  /** Lao kip */\r\n  LAK = 'LAK',\r\n  /** Lebanese pound */\r\n  LBP = 'LBP',\r\n  /** Sri Lankan rupee */\r\n  LKR = 'LKR',\r\n  /** Liberian dollar */\r\n  LRD = 'LRD',\r\n  /** Lesotho loti */\r\n  LSL = 'LSL',\r\n  /** Libyan dinar */\r\n  LYD = 'LYD',\r\n  /** Moroccan dirham */\r\n  MAD = 'MAD',\r\n  /** Moldovan leu */\r\n  MDL = 'MDL',\r\n  /** Malagasy ariary */\r\n  MGA = 'MGA',\r\n  /** Macedonian denar */\r\n  MKD = 'MKD',\r\n  /** Myanmar kyat */\r\n  MMK = 'MMK',\r\n  /** Mongolian tögrög */\r\n  MNT = 'MNT',\r\n  /** Macanese pataca */\r\n  MOP = 'MOP',\r\n  /** Mauritanian ouguiya */\r\n  MRU = 'MRU',\r\n  /** Mauritian rupee */\r\n  MUR = 'MUR',\r\n  /** Maldivian rufiyaa */\r\n  MVR = 'MVR',\r\n  /** Malawian kwacha */\r\n  MWK = 'MWK',\r\n  /** Mexican peso */\r\n  MXN = 'MXN',\r\n  /** Malaysian ringgit */\r\n  MYR = 'MYR',\r\n  /** Mozambican metical */\r\n  MZN = 'MZN',\r\n  /** Namibian dollar */\r\n  NAD = 'NAD',\r\n  /** Nigerian naira */\r\n  NGN = 'NGN',\r\n  /** Nicaraguan córdoba */\r\n  NIO = 'NIO',\r\n  /** Norwegian krone */\r\n  NOK = 'NOK',\r\n  /** Nepalese rupee */\r\n  NPR = 'NPR',\r\n  /** New Zealand dollar */\r\n  NZD = 'NZD',\r\n  /** Omani rial */\r\n  OMR = 'OMR',\r\n  /** Panamanian balboa */\r\n  PAB = 'PAB',\r\n  /** Peruvian sol */\r\n  PEN = 'PEN',\r\n  /** Papua New Guinean kina */\r\n  PGK = 'PGK',\r\n  /** Philippine peso */\r\n  PHP = 'PHP',\r\n  /** Pakistani rupee */\r\n  PKR = 'PKR',\r\n  /** Polish złoty */\r\n  PLN = 'PLN',\r\n  /** Paraguayan guaraní */\r\n  PYG = 'PYG',\r\n  /** Qatari riyal */\r\n  QAR = 'QAR',\r\n  /** Romanian leu */\r\n  RON = 'RON',\r\n  /** Serbian dinar */\r\n  RSD = 'RSD',\r\n  /** Russian ruble */\r\n  RUB = 'RUB',\r\n  /** Rwandan franc */\r\n  RWF = 'RWF',\r\n  /** Saudi riyal */\r\n  SAR = 'SAR',\r\n  /** Solomon Islands dollar */\r\n  SBD = 'SBD',\r\n  /** Seychelles rupee */\r\n  SCR = 'SCR',\r\n  /** Sudanese pound */\r\n  SDG = 'SDG',\r\n  /** Swedish krona/kronor */\r\n  SEK = 'SEK',\r\n  /** Singapore dollar */\r\n  SGD = 'SGD',\r\n  /** Saint Helena pound */\r\n  SHP = 'SHP',\r\n  /** Sierra Leonean leone */\r\n  SLL = 'SLL',\r\n  /** Somali shilling */\r\n  SOS = 'SOS',\r\n  /** Surinamese dollar */\r\n  SRD = 'SRD',\r\n  /** South Sudanese pound */\r\n  SSP = 'SSP',\r\n  /** São Tomé and Príncipe dobra */\r\n  STN = 'STN',\r\n  /** Salvadoran colón */\r\n  SVC = 'SVC',\r\n  /** Syrian pound */\r\n  SYP = 'SYP',\r\n  /** Swazi lilangeni */\r\n  SZL = 'SZL',\r\n  /** Thai baht */\r\n  THB = 'THB',\r\n  /** Tajikistani somoni */\r\n  TJS = 'TJS',\r\n  /** Turkmenistan manat */\r\n  TMT = 'TMT',\r\n  /** Tunisian dinar */\r\n  TND = 'TND',\r\n  /** Tongan paʻanga */\r\n  TOP = 'TOP',\r\n  /** Turkish lira */\r\n  TRY = 'TRY',\r\n  /** Trinidad and Tobago dollar */\r\n  TTD = 'TTD',\r\n  /** New Taiwan dollar */\r\n  TWD = 'TWD',\r\n  /** Tanzanian shilling */\r\n  TZS = 'TZS',\r\n  /** Ukrainian hryvnia */\r\n  UAH = 'UAH',\r\n  /** Ugandan shilling */\r\n  UGX = 'UGX',\r\n  /** United States dollar */\r\n  USD = 'USD',\r\n  /** Uruguayan peso */\r\n  UYU = 'UYU',\r\n  /** Uzbekistan som */\r\n  UZS = 'UZS',\r\n  /** Venezuelan bolívar soberano */\r\n  VES = 'VES',\r\n  /** Vietnamese đồng */\r\n  VND = 'VND',\r\n  /** Vanuatu vatu */\r\n  VUV = 'VUV',\r\n  /** Samoan tala */\r\n  WST = 'WST',\r\n  /** CFA franc BEAC */\r\n  XAF = 'XAF',\r\n  /** East Caribbean dollar */\r\n  XCD = 'XCD',\r\n  /** CFA franc BCEAO */\r\n  XOF = 'XOF',\r\n  /** CFP franc (franc Pacifique) */\r\n  XPF = 'XPF',\r\n  /** Yemeni rial */\r\n  YER = 'YER',\r\n  /** South African rand */\r\n  ZAR = 'ZAR',\r\n  /** Zambian kwacha */\r\n  ZMW = 'ZMW',\r\n  /** Zimbabwean dollar */\r\n  ZWL = 'ZWL'\r\n}\r\n\r\nexport type CurrentUser = {\r\n  __typename?: 'CurrentUser';\r\n  channels: Array<CurrentUserChannel>;\r\n  id: Scalars['ID'];\r\n  identifier: Scalars['String'];\r\n};\r\n\r\nexport type CurrentUserChannel = {\r\n  __typename?: 'CurrentUserChannel';\r\n  code: Scalars['String'];\r\n  id: Scalars['ID'];\r\n  permissions: Array<Permission>;\r\n  token: Scalars['String'];\r\n};\r\n\r\nexport type CurrentUserChannelInput = {\r\n  id: Scalars['ID'];\r\n  token: Scalars['String'];\r\n  code: Scalars['String'];\r\n  permissions: Array<Permission>;\r\n};\r\n\r\nexport type CustomField = {\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  list: Scalars['Boolean'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  nullable?: Maybe<Scalars['Boolean']>;\r\n  ui?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type CustomFieldConfig = StringCustomFieldConfig | LocaleStringCustomFieldConfig | IntCustomFieldConfig | FloatCustomFieldConfig | BooleanCustomFieldConfig | DateTimeCustomFieldConfig | RelationCustomFieldConfig | TextCustomFieldConfig;\r\n\r\nexport type CustomFields = {\r\n  __typename?: 'CustomFields';\r\n  Address: Array<CustomFieldConfig>;\r\n  Administrator: Array<CustomFieldConfig>;\r\n  Asset: Array<CustomFieldConfig>;\r\n  Channel: Array<CustomFieldConfig>;\r\n  Collection: Array<CustomFieldConfig>;\r\n  Country: Array<CustomFieldConfig>;\r\n  Customer: Array<CustomFieldConfig>;\r\n  CustomerGroup: Array<CustomFieldConfig>;\r\n  Facet: Array<CustomFieldConfig>;\r\n  FacetValue: Array<CustomFieldConfig>;\r\n  Fulfillment: Array<CustomFieldConfig>;\r\n  GlobalSettings: Array<CustomFieldConfig>;\r\n  Order: Array<CustomFieldConfig>;\r\n  OrderLine: Array<CustomFieldConfig>;\r\n  PaymentMethod: Array<CustomFieldConfig>;\r\n  Product: Array<CustomFieldConfig>;\r\n  ProductOption: Array<CustomFieldConfig>;\r\n  ProductOptionGroup: Array<CustomFieldConfig>;\r\n  ProductVariant: Array<CustomFieldConfig>;\r\n  Promotion: Array<CustomFieldConfig>;\r\n  ShippingMethod: Array<CustomFieldConfig>;\r\n  TaxCategory: Array<CustomFieldConfig>;\r\n  TaxRate: Array<CustomFieldConfig>;\r\n  User: Array<CustomFieldConfig>;\r\n  Zone: Array<CustomFieldConfig>;\r\n};\r\n\r\nexport type Customer = Node & {\r\n  __typename?: 'Customer';\r\n  groups: Array<CustomerGroup>;\r\n  history: HistoryEntryList;\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  title?: Maybe<Scalars['String']>;\r\n  firstName: Scalars['String'];\r\n  lastName: Scalars['String'];\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n  emailAddress: Scalars['String'];\r\n  addresses?: Maybe<Array<Address>>;\r\n  orders: OrderList;\r\n  user?: Maybe<User>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n\r\nexport type CustomerHistoryArgs = {\r\n  options?: Maybe<HistoryEntryListOptions>;\r\n};\r\n\r\n\r\nexport type CustomerOrdersArgs = {\r\n  options?: Maybe<OrderListOptions>;\r\n};\r\n\r\nexport type CustomerFilterParameter = {\r\n  postalCode?: Maybe<StringOperators>;\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  title?: Maybe<StringOperators>;\r\n  firstName?: Maybe<StringOperators>;\r\n  lastName?: Maybe<StringOperators>;\r\n  phoneNumber?: Maybe<StringOperators>;\r\n  emailAddress?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type CustomerGroup = Node & {\r\n  __typename?: 'CustomerGroup';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  name: Scalars['String'];\r\n  customers: CustomerList;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n\r\nexport type CustomerGroupCustomersArgs = {\r\n  options?: Maybe<CustomerListOptions>;\r\n};\r\n\r\nexport type CustomerGroupFilterParameter = {\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  name?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type CustomerGroupList = PaginatedList & {\r\n  __typename?: 'CustomerGroupList';\r\n  items: Array<CustomerGroup>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type CustomerGroupListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<CustomerGroupSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<CustomerGroupFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type CustomerGroupSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type CustomerList = PaginatedList & {\r\n  __typename?: 'CustomerList';\r\n  items: Array<Customer>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type CustomerListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<CustomerSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<CustomerFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type CustomerSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  title?: Maybe<SortOrder>;\r\n  firstName?: Maybe<SortOrder>;\r\n  lastName?: Maybe<SortOrder>;\r\n  phoneNumber?: Maybe<SortOrder>;\r\n  emailAddress?: Maybe<SortOrder>;\r\n};\r\n\r\n/** Operators for filtering on a list of Date fields */\r\nexport type DateListOperators = {\r\n  inList: Scalars['DateTime'];\r\n};\r\n\r\n/** Operators for filtering on a DateTime field */\r\nexport type DateOperators = {\r\n  eq?: Maybe<Scalars['DateTime']>;\r\n  before?: Maybe<Scalars['DateTime']>;\r\n  after?: Maybe<Scalars['DateTime']>;\r\n  between?: Maybe<DateRange>;\r\n};\r\n\r\nexport type DateRange = {\r\n  start: Scalars['DateTime'];\r\n  end: Scalars['DateTime'];\r\n};\r\n\r\n\r\n/**\r\n * Expects the same validation formats as the `<input type=\"datetime-local\">` HTML element.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local#Additional_attributes\r\n */\r\nexport type DateTimeCustomFieldConfig = CustomField & {\r\n  __typename?: 'DateTimeCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  list: Scalars['Boolean'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  nullable?: Maybe<Scalars['Boolean']>;\r\n  min?: Maybe<Scalars['String']>;\r\n  max?: Maybe<Scalars['String']>;\r\n  step?: Maybe<Scalars['Int']>;\r\n  ui?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type DeleteAssetInput = {\r\n  assetId: Scalars['ID'];\r\n  force?: Maybe<Scalars['Boolean']>;\r\n  deleteFromAllChannels?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type DeleteAssetsInput = {\r\n  assetIds: Array<Scalars['ID']>;\r\n  force?: Maybe<Scalars['Boolean']>;\r\n  deleteFromAllChannels?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type DeletionResponse = {\r\n  __typename?: 'DeletionResponse';\r\n  result: DeletionResult;\r\n  message?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport enum DeletionResult {\r\n  /** The entity was successfully deleted */\r\n  DELETED = 'DELETED',\r\n  /** Deletion did not take place, reason given in message */\r\n  NOT_DELETED = 'NOT_DELETED'\r\n}\r\n\r\nexport type Discount = {\r\n  __typename?: 'Discount';\r\n  adjustmentSource: Scalars['String'];\r\n  type: AdjustmentType;\r\n  description: Scalars['String'];\r\n  amount: Scalars['Int'];\r\n  amountWithTax: Scalars['Int'];\r\n};\r\n\r\n/** Returned when attempting to create a Customer with an email address already registered to an existing User. */\r\nexport type EmailAddressConflictError = ErrorResult & {\r\n  __typename?: 'EmailAddressConflictError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\n/** Returned if no OrderLines have been specified for the operation */\r\nexport type EmptyOrderLineSelectionError = ErrorResult & {\r\n  __typename?: 'EmptyOrderLineSelectionError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport enum ErrorCode {\r\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\r\n  MIME_TYPE_ERROR = 'MIME_TYPE_ERROR',\r\n  LANGUAGE_NOT_AVAILABLE_ERROR = 'LANGUAGE_NOT_AVAILABLE_ERROR',\r\n  CHANNEL_DEFAULT_LANGUAGE_ERROR = 'CHANNEL_DEFAULT_LANGUAGE_ERROR',\r\n  SETTLE_PAYMENT_ERROR = 'SETTLE_PAYMENT_ERROR',\r\n  EMPTY_ORDER_LINE_SELECTION_ERROR = 'EMPTY_ORDER_LINE_SELECTION_ERROR',\r\n  ITEMS_ALREADY_FULFILLED_ERROR = 'ITEMS_ALREADY_FULFILLED_ERROR',\r\n  INVALID_FULFILLMENT_HANDLER_ERROR = 'INVALID_FULFILLMENT_HANDLER_ERROR',\r\n  CREATE_FULFILLMENT_ERROR = 'CREATE_FULFILLMENT_ERROR',\r\n  INSUFFICIENT_STOCK_ON_HAND_ERROR = 'INSUFFICIENT_STOCK_ON_HAND_ERROR',\r\n  MULTIPLE_ORDER_ERROR = 'MULTIPLE_ORDER_ERROR',\r\n  CANCEL_ACTIVE_ORDER_ERROR = 'CANCEL_ACTIVE_ORDER_ERROR',\r\n  PAYMENT_ORDER_MISMATCH_ERROR = 'PAYMENT_ORDER_MISMATCH_ERROR',\r\n  REFUND_ORDER_STATE_ERROR = 'REFUND_ORDER_STATE_ERROR',\r\n  NOTHING_TO_REFUND_ERROR = 'NOTHING_TO_REFUND_ERROR',\r\n  ALREADY_REFUNDED_ERROR = 'ALREADY_REFUNDED_ERROR',\r\n  QUANTITY_TOO_GREAT_ERROR = 'QUANTITY_TOO_GREAT_ERROR',\r\n  REFUND_STATE_TRANSITION_ERROR = 'REFUND_STATE_TRANSITION_ERROR',\r\n  PAYMENT_STATE_TRANSITION_ERROR = 'PAYMENT_STATE_TRANSITION_ERROR',\r\n  FULFILLMENT_STATE_TRANSITION_ERROR = 'FULFILLMENT_STATE_TRANSITION_ERROR',\r\n  ORDER_MODIFICATION_STATE_ERROR = 'ORDER_MODIFICATION_STATE_ERROR',\r\n  NO_CHANGES_SPECIFIED_ERROR = 'NO_CHANGES_SPECIFIED_ERROR',\r\n  PAYMENT_METHOD_MISSING_ERROR = 'PAYMENT_METHOD_MISSING_ERROR',\r\n  REFUND_PAYMENT_ID_MISSING_ERROR = 'REFUND_PAYMENT_ID_MISSING_ERROR',\r\n  MANUAL_PAYMENT_STATE_ERROR = 'MANUAL_PAYMENT_STATE_ERROR',\r\n  PRODUCT_OPTION_IN_USE_ERROR = 'PRODUCT_OPTION_IN_USE_ERROR',\r\n  MISSING_CONDITIONS_ERROR = 'MISSING_CONDITIONS_ERROR',\r\n  NATIVE_AUTH_STRATEGY_ERROR = 'NATIVE_AUTH_STRATEGY_ERROR',\r\n  INVALID_CREDENTIALS_ERROR = 'INVALID_CREDENTIALS_ERROR',\r\n  ORDER_STATE_TRANSITION_ERROR = 'ORDER_STATE_TRANSITION_ERROR',\r\n  EMAIL_ADDRESS_CONFLICT_ERROR = 'EMAIL_ADDRESS_CONFLICT_ERROR',\r\n  ORDER_LIMIT_ERROR = 'ORDER_LIMIT_ERROR',\r\n  NEGATIVE_QUANTITY_ERROR = 'NEGATIVE_QUANTITY_ERROR',\r\n  INSUFFICIENT_STOCK_ERROR = 'INSUFFICIENT_STOCK_ERROR',\r\n  COUPON_CODE_INVALID_ERROR = 'COUPON_CODE_INVALID_ERROR',\r\n  COUPON_CODE_EXPIRED_ERROR = 'COUPON_CODE_EXPIRED_ERROR',\r\n  COUPON_CODE_LIMIT_ERROR = 'COUPON_CODE_LIMIT_ERROR'\r\n}\r\n\r\nexport type ErrorResult = {\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport type Facet = Node & {\r\n  __typename?: 'Facet';\r\n  isPrivate: Scalars['Boolean'];\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n  code: Scalars['String'];\r\n  values: Array<FacetValue>;\r\n  translations: Array<FacetTranslation>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type FacetFilterParameter = {\r\n  isPrivate?: Maybe<BooleanOperators>;\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  languageCode?: Maybe<StringOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  code?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type FacetList = PaginatedList & {\r\n  __typename?: 'FacetList';\r\n  items: Array<Facet>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type FacetListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<FacetSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<FacetFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type FacetSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  code?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type FacetTranslation = {\r\n  __typename?: 'FacetTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type FacetTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type FacetValue = Node & {\r\n  __typename?: 'FacetValue';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  facet: Facet;\r\n  name: Scalars['String'];\r\n  code: Scalars['String'];\r\n  translations: Array<FacetValueTranslation>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n/**\r\n * Used to construct boolean expressions for filtering search results\r\n * by FacetValue ID. Examples:\r\n *\r\n * * ID=1 OR ID=2: `{ facetValueFilters: [{ or: [1,2] }] }`\r\n * * ID=1 AND ID=2: `{ facetValueFilters: [{ and: 1 }, { and: 2 }] }`\r\n * * ID=1 AND (ID=2 OR ID=3): `{ facetValueFilters: [{ and: 1 }, { or: [2,3] }] }`\r\n */\r\nexport type FacetValueFilterInput = {\r\n  and?: Maybe<Scalars['ID']>;\r\n  or?: Maybe<Array<Scalars['ID']>>;\r\n};\r\n\r\n/**\r\n * Which FacetValues are present in the products returned\r\n * by the search, and in what quantity.\r\n */\r\nexport type FacetValueResult = {\r\n  __typename?: 'FacetValueResult';\r\n  facetValue: FacetValue;\r\n  count: Scalars['Int'];\r\n};\r\n\r\nexport type FacetValueTranslation = {\r\n  __typename?: 'FacetValueTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type FacetValueTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type FloatCustomFieldConfig = CustomField & {\r\n  __typename?: 'FloatCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  list: Scalars['Boolean'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  nullable?: Maybe<Scalars['Boolean']>;\r\n  min?: Maybe<Scalars['Float']>;\r\n  max?: Maybe<Scalars['Float']>;\r\n  step?: Maybe<Scalars['Float']>;\r\n  ui?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type FulfillOrderInput = {\r\n  lines: Array<OrderLineInput>;\r\n  handler: ConfigurableOperationInput;\r\n};\r\n\r\nexport type Fulfillment = Node & {\r\n  __typename?: 'Fulfillment';\r\n  nextStates: Array<Scalars['String']>;\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  orderItems: Array<OrderItem>;\r\n  state: Scalars['String'];\r\n  method: Scalars['String'];\r\n  trackingCode?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n/** Returned when there is an error in transitioning the Fulfillment state */\r\nexport type FulfillmentStateTransitionError = ErrorResult & {\r\n  __typename?: 'FulfillmentStateTransitionError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  transitionError: Scalars['String'];\r\n  fromState: Scalars['String'];\r\n  toState: Scalars['String'];\r\n};\r\n\r\nexport enum GlobalFlag {\r\n  TRUE = 'TRUE',\r\n  FALSE = 'FALSE',\r\n  INHERIT = 'INHERIT'\r\n}\r\n\r\nexport type GlobalSettings = {\r\n  __typename?: 'GlobalSettings';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  availableLanguages: Array<LanguageCode>;\r\n  trackInventory: Scalars['Boolean'];\r\n  outOfStockThreshold: Scalars['Int'];\r\n  serverConfig: ServerConfig;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type HistoryEntry = Node & {\r\n  __typename?: 'HistoryEntry';\r\n  isPublic: Scalars['Boolean'];\r\n  administrator?: Maybe<Administrator>;\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  type: HistoryEntryType;\r\n  data: Scalars['JSON'];\r\n};\r\n\r\nexport type HistoryEntryFilterParameter = {\r\n  isPublic?: Maybe<BooleanOperators>;\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  type?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type HistoryEntryList = PaginatedList & {\r\n  __typename?: 'HistoryEntryList';\r\n  items: Array<HistoryEntry>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type HistoryEntryListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<HistoryEntrySortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<HistoryEntryFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type HistoryEntrySortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n};\r\n\r\nexport enum HistoryEntryType {\r\n  CUSTOMER_REGISTERED = 'CUSTOMER_REGISTERED',\r\n  CUSTOMER_VERIFIED = 'CUSTOMER_VERIFIED',\r\n  CUSTOMER_DETAIL_UPDATED = 'CUSTOMER_DETAIL_UPDATED',\r\n  CUSTOMER_ADDED_TO_GROUP = 'CUSTOMER_ADDED_TO_GROUP',\r\n  CUSTOMER_REMOVED_FROM_GROUP = 'CUSTOMER_REMOVED_FROM_GROUP',\r\n  CUSTOMER_ADDRESS_CREATED = 'CUSTOMER_ADDRESS_CREATED',\r\n  CUSTOMER_ADDRESS_UPDATED = 'CUSTOMER_ADDRESS_UPDATED',\r\n  CUSTOMER_ADDRESS_DELETED = 'CUSTOMER_ADDRESS_DELETED',\r\n  CUSTOMER_PASSWORD_UPDATED = 'CUSTOMER_PASSWORD_UPDATED',\r\n  CUSTOMER_PASSWORD_RESET_REQUESTED = 'CUSTOMER_PASSWORD_RESET_REQUESTED',\r\n  CUSTOMER_PASSWORD_RESET_VERIFIED = 'CUSTOMER_PASSWORD_RESET_VERIFIED',\r\n  CUSTOMER_EMAIL_UPDATE_REQUESTED = 'CUSTOMER_EMAIL_UPDATE_REQUESTED',\r\n  CUSTOMER_EMAIL_UPDATE_VERIFIED = 'CUSTOMER_EMAIL_UPDATE_VERIFIED',\r\n  CUSTOMER_NOTE = 'CUSTOMER_NOTE',\r\n  ORDER_STATE_TRANSITION = 'ORDER_STATE_TRANSITION',\r\n  ORDER_PAYMENT_TRANSITION = 'ORDER_PAYMENT_TRANSITION',\r\n  ORDER_FULFILLMENT = 'ORDER_FULFILLMENT',\r\n  ORDER_CANCELLATION = 'ORDER_CANCELLATION',\r\n  ORDER_REFUND_TRANSITION = 'ORDER_REFUND_TRANSITION',\r\n  ORDER_FULFILLMENT_TRANSITION = 'ORDER_FULFILLMENT_TRANSITION',\r\n  ORDER_NOTE = 'ORDER_NOTE',\r\n  ORDER_COUPON_APPLIED = 'ORDER_COUPON_APPLIED',\r\n  ORDER_COUPON_REMOVED = 'ORDER_COUPON_REMOVED',\r\n  ORDER_MODIFIED = 'ORDER_MODIFIED'\r\n}\r\n\r\n/** Operators for filtering on a list of ID fields */\r\nexport type IdListOperators = {\r\n  inList: Scalars['ID'];\r\n};\r\n\r\n/** Operators for filtering on an ID field */\r\nexport type IdOperators = {\r\n  eq?: Maybe<Scalars['String']>;\r\n  notEq?: Maybe<Scalars['String']>;\r\n  in?: Maybe<Array<Scalars['String']>>;\r\n  notIn?: Maybe<Array<Scalars['String']>>;\r\n};\r\n\r\nexport type ImportInfo = {\r\n  __typename?: 'ImportInfo';\r\n  errors?: Maybe<Array<Scalars['String']>>;\r\n  processed: Scalars['Int'];\r\n  imported: Scalars['Int'];\r\n};\r\n\r\n/** Returned when attempting to add more items to the Order than are available */\r\nexport type InsufficientStockError = ErrorResult & {\r\n  __typename?: 'InsufficientStockError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  quantityAvailable: Scalars['Int'];\r\n  order: Order;\r\n};\r\n\r\n/**\r\n * Returned if attempting to create a Fulfillment when there is insufficient\r\n * stockOnHand of a ProductVariant to satisfy the requested quantity.\r\n */\r\nexport type InsufficientStockOnHandError = ErrorResult & {\r\n  __typename?: 'InsufficientStockOnHandError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  productVariantId: Scalars['ID'];\r\n  productVariantName: Scalars['String'];\r\n  stockOnHand: Scalars['Int'];\r\n};\r\n\r\nexport type IntCustomFieldConfig = CustomField & {\r\n  __typename?: 'IntCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  list: Scalars['Boolean'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  nullable?: Maybe<Scalars['Boolean']>;\r\n  min?: Maybe<Scalars['Int']>;\r\n  max?: Maybe<Scalars['Int']>;\r\n  step?: Maybe<Scalars['Int']>;\r\n  ui?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n/** Returned if the user authentication credentials are not valid */\r\nexport type InvalidCredentialsError = ErrorResult & {\r\n  __typename?: 'InvalidCredentialsError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  authenticationError: Scalars['String'];\r\n};\r\n\r\n/** Returned if the specified FulfillmentHandler code is not valid */\r\nexport type InvalidFulfillmentHandlerError = ErrorResult & {\r\n  __typename?: 'InvalidFulfillmentHandlerError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\n/** Returned if the specified items are already part of a Fulfillment */\r\nexport type ItemsAlreadyFulfilledError = ErrorResult & {\r\n  __typename?: 'ItemsAlreadyFulfilledError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\n\r\nexport type Job = Node & {\r\n  __typename?: 'Job';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  startedAt?: Maybe<Scalars['DateTime']>;\r\n  settledAt?: Maybe<Scalars['DateTime']>;\r\n  queueName: Scalars['String'];\r\n  state: JobState;\r\n  progress: Scalars['Float'];\r\n  data?: Maybe<Scalars['JSON']>;\r\n  result?: Maybe<Scalars['JSON']>;\r\n  error?: Maybe<Scalars['JSON']>;\r\n  isSettled: Scalars['Boolean'];\r\n  duration: Scalars['Int'];\r\n  retries: Scalars['Int'];\r\n  attempts: Scalars['Int'];\r\n};\r\n\r\nexport type JobBufferSize = {\r\n  __typename?: 'JobBufferSize';\r\n  bufferId: Scalars['String'];\r\n  size: Scalars['Int'];\r\n};\r\n\r\nexport type JobFilterParameter = {\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  startedAt?: Maybe<DateOperators>;\r\n  settledAt?: Maybe<DateOperators>;\r\n  queueName?: Maybe<StringOperators>;\r\n  state?: Maybe<StringOperators>;\r\n  progress?: Maybe<NumberOperators>;\r\n  isSettled?: Maybe<BooleanOperators>;\r\n  duration?: Maybe<NumberOperators>;\r\n  retries?: Maybe<NumberOperators>;\r\n  attempts?: Maybe<NumberOperators>;\r\n};\r\n\r\nexport type JobList = PaginatedList & {\r\n  __typename?: 'JobList';\r\n  items: Array<Job>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type JobListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<JobSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<JobFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type JobQueue = {\r\n  __typename?: 'JobQueue';\r\n  name: Scalars['String'];\r\n  running: Scalars['Boolean'];\r\n};\r\n\r\nexport type JobSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  startedAt?: Maybe<SortOrder>;\r\n  settledAt?: Maybe<SortOrder>;\r\n  queueName?: Maybe<SortOrder>;\r\n  progress?: Maybe<SortOrder>;\r\n  duration?: Maybe<SortOrder>;\r\n  retries?: Maybe<SortOrder>;\r\n  attempts?: Maybe<SortOrder>;\r\n};\r\n\r\n/**\r\n * @description\r\n * The state of a Job in the JobQueue\r\n *\r\n * @docsCategory common\r\n */\r\nexport enum JobState {\r\n  PENDING = 'PENDING',\r\n  RUNNING = 'RUNNING',\r\n  COMPLETED = 'COMPLETED',\r\n  RETRYING = 'RETRYING',\r\n  FAILED = 'FAILED',\r\n  CANCELLED = 'CANCELLED'\r\n}\r\n\r\n/**\r\n * @description\r\n * Languages in the form of a ISO 639-1 language code with optional\r\n * region or script modifier (e.g. de_AT). The selection available is based\r\n * on the [Unicode CLDR summary list](https://unicode-org.github.io/cldr-staging/charts/37/summary/root.html)\r\n * and includes the major spoken languages of the world and any widely-used variants.\r\n *\r\n * @docsCategory common\r\n */\r\nexport enum LanguageCode {\r\n  /** Afrikaans */\r\n  af = 'af',\r\n  /** Akan */\r\n  ak = 'ak',\r\n  /** Amharic */\r\n  am = 'am',\r\n  /** Arabic */\r\n  ar = 'ar',\r\n  /** Assamese */\r\n  as = 'as',\r\n  /** Azerbaijani */\r\n  az = 'az',\r\n  /** Belarusian */\r\n  be = 'be',\r\n  /** Bulgarian */\r\n  bg = 'bg',\r\n  /** Bambara */\r\n  bm = 'bm',\r\n  /** Bangla */\r\n  bn = 'bn',\r\n  /** Tibetan */\r\n  bo = 'bo',\r\n  /** Breton */\r\n  br = 'br',\r\n  /** Bosnian */\r\n  bs = 'bs',\r\n  /** Catalan */\r\n  ca = 'ca',\r\n  /** Chechen */\r\n  ce = 'ce',\r\n  /** Corsican */\r\n  co = 'co',\r\n  /** Czech */\r\n  cs = 'cs',\r\n  /** Church Slavic */\r\n  cu = 'cu',\r\n  /** Welsh */\r\n  cy = 'cy',\r\n  /** Danish */\r\n  da = 'da',\r\n  /** German */\r\n  de = 'de',\r\n  /** Austrian German */\r\n  de_AT = 'de_AT',\r\n  /** Swiss High German */\r\n  de_CH = 'de_CH',\r\n  /** Dzongkha */\r\n  dz = 'dz',\r\n  /** Ewe */\r\n  ee = 'ee',\r\n  /** Greek */\r\n  el = 'el',\r\n  /** English */\r\n  en = 'en',\r\n  /** Australian English */\r\n  en_AU = 'en_AU',\r\n  /** Canadian English */\r\n  en_CA = 'en_CA',\r\n  /** British English */\r\n  en_GB = 'en_GB',\r\n  /** American English */\r\n  en_US = 'en_US',\r\n  /** Esperanto */\r\n  eo = 'eo',\r\n  /** Spanish */\r\n  es = 'es',\r\n  /** European Spanish */\r\n  es_ES = 'es_ES',\r\n  /** Mexican Spanish */\r\n  es_MX = 'es_MX',\r\n  /** Estonian */\r\n  et = 'et',\r\n  /** Basque */\r\n  eu = 'eu',\r\n  /** Persian */\r\n  fa = 'fa',\r\n  /** Dari */\r\n  fa_AF = 'fa_AF',\r\n  /** Fulah */\r\n  ff = 'ff',\r\n  /** Finnish */\r\n  fi = 'fi',\r\n  /** Faroese */\r\n  fo = 'fo',\r\n  /** French */\r\n  fr = 'fr',\r\n  /** Canadian French */\r\n  fr_CA = 'fr_CA',\r\n  /** Swiss French */\r\n  fr_CH = 'fr_CH',\r\n  /** Western Frisian */\r\n  fy = 'fy',\r\n  /** Irish */\r\n  ga = 'ga',\r\n  /** Scottish Gaelic */\r\n  gd = 'gd',\r\n  /** Galician */\r\n  gl = 'gl',\r\n  /** Gujarati */\r\n  gu = 'gu',\r\n  /** Manx */\r\n  gv = 'gv',\r\n  /** Hausa */\r\n  ha = 'ha',\r\n  /** Hebrew */\r\n  he = 'he',\r\n  /** Hindi */\r\n  hi = 'hi',\r\n  /** Croatian */\r\n  hr = 'hr',\r\n  /** Haitian Creole */\r\n  ht = 'ht',\r\n  /** Hungarian */\r\n  hu = 'hu',\r\n  /** Armenian */\r\n  hy = 'hy',\r\n  /** Interlingua */\r\n  ia = 'ia',\r\n  /** Indonesian */\r\n  id = 'id',\r\n  /** Igbo */\r\n  ig = 'ig',\r\n  /** Sichuan Yi */\r\n  ii = 'ii',\r\n  /** Icelandic */\r\n  is = 'is',\r\n  /** Italian */\r\n  it = 'it',\r\n  /** Japanese */\r\n  ja = 'ja',\r\n  /** Javanese */\r\n  jv = 'jv',\r\n  /** Georgian */\r\n  ka = 'ka',\r\n  /** Kikuyu */\r\n  ki = 'ki',\r\n  /** Kazakh */\r\n  kk = 'kk',\r\n  /** Kalaallisut */\r\n  kl = 'kl',\r\n  /** Khmer */\r\n  km = 'km',\r\n  /** Kannada */\r\n  kn = 'kn',\r\n  /** Korean */\r\n  ko = 'ko',\r\n  /** Kashmiri */\r\n  ks = 'ks',\r\n  /** Kurdish */\r\n  ku = 'ku',\r\n  /** Cornish */\r\n  kw = 'kw',\r\n  /** Kyrgyz */\r\n  ky = 'ky',\r\n  /** Latin */\r\n  la = 'la',\r\n  /** Luxembourgish */\r\n  lb = 'lb',\r\n  /** Ganda */\r\n  lg = 'lg',\r\n  /** Lingala */\r\n  ln = 'ln',\r\n  /** Lao */\r\n  lo = 'lo',\r\n  /** Lithuanian */\r\n  lt = 'lt',\r\n  /** Luba-Katanga */\r\n  lu = 'lu',\r\n  /** Latvian */\r\n  lv = 'lv',\r\n  /** Malagasy */\r\n  mg = 'mg',\r\n  /** Maori */\r\n  mi = 'mi',\r\n  /** Macedonian */\r\n  mk = 'mk',\r\n  /** Malayalam */\r\n  ml = 'ml',\r\n  /** Mongolian */\r\n  mn = 'mn',\r\n  /** Marathi */\r\n  mr = 'mr',\r\n  /** Malay */\r\n  ms = 'ms',\r\n  /** Maltese */\r\n  mt = 'mt',\r\n  /** Burmese */\r\n  my = 'my',\r\n  /** Norwegian Bokmål */\r\n  nb = 'nb',\r\n  /** North Ndebele */\r\n  nd = 'nd',\r\n  /** Nepali */\r\n  ne = 'ne',\r\n  /** Dutch */\r\n  nl = 'nl',\r\n  /** Flemish */\r\n  nl_BE = 'nl_BE',\r\n  /** Norwegian Nynorsk */\r\n  nn = 'nn',\r\n  /** Nyanja */\r\n  ny = 'ny',\r\n  /** Oromo */\r\n  om = 'om',\r\n  /** Odia */\r\n  or = 'or',\r\n  /** Ossetic */\r\n  os = 'os',\r\n  /** Punjabi */\r\n  pa = 'pa',\r\n  /** Polish */\r\n  pl = 'pl',\r\n  /** Pashto */\r\n  ps = 'ps',\r\n  /** Portuguese */\r\n  pt = 'pt',\r\n  /** Brazilian Portuguese */\r\n  pt_BR = 'pt_BR',\r\n  /** European Portuguese */\r\n  pt_PT = 'pt_PT',\r\n  /** Quechua */\r\n  qu = 'qu',\r\n  /** Romansh */\r\n  rm = 'rm',\r\n  /** Rundi */\r\n  rn = 'rn',\r\n  /** Romanian */\r\n  ro = 'ro',\r\n  /** Moldavian */\r\n  ro_MD = 'ro_MD',\r\n  /** Russian */\r\n  ru = 'ru',\r\n  /** Kinyarwanda */\r\n  rw = 'rw',\r\n  /** Sanskrit */\r\n  sa = 'sa',\r\n  /** Sindhi */\r\n  sd = 'sd',\r\n  /** Northern Sami */\r\n  se = 'se',\r\n  /** Sango */\r\n  sg = 'sg',\r\n  /** Sinhala */\r\n  si = 'si',\r\n  /** Slovak */\r\n  sk = 'sk',\r\n  /** Slovenian */\r\n  sl = 'sl',\r\n  /** Samoan */\r\n  sm = 'sm',\r\n  /** Shona */\r\n  sn = 'sn',\r\n  /** Somali */\r\n  so = 'so',\r\n  /** Albanian */\r\n  sq = 'sq',\r\n  /** Serbian */\r\n  sr = 'sr',\r\n  /** Southern Sotho */\r\n  st = 'st',\r\n  /** Sundanese */\r\n  su = 'su',\r\n  /** Swedish */\r\n  sv = 'sv',\r\n  /** Swahili */\r\n  sw = 'sw',\r\n  /** Congo Swahili */\r\n  sw_CD = 'sw_CD',\r\n  /** Tamil */\r\n  ta = 'ta',\r\n  /** Telugu */\r\n  te = 'te',\r\n  /** Tajik */\r\n  tg = 'tg',\r\n  /** Thai */\r\n  th = 'th',\r\n  /** Tigrinya */\r\n  ti = 'ti',\r\n  /** Turkmen */\r\n  tk = 'tk',\r\n  /** Tongan */\r\n  to = 'to',\r\n  /** Turkish */\r\n  tr = 'tr',\r\n  /** Tatar */\r\n  tt = 'tt',\r\n  /** Uyghur */\r\n  ug = 'ug',\r\n  /** Ukrainian */\r\n  uk = 'uk',\r\n  /** Urdu */\r\n  ur = 'ur',\r\n  /** Uzbek */\r\n  uz = 'uz',\r\n  /** Vietnamese */\r\n  vi = 'vi',\r\n  /** Volapük */\r\n  vo = 'vo',\r\n  /** Wolof */\r\n  wo = 'wo',\r\n  /** Xhosa */\r\n  xh = 'xh',\r\n  /** Yiddish */\r\n  yi = 'yi',\r\n  /** Yoruba */\r\n  yo = 'yo',\r\n  /** Chinese */\r\n  zh = 'zh',\r\n  /** Simplified Chinese */\r\n  zh_Hans = 'zh_Hans',\r\n  /** Traditional Chinese */\r\n  zh_Hant = 'zh_Hant',\r\n  /** Zulu */\r\n  zu = 'zu'\r\n}\r\n\r\n/** Returned if attempting to set a Channel's defaultLanguageCode to a language which is not enabled in GlobalSettings */\r\nexport type LanguageNotAvailableError = ErrorResult & {\r\n  __typename?: 'LanguageNotAvailableError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  languageCode: Scalars['String'];\r\n};\r\n\r\nexport type LocaleStringCustomFieldConfig = CustomField & {\r\n  __typename?: 'LocaleStringCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  list: Scalars['Boolean'];\r\n  length?: Maybe<Scalars['Int']>;\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  nullable?: Maybe<Scalars['Boolean']>;\r\n  pattern?: Maybe<Scalars['String']>;\r\n  ui?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type LocalizedString = {\r\n  __typename?: 'LocalizedString';\r\n  languageCode: LanguageCode;\r\n  value: Scalars['String'];\r\n};\r\n\r\nexport enum LogicalOperator {\r\n  AND = 'AND',\r\n  OR = 'OR'\r\n}\r\n\r\nexport type ManualPaymentInput = {\r\n  orderId: Scalars['ID'];\r\n  method: Scalars['String'];\r\n  transactionId?: Maybe<Scalars['String']>;\r\n  metadata?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n/**\r\n * Returned when a call to addManualPaymentToOrder is made but the Order\r\n * is not in the required state.\r\n */\r\nexport type ManualPaymentStateError = ErrorResult & {\r\n  __typename?: 'ManualPaymentStateError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport type MimeTypeError = ErrorResult & {\r\n  __typename?: 'MimeTypeError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  fileName: Scalars['String'];\r\n  mimeType: Scalars['String'];\r\n};\r\n\r\n/** Returned if a PromotionCondition has neither a couponCode nor any conditions set */\r\nexport type MissingConditionsError = ErrorResult & {\r\n  __typename?: 'MissingConditionsError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport type ModifyOrderInput = {\r\n  dryRun: Scalars['Boolean'];\r\n  orderId: Scalars['ID'];\r\n  addItems?: Maybe<Array<AddItemInput>>;\r\n  adjustOrderLines?: Maybe<Array<AdjustOrderLineInput>>;\r\n  surcharges?: Maybe<Array<SurchargeInput>>;\r\n  updateShippingAddress?: Maybe<UpdateOrderAddressInput>;\r\n  updateBillingAddress?: Maybe<UpdateOrderAddressInput>;\r\n  note?: Maybe<Scalars['String']>;\r\n  refund?: Maybe<AdministratorRefundInput>;\r\n  options?: Maybe<ModifyOrderOptions>;\r\n  couponCodes?: Maybe<Array<Scalars['String']>>;\r\n};\r\n\r\nexport type ModifyOrderOptions = {\r\n  freezePromotions?: Maybe<Scalars['Boolean']>;\r\n  recalculateShipping?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type ModifyOrderResult = Order | NoChangesSpecifiedError | OrderModificationStateError | PaymentMethodMissingError | RefundPaymentIdMissingError | OrderLimitError | NegativeQuantityError | InsufficientStockError | CouponCodeExpiredError | CouponCodeInvalidError | CouponCodeLimitError;\r\n\r\nexport type MoveCollectionInput = {\r\n  collectionId: Scalars['ID'];\r\n  parentId: Scalars['ID'];\r\n  index: Scalars['Int'];\r\n};\r\n\r\n/** Returned if an operation has specified OrderLines from multiple Orders */\r\nexport type MultipleOrderError = ErrorResult & {\r\n  __typename?: 'MultipleOrderError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport type Mutation = {\r\n  __typename?: 'Mutation';\r\n  /** Add Customers to a CustomerGroup */\r\n  addCustomersToGroup: CustomerGroup;\r\n  addFulfillmentToOrder: AddFulfillmentToOrderResult;\r\n  /**\r\n   * Used to manually create a new Payment against an Order.\r\n   * This can be used by an Administrator when an Order is in the ArrangingPayment state.\r\n   *\r\n   * It is also used when a completed Order\r\n   * has been modified (using `modifyOrder`) and the price has increased. The extra payment\r\n   * can then be manually arranged by the administrator, and the details used to create a new\r\n   * Payment.\r\n   */\r\n  addManualPaymentToOrder: AddManualPaymentToOrderResult;\r\n  /** Add members to a Zone */\r\n  addMembersToZone: Zone;\r\n  addNoteToCustomer: Customer;\r\n  addNoteToOrder: Order;\r\n  /** Add an OptionGroup to a Product */\r\n  addOptionGroupToProduct: Product;\r\n  /** Assign assets to channel */\r\n  assignAssetsToChannel: Array<Asset>;\r\n  /** Assigns ProductVariants to the specified Channel */\r\n  assignProductVariantsToChannel: Array<ProductVariant>;\r\n  /** Assigns all ProductVariants of Product to the specified Channel */\r\n  assignProductsToChannel: Array<Product>;\r\n  /** Assigns Promotions to the specified Channel */\r\n  assignPromotionsToChannel: Array<Promotion>;\r\n  /** Assign a Role to an Administrator */\r\n  assignRoleToAdministrator: Administrator;\r\n  /** Authenticates the user using a named authentication strategy */\r\n  authenticate: AuthenticationResult;\r\n  cancelJob: Job;\r\n  cancelOrder: CancelOrderResult;\r\n  /** Create a new Administrator */\r\n  createAdministrator: Administrator;\r\n  /** Create a new Asset */\r\n  createAssets: Array<CreateAssetResult>;\r\n  /** Create a new Channel */\r\n  createChannel: CreateChannelResult;\r\n  /** Create a new Collection */\r\n  createCollection: Collection;\r\n  /** Create a new Country */\r\n  createCountry: Country;\r\n  /** Create a new Customer. If a password is provided, a new User will also be created an linked to the Customer. */\r\n  createCustomer: CreateCustomerResult;\r\n  /** Create a new Address and associate it with the Customer specified by customerId */\r\n  createCustomerAddress: Address;\r\n  /** Create a new CustomerGroup */\r\n  createCustomerGroup: CustomerGroup;\r\n  /** Create a new Facet */\r\n  createFacet: Facet;\r\n  /** Create one or more FacetValues */\r\n  createFacetValues: Array<FacetValue>;\r\n  /** Create existing PaymentMethod */\r\n  createPaymentMethod: PaymentMethod;\r\n  /** Create a new Product */\r\n  createProduct: Product;\r\n  /** Create a new ProductOption within a ProductOptionGroup */\r\n  createProductOption: ProductOption;\r\n  /** Create a new ProductOptionGroup */\r\n  createProductOptionGroup: ProductOptionGroup;\r\n  /** Create a set of ProductVariants based on the OptionGroups assigned to the given Product */\r\n  createProductVariants: Array<Maybe<ProductVariant>>;\r\n  createPromotion: CreatePromotionResult;\r\n  /** Create a new Role */\r\n  createRole: Role;\r\n  /** Create a new ShippingMethod */\r\n  createShippingMethod: ShippingMethod;\r\n  /** Create a new Tag */\r\n  createTag: Tag;\r\n  /** Create a new TaxCategory */\r\n  createTaxCategory: TaxCategory;\r\n  /** Create a new TaxRate */\r\n  createTaxRate: TaxRate;\r\n  /** Create a new Zone */\r\n  createZone: Zone;\r\n  /** Delete an Administrator */\r\n  deleteAdministrator: DeletionResponse;\r\n  /** Delete an Asset */\r\n  deleteAsset: DeletionResponse;\r\n  /** Delete multiple Assets */\r\n  deleteAssets: DeletionResponse;\r\n  /** Delete a Channel */\r\n  deleteChannel: DeletionResponse;\r\n  /** Delete a Collection and all of its descendants */\r\n  deleteCollection: DeletionResponse;\r\n  /** Delete a Country */\r\n  deleteCountry: DeletionResponse;\r\n  /** Delete a Customer */\r\n  deleteCustomer: DeletionResponse;\r\n  /** Update an existing Address */\r\n  deleteCustomerAddress: Success;\r\n  /** Delete a CustomerGroup */\r\n  deleteCustomerGroup: DeletionResponse;\r\n  deleteCustomerNote: DeletionResponse;\r\n  /** Delete an existing Facet */\r\n  deleteFacet: DeletionResponse;\r\n  /** Delete one or more FacetValues */\r\n  deleteFacetValues: Array<DeletionResponse>;\r\n  deleteOrderNote: DeletionResponse;\r\n  /** Delete a PaymentMethod */\r\n  deletePaymentMethod: DeletionResponse;\r\n  /** Delete a Product */\r\n  deleteProduct: DeletionResponse;\r\n  /** Delete a ProductVariant */\r\n  deleteProductVariant: DeletionResponse;\r\n  deletePromotion: DeletionResponse;\r\n  /** Delete an existing Role */\r\n  deleteRole: DeletionResponse;\r\n  /** Delete a ShippingMethod */\r\n  deleteShippingMethod: DeletionResponse;\r\n  /** Delete an existing Tag */\r\n  deleteTag: DeletionResponse;\r\n  /** Deletes a TaxCategory */\r\n  deleteTaxCategory: DeletionResponse;\r\n  /** Delete a TaxRate */\r\n  deleteTaxRate: DeletionResponse;\r\n  /** Delete a Zone */\r\n  deleteZone: DeletionResponse;\r\n  flushBufferedJobs: Success;\r\n  importProducts?: Maybe<ImportInfo>;\r\n  /** Authenticates the user using the native authentication strategy. This mutation is an alias for `authenticate({ native: { ... }})` */\r\n  login: NativeAuthenticationResult;\r\n  logout: Success;\r\n  /**\r\n   * Allows an Order to be modified after it has been completed by the Customer. The Order must first\r\n   * be in the `Modifying` state.\r\n   */\r\n  modifyOrder: ModifyOrderResult;\r\n  /** Move a Collection to a different parent or index */\r\n  moveCollection: Collection;\r\n  refundOrder: RefundOrderResult;\r\n  reindex: Job;\r\n  /** Remove Customers from a CustomerGroup */\r\n  removeCustomersFromGroup: CustomerGroup;\r\n  /** Remove members from a Zone */\r\n  removeMembersFromZone: Zone;\r\n  /** Remove an OptionGroup from a Product */\r\n  removeOptionGroupFromProduct: RemoveOptionGroupFromProductResult;\r\n  /** Removes ProductVariants from the specified Channel */\r\n  removeProductVariantsFromChannel: Array<ProductVariant>;\r\n  /** Removes all ProductVariants of Product from the specified Channel */\r\n  removeProductsFromChannel: Array<Product>;\r\n  /** Removes Promotions from the specified Channel */\r\n  removePromotionsFromChannel: Array<Promotion>;\r\n  /** Remove all settled jobs in the given queues older than the given date. Returns the number of jobs deleted. */\r\n  removeSettledJobs: Scalars['Int'];\r\n  requestCompleted: Scalars['Int'];\r\n  requestStarted: Scalars['Int'];\r\n  runPendingSearchIndexUpdates: Success;\r\n  setActiveChannel: UserStatus;\r\n  setAsLoggedIn: UserStatus;\r\n  setAsLoggedOut: UserStatus;\r\n  setContentLanguage: LanguageCode;\r\n  setDisplayUiExtensionPoints: Scalars['Boolean'];\r\n  setOrderCustomFields?: Maybe<Order>;\r\n  setUiLanguage: LanguageCode;\r\n  setUiLocale?: Maybe<Scalars['String']>;\r\n  setUiTheme: Scalars['String'];\r\n  settlePayment: SettlePaymentResult;\r\n  settleRefund: SettleRefundResult;\r\n  transitionFulfillmentToState: TransitionFulfillmentToStateResult;\r\n  transitionOrderToState?: Maybe<TransitionOrderToStateResult>;\r\n  transitionPaymentToState: TransitionPaymentToStateResult;\r\n  /** Update the active (currently logged-in) Administrator */\r\n  updateActiveAdministrator: Administrator;\r\n  /** Update an existing Administrator */\r\n  updateAdministrator: Administrator;\r\n  /** Update an existing Asset */\r\n  updateAsset: Asset;\r\n  /** Update an existing Channel */\r\n  updateChannel: UpdateChannelResult;\r\n  /** Update an existing Collection */\r\n  updateCollection: Collection;\r\n  /** Update an existing Country */\r\n  updateCountry: Country;\r\n  /** Update an existing Customer */\r\n  updateCustomer: UpdateCustomerResult;\r\n  /** Update an existing Address */\r\n  updateCustomerAddress: Address;\r\n  /** Update an existing CustomerGroup */\r\n  updateCustomerGroup: CustomerGroup;\r\n  updateCustomerNote: HistoryEntry;\r\n  /** Update an existing Facet */\r\n  updateFacet: Facet;\r\n  /** Update one or more FacetValues */\r\n  updateFacetValues: Array<FacetValue>;\r\n  updateGlobalSettings: UpdateGlobalSettingsResult;\r\n  updateOrderNote: HistoryEntry;\r\n  /** Update an existing PaymentMethod */\r\n  updatePaymentMethod: PaymentMethod;\r\n  /** Update an existing Product */\r\n  updateProduct: Product;\r\n  /** Create a new ProductOption within a ProductOptionGroup */\r\n  updateProductOption: ProductOption;\r\n  /** Update an existing ProductOptionGroup */\r\n  updateProductOptionGroup: ProductOptionGroup;\r\n  /** Update existing ProductVariants */\r\n  updateProductVariants: Array<Maybe<ProductVariant>>;\r\n  updatePromotion: UpdatePromotionResult;\r\n  /** Update an existing Role */\r\n  updateRole: Role;\r\n  /** Update an existing ShippingMethod */\r\n  updateShippingMethod: ShippingMethod;\r\n  /** Update an existing Tag */\r\n  updateTag: Tag;\r\n  /** Update an existing TaxCategory */\r\n  updateTaxCategory: TaxCategory;\r\n  /** Update an existing TaxRate */\r\n  updateTaxRate: TaxRate;\r\n  updateUserChannels: UserStatus;\r\n  /** Update an existing Zone */\r\n  updateZone: Zone;\r\n};\r\n\r\n\r\nexport type MutationAddCustomersToGroupArgs = {\r\n  customerGroupId: Scalars['ID'];\r\n  customerIds: Array<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type MutationAddFulfillmentToOrderArgs = {\r\n  input: FulfillOrderInput;\r\n};\r\n\r\n\r\nexport type MutationAddManualPaymentToOrderArgs = {\r\n  input: ManualPaymentInput;\r\n};\r\n\r\n\r\nexport type MutationAddMembersToZoneArgs = {\r\n  zoneId: Scalars['ID'];\r\n  memberIds: Array<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type MutationAddNoteToCustomerArgs = {\r\n  input: AddNoteToCustomerInput;\r\n};\r\n\r\n\r\nexport type MutationAddNoteToOrderArgs = {\r\n  input: AddNoteToOrderInput;\r\n};\r\n\r\n\r\nexport type MutationAddOptionGroupToProductArgs = {\r\n  productId: Scalars['ID'];\r\n  optionGroupId: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationAssignAssetsToChannelArgs = {\r\n  input: AssignAssetsToChannelInput;\r\n};\r\n\r\n\r\nexport type MutationAssignProductVariantsToChannelArgs = {\r\n  input: AssignProductVariantsToChannelInput;\r\n};\r\n\r\n\r\nexport type MutationAssignProductsToChannelArgs = {\r\n  input: AssignProductsToChannelInput;\r\n};\r\n\r\n\r\nexport type MutationAssignPromotionsToChannelArgs = {\r\n  input: AssignPromotionsToChannelInput;\r\n};\r\n\r\n\r\nexport type MutationAssignRoleToAdministratorArgs = {\r\n  administratorId: Scalars['ID'];\r\n  roleId: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationAuthenticateArgs = {\r\n  input: AuthenticationInput;\r\n  rememberMe?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\n\r\nexport type MutationCancelJobArgs = {\r\n  jobId: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationCancelOrderArgs = {\r\n  input: CancelOrderInput;\r\n};\r\n\r\n\r\nexport type MutationCreateAdministratorArgs = {\r\n  input: CreateAdministratorInput;\r\n};\r\n\r\n\r\nexport type MutationCreateAssetsArgs = {\r\n  input: Array<CreateAssetInput>;\r\n};\r\n\r\n\r\nexport type MutationCreateChannelArgs = {\r\n  input: CreateChannelInput;\r\n};\r\n\r\n\r\nexport type MutationCreateCollectionArgs = {\r\n  input: CreateCollectionInput;\r\n};\r\n\r\n\r\nexport type MutationCreateCountryArgs = {\r\n  input: CreateCountryInput;\r\n};\r\n\r\n\r\nexport type MutationCreateCustomerArgs = {\r\n  input: CreateCustomerInput;\r\n  password?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type MutationCreateCustomerAddressArgs = {\r\n  customerId: Scalars['ID'];\r\n  input: CreateAddressInput;\r\n};\r\n\r\n\r\nexport type MutationCreateCustomerGroupArgs = {\r\n  input: CreateCustomerGroupInput;\r\n};\r\n\r\n\r\nexport type MutationCreateFacetArgs = {\r\n  input: CreateFacetInput;\r\n};\r\n\r\n\r\nexport type MutationCreateFacetValuesArgs = {\r\n  input: Array<CreateFacetValueInput>;\r\n};\r\n\r\n\r\nexport type MutationCreatePaymentMethodArgs = {\r\n  input: CreatePaymentMethodInput;\r\n};\r\n\r\n\r\nexport type MutationCreateProductArgs = {\r\n  input: CreateProductInput;\r\n};\r\n\r\n\r\nexport type MutationCreateProductOptionArgs = {\r\n  input: CreateProductOptionInput;\r\n};\r\n\r\n\r\nexport type MutationCreateProductOptionGroupArgs = {\r\n  input: CreateProductOptionGroupInput;\r\n};\r\n\r\n\r\nexport type MutationCreateProductVariantsArgs = {\r\n  input: Array<CreateProductVariantInput>;\r\n};\r\n\r\n\r\nexport type MutationCreatePromotionArgs = {\r\n  input: CreatePromotionInput;\r\n};\r\n\r\n\r\nexport type MutationCreateRoleArgs = {\r\n  input: CreateRoleInput;\r\n};\r\n\r\n\r\nexport type MutationCreateShippingMethodArgs = {\r\n  input: CreateShippingMethodInput;\r\n};\r\n\r\n\r\nexport type MutationCreateTagArgs = {\r\n  input: CreateTagInput;\r\n};\r\n\r\n\r\nexport type MutationCreateTaxCategoryArgs = {\r\n  input: CreateTaxCategoryInput;\r\n};\r\n\r\n\r\nexport type MutationCreateTaxRateArgs = {\r\n  input: CreateTaxRateInput;\r\n};\r\n\r\n\r\nexport type MutationCreateZoneArgs = {\r\n  input: CreateZoneInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteAdministratorArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteAssetArgs = {\r\n  input: DeleteAssetInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteAssetsArgs = {\r\n  input: DeleteAssetsInput;\r\n};\r\n\r\n\r\nexport type MutationDeleteChannelArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteCollectionArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteCountryArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteCustomerArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteCustomerAddressArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteCustomerGroupArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteCustomerNoteArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteFacetArgs = {\r\n  id: Scalars['ID'];\r\n  force?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\n\r\nexport type MutationDeleteFacetValuesArgs = {\r\n  ids: Array<Scalars['ID']>;\r\n  force?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\n\r\nexport type MutationDeleteOrderNoteArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeletePaymentMethodArgs = {\r\n  id: Scalars['ID'];\r\n  force?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\n\r\nexport type MutationDeleteProductArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteProductVariantArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeletePromotionArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteRoleArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteShippingMethodArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteTagArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteTaxCategoryArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteTaxRateArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationDeleteZoneArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationFlushBufferedJobsArgs = {\r\n  bufferIds?: Maybe<Array<Scalars['String']>>;\r\n};\r\n\r\n\r\nexport type MutationImportProductsArgs = {\r\n  csvFile: Scalars['Upload'];\r\n};\r\n\r\n\r\nexport type MutationLoginArgs = {\r\n  username: Scalars['String'];\r\n  password: Scalars['String'];\r\n  rememberMe?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\n\r\nexport type MutationModifyOrderArgs = {\r\n  input: ModifyOrderInput;\r\n};\r\n\r\n\r\nexport type MutationMoveCollectionArgs = {\r\n  input: MoveCollectionInput;\r\n};\r\n\r\n\r\nexport type MutationRefundOrderArgs = {\r\n  input: RefundOrderInput;\r\n};\r\n\r\n\r\nexport type MutationRemoveCustomersFromGroupArgs = {\r\n  customerGroupId: Scalars['ID'];\r\n  customerIds: Array<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type MutationRemoveMembersFromZoneArgs = {\r\n  zoneId: Scalars['ID'];\r\n  memberIds: Array<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type MutationRemoveOptionGroupFromProductArgs = {\r\n  productId: Scalars['ID'];\r\n  optionGroupId: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationRemoveProductVariantsFromChannelArgs = {\r\n  input: RemoveProductVariantsFromChannelInput;\r\n};\r\n\r\n\r\nexport type MutationRemoveProductsFromChannelArgs = {\r\n  input: RemoveProductsFromChannelInput;\r\n};\r\n\r\n\r\nexport type MutationRemovePromotionsFromChannelArgs = {\r\n  input: RemovePromotionsFromChannelInput;\r\n};\r\n\r\n\r\nexport type MutationRemoveSettledJobsArgs = {\r\n  queueNames?: Maybe<Array<Scalars['String']>>;\r\n  olderThan?: Maybe<Scalars['DateTime']>;\r\n};\r\n\r\n\r\nexport type MutationSetActiveChannelArgs = {\r\n  channelId: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationSetAsLoggedInArgs = {\r\n  input: UserStatusInput;\r\n};\r\n\r\n\r\nexport type MutationSetContentLanguageArgs = {\r\n  languageCode: LanguageCode;\r\n};\r\n\r\n\r\nexport type MutationSetDisplayUiExtensionPointsArgs = {\r\n  display: Scalars['Boolean'];\r\n};\r\n\r\n\r\nexport type MutationSetOrderCustomFieldsArgs = {\r\n  input: UpdateOrderInput;\r\n};\r\n\r\n\r\nexport type MutationSetUiLanguageArgs = {\r\n  languageCode: LanguageCode;\r\n};\r\n\r\n\r\nexport type MutationSetUiLocaleArgs = {\r\n  locale?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type MutationSetUiThemeArgs = {\r\n  theme: Scalars['String'];\r\n};\r\n\r\n\r\nexport type MutationSettlePaymentArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type MutationSettleRefundArgs = {\r\n  input: SettleRefundInput;\r\n};\r\n\r\n\r\nexport type MutationTransitionFulfillmentToStateArgs = {\r\n  id: Scalars['ID'];\r\n  state: Scalars['String'];\r\n};\r\n\r\n\r\nexport type MutationTransitionOrderToStateArgs = {\r\n  id: Scalars['ID'];\r\n  state: Scalars['String'];\r\n};\r\n\r\n\r\nexport type MutationTransitionPaymentToStateArgs = {\r\n  id: Scalars['ID'];\r\n  state: Scalars['String'];\r\n};\r\n\r\n\r\nexport type MutationUpdateActiveAdministratorArgs = {\r\n  input: UpdateActiveAdministratorInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateAdministratorArgs = {\r\n  input: UpdateAdministratorInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateAssetArgs = {\r\n  input: UpdateAssetInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateChannelArgs = {\r\n  input: UpdateChannelInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateCollectionArgs = {\r\n  input: UpdateCollectionInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateCountryArgs = {\r\n  input: UpdateCountryInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateCustomerArgs = {\r\n  input: UpdateCustomerInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateCustomerAddressArgs = {\r\n  input: UpdateAddressInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateCustomerGroupArgs = {\r\n  input: UpdateCustomerGroupInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateCustomerNoteArgs = {\r\n  input: UpdateCustomerNoteInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateFacetArgs = {\r\n  input: UpdateFacetInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateFacetValuesArgs = {\r\n  input: Array<UpdateFacetValueInput>;\r\n};\r\n\r\n\r\nexport type MutationUpdateGlobalSettingsArgs = {\r\n  input: UpdateGlobalSettingsInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateOrderNoteArgs = {\r\n  input: UpdateOrderNoteInput;\r\n};\r\n\r\n\r\nexport type MutationUpdatePaymentMethodArgs = {\r\n  input: UpdatePaymentMethodInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateProductArgs = {\r\n  input: UpdateProductInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateProductOptionArgs = {\r\n  input: UpdateProductOptionInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateProductOptionGroupArgs = {\r\n  input: UpdateProductOptionGroupInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateProductVariantsArgs = {\r\n  input: Array<UpdateProductVariantInput>;\r\n};\r\n\r\n\r\nexport type MutationUpdatePromotionArgs = {\r\n  input: UpdatePromotionInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateRoleArgs = {\r\n  input: UpdateRoleInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateShippingMethodArgs = {\r\n  input: UpdateShippingMethodInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateTagArgs = {\r\n  input: UpdateTagInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateTaxCategoryArgs = {\r\n  input: UpdateTaxCategoryInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateTaxRateArgs = {\r\n  input: UpdateTaxRateInput;\r\n};\r\n\r\n\r\nexport type MutationUpdateUserChannelsArgs = {\r\n  channels: Array<CurrentUserChannelInput>;\r\n};\r\n\r\n\r\nexport type MutationUpdateZoneArgs = {\r\n  input: UpdateZoneInput;\r\n};\r\n\r\nexport type NativeAuthInput = {\r\n  username: Scalars['String'];\r\n  password: Scalars['String'];\r\n};\r\n\r\n/** Returned when attempting an operation that relies on the NativeAuthStrategy, if that strategy is not configured. */\r\nexport type NativeAuthStrategyError = ErrorResult & {\r\n  __typename?: 'NativeAuthStrategyError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport type NativeAuthenticationResult = CurrentUser | InvalidCredentialsError | NativeAuthStrategyError;\r\n\r\n/** Returned when attempting to set a negative OrderLine quantity. */\r\nexport type NegativeQuantityError = ErrorResult & {\r\n  __typename?: 'NegativeQuantityError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport type NetworkStatus = {\r\n  __typename?: 'NetworkStatus';\r\n  inFlightRequests: Scalars['Int'];\r\n};\r\n\r\n/** Returned when a call to modifyOrder fails to specify any changes */\r\nexport type NoChangesSpecifiedError = ErrorResult & {\r\n  __typename?: 'NoChangesSpecifiedError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport type Node = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n/** Returned if an attempting to refund an Order but neither items nor shipping refund was specified */\r\nexport type NothingToRefundError = ErrorResult & {\r\n  __typename?: 'NothingToRefundError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\n/** Operators for filtering on a list of Number fields */\r\nexport type NumberListOperators = {\r\n  inList: Scalars['Float'];\r\n};\r\n\r\n/** Operators for filtering on a Int or Float field */\r\nexport type NumberOperators = {\r\n  eq?: Maybe<Scalars['Float']>;\r\n  lt?: Maybe<Scalars['Float']>;\r\n  lte?: Maybe<Scalars['Float']>;\r\n  gt?: Maybe<Scalars['Float']>;\r\n  gte?: Maybe<Scalars['Float']>;\r\n  between?: Maybe<NumberRange>;\r\n};\r\n\r\nexport type NumberRange = {\r\n  start: Scalars['Float'];\r\n  end: Scalars['Float'];\r\n};\r\n\r\nexport type Order = Node & {\r\n  __typename?: 'Order';\r\n  nextStates: Array<Scalars['String']>;\r\n  modifications: Array<OrderModification>;\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  /**\r\n   * The date & time that the Order was placed, i.e. the Customer\r\n   * completed the checkout and the Order is no longer \"active\"\r\n   */\r\n  orderPlacedAt?: Maybe<Scalars['DateTime']>;\r\n  /** A unique code for the Order */\r\n  code: Scalars['String'];\r\n  state: Scalars['String'];\r\n  /** An order is active as long as the payment process has not been completed */\r\n  active: Scalars['Boolean'];\r\n  customer?: Maybe<Customer>;\r\n  shippingAddress?: Maybe<OrderAddress>;\r\n  billingAddress?: Maybe<OrderAddress>;\r\n  lines: Array<OrderLine>;\r\n  /**\r\n   * Surcharges are arbitrary modifications to the Order total which are neither\r\n   * ProductVariants nor discounts resulting from applied Promotions. For example,\r\n   * one-off discounts based on customer interaction, or surcharges based on payment\r\n   * methods.\r\n   */\r\n  surcharges: Array<Surcharge>;\r\n  discounts: Array<Discount>;\r\n  /** An array of all coupon codes applied to the Order */\r\n  couponCodes: Array<Scalars['String']>;\r\n  /** Promotions applied to the order. Only gets populated after the payment process has completed. */\r\n  promotions: Array<Promotion>;\r\n  payments?: Maybe<Array<Payment>>;\r\n  fulfillments?: Maybe<Array<Fulfillment>>;\r\n  totalQuantity: Scalars['Int'];\r\n  /**\r\n   * The subTotal is the total of all OrderLines in the Order. This figure also includes any Order-level\r\n   * discounts which have been prorated (proportionally distributed) amongst the OrderItems.\r\n   * To get a total of all OrderLines which does not account for prorated discounts, use the\r\n   * sum of `OrderLine.discountedLinePrice` values.\r\n   */\r\n  subTotal: Scalars['Int'];\r\n  /** Same as subTotal, but inclusive of tax */\r\n  subTotalWithTax: Scalars['Int'];\r\n  currencyCode: CurrencyCode;\r\n  shippingLines: Array<ShippingLine>;\r\n  shipping: Scalars['Int'];\r\n  shippingWithTax: Scalars['Int'];\r\n  /** Equal to subTotal plus shipping */\r\n  total: Scalars['Int'];\r\n  /** The final payable amount. Equal to subTotalWithTax plus shippingWithTax */\r\n  totalWithTax: Scalars['Int'];\r\n  /** A summary of the taxes being applied to this Order */\r\n  taxSummary: Array<OrderTaxSummary>;\r\n  history: HistoryEntryList;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n\r\nexport type OrderHistoryArgs = {\r\n  options?: Maybe<HistoryEntryListOptions>;\r\n};\r\n\r\nexport type OrderAddress = {\r\n  __typename?: 'OrderAddress';\r\n  fullName?: Maybe<Scalars['String']>;\r\n  company?: Maybe<Scalars['String']>;\r\n  streetLine1?: Maybe<Scalars['String']>;\r\n  streetLine2?: Maybe<Scalars['String']>;\r\n  city?: Maybe<Scalars['String']>;\r\n  province?: Maybe<Scalars['String']>;\r\n  postalCode?: Maybe<Scalars['String']>;\r\n  country?: Maybe<Scalars['String']>;\r\n  countryCode?: Maybe<Scalars['String']>;\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type OrderFilterParameter = {\r\n  customerLastName?: Maybe<StringOperators>;\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  orderPlacedAt?: Maybe<DateOperators>;\r\n  code?: Maybe<StringOperators>;\r\n  state?: Maybe<StringOperators>;\r\n  active?: Maybe<BooleanOperators>;\r\n  totalQuantity?: Maybe<NumberOperators>;\r\n  subTotal?: Maybe<NumberOperators>;\r\n  subTotalWithTax?: Maybe<NumberOperators>;\r\n  currencyCode?: Maybe<StringOperators>;\r\n  shipping?: Maybe<NumberOperators>;\r\n  shippingWithTax?: Maybe<NumberOperators>;\r\n  total?: Maybe<NumberOperators>;\r\n  totalWithTax?: Maybe<NumberOperators>;\r\n};\r\n\r\nexport type OrderItem = Node & {\r\n  __typename?: 'OrderItem';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  cancelled: Scalars['Boolean'];\r\n  /** The price of a single unit, excluding tax and discounts */\r\n  unitPrice: Scalars['Int'];\r\n  /** The price of a single unit, including tax but excluding discounts */\r\n  unitPriceWithTax: Scalars['Int'];\r\n  /**\r\n   * The price of a single unit including discounts, excluding tax.\r\n   *\r\n   * If Order-level discounts have been applied, this will not be the\r\n   * actual taxable unit price (see `proratedUnitPrice`), but is generally the\r\n   * correct price to display to customers to avoid confusion\r\n   * about the internal handling of distributed Order-level discounts.\r\n   */\r\n  discountedUnitPrice: Scalars['Int'];\r\n  /** The price of a single unit including discounts and tax */\r\n  discountedUnitPriceWithTax: Scalars['Int'];\r\n  /**\r\n   * The actual unit price, taking into account both item discounts _and_ prorated (proportionally-distributed)\r\n   * Order-level discounts. This value is the true economic value of the OrderItem, and is used in tax\r\n   * and refund calculations.\r\n   */\r\n  proratedUnitPrice: Scalars['Int'];\r\n  /** The proratedUnitPrice including tax */\r\n  proratedUnitPriceWithTax: Scalars['Int'];\r\n  unitTax: Scalars['Int'];\r\n  taxRate: Scalars['Float'];\r\n  adjustments: Array<Adjustment>;\r\n  taxLines: Array<TaxLine>;\r\n  fulfillment?: Maybe<Fulfillment>;\r\n  refundId?: Maybe<Scalars['ID']>;\r\n};\r\n\r\n/** Returned when the maximum order size limit has been reached. */\r\nexport type OrderLimitError = ErrorResult & {\r\n  __typename?: 'OrderLimitError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  maxItems: Scalars['Int'];\r\n};\r\n\r\nexport type OrderLine = Node & {\r\n  __typename?: 'OrderLine';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  featuredAsset?: Maybe<Asset>;\r\n  /** The price of a single unit, excluding tax and discounts */\r\n  unitPrice: Scalars['Int'];\r\n  /** The price of a single unit, including tax but excluding discounts */\r\n  unitPriceWithTax: Scalars['Int'];\r\n  /** Non-zero if the unitPrice has changed since it was initially added to Order */\r\n  unitPriceChangeSinceAdded: Scalars['Int'];\r\n  /** Non-zero if the unitPriceWithTax has changed since it was initially added to Order */\r\n  unitPriceWithTaxChangeSinceAdded: Scalars['Int'];\r\n  /**\r\n   * The price of a single unit including discounts, excluding tax.\r\n   *\r\n   * If Order-level discounts have been applied, this will not be the\r\n   * actual taxable unit price (see `proratedUnitPrice`), but is generally the\r\n   * correct price to display to customers to avoid confusion\r\n   * about the internal handling of distributed Order-level discounts.\r\n   */\r\n  discountedUnitPrice: Scalars['Int'];\r\n  /** The price of a single unit including discounts and tax */\r\n  discountedUnitPriceWithTax: Scalars['Int'];\r\n  /**\r\n   * The actual unit price, taking into account both item discounts _and_ prorated (proportionally-distributed)\r\n   * Order-level discounts. This value is the true economic value of the OrderItem, and is used in tax\r\n   * and refund calculations.\r\n   */\r\n  proratedUnitPrice: Scalars['Int'];\r\n  /** The proratedUnitPrice including tax */\r\n  proratedUnitPriceWithTax: Scalars['Int'];\r\n  quantity: Scalars['Int'];\r\n  items: Array<OrderItem>;\r\n  taxRate: Scalars['Float'];\r\n  /** The total price of the line excluding tax and discounts. */\r\n  linePrice: Scalars['Int'];\r\n  /** The total price of the line including tax but excluding discounts. */\r\n  linePriceWithTax: Scalars['Int'];\r\n  /** The price of the line including discounts, excluding tax */\r\n  discountedLinePrice: Scalars['Int'];\r\n  /** The price of the line including discounts and tax */\r\n  discountedLinePriceWithTax: Scalars['Int'];\r\n  /**\r\n   * The actual line price, taking into account both item discounts _and_ prorated (proportionally-distributed)\r\n   * Order-level discounts. This value is the true economic value of the OrderLine, and is used in tax\r\n   * and refund calculations.\r\n   */\r\n  proratedLinePrice: Scalars['Int'];\r\n  /** The proratedLinePrice including tax */\r\n  proratedLinePriceWithTax: Scalars['Int'];\r\n  /** The total tax on this line */\r\n  lineTax: Scalars['Int'];\r\n  discounts: Array<Discount>;\r\n  taxLines: Array<TaxLine>;\r\n  order: Order;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type OrderLineInput = {\r\n  orderLineId: Scalars['ID'];\r\n  quantity: Scalars['Int'];\r\n};\r\n\r\nexport type OrderList = PaginatedList & {\r\n  __typename?: 'OrderList';\r\n  items: Array<Order>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type OrderListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<OrderSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<OrderFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type OrderModification = Node & {\r\n  __typename?: 'OrderModification';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  priceChange: Scalars['Int'];\r\n  note: Scalars['String'];\r\n  orderItems?: Maybe<Array<OrderItem>>;\r\n  surcharges?: Maybe<Array<Surcharge>>;\r\n  payment?: Maybe<Payment>;\r\n  refund?: Maybe<Refund>;\r\n  isSettled: Scalars['Boolean'];\r\n};\r\n\r\n/** Returned when attempting to modify the contents of an Order that is not in the `Modifying` state. */\r\nexport type OrderModificationStateError = ErrorResult & {\r\n  __typename?: 'OrderModificationStateError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport type OrderProcessState = {\r\n  __typename?: 'OrderProcessState';\r\n  name: Scalars['String'];\r\n  to: Array<Scalars['String']>;\r\n};\r\n\r\nexport type OrderSortParameter = {\r\n  customerLastName?: Maybe<SortOrder>;\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  orderPlacedAt?: Maybe<SortOrder>;\r\n  code?: Maybe<SortOrder>;\r\n  state?: Maybe<SortOrder>;\r\n  totalQuantity?: Maybe<SortOrder>;\r\n  subTotal?: Maybe<SortOrder>;\r\n  subTotalWithTax?: Maybe<SortOrder>;\r\n  shipping?: Maybe<SortOrder>;\r\n  shippingWithTax?: Maybe<SortOrder>;\r\n  total?: Maybe<SortOrder>;\r\n  totalWithTax?: Maybe<SortOrder>;\r\n};\r\n\r\n/** Returned if there is an error in transitioning the Order state */\r\nexport type OrderStateTransitionError = ErrorResult & {\r\n  __typename?: 'OrderStateTransitionError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  transitionError: Scalars['String'];\r\n  fromState: Scalars['String'];\r\n  toState: Scalars['String'];\r\n};\r\n\r\n/**\r\n * A summary of the taxes being applied to this order, grouped\r\n * by taxRate.\r\n */\r\nexport type OrderTaxSummary = {\r\n  __typename?: 'OrderTaxSummary';\r\n  /** A description of this tax */\r\n  description: Scalars['String'];\r\n  /** The taxRate as a percentage */\r\n  taxRate: Scalars['Float'];\r\n  /** The total net price or OrderItems to which this taxRate applies */\r\n  taxBase: Scalars['Int'];\r\n  /** The total tax being applied to the Order at this taxRate */\r\n  taxTotal: Scalars['Int'];\r\n};\r\n\r\nexport type PaginatedList = {\r\n  items: Array<Node>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type Payment = Node & {\r\n  __typename?: 'Payment';\r\n  nextStates: Array<Scalars['String']>;\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  method: Scalars['String'];\r\n  amount: Scalars['Int'];\r\n  state: Scalars['String'];\r\n  transactionId?: Maybe<Scalars['String']>;\r\n  errorMessage?: Maybe<Scalars['String']>;\r\n  refunds: Array<Refund>;\r\n  metadata?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type PaymentMethod = Node & {\r\n  __typename?: 'PaymentMethod';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  name: Scalars['String'];\r\n  code: Scalars['String'];\r\n  description: Scalars['String'];\r\n  enabled: Scalars['Boolean'];\r\n  checker?: Maybe<ConfigurableOperation>;\r\n  handler: ConfigurableOperation;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type PaymentMethodFilterParameter = {\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  code?: Maybe<StringOperators>;\r\n  description?: Maybe<StringOperators>;\r\n  enabled?: Maybe<BooleanOperators>;\r\n};\r\n\r\nexport type PaymentMethodList = PaginatedList & {\r\n  __typename?: 'PaymentMethodList';\r\n  items: Array<PaymentMethod>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type PaymentMethodListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<PaymentMethodSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<PaymentMethodFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\n/**\r\n * Returned when a call to modifyOrder fails to include a paymentMethod even\r\n * though the price has increased as a result of the changes.\r\n */\r\nexport type PaymentMethodMissingError = ErrorResult & {\r\n  __typename?: 'PaymentMethodMissingError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport type PaymentMethodQuote = {\r\n  __typename?: 'PaymentMethodQuote';\r\n  id: Scalars['ID'];\r\n  code: Scalars['String'];\r\n  name: Scalars['String'];\r\n  description: Scalars['String'];\r\n  isEligible: Scalars['Boolean'];\r\n  eligibilityMessage?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type PaymentMethodSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  code?: Maybe<SortOrder>;\r\n  description?: Maybe<SortOrder>;\r\n};\r\n\r\n/** Returned if an attempting to refund a Payment against OrderLines from a different Order */\r\nexport type PaymentOrderMismatchError = ErrorResult & {\r\n  __typename?: 'PaymentOrderMismatchError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\n/** Returned when there is an error in transitioning the Payment state */\r\nexport type PaymentStateTransitionError = ErrorResult & {\r\n  __typename?: 'PaymentStateTransitionError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  transitionError: Scalars['String'];\r\n  fromState: Scalars['String'];\r\n  toState: Scalars['String'];\r\n};\r\n\r\n/**\r\n * @description\r\n * Permissions for administrators and customers. Used to control access to\r\n * GraphQL resolvers via the {@link Allow} decorator.\r\n *\r\n * @docsCategory common\r\n */\r\nexport enum Permission {\r\n  /** Authenticated means simply that the user is logged in */\r\n  Authenticated = 'Authenticated',\r\n  /** Grants permission to create Administrator */\r\n  CreateAdministrator = 'CreateAdministrator',\r\n  /** Grants permission to create Asset */\r\n  CreateAsset = 'CreateAsset',\r\n  /** Grants permission to create Products, Facets, Assets, Collections */\r\n  CreateCatalog = 'CreateCatalog',\r\n  /** Grants permission to create Channel */\r\n  CreateChannel = 'CreateChannel',\r\n  /** Grants permission to create Collection */\r\n  CreateCollection = 'CreateCollection',\r\n  /** Grants permission to create Country */\r\n  CreateCountry = 'CreateCountry',\r\n  /** Grants permission to create Customer */\r\n  CreateCustomer = 'CreateCustomer',\r\n  /** Grants permission to create CustomerGroup */\r\n  CreateCustomerGroup = 'CreateCustomerGroup',\r\n  /** Grants permission to create Facet */\r\n  CreateFacet = 'CreateFacet',\r\n  /** Grants permission to create Order */\r\n  CreateOrder = 'CreateOrder',\r\n  /** Grants permission to create PaymentMethod */\r\n  CreatePaymentMethod = 'CreatePaymentMethod',\r\n  /** Grants permission to create Product */\r\n  CreateProduct = 'CreateProduct',\r\n  /** Grants permission to create Promotion */\r\n  CreatePromotion = 'CreatePromotion',\r\n  /** Grants permission to create PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\r\n  CreateSettings = 'CreateSettings',\r\n  /** Grants permission to create ShippingMethod */\r\n  CreateShippingMethod = 'CreateShippingMethod',\r\n  /** Grants permission to create System */\r\n  CreateSystem = 'CreateSystem',\r\n  /** Grants permission to create Tag */\r\n  CreateTag = 'CreateTag',\r\n  /** Grants permission to create TaxCategory */\r\n  CreateTaxCategory = 'CreateTaxCategory',\r\n  /** Grants permission to create TaxRate */\r\n  CreateTaxRate = 'CreateTaxRate',\r\n  /** Grants permission to create Zone */\r\n  CreateZone = 'CreateZone',\r\n  /** Grants permission to delete Administrator */\r\n  DeleteAdministrator = 'DeleteAdministrator',\r\n  /** Grants permission to delete Asset */\r\n  DeleteAsset = 'DeleteAsset',\r\n  /** Grants permission to delete Products, Facets, Assets, Collections */\r\n  DeleteCatalog = 'DeleteCatalog',\r\n  /** Grants permission to delete Channel */\r\n  DeleteChannel = 'DeleteChannel',\r\n  /** Grants permission to delete Collection */\r\n  DeleteCollection = 'DeleteCollection',\r\n  /** Grants permission to delete Country */\r\n  DeleteCountry = 'DeleteCountry',\r\n  /** Grants permission to delete Customer */\r\n  DeleteCustomer = 'DeleteCustomer',\r\n  /** Grants permission to delete CustomerGroup */\r\n  DeleteCustomerGroup = 'DeleteCustomerGroup',\r\n  /** Grants permission to delete Facet */\r\n  DeleteFacet = 'DeleteFacet',\r\n  /** Grants permission to delete Order */\r\n  DeleteOrder = 'DeleteOrder',\r\n  /** Grants permission to delete PaymentMethod */\r\n  DeletePaymentMethod = 'DeletePaymentMethod',\r\n  /** Grants permission to delete Product */\r\n  DeleteProduct = 'DeleteProduct',\r\n  /** Grants permission to delete Promotion */\r\n  DeletePromotion = 'DeletePromotion',\r\n  /** Grants permission to delete PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\r\n  DeleteSettings = 'DeleteSettings',\r\n  /** Grants permission to delete ShippingMethod */\r\n  DeleteShippingMethod = 'DeleteShippingMethod',\r\n  /** Grants permission to delete System */\r\n  DeleteSystem = 'DeleteSystem',\r\n  /** Grants permission to delete Tag */\r\n  DeleteTag = 'DeleteTag',\r\n  /** Grants permission to delete TaxCategory */\r\n  DeleteTaxCategory = 'DeleteTaxCategory',\r\n  /** Grants permission to delete TaxRate */\r\n  DeleteTaxRate = 'DeleteTaxRate',\r\n  /** Grants permission to delete Zone */\r\n  DeleteZone = 'DeleteZone',\r\n  /** Owner means the user owns this entity, e.g. a Customer's own Order */\r\n  Owner = 'Owner',\r\n  Placeholder = 'Placeholder',\r\n  /** Public means any unauthenticated user may perform the operation */\r\n  Public = 'Public',\r\n  /** Grants permission to read Administrator */\r\n  ReadAdministrator = 'ReadAdministrator',\r\n  /** Grants permission to read Asset */\r\n  ReadAsset = 'ReadAsset',\r\n  /** Grants permission to read Products, Facets, Assets, Collections */\r\n  ReadCatalog = 'ReadCatalog',\r\n  /** Grants permission to read Channel */\r\n  ReadChannel = 'ReadChannel',\r\n  /** Grants permission to read Collection */\r\n  ReadCollection = 'ReadCollection',\r\n  /** Grants permission to read Country */\r\n  ReadCountry = 'ReadCountry',\r\n  /** Grants permission to read Customer */\r\n  ReadCustomer = 'ReadCustomer',\r\n  /** Grants permission to read CustomerGroup */\r\n  ReadCustomerGroup = 'ReadCustomerGroup',\r\n  /** Grants permission to read Facet */\r\n  ReadFacet = 'ReadFacet',\r\n  /** Grants permission to read Order */\r\n  ReadOrder = 'ReadOrder',\r\n  /** Grants permission to read PaymentMethod */\r\n  ReadPaymentMethod = 'ReadPaymentMethod',\r\n  /** Grants permission to read Product */\r\n  ReadProduct = 'ReadProduct',\r\n  /** Grants permission to read Promotion */\r\n  ReadPromotion = 'ReadPromotion',\r\n  /** Grants permission to read PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\r\n  ReadSettings = 'ReadSettings',\r\n  /** Grants permission to read ShippingMethod */\r\n  ReadShippingMethod = 'ReadShippingMethod',\r\n  /** Grants permission to read System */\r\n  ReadSystem = 'ReadSystem',\r\n  /** Grants permission to read Tag */\r\n  ReadTag = 'ReadTag',\r\n  /** Grants permission to read TaxCategory */\r\n  ReadTaxCategory = 'ReadTaxCategory',\r\n  /** Grants permission to read TaxRate */\r\n  ReadTaxRate = 'ReadTaxRate',\r\n  /** Grants permission to read Zone */\r\n  ReadZone = 'ReadZone',\r\n  /** SuperAdmin has unrestricted access to all operations */\r\n  SuperAdmin = 'SuperAdmin',\r\n  /** Grants permission to update Administrator */\r\n  UpdateAdministrator = 'UpdateAdministrator',\r\n  /** Grants permission to update Asset */\r\n  UpdateAsset = 'UpdateAsset',\r\n  /** Grants permission to update Products, Facets, Assets, Collections */\r\n  UpdateCatalog = 'UpdateCatalog',\r\n  /** Grants permission to update Channel */\r\n  UpdateChannel = 'UpdateChannel',\r\n  /** Grants permission to update Collection */\r\n  UpdateCollection = 'UpdateCollection',\r\n  /** Grants permission to update Country */\r\n  UpdateCountry = 'UpdateCountry',\r\n  /** Grants permission to update Customer */\r\n  UpdateCustomer = 'UpdateCustomer',\r\n  /** Grants permission to update CustomerGroup */\r\n  UpdateCustomerGroup = 'UpdateCustomerGroup',\r\n  /** Grants permission to update Facet */\r\n  UpdateFacet = 'UpdateFacet',\r\n  /** Grants permission to update GlobalSettings */\r\n  UpdateGlobalSettings = 'UpdateGlobalSettings',\r\n  /** Grants permission to update Order */\r\n  UpdateOrder = 'UpdateOrder',\r\n  /** Grants permission to update PaymentMethod */\r\n  UpdatePaymentMethod = 'UpdatePaymentMethod',\r\n  /** Grants permission to update Product */\r\n  UpdateProduct = 'UpdateProduct',\r\n  /** Grants permission to update Promotion */\r\n  UpdatePromotion = 'UpdatePromotion',\r\n  /** Grants permission to update PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\r\n  UpdateSettings = 'UpdateSettings',\r\n  /** Grants permission to update ShippingMethod */\r\n  UpdateShippingMethod = 'UpdateShippingMethod',\r\n  /** Grants permission to update System */\r\n  UpdateSystem = 'UpdateSystem',\r\n  /** Grants permission to update Tag */\r\n  UpdateTag = 'UpdateTag',\r\n  /** Grants permission to update TaxCategory */\r\n  UpdateTaxCategory = 'UpdateTaxCategory',\r\n  /** Grants permission to update TaxRate */\r\n  UpdateTaxRate = 'UpdateTaxRate',\r\n  /** Grants permission to update Zone */\r\n  UpdateZone = 'UpdateZone'\r\n}\r\n\r\nexport type PermissionDefinition = {\r\n  __typename?: 'PermissionDefinition';\r\n  name: Scalars['String'];\r\n  description: Scalars['String'];\r\n  assignable: Scalars['Boolean'];\r\n};\r\n\r\n/** The price range where the result has more than one price */\r\nexport type PriceRange = {\r\n  __typename?: 'PriceRange';\r\n  min: Scalars['Int'];\r\n  max: Scalars['Int'];\r\n};\r\n\r\nexport type Product = Node & {\r\n  __typename?: 'Product';\r\n  enabled: Scalars['Boolean'];\r\n  channels: Array<Channel>;\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n  slug: Scalars['String'];\r\n  description: Scalars['String'];\r\n  featuredAsset?: Maybe<Asset>;\r\n  assets: Array<Asset>;\r\n  /** Returns all ProductVariants */\r\n  variants: Array<ProductVariant>;\r\n  /** Returns a paginated, sortable, filterable list of ProductVariants */\r\n  variantList: ProductVariantList;\r\n  optionGroups: Array<ProductOptionGroup>;\r\n  facetValues: Array<FacetValue>;\r\n  translations: Array<ProductTranslation>;\r\n  collections: Array<Collection>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n\r\nexport type ProductVariantListArgs = {\r\n  options?: Maybe<ProductVariantListOptions>;\r\n};\r\n\r\nexport type ProductFilterParameter = {\r\n  enabled?: Maybe<BooleanOperators>;\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  languageCode?: Maybe<StringOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  slug?: Maybe<StringOperators>;\r\n  description?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type ProductList = PaginatedList & {\r\n  __typename?: 'ProductList';\r\n  items: Array<Product>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type ProductListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<ProductSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<ProductFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type ProductOption = Node & {\r\n  __typename?: 'ProductOption';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  code: Scalars['String'];\r\n  name: Scalars['String'];\r\n  groupId: Scalars['ID'];\r\n  group: ProductOptionGroup;\r\n  translations: Array<ProductOptionTranslation>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ProductOptionGroup = Node & {\r\n  __typename?: 'ProductOptionGroup';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  code: Scalars['String'];\r\n  name: Scalars['String'];\r\n  options: Array<ProductOption>;\r\n  translations: Array<ProductOptionGroupTranslation>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ProductOptionGroupTranslation = {\r\n  __typename?: 'ProductOptionGroupTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type ProductOptionGroupTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ProductOptionInUseError = ErrorResult & {\r\n  __typename?: 'ProductOptionInUseError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  optionGroupCode: Scalars['String'];\r\n  productVariantCount: Scalars['Int'];\r\n};\r\n\r\nexport type ProductOptionTranslation = {\r\n  __typename?: 'ProductOptionTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type ProductOptionTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ProductSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  slug?: Maybe<SortOrder>;\r\n  description?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type ProductTranslation = {\r\n  __typename?: 'ProductTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n  slug: Scalars['String'];\r\n  description: Scalars['String'];\r\n};\r\n\r\nexport type ProductTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  slug?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ProductVariant = Node & {\r\n  __typename?: 'ProductVariant';\r\n  enabled: Scalars['Boolean'];\r\n  trackInventory: GlobalFlag;\r\n  stockOnHand: Scalars['Int'];\r\n  stockAllocated: Scalars['Int'];\r\n  outOfStockThreshold: Scalars['Int'];\r\n  useGlobalOutOfStockThreshold: Scalars['Boolean'];\r\n  stockMovements: StockMovementList;\r\n  channels: Array<Channel>;\r\n  id: Scalars['ID'];\r\n  product: Product;\r\n  productId: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  sku: Scalars['String'];\r\n  name: Scalars['String'];\r\n  featuredAsset?: Maybe<Asset>;\r\n  assets: Array<Asset>;\r\n  price: Scalars['Int'];\r\n  currencyCode: CurrencyCode;\r\n  priceWithTax: Scalars['Int'];\r\n  stockLevel: Scalars['String'];\r\n  taxRateApplied: TaxRate;\r\n  taxCategory: TaxCategory;\r\n  options: Array<ProductOption>;\r\n  facetValues: Array<FacetValue>;\r\n  translations: Array<ProductVariantTranslation>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n\r\nexport type ProductVariantStockMovementsArgs = {\r\n  options?: Maybe<StockMovementListOptions>;\r\n};\r\n\r\nexport type ProductVariantFilterParameter = {\r\n  enabled?: Maybe<BooleanOperators>;\r\n  trackInventory?: Maybe<StringOperators>;\r\n  stockOnHand?: Maybe<NumberOperators>;\r\n  stockAllocated?: Maybe<NumberOperators>;\r\n  outOfStockThreshold?: Maybe<NumberOperators>;\r\n  useGlobalOutOfStockThreshold?: Maybe<BooleanOperators>;\r\n  id?: Maybe<IdOperators>;\r\n  productId?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  languageCode?: Maybe<StringOperators>;\r\n  sku?: Maybe<StringOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  price?: Maybe<NumberOperators>;\r\n  currencyCode?: Maybe<StringOperators>;\r\n  priceWithTax?: Maybe<NumberOperators>;\r\n  stockLevel?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type ProductVariantList = PaginatedList & {\r\n  __typename?: 'ProductVariantList';\r\n  items: Array<ProductVariant>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type ProductVariantListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<ProductVariantSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<ProductVariantFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type ProductVariantSortParameter = {\r\n  stockOnHand?: Maybe<SortOrder>;\r\n  stockAllocated?: Maybe<SortOrder>;\r\n  outOfStockThreshold?: Maybe<SortOrder>;\r\n  id?: Maybe<SortOrder>;\r\n  productId?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  sku?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  price?: Maybe<SortOrder>;\r\n  priceWithTax?: Maybe<SortOrder>;\r\n  stockLevel?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type ProductVariantTranslation = {\r\n  __typename?: 'ProductVariantTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n};\r\n\r\nexport type ProductVariantTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type Promotion = Node & {\r\n  __typename?: 'Promotion';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  startsAt?: Maybe<Scalars['DateTime']>;\r\n  endsAt?: Maybe<Scalars['DateTime']>;\r\n  couponCode?: Maybe<Scalars['String']>;\r\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\r\n  name: Scalars['String'];\r\n  enabled: Scalars['Boolean'];\r\n  conditions: Array<ConfigurableOperation>;\r\n  actions: Array<ConfigurableOperation>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type PromotionFilterParameter = {\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  startsAt?: Maybe<DateOperators>;\r\n  endsAt?: Maybe<DateOperators>;\r\n  couponCode?: Maybe<StringOperators>;\r\n  perCustomerUsageLimit?: Maybe<NumberOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  enabled?: Maybe<BooleanOperators>;\r\n};\r\n\r\nexport type PromotionList = PaginatedList & {\r\n  __typename?: 'PromotionList';\r\n  items: Array<Promotion>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type PromotionListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<PromotionSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<PromotionFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type PromotionSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  startsAt?: Maybe<SortOrder>;\r\n  endsAt?: Maybe<SortOrder>;\r\n  couponCode?: Maybe<SortOrder>;\r\n  perCustomerUsageLimit?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n};\r\n\r\n/** Returned if the specified quantity of an OrderLine is greater than the number of items in that line */\r\nexport type QuantityTooGreatError = ErrorResult & {\r\n  __typename?: 'QuantityTooGreatError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\nexport type Query = {\r\n  __typename?: 'Query';\r\n  activeAdministrator?: Maybe<Administrator>;\r\n  activeChannel: Channel;\r\n  administrator?: Maybe<Administrator>;\r\n  administrators: AdministratorList;\r\n  /** Get a single Asset by id */\r\n  asset?: Maybe<Asset>;\r\n  /** Get a list of Assets */\r\n  assets: AssetList;\r\n  channel?: Maybe<Channel>;\r\n  channels: Array<Channel>;\r\n  /** Get a Collection either by id or slug. If neither id nor slug is specified, an error will result. */\r\n  collection?: Maybe<Collection>;\r\n  collectionFilters: Array<ConfigurableOperationDefinition>;\r\n  collections: CollectionList;\r\n  countries: CountryList;\r\n  country?: Maybe<Country>;\r\n  customer?: Maybe<Customer>;\r\n  customerGroup?: Maybe<CustomerGroup>;\r\n  customerGroups: CustomerGroupList;\r\n  customers: CustomerList;\r\n  facet?: Maybe<Facet>;\r\n  facets: FacetList;\r\n  fulfillmentHandlers: Array<ConfigurableOperationDefinition>;\r\n  globalSettings: GlobalSettings;\r\n  job?: Maybe<Job>;\r\n  jobBufferSize: Array<JobBufferSize>;\r\n  jobQueues: Array<JobQueue>;\r\n  jobs: JobList;\r\n  jobsById: Array<Job>;\r\n  me?: Maybe<CurrentUser>;\r\n  networkStatus: NetworkStatus;\r\n  order?: Maybe<Order>;\r\n  orders: OrderList;\r\n  paymentMethod?: Maybe<PaymentMethod>;\r\n  paymentMethodEligibilityCheckers: Array<ConfigurableOperationDefinition>;\r\n  paymentMethodHandlers: Array<ConfigurableOperationDefinition>;\r\n  paymentMethods: PaymentMethodList;\r\n  pendingSearchIndexUpdates: Scalars['Int'];\r\n  /** Get a Product either by id or slug. If neither id nor slug is specified, an error will result. */\r\n  product?: Maybe<Product>;\r\n  productOptionGroup?: Maybe<ProductOptionGroup>;\r\n  productOptionGroups: Array<ProductOptionGroup>;\r\n  /** Get a ProductVariant by id */\r\n  productVariant?: Maybe<ProductVariant>;\r\n  /** List ProductVariants either all or for the specific product. */\r\n  productVariants: ProductVariantList;\r\n  /** List Products */\r\n  products: ProductList;\r\n  promotion?: Maybe<Promotion>;\r\n  promotionActions: Array<ConfigurableOperationDefinition>;\r\n  promotionConditions: Array<ConfigurableOperationDefinition>;\r\n  promotions: PromotionList;\r\n  role?: Maybe<Role>;\r\n  roles: RoleList;\r\n  search: SearchResponse;\r\n  shippingCalculators: Array<ConfigurableOperationDefinition>;\r\n  shippingEligibilityCheckers: Array<ConfigurableOperationDefinition>;\r\n  shippingMethod?: Maybe<ShippingMethod>;\r\n  shippingMethods: ShippingMethodList;\r\n  tag: Tag;\r\n  tags: TagList;\r\n  taxCategories: Array<TaxCategory>;\r\n  taxCategory?: Maybe<TaxCategory>;\r\n  taxRate?: Maybe<TaxRate>;\r\n  taxRates: TaxRateList;\r\n  testEligibleShippingMethods: Array<ShippingMethodQuote>;\r\n  testShippingMethod: TestShippingMethodResult;\r\n  uiState: UiState;\r\n  userStatus: UserStatus;\r\n  zone?: Maybe<Zone>;\r\n  zones: Array<Zone>;\r\n};\r\n\r\n\r\nexport type QueryAdministratorArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryAdministratorsArgs = {\r\n  options?: Maybe<AdministratorListOptions>;\r\n};\r\n\r\n\r\nexport type QueryAssetArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryAssetsArgs = {\r\n  options?: Maybe<AssetListOptions>;\r\n};\r\n\r\n\r\nexport type QueryChannelArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryCollectionArgs = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  slug?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type QueryCollectionsArgs = {\r\n  options?: Maybe<CollectionListOptions>;\r\n};\r\n\r\n\r\nexport type QueryCountriesArgs = {\r\n  options?: Maybe<CountryListOptions>;\r\n};\r\n\r\n\r\nexport type QueryCountryArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryCustomerArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryCustomerGroupArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryCustomerGroupsArgs = {\r\n  options?: Maybe<CustomerGroupListOptions>;\r\n};\r\n\r\n\r\nexport type QueryCustomersArgs = {\r\n  options?: Maybe<CustomerListOptions>;\r\n};\r\n\r\n\r\nexport type QueryFacetArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryFacetsArgs = {\r\n  options?: Maybe<FacetListOptions>;\r\n};\r\n\r\n\r\nexport type QueryJobArgs = {\r\n  jobId: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryJobBufferSizeArgs = {\r\n  bufferIds?: Maybe<Array<Scalars['String']>>;\r\n};\r\n\r\n\r\nexport type QueryJobsArgs = {\r\n  options?: Maybe<JobListOptions>;\r\n};\r\n\r\n\r\nexport type QueryJobsByIdArgs = {\r\n  jobIds: Array<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type QueryOrderArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryOrdersArgs = {\r\n  options?: Maybe<OrderListOptions>;\r\n};\r\n\r\n\r\nexport type QueryPaymentMethodArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryPaymentMethodsArgs = {\r\n  options?: Maybe<PaymentMethodListOptions>;\r\n};\r\n\r\n\r\nexport type QueryProductArgs = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  slug?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type QueryProductOptionGroupArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryProductOptionGroupsArgs = {\r\n  filterTerm?: Maybe<Scalars['String']>;\r\n};\r\n\r\n\r\nexport type QueryProductVariantArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryProductVariantsArgs = {\r\n  options?: Maybe<ProductVariantListOptions>;\r\n  productId?: Maybe<Scalars['ID']>;\r\n};\r\n\r\n\r\nexport type QueryProductsArgs = {\r\n  options?: Maybe<ProductListOptions>;\r\n};\r\n\r\n\r\nexport type QueryPromotionArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryPromotionsArgs = {\r\n  options?: Maybe<PromotionListOptions>;\r\n};\r\n\r\n\r\nexport type QueryRoleArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryRolesArgs = {\r\n  options?: Maybe<RoleListOptions>;\r\n};\r\n\r\n\r\nexport type QuerySearchArgs = {\r\n  input: SearchInput;\r\n};\r\n\r\n\r\nexport type QueryShippingMethodArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryShippingMethodsArgs = {\r\n  options?: Maybe<ShippingMethodListOptions>;\r\n};\r\n\r\n\r\nexport type QueryTagArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryTagsArgs = {\r\n  options?: Maybe<TagListOptions>;\r\n};\r\n\r\n\r\nexport type QueryTaxCategoryArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryTaxRateArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\n\r\nexport type QueryTaxRatesArgs = {\r\n  options?: Maybe<TaxRateListOptions>;\r\n};\r\n\r\n\r\nexport type QueryTestEligibleShippingMethodsArgs = {\r\n  input: TestEligibleShippingMethodsInput;\r\n};\r\n\r\n\r\nexport type QueryTestShippingMethodArgs = {\r\n  input: TestShippingMethodInput;\r\n};\r\n\r\n\r\nexport type QueryZoneArgs = {\r\n  id: Scalars['ID'];\r\n};\r\n\r\nexport type Refund = Node & {\r\n  __typename?: 'Refund';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  items: Scalars['Int'];\r\n  shipping: Scalars['Int'];\r\n  adjustment: Scalars['Int'];\r\n  total: Scalars['Int'];\r\n  method?: Maybe<Scalars['String']>;\r\n  state: Scalars['String'];\r\n  transactionId?: Maybe<Scalars['String']>;\r\n  reason?: Maybe<Scalars['String']>;\r\n  orderItems: Array<OrderItem>;\r\n  paymentId: Scalars['ID'];\r\n  metadata?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type RefundOrderInput = {\r\n  lines: Array<OrderLineInput>;\r\n  shipping: Scalars['Int'];\r\n  adjustment: Scalars['Int'];\r\n  paymentId: Scalars['ID'];\r\n  reason?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type RefundOrderResult = Refund | QuantityTooGreatError | NothingToRefundError | OrderStateTransitionError | MultipleOrderError | PaymentOrderMismatchError | RefundOrderStateError | AlreadyRefundedError | RefundStateTransitionError;\r\n\r\n/** Returned if an attempting to refund an Order which is not in the expected state */\r\nexport type RefundOrderStateError = ErrorResult & {\r\n  __typename?: 'RefundOrderStateError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  orderState: Scalars['String'];\r\n};\r\n\r\n/**\r\n * Returned when a call to modifyOrder fails to include a refundPaymentId even\r\n * though the price has decreased as a result of the changes.\r\n */\r\nexport type RefundPaymentIdMissingError = ErrorResult & {\r\n  __typename?: 'RefundPaymentIdMissingError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n};\r\n\r\n/** Returned when there is an error in transitioning the Refund state */\r\nexport type RefundStateTransitionError = ErrorResult & {\r\n  __typename?: 'RefundStateTransitionError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  transitionError: Scalars['String'];\r\n  fromState: Scalars['String'];\r\n  toState: Scalars['String'];\r\n};\r\n\r\nexport type RelationCustomFieldConfig = CustomField & {\r\n  __typename?: 'RelationCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  list: Scalars['Boolean'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  nullable?: Maybe<Scalars['Boolean']>;\r\n  entity: Scalars['String'];\r\n  scalarFields: Array<Scalars['String']>;\r\n  ui?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type Release = Node & StockMovement & {\r\n  __typename?: 'Release';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  type: StockMovementType;\r\n  quantity: Scalars['Int'];\r\n  orderItem: OrderItem;\r\n};\r\n\r\nexport type RemoveOptionGroupFromProductResult = Product | ProductOptionInUseError;\r\n\r\nexport type RemoveProductVariantsFromChannelInput = {\r\n  productVariantIds: Array<Scalars['ID']>;\r\n  channelId: Scalars['ID'];\r\n};\r\n\r\nexport type RemoveProductsFromChannelInput = {\r\n  productIds: Array<Scalars['ID']>;\r\n  channelId: Scalars['ID'];\r\n};\r\n\r\nexport type RemovePromotionsFromChannelInput = {\r\n  promotionIds: Array<Scalars['ID']>;\r\n  channelId: Scalars['ID'];\r\n};\r\n\r\nexport type Return = Node & StockMovement & {\r\n  __typename?: 'Return';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  type: StockMovementType;\r\n  quantity: Scalars['Int'];\r\n  orderItem: OrderItem;\r\n};\r\n\r\nexport type Role = Node & {\r\n  __typename?: 'Role';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  code: Scalars['String'];\r\n  description: Scalars['String'];\r\n  permissions: Array<Permission>;\r\n  channels: Array<Channel>;\r\n};\r\n\r\nexport type RoleFilterParameter = {\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  code?: Maybe<StringOperators>;\r\n  description?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type RoleList = PaginatedList & {\r\n  __typename?: 'RoleList';\r\n  items: Array<Role>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type RoleListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<RoleSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<RoleFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type RoleSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  code?: Maybe<SortOrder>;\r\n  description?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type Sale = Node & StockMovement & {\r\n  __typename?: 'Sale';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  type: StockMovementType;\r\n  quantity: Scalars['Int'];\r\n  orderItem: OrderItem;\r\n};\r\n\r\nexport type SearchInput = {\r\n  term?: Maybe<Scalars['String']>;\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\r\n  facetValueOperator?: Maybe<LogicalOperator>;\r\n  facetValueFilters?: Maybe<Array<FacetValueFilterInput>>;\r\n  collectionId?: Maybe<Scalars['ID']>;\r\n  collectionSlug?: Maybe<Scalars['String']>;\r\n  groupByProduct?: Maybe<Scalars['Boolean']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n  skip?: Maybe<Scalars['Int']>;\r\n  sort?: Maybe<SearchResultSortParameter>;\r\n};\r\n\r\nexport type SearchReindexResponse = {\r\n  __typename?: 'SearchReindexResponse';\r\n  success: Scalars['Boolean'];\r\n};\r\n\r\nexport type SearchResponse = {\r\n  __typename?: 'SearchResponse';\r\n  items: Array<SearchResult>;\r\n  totalItems: Scalars['Int'];\r\n  facetValues: Array<FacetValueResult>;\r\n  collections: Array<CollectionResult>;\r\n};\r\n\r\nexport type SearchResult = {\r\n  __typename?: 'SearchResult';\r\n  enabled: Scalars['Boolean'];\r\n  /** An array of ids of the Channels in which this result appears */\r\n  channelIds: Array<Scalars['ID']>;\r\n  sku: Scalars['String'];\r\n  slug: Scalars['String'];\r\n  productId: Scalars['ID'];\r\n  productName: Scalars['String'];\r\n  productAsset?: Maybe<SearchResultAsset>;\r\n  productVariantId: Scalars['ID'];\r\n  productVariantName: Scalars['String'];\r\n  productVariantAsset?: Maybe<SearchResultAsset>;\r\n  price: SearchResultPrice;\r\n  priceWithTax: SearchResultPrice;\r\n  currencyCode: CurrencyCode;\r\n  description: Scalars['String'];\r\n  facetIds: Array<Scalars['ID']>;\r\n  facetValueIds: Array<Scalars['ID']>;\r\n  /** An array of ids of the Collections in which this result appears */\r\n  collectionIds: Array<Scalars['ID']>;\r\n  /** A relevance score for the result. Differs between database implementations */\r\n  score: Scalars['Float'];\r\n};\r\n\r\nexport type SearchResultAsset = {\r\n  __typename?: 'SearchResultAsset';\r\n  id: Scalars['ID'];\r\n  preview: Scalars['String'];\r\n  focalPoint?: Maybe<Coordinate>;\r\n};\r\n\r\n/** The price of a search result product, either as a range or as a single price */\r\nexport type SearchResultPrice = PriceRange | SinglePrice;\r\n\r\nexport type SearchResultSortParameter = {\r\n  name?: Maybe<SortOrder>;\r\n  price?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type ServerConfig = {\r\n  __typename?: 'ServerConfig';\r\n  orderProcess: Array<OrderProcessState>;\r\n  permittedAssetTypes: Array<Scalars['String']>;\r\n  permissions: Array<PermissionDefinition>;\r\n  customFieldConfig: CustomFields;\r\n};\r\n\r\n/** Returned if the Payment settlement fails */\r\nexport type SettlePaymentError = ErrorResult & {\r\n  __typename?: 'SettlePaymentError';\r\n  errorCode: ErrorCode;\r\n  message: Scalars['String'];\r\n  paymentErrorMessage: Scalars['String'];\r\n};\r\n\r\nexport type SettlePaymentResult = Payment | SettlePaymentError | PaymentStateTransitionError | OrderStateTransitionError;\r\n\r\nexport type SettleRefundInput = {\r\n  id: Scalars['ID'];\r\n  transactionId: Scalars['String'];\r\n};\r\n\r\nexport type SettleRefundResult = Refund | RefundStateTransitionError;\r\n\r\nexport type ShippingLine = {\r\n  __typename?: 'ShippingLine';\r\n  shippingMethod: ShippingMethod;\r\n  price: Scalars['Int'];\r\n  priceWithTax: Scalars['Int'];\r\n  discountedPrice: Scalars['Int'];\r\n  discountedPriceWithTax: Scalars['Int'];\r\n  discounts: Array<Discount>;\r\n};\r\n\r\nexport type ShippingMethod = Node & {\r\n  __typename?: 'ShippingMethod';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  code: Scalars['String'];\r\n  name: Scalars['String'];\r\n  description: Scalars['String'];\r\n  fulfillmentHandlerCode: Scalars['String'];\r\n  checker: ConfigurableOperation;\r\n  calculator: ConfigurableOperation;\r\n  translations: Array<ShippingMethodTranslation>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ShippingMethodFilterParameter = {\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  code?: Maybe<StringOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  description?: Maybe<StringOperators>;\r\n  fulfillmentHandlerCode?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type ShippingMethodList = PaginatedList & {\r\n  __typename?: 'ShippingMethodList';\r\n  items: Array<ShippingMethod>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type ShippingMethodListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<ShippingMethodSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<ShippingMethodFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type ShippingMethodQuote = {\r\n  __typename?: 'ShippingMethodQuote';\r\n  id: Scalars['ID'];\r\n  price: Scalars['Int'];\r\n  priceWithTax: Scalars['Int'];\r\n  code: Scalars['String'];\r\n  name: Scalars['String'];\r\n  description: Scalars['String'];\r\n  /** Any optional metadata returned by the ShippingCalculator in the ShippingCalculationResult */\r\n  metadata?: Maybe<Scalars['JSON']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type ShippingMethodSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  code?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  description?: Maybe<SortOrder>;\r\n  fulfillmentHandlerCode?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type ShippingMethodTranslation = {\r\n  __typename?: 'ShippingMethodTranslation';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  languageCode: LanguageCode;\r\n  name: Scalars['String'];\r\n  description: Scalars['String'];\r\n};\r\n\r\nexport type ShippingMethodTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n/** The price value where the result has a single price */\r\nexport type SinglePrice = {\r\n  __typename?: 'SinglePrice';\r\n  value: Scalars['Int'];\r\n};\r\n\r\nexport enum SortOrder {\r\n  ASC = 'ASC',\r\n  DESC = 'DESC'\r\n}\r\n\r\nexport type StockAdjustment = Node & StockMovement & {\r\n  __typename?: 'StockAdjustment';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  type: StockMovementType;\r\n  quantity: Scalars['Int'];\r\n};\r\n\r\nexport type StockMovement = {\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  productVariant: ProductVariant;\r\n  type: StockMovementType;\r\n  quantity: Scalars['Int'];\r\n};\r\n\r\nexport type StockMovementItem = StockAdjustment | Allocation | Sale | Cancellation | Return | Release;\r\n\r\nexport type StockMovementList = {\r\n  __typename?: 'StockMovementList';\r\n  items: Array<StockMovementItem>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type StockMovementListOptions = {\r\n  type?: Maybe<StockMovementType>;\r\n  skip?: Maybe<Scalars['Int']>;\r\n  take?: Maybe<Scalars['Int']>;\r\n};\r\n\r\nexport enum StockMovementType {\r\n  ADJUSTMENT = 'ADJUSTMENT',\r\n  ALLOCATION = 'ALLOCATION',\r\n  RELEASE = 'RELEASE',\r\n  SALE = 'SALE',\r\n  CANCELLATION = 'CANCELLATION',\r\n  RETURN = 'RETURN'\r\n}\r\n\r\nexport type StringCustomFieldConfig = CustomField & {\r\n  __typename?: 'StringCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  list: Scalars['Boolean'];\r\n  length?: Maybe<Scalars['Int']>;\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  nullable?: Maybe<Scalars['Boolean']>;\r\n  pattern?: Maybe<Scalars['String']>;\r\n  options?: Maybe<Array<StringFieldOption>>;\r\n  ui?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type StringFieldOption = {\r\n  __typename?: 'StringFieldOption';\r\n  value: Scalars['String'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n};\r\n\r\n/** Operators for filtering on a list of String fields */\r\nexport type StringListOperators = {\r\n  inList: Scalars['String'];\r\n};\r\n\r\n/** Operators for filtering on a String field */\r\nexport type StringOperators = {\r\n  eq?: Maybe<Scalars['String']>;\r\n  notEq?: Maybe<Scalars['String']>;\r\n  contains?: Maybe<Scalars['String']>;\r\n  notContains?: Maybe<Scalars['String']>;\r\n  in?: Maybe<Array<Scalars['String']>>;\r\n  notIn?: Maybe<Array<Scalars['String']>>;\r\n  regex?: Maybe<Scalars['String']>;\r\n};\r\n\r\n/** Indicates that an operation succeeded, where we do not want to return any more specific information. */\r\nexport type Success = {\r\n  __typename?: 'Success';\r\n  success: Scalars['Boolean'];\r\n};\r\n\r\nexport type Surcharge = Node & {\r\n  __typename?: 'Surcharge';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  description: Scalars['String'];\r\n  sku?: Maybe<Scalars['String']>;\r\n  taxLines: Array<TaxLine>;\r\n  price: Scalars['Int'];\r\n  priceWithTax: Scalars['Int'];\r\n  taxRate: Scalars['Float'];\r\n};\r\n\r\nexport type SurchargeInput = {\r\n  description: Scalars['String'];\r\n  sku?: Maybe<Scalars['String']>;\r\n  price: Scalars['Int'];\r\n  priceIncludesTax: Scalars['Boolean'];\r\n  taxRate?: Maybe<Scalars['Float']>;\r\n  taxDescription?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type Tag = Node & {\r\n  __typename?: 'Tag';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  value: Scalars['String'];\r\n};\r\n\r\nexport type TagFilterParameter = {\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  value?: Maybe<StringOperators>;\r\n};\r\n\r\nexport type TagList = PaginatedList & {\r\n  __typename?: 'TagList';\r\n  items: Array<Tag>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type TagListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<TagSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<TagFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type TagSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  value?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type TaxCategory = Node & {\r\n  __typename?: 'TaxCategory';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  name: Scalars['String'];\r\n  isDefault: Scalars['Boolean'];\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type TaxLine = {\r\n  __typename?: 'TaxLine';\r\n  description: Scalars['String'];\r\n  taxRate: Scalars['Float'];\r\n};\r\n\r\nexport type TaxRate = Node & {\r\n  __typename?: 'TaxRate';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  name: Scalars['String'];\r\n  enabled: Scalars['Boolean'];\r\n  value: Scalars['Float'];\r\n  category: TaxCategory;\r\n  zone: Zone;\r\n  customerGroup?: Maybe<CustomerGroup>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type TaxRateFilterParameter = {\r\n  id?: Maybe<IdOperators>;\r\n  createdAt?: Maybe<DateOperators>;\r\n  updatedAt?: Maybe<DateOperators>;\r\n  name?: Maybe<StringOperators>;\r\n  enabled?: Maybe<BooleanOperators>;\r\n  value?: Maybe<NumberOperators>;\r\n};\r\n\r\nexport type TaxRateList = PaginatedList & {\r\n  __typename?: 'TaxRateList';\r\n  items: Array<TaxRate>;\r\n  totalItems: Scalars['Int'];\r\n};\r\n\r\nexport type TaxRateListOptions = {\r\n  /** Skips the first n results, for use in pagination */\r\n  skip?: Maybe<Scalars['Int']>;\r\n  /** Takes n results, for use in pagination */\r\n  take?: Maybe<Scalars['Int']>;\r\n  /** Specifies which properties to sort the results by */\r\n  sort?: Maybe<TaxRateSortParameter>;\r\n  /** Allows the results to be filtered */\r\n  filter?: Maybe<TaxRateFilterParameter>;\r\n  /** Specifies whether multiple \"filter\" arguments should be combines with a logical AND or OR operation. Defaults to AND. */\r\n  filterOperator?: Maybe<LogicalOperator>;\r\n};\r\n\r\nexport type TaxRateSortParameter = {\r\n  id?: Maybe<SortOrder>;\r\n  createdAt?: Maybe<SortOrder>;\r\n  updatedAt?: Maybe<SortOrder>;\r\n  name?: Maybe<SortOrder>;\r\n  value?: Maybe<SortOrder>;\r\n};\r\n\r\nexport type TestEligibleShippingMethodsInput = {\r\n  shippingAddress: CreateAddressInput;\r\n  lines: Array<TestShippingMethodOrderLineInput>;\r\n};\r\n\r\nexport type TestShippingMethodInput = {\r\n  checker: ConfigurableOperationInput;\r\n  calculator: ConfigurableOperationInput;\r\n  shippingAddress: CreateAddressInput;\r\n  lines: Array<TestShippingMethodOrderLineInput>;\r\n};\r\n\r\nexport type TestShippingMethodOrderLineInput = {\r\n  productVariantId: Scalars['ID'];\r\n  quantity: Scalars['Int'];\r\n};\r\n\r\nexport type TestShippingMethodQuote = {\r\n  __typename?: 'TestShippingMethodQuote';\r\n  price: Scalars['Int'];\r\n  priceWithTax: Scalars['Int'];\r\n  metadata?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type TestShippingMethodResult = {\r\n  __typename?: 'TestShippingMethodResult';\r\n  eligible: Scalars['Boolean'];\r\n  quote?: Maybe<TestShippingMethodQuote>;\r\n};\r\n\r\nexport type TextCustomFieldConfig = CustomField & {\r\n  __typename?: 'TextCustomFieldConfig';\r\n  name: Scalars['String'];\r\n  type: Scalars['String'];\r\n  list: Scalars['Boolean'];\r\n  label?: Maybe<Array<LocalizedString>>;\r\n  description?: Maybe<Array<LocalizedString>>;\r\n  readonly?: Maybe<Scalars['Boolean']>;\r\n  internal?: Maybe<Scalars['Boolean']>;\r\n  nullable?: Maybe<Scalars['Boolean']>;\r\n  ui?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type TransitionFulfillmentToStateResult = Fulfillment | FulfillmentStateTransitionError;\r\n\r\nexport type TransitionOrderToStateResult = Order | OrderStateTransitionError;\r\n\r\nexport type TransitionPaymentToStateResult = Payment | PaymentStateTransitionError;\r\n\r\nexport type UiState = {\r\n  __typename?: 'UiState';\r\n  language: LanguageCode;\r\n  locale?: Maybe<Scalars['String']>;\r\n  contentLanguage: LanguageCode;\r\n  theme: Scalars['String'];\r\n  displayUiExtensionPoints: Scalars['Boolean'];\r\n};\r\n\r\nexport type UpdateActiveAdministratorInput = {\r\n  firstName?: Maybe<Scalars['String']>;\r\n  lastName?: Maybe<Scalars['String']>;\r\n  emailAddress?: Maybe<Scalars['String']>;\r\n  password?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateAddressInput = {\r\n  id: Scalars['ID'];\r\n  fullName?: Maybe<Scalars['String']>;\r\n  company?: Maybe<Scalars['String']>;\r\n  streetLine1?: Maybe<Scalars['String']>;\r\n  streetLine2?: Maybe<Scalars['String']>;\r\n  city?: Maybe<Scalars['String']>;\r\n  province?: Maybe<Scalars['String']>;\r\n  postalCode?: Maybe<Scalars['String']>;\r\n  countryCode?: Maybe<Scalars['String']>;\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n  defaultShippingAddress?: Maybe<Scalars['Boolean']>;\r\n  defaultBillingAddress?: Maybe<Scalars['Boolean']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateAdministratorInput = {\r\n  id: Scalars['ID'];\r\n  firstName?: Maybe<Scalars['String']>;\r\n  lastName?: Maybe<Scalars['String']>;\r\n  emailAddress?: Maybe<Scalars['String']>;\r\n  password?: Maybe<Scalars['String']>;\r\n  roleIds?: Maybe<Array<Scalars['ID']>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateAssetInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n  focalPoint?: Maybe<CoordinateInput>;\r\n  tags?: Maybe<Array<Scalars['String']>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateChannelInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  token?: Maybe<Scalars['String']>;\r\n  defaultLanguageCode?: Maybe<LanguageCode>;\r\n  pricesIncludeTax?: Maybe<Scalars['Boolean']>;\r\n  currencyCode?: Maybe<CurrencyCode>;\r\n  defaultTaxZoneId?: Maybe<Scalars['ID']>;\r\n  defaultShippingZoneId?: Maybe<Scalars['ID']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateChannelResult = Channel | LanguageNotAvailableError;\r\n\r\nexport type UpdateCollectionInput = {\r\n  id: Scalars['ID'];\r\n  isPrivate?: Maybe<Scalars['Boolean']>;\r\n  featuredAssetId?: Maybe<Scalars['ID']>;\r\n  parentId?: Maybe<Scalars['ID']>;\r\n  assetIds?: Maybe<Array<Scalars['ID']>>;\r\n  filters?: Maybe<Array<ConfigurableOperationInput>>;\r\n  translations?: Maybe<Array<UpdateCollectionTranslationInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateCollectionTranslationInput = {\r\n  id?: Maybe<Scalars['ID']>;\r\n  languageCode: LanguageCode;\r\n  name?: Maybe<Scalars['String']>;\r\n  slug?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateCountryInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  translations?: Maybe<Array<CountryTranslationInput>>;\r\n  enabled?: Maybe<Scalars['Boolean']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateCustomerGroupInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateCustomerInput = {\r\n  id: Scalars['ID'];\r\n  title?: Maybe<Scalars['String']>;\r\n  firstName?: Maybe<Scalars['String']>;\r\n  lastName?: Maybe<Scalars['String']>;\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n  emailAddress?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateCustomerNoteInput = {\r\n  noteId: Scalars['ID'];\r\n  note: Scalars['String'];\r\n};\r\n\r\nexport type UpdateCustomerResult = Customer | EmailAddressConflictError;\r\n\r\nexport type UpdateFacetInput = {\r\n  id: Scalars['ID'];\r\n  isPrivate?: Maybe<Scalars['Boolean']>;\r\n  code?: Maybe<Scalars['String']>;\r\n  translations?: Maybe<Array<FacetTranslationInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateFacetValueInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  translations?: Maybe<Array<FacetValueTranslationInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateGlobalSettingsInput = {\r\n  availableLanguages?: Maybe<Array<LanguageCode>>;\r\n  trackInventory?: Maybe<Scalars['Boolean']>;\r\n  outOfStockThreshold?: Maybe<Scalars['Int']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateGlobalSettingsResult = GlobalSettings | ChannelDefaultLanguageError;\r\n\r\nexport type UpdateOrderAddressInput = {\r\n  fullName?: Maybe<Scalars['String']>;\r\n  company?: Maybe<Scalars['String']>;\r\n  streetLine1?: Maybe<Scalars['String']>;\r\n  streetLine2?: Maybe<Scalars['String']>;\r\n  city?: Maybe<Scalars['String']>;\r\n  province?: Maybe<Scalars['String']>;\r\n  postalCode?: Maybe<Scalars['String']>;\r\n  countryCode?: Maybe<Scalars['String']>;\r\n  phoneNumber?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type UpdateOrderInput = {\r\n  id: Scalars['ID'];\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateOrderNoteInput = {\r\n  noteId: Scalars['ID'];\r\n  note?: Maybe<Scalars['String']>;\r\n  isPublic?: Maybe<Scalars['Boolean']>;\r\n};\r\n\r\nexport type UpdatePaymentMethodInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n  code?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n  enabled?: Maybe<Scalars['Boolean']>;\r\n  checker?: Maybe<ConfigurableOperationInput>;\r\n  handler?: Maybe<ConfigurableOperationInput>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateProductInput = {\r\n  id: Scalars['ID'];\r\n  enabled?: Maybe<Scalars['Boolean']>;\r\n  featuredAssetId?: Maybe<Scalars['ID']>;\r\n  assetIds?: Maybe<Array<Scalars['ID']>>;\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\r\n  translations?: Maybe<Array<ProductTranslationInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateProductOptionGroupInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateProductOptionInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  translations?: Maybe<Array<ProductOptionGroupTranslationInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateProductVariantInput = {\r\n  id: Scalars['ID'];\r\n  enabled?: Maybe<Scalars['Boolean']>;\r\n  translations?: Maybe<Array<ProductVariantTranslationInput>>;\r\n  facetValueIds?: Maybe<Array<Scalars['ID']>>;\r\n  sku?: Maybe<Scalars['String']>;\r\n  taxCategoryId?: Maybe<Scalars['ID']>;\r\n  price?: Maybe<Scalars['Int']>;\r\n  featuredAssetId?: Maybe<Scalars['ID']>;\r\n  assetIds?: Maybe<Array<Scalars['ID']>>;\r\n  stockOnHand?: Maybe<Scalars['Int']>;\r\n  outOfStockThreshold?: Maybe<Scalars['Int']>;\r\n  useGlobalOutOfStockThreshold?: Maybe<Scalars['Boolean']>;\r\n  trackInventory?: Maybe<GlobalFlag>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdatePromotionInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n  enabled?: Maybe<Scalars['Boolean']>;\r\n  startsAt?: Maybe<Scalars['DateTime']>;\r\n  endsAt?: Maybe<Scalars['DateTime']>;\r\n  couponCode?: Maybe<Scalars['String']>;\r\n  perCustomerUsageLimit?: Maybe<Scalars['Int']>;\r\n  conditions?: Maybe<Array<ConfigurableOperationInput>>;\r\n  actions?: Maybe<Array<ConfigurableOperationInput>>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdatePromotionResult = Promotion | MissingConditionsError;\r\n\r\nexport type UpdateRoleInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  description?: Maybe<Scalars['String']>;\r\n  permissions?: Maybe<Array<Permission>>;\r\n  channelIds?: Maybe<Array<Scalars['ID']>>;\r\n};\r\n\r\nexport type UpdateShippingMethodInput = {\r\n  id: Scalars['ID'];\r\n  code?: Maybe<Scalars['String']>;\r\n  fulfillmentHandler?: Maybe<Scalars['String']>;\r\n  checker?: Maybe<ConfigurableOperationInput>;\r\n  calculator?: Maybe<ConfigurableOperationInput>;\r\n  translations: Array<ShippingMethodTranslationInput>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateTagInput = {\r\n  id: Scalars['ID'];\r\n  value?: Maybe<Scalars['String']>;\r\n};\r\n\r\nexport type UpdateTaxCategoryInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n  isDefault?: Maybe<Scalars['Boolean']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateTaxRateInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n  value?: Maybe<Scalars['Float']>;\r\n  enabled?: Maybe<Scalars['Boolean']>;\r\n  categoryId?: Maybe<Scalars['ID']>;\r\n  zoneId?: Maybe<Scalars['ID']>;\r\n  customerGroupId?: Maybe<Scalars['ID']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UpdateZoneInput = {\r\n  id: Scalars['ID'];\r\n  name?: Maybe<Scalars['String']>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\n\r\nexport type User = Node & {\r\n  __typename?: 'User';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  identifier: Scalars['String'];\r\n  verified: Scalars['Boolean'];\r\n  roles: Array<Role>;\r\n  lastLogin?: Maybe<Scalars['DateTime']>;\r\n  authenticationMethods: Array<AuthenticationMethod>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type UserStatus = {\r\n  __typename?: 'UserStatus';\r\n  username: Scalars['String'];\r\n  isLoggedIn: Scalars['Boolean'];\r\n  loginTime: Scalars['String'];\r\n  permissions: Array<Permission>;\r\n  activeChannelId?: Maybe<Scalars['ID']>;\r\n  channels: Array<CurrentUserChannel>;\r\n};\r\n\r\nexport type UserStatusInput = {\r\n  username: Scalars['String'];\r\n  loginTime: Scalars['String'];\r\n  activeChannelId: Scalars['ID'];\r\n  channels: Array<CurrentUserChannelInput>;\r\n};\r\n\r\nexport type Zone = Node & {\r\n  __typename?: 'Zone';\r\n  id: Scalars['ID'];\r\n  createdAt: Scalars['DateTime'];\r\n  updatedAt: Scalars['DateTime'];\r\n  name: Scalars['String'];\r\n  members: Array<Country>;\r\n  customFields?: Maybe<Scalars['JSON']>;\r\n};\r\n\r\nexport type RoleFragment = (\r\n  { __typename?: 'Role' }\r\n  & Pick<Role, 'id' | 'createdAt' | 'updatedAt' | 'code' | 'description' | 'permissions'>\r\n  & { channels: Array<(\r\n    { __typename?: 'Channel' }\r\n    & Pick<Channel, 'id' | 'code' | 'token'>\r\n  )> }\r\n);\r\n\r\nexport type AdministratorFragment = (\r\n  { __typename?: 'Administrator' }\r\n  & Pick<Administrator, 'id' | 'createdAt' | 'updatedAt' | 'firstName' | 'lastName' | 'emailAddress'>\r\n  & { user: (\r\n    { __typename?: 'User' }\r\n    & Pick<User, 'id' | 'identifier' | 'lastLogin'>\r\n    & { roles: Array<(\r\n      { __typename?: 'Role' }\r\n      & RoleFragment\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type GetAdministratorsQueryVariables = Exact<{\r\n  options?: Maybe<AdministratorListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetAdministratorsQuery = { administrators: (\r\n    { __typename?: 'AdministratorList' }\r\n    & Pick<AdministratorList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Administrator' }\r\n      & AdministratorFragment\r\n    )> }\r\n  ) };\r\n\r\nexport type GetActiveAdministratorQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetActiveAdministratorQuery = { activeAdministrator?: Maybe<(\r\n    { __typename?: 'Administrator' }\r\n    & AdministratorFragment\r\n  )> };\r\n\r\nexport type GetAdministratorQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetAdministratorQuery = { administrator?: Maybe<(\r\n    { __typename?: 'Administrator' }\r\n    & AdministratorFragment\r\n  )> };\r\n\r\nexport type CreateAdministratorMutationVariables = Exact<{\r\n  input: CreateAdministratorInput;\r\n}>;\r\n\r\n\r\nexport type CreateAdministratorMutation = { createAdministrator: (\r\n    { __typename?: 'Administrator' }\r\n    & AdministratorFragment\r\n  ) };\r\n\r\nexport type UpdateAdministratorMutationVariables = Exact<{\r\n  input: UpdateAdministratorInput;\r\n}>;\r\n\r\n\r\nexport type UpdateAdministratorMutation = { updateAdministrator: (\r\n    { __typename?: 'Administrator' }\r\n    & AdministratorFragment\r\n  ) };\r\n\r\nexport type UpdateActiveAdministratorMutationVariables = Exact<{\r\n  input: UpdateActiveAdministratorInput;\r\n}>;\r\n\r\n\r\nexport type UpdateActiveAdministratorMutation = { updateActiveAdministrator: (\r\n    { __typename?: 'Administrator' }\r\n    & AdministratorFragment\r\n  ) };\r\n\r\nexport type DeleteAdministratorMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteAdministratorMutation = { deleteAdministrator: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type GetRolesQueryVariables = Exact<{\r\n  options?: Maybe<RoleListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetRolesQuery = { roles: (\r\n    { __typename?: 'RoleList' }\r\n    & Pick<RoleList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Role' }\r\n      & RoleFragment\r\n    )> }\r\n  ) };\r\n\r\nexport type GetRoleQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetRoleQuery = { role?: Maybe<(\r\n    { __typename?: 'Role' }\r\n    & RoleFragment\r\n  )> };\r\n\r\nexport type CreateRoleMutationVariables = Exact<{\r\n  input: CreateRoleInput;\r\n}>;\r\n\r\n\r\nexport type CreateRoleMutation = { createRole: (\r\n    { __typename?: 'Role' }\r\n    & RoleFragment\r\n  ) };\r\n\r\nexport type UpdateRoleMutationVariables = Exact<{\r\n  input: UpdateRoleInput;\r\n}>;\r\n\r\n\r\nexport type UpdateRoleMutation = { updateRole: (\r\n    { __typename?: 'Role' }\r\n    & RoleFragment\r\n  ) };\r\n\r\nexport type DeleteRoleMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteRoleMutation = { deleteRole: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type AssignRoleToAdministratorMutationVariables = Exact<{\r\n  administratorId: Scalars['ID'];\r\n  roleId: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type AssignRoleToAdministratorMutation = { assignRoleToAdministrator: (\r\n    { __typename?: 'Administrator' }\r\n    & AdministratorFragment\r\n  ) };\r\n\r\nexport type CurrentUserFragment = (\r\n  { __typename?: 'CurrentUser' }\r\n  & Pick<CurrentUser, 'id' | 'identifier'>\r\n  & { channels: Array<(\r\n    { __typename?: 'CurrentUserChannel' }\r\n    & Pick<CurrentUserChannel, 'id' | 'code' | 'token' | 'permissions'>\r\n  )> }\r\n);\r\n\r\nexport type AttemptLoginMutationVariables = Exact<{\r\n  username: Scalars['String'];\r\n  password: Scalars['String'];\r\n  rememberMe: Scalars['Boolean'];\r\n}>;\r\n\r\n\r\nexport type AttemptLoginMutation = { login: (\r\n    { __typename?: 'CurrentUser' }\r\n    & CurrentUserFragment\r\n  ) | (\r\n    { __typename?: 'InvalidCredentialsError' }\r\n    & ErrorResult_InvalidCredentialsError_Fragment\r\n  ) | (\r\n    { __typename?: 'NativeAuthStrategyError' }\r\n    & ErrorResult_NativeAuthStrategyError_Fragment\r\n  ) };\r\n\r\nexport type LogOutMutationVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type LogOutMutation = { logout: (\r\n    { __typename?: 'Success' }\r\n    & Pick<Success, 'success'>\r\n  ) };\r\n\r\nexport type GetCurrentUserQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetCurrentUserQuery = { me?: Maybe<(\r\n    { __typename?: 'CurrentUser' }\r\n    & CurrentUserFragment\r\n  )> };\r\n\r\nexport type RequestStartedMutationVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type RequestStartedMutation = Pick<Mutation, 'requestStarted'>;\r\n\r\nexport type RequestCompletedMutationVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type RequestCompletedMutation = Pick<Mutation, 'requestCompleted'>;\r\n\r\nexport type UserStatusFragment = (\r\n  { __typename?: 'UserStatus' }\r\n  & Pick<UserStatus, 'username' | 'isLoggedIn' | 'loginTime' | 'activeChannelId' | 'permissions'>\r\n  & { channels: Array<(\r\n    { __typename?: 'CurrentUserChannel' }\r\n    & Pick<CurrentUserChannel, 'id' | 'code' | 'token' | 'permissions'>\r\n  )> }\r\n);\r\n\r\nexport type SetAsLoggedInMutationVariables = Exact<{\r\n  input: UserStatusInput;\r\n}>;\r\n\r\n\r\nexport type SetAsLoggedInMutation = { setAsLoggedIn: (\r\n    { __typename?: 'UserStatus' }\r\n    & UserStatusFragment\r\n  ) };\r\n\r\nexport type SetAsLoggedOutMutationVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type SetAsLoggedOutMutation = { setAsLoggedOut: (\r\n    { __typename?: 'UserStatus' }\r\n    & UserStatusFragment\r\n  ) };\r\n\r\nexport type SetUiLanguageMutationVariables = Exact<{\r\n  languageCode: LanguageCode;\r\n  locale?: Maybe<Scalars['String']>;\r\n}>;\r\n\r\n\r\nexport type SetUiLanguageMutation = Pick<Mutation, 'setUiLanguage' | 'setUiLocale'>;\r\n\r\nexport type SetUiLocaleMutationVariables = Exact<{\r\n  locale?: Maybe<Scalars['String']>;\r\n}>;\r\n\r\n\r\nexport type SetUiLocaleMutation = Pick<Mutation, 'setUiLocale'>;\r\n\r\nexport type SetDisplayUiExtensionPointsMutationVariables = Exact<{\r\n  display: Scalars['Boolean'];\r\n}>;\r\n\r\n\r\nexport type SetDisplayUiExtensionPointsMutation = Pick<Mutation, 'setDisplayUiExtensionPoints'>;\r\n\r\nexport type SetContentLanguageMutationVariables = Exact<{\r\n  languageCode: LanguageCode;\r\n}>;\r\n\r\n\r\nexport type SetContentLanguageMutation = Pick<Mutation, 'setContentLanguage'>;\r\n\r\nexport type SetUiThemeMutationVariables = Exact<{\r\n  theme: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type SetUiThemeMutation = Pick<Mutation, 'setUiTheme'>;\r\n\r\nexport type GetNetworkStatusQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetNetworkStatusQuery = { networkStatus: (\r\n    { __typename?: 'NetworkStatus' }\r\n    & Pick<NetworkStatus, 'inFlightRequests'>\r\n  ) };\r\n\r\nexport type GetUserStatusQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetUserStatusQuery = { userStatus: (\r\n    { __typename?: 'UserStatus' }\r\n    & UserStatusFragment\r\n  ) };\r\n\r\nexport type GetUiStateQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetUiStateQuery = { uiState: (\r\n    { __typename?: 'UiState' }\r\n    & Pick<UiState, 'language' | 'locale' | 'contentLanguage' | 'theme' | 'displayUiExtensionPoints'>\r\n  ) };\r\n\r\nexport type GetClientStateQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetClientStateQuery = { networkStatus: (\r\n    { __typename?: 'NetworkStatus' }\r\n    & Pick<NetworkStatus, 'inFlightRequests'>\r\n  ), userStatus: (\r\n    { __typename?: 'UserStatus' }\r\n    & UserStatusFragment\r\n  ), uiState: (\r\n    { __typename?: 'UiState' }\r\n    & Pick<UiState, 'language' | 'locale' | 'contentLanguage' | 'theme' | 'displayUiExtensionPoints'>\r\n  ) };\r\n\r\nexport type SetActiveChannelMutationVariables = Exact<{\r\n  channelId: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type SetActiveChannelMutation = { setActiveChannel: (\r\n    { __typename?: 'UserStatus' }\r\n    & UserStatusFragment\r\n  ) };\r\n\r\nexport type UpdateUserChannelsMutationVariables = Exact<{\r\n  channels: Array<CurrentUserChannelInput> | CurrentUserChannelInput;\r\n}>;\r\n\r\n\r\nexport type UpdateUserChannelsMutation = { updateUserChannels: (\r\n    { __typename?: 'UserStatus' }\r\n    & UserStatusFragment\r\n  ) };\r\n\r\nexport type GetCollectionFiltersQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetCollectionFiltersQuery = { collectionFilters: Array<(\r\n    { __typename?: 'ConfigurableOperationDefinition' }\r\n    & ConfigurableOperationDefFragment\r\n  )> };\r\n\r\nexport type CollectionFragment = (\r\n  { __typename?: 'Collection' }\r\n  & Pick<Collection, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'slug' | 'description' | 'isPrivate' | 'languageCode'>\r\n  & { featuredAsset?: Maybe<(\r\n    { __typename?: 'Asset' }\r\n    & AssetFragment\r\n  )>, assets: Array<(\r\n    { __typename?: 'Asset' }\r\n    & AssetFragment\r\n  )>, filters: Array<(\r\n    { __typename?: 'ConfigurableOperation' }\r\n    & ConfigurableOperationFragment\r\n  )>, translations: Array<(\r\n    { __typename?: 'CollectionTranslation' }\r\n    & Pick<CollectionTranslation, 'id' | 'languageCode' | 'name' | 'slug' | 'description'>\r\n  )>, parent?: Maybe<(\r\n    { __typename?: 'Collection' }\r\n    & Pick<Collection, 'id' | 'name'>\r\n  )>, children?: Maybe<Array<(\r\n    { __typename?: 'Collection' }\r\n    & Pick<Collection, 'id' | 'name'>\r\n  )>> }\r\n);\r\n\r\nexport type GetCollectionListQueryVariables = Exact<{\r\n  options?: Maybe<CollectionListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetCollectionListQuery = { collections: (\r\n    { __typename?: 'CollectionList' }\r\n    & Pick<CollectionList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Collection' }\r\n      & Pick<Collection, 'id' | 'name' | 'slug' | 'description' | 'isPrivate'>\r\n      & { featuredAsset?: Maybe<(\r\n        { __typename?: 'Asset' }\r\n        & AssetFragment\r\n      )>, parent?: Maybe<(\r\n        { __typename?: 'Collection' }\r\n        & Pick<Collection, 'id'>\r\n      )> }\r\n    )> }\r\n  ) };\r\n\r\nexport type GetCollectionQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetCollectionQuery = { collection?: Maybe<(\r\n    { __typename?: 'Collection' }\r\n    & CollectionFragment\r\n  )> };\r\n\r\nexport type CreateCollectionMutationVariables = Exact<{\r\n  input: CreateCollectionInput;\r\n}>;\r\n\r\n\r\nexport type CreateCollectionMutation = { createCollection: (\r\n    { __typename?: 'Collection' }\r\n    & CollectionFragment\r\n  ) };\r\n\r\nexport type UpdateCollectionMutationVariables = Exact<{\r\n  input: UpdateCollectionInput;\r\n}>;\r\n\r\n\r\nexport type UpdateCollectionMutation = { updateCollection: (\r\n    { __typename?: 'Collection' }\r\n    & CollectionFragment\r\n  ) };\r\n\r\nexport type MoveCollectionMutationVariables = Exact<{\r\n  input: MoveCollectionInput;\r\n}>;\r\n\r\n\r\nexport type MoveCollectionMutation = { moveCollection: (\r\n    { __typename?: 'Collection' }\r\n    & CollectionFragment\r\n  ) };\r\n\r\nexport type DeleteCollectionMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteCollectionMutation = { deleteCollection: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type GetCollectionContentsQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n  options?: Maybe<ProductVariantListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetCollectionContentsQuery = { collection?: Maybe<(\r\n    { __typename?: 'Collection' }\r\n    & Pick<Collection, 'id' | 'name'>\r\n    & { productVariants: (\r\n      { __typename?: 'ProductVariantList' }\r\n      & Pick<ProductVariantList, 'totalItems'>\r\n      & { items: Array<(\r\n        { __typename?: 'ProductVariant' }\r\n        & Pick<ProductVariant, 'id' | 'productId' | 'name'>\r\n      )> }\r\n    ) }\r\n  )> };\r\n\r\nexport type AddressFragment = (\r\n  { __typename?: 'Address' }\r\n  & Pick<Address, 'id' | 'createdAt' | 'updatedAt' | 'fullName' | 'company' | 'streetLine1' | 'streetLine2' | 'city' | 'province' | 'postalCode' | 'phoneNumber' | 'defaultShippingAddress' | 'defaultBillingAddress'>\r\n  & { country: (\r\n    { __typename?: 'Country' }\r\n    & Pick<Country, 'id' | 'code' | 'name'>\r\n  ) }\r\n);\r\n\r\nexport type CustomerFragment = (\r\n  { __typename?: 'Customer' }\r\n  & Pick<Customer, 'id' | 'createdAt' | 'updatedAt' | 'title' | 'firstName' | 'lastName' | 'phoneNumber' | 'emailAddress'>\r\n  & { user?: Maybe<(\r\n    { __typename?: 'User' }\r\n    & Pick<User, 'id' | 'identifier' | 'verified' | 'lastLogin'>\r\n  )>, addresses?: Maybe<Array<(\r\n    { __typename?: 'Address' }\r\n    & AddressFragment\r\n  )>> }\r\n);\r\n\r\nexport type CustomerGroupFragment = (\r\n  { __typename?: 'CustomerGroup' }\r\n  & Pick<CustomerGroup, 'id' | 'createdAt' | 'updatedAt' | 'name'>\r\n);\r\n\r\nexport type GetCustomerListQueryVariables = Exact<{\r\n  options?: Maybe<CustomerListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetCustomerListQuery = { customers: (\r\n    { __typename?: 'CustomerList' }\r\n    & Pick<CustomerList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Customer' }\r\n      & Pick<Customer, 'id' | 'createdAt' | 'updatedAt' | 'title' | 'firstName' | 'lastName' | 'emailAddress'>\r\n      & { user?: Maybe<(\r\n        { __typename?: 'User' }\r\n        & Pick<User, 'id' | 'verified'>\r\n      )> }\r\n    )> }\r\n  ) };\r\n\r\nexport type GetCustomerQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n  orderListOptions?: Maybe<OrderListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetCustomerQuery = { customer?: Maybe<(\r\n    { __typename?: 'Customer' }\r\n    & { groups: Array<(\r\n      { __typename?: 'CustomerGroup' }\r\n      & Pick<CustomerGroup, 'id' | 'name'>\r\n    )>, orders: (\r\n      { __typename?: 'OrderList' }\r\n      & Pick<OrderList, 'totalItems'>\r\n      & { items: Array<(\r\n        { __typename?: 'Order' }\r\n        & Pick<Order, 'id' | 'code' | 'state' | 'totalWithTax' | 'currencyCode' | 'updatedAt'>\r\n      )> }\r\n    ) }\r\n    & CustomerFragment\r\n  )> };\r\n\r\nexport type CreateCustomerMutationVariables = Exact<{\r\n  input: CreateCustomerInput;\r\n  password?: Maybe<Scalars['String']>;\r\n}>;\r\n\r\n\r\nexport type CreateCustomerMutation = { createCustomer: (\r\n    { __typename?: 'Customer' }\r\n    & CustomerFragment\r\n  ) | (\r\n    { __typename?: 'EmailAddressConflictError' }\r\n    & ErrorResult_EmailAddressConflictError_Fragment\r\n  ) };\r\n\r\nexport type UpdateCustomerMutationVariables = Exact<{\r\n  input: UpdateCustomerInput;\r\n}>;\r\n\r\n\r\nexport type UpdateCustomerMutation = { updateCustomer: (\r\n    { __typename?: 'Customer' }\r\n    & CustomerFragment\r\n  ) | (\r\n    { __typename?: 'EmailAddressConflictError' }\r\n    & ErrorResult_EmailAddressConflictError_Fragment\r\n  ) };\r\n\r\nexport type DeleteCustomerMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteCustomerMutation = { deleteCustomer: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type CreateCustomerAddressMutationVariables = Exact<{\r\n  customerId: Scalars['ID'];\r\n  input: CreateAddressInput;\r\n}>;\r\n\r\n\r\nexport type CreateCustomerAddressMutation = { createCustomerAddress: (\r\n    { __typename?: 'Address' }\r\n    & AddressFragment\r\n  ) };\r\n\r\nexport type UpdateCustomerAddressMutationVariables = Exact<{\r\n  input: UpdateAddressInput;\r\n}>;\r\n\r\n\r\nexport type UpdateCustomerAddressMutation = { updateCustomerAddress: (\r\n    { __typename?: 'Address' }\r\n    & AddressFragment\r\n  ) };\r\n\r\nexport type DeleteCustomerAddressMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteCustomerAddressMutation = { deleteCustomerAddress: (\r\n    { __typename?: 'Success' }\r\n    & Pick<Success, 'success'>\r\n  ) };\r\n\r\nexport type CreateCustomerGroupMutationVariables = Exact<{\r\n  input: CreateCustomerGroupInput;\r\n}>;\r\n\r\n\r\nexport type CreateCustomerGroupMutation = { createCustomerGroup: (\r\n    { __typename?: 'CustomerGroup' }\r\n    & CustomerGroupFragment\r\n  ) };\r\n\r\nexport type UpdateCustomerGroupMutationVariables = Exact<{\r\n  input: UpdateCustomerGroupInput;\r\n}>;\r\n\r\n\r\nexport type UpdateCustomerGroupMutation = { updateCustomerGroup: (\r\n    { __typename?: 'CustomerGroup' }\r\n    & CustomerGroupFragment\r\n  ) };\r\n\r\nexport type DeleteCustomerGroupMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteCustomerGroupMutation = { deleteCustomerGroup: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type GetCustomerGroupsQueryVariables = Exact<{\r\n  options?: Maybe<CustomerGroupListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetCustomerGroupsQuery = { customerGroups: (\r\n    { __typename?: 'CustomerGroupList' }\r\n    & Pick<CustomerGroupList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'CustomerGroup' }\r\n      & CustomerGroupFragment\r\n    )> }\r\n  ) };\r\n\r\nexport type GetCustomerGroupWithCustomersQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n  options?: Maybe<CustomerListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetCustomerGroupWithCustomersQuery = { customerGroup?: Maybe<(\r\n    { __typename?: 'CustomerGroup' }\r\n    & { customers: (\r\n      { __typename?: 'CustomerList' }\r\n      & Pick<CustomerList, 'totalItems'>\r\n      & { items: Array<(\r\n        { __typename?: 'Customer' }\r\n        & Pick<Customer, 'id' | 'createdAt' | 'updatedAt' | 'emailAddress' | 'firstName' | 'lastName'>\r\n      )> }\r\n    ) }\r\n    & CustomerGroupFragment\r\n  )> };\r\n\r\nexport type AddCustomersToGroupMutationVariables = Exact<{\r\n  groupId: Scalars['ID'];\r\n  customerIds: Array<Scalars['ID']> | Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type AddCustomersToGroupMutation = { addCustomersToGroup: (\r\n    { __typename?: 'CustomerGroup' }\r\n    & CustomerGroupFragment\r\n  ) };\r\n\r\nexport type RemoveCustomersFromGroupMutationVariables = Exact<{\r\n  groupId: Scalars['ID'];\r\n  customerIds: Array<Scalars['ID']> | Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type RemoveCustomersFromGroupMutation = { removeCustomersFromGroup: (\r\n    { __typename?: 'CustomerGroup' }\r\n    & CustomerGroupFragment\r\n  ) };\r\n\r\nexport type GetCustomerHistoryQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n  options?: Maybe<HistoryEntryListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetCustomerHistoryQuery = { customer?: Maybe<(\r\n    { __typename?: 'Customer' }\r\n    & Pick<Customer, 'id'>\r\n    & { history: (\r\n      { __typename?: 'HistoryEntryList' }\r\n      & Pick<HistoryEntryList, 'totalItems'>\r\n      & { items: Array<(\r\n        { __typename?: 'HistoryEntry' }\r\n        & Pick<HistoryEntry, 'id' | 'type' | 'createdAt' | 'isPublic' | 'data'>\r\n        & { administrator?: Maybe<(\r\n          { __typename?: 'Administrator' }\r\n          & Pick<Administrator, 'id' | 'firstName' | 'lastName'>\r\n        )> }\r\n      )> }\r\n    ) }\r\n  )> };\r\n\r\nexport type AddNoteToCustomerMutationVariables = Exact<{\r\n  input: AddNoteToCustomerInput;\r\n}>;\r\n\r\n\r\nexport type AddNoteToCustomerMutation = { addNoteToCustomer: (\r\n    { __typename?: 'Customer' }\r\n    & Pick<Customer, 'id'>\r\n  ) };\r\n\r\nexport type UpdateCustomerNoteMutationVariables = Exact<{\r\n  input: UpdateCustomerNoteInput;\r\n}>;\r\n\r\n\r\nexport type UpdateCustomerNoteMutation = { updateCustomerNote: (\r\n    { __typename?: 'HistoryEntry' }\r\n    & Pick<HistoryEntry, 'id' | 'data' | 'isPublic'>\r\n  ) };\r\n\r\nexport type DeleteCustomerNoteMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteCustomerNoteMutation = { deleteCustomerNote: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type FacetValueFragment = (\r\n  { __typename?: 'FacetValue' }\r\n  & Pick<FacetValue, 'id' | 'createdAt' | 'updatedAt' | 'languageCode' | 'code' | 'name'>\r\n  & { translations: Array<(\r\n    { __typename?: 'FacetValueTranslation' }\r\n    & Pick<FacetValueTranslation, 'id' | 'languageCode' | 'name'>\r\n  )>, facet: (\r\n    { __typename?: 'Facet' }\r\n    & Pick<Facet, 'id' | 'createdAt' | 'updatedAt' | 'name'>\r\n  ) }\r\n);\r\n\r\nexport type FacetWithValuesFragment = (\r\n  { __typename?: 'Facet' }\r\n  & Pick<Facet, 'id' | 'createdAt' | 'updatedAt' | 'languageCode' | 'isPrivate' | 'code' | 'name'>\r\n  & { translations: Array<(\r\n    { __typename?: 'FacetTranslation' }\r\n    & Pick<FacetTranslation, 'id' | 'languageCode' | 'name'>\r\n  )>, values: Array<(\r\n    { __typename?: 'FacetValue' }\r\n    & FacetValueFragment\r\n  )> }\r\n);\r\n\r\nexport type CreateFacetMutationVariables = Exact<{\r\n  input: CreateFacetInput;\r\n}>;\r\n\r\n\r\nexport type CreateFacetMutation = { createFacet: (\r\n    { __typename?: 'Facet' }\r\n    & FacetWithValuesFragment\r\n  ) };\r\n\r\nexport type UpdateFacetMutationVariables = Exact<{\r\n  input: UpdateFacetInput;\r\n}>;\r\n\r\n\r\nexport type UpdateFacetMutation = { updateFacet: (\r\n    { __typename?: 'Facet' }\r\n    & FacetWithValuesFragment\r\n  ) };\r\n\r\nexport type DeleteFacetMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n  force?: Maybe<Scalars['Boolean']>;\r\n}>;\r\n\r\n\r\nexport type DeleteFacetMutation = { deleteFacet: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type CreateFacetValuesMutationVariables = Exact<{\r\n  input: Array<CreateFacetValueInput> | CreateFacetValueInput;\r\n}>;\r\n\r\n\r\nexport type CreateFacetValuesMutation = { createFacetValues: Array<(\r\n    { __typename?: 'FacetValue' }\r\n    & FacetValueFragment\r\n  )> };\r\n\r\nexport type UpdateFacetValuesMutationVariables = Exact<{\r\n  input: Array<UpdateFacetValueInput> | UpdateFacetValueInput;\r\n}>;\r\n\r\n\r\nexport type UpdateFacetValuesMutation = { updateFacetValues: Array<(\r\n    { __typename?: 'FacetValue' }\r\n    & FacetValueFragment\r\n  )> };\r\n\r\nexport type DeleteFacetValuesMutationVariables = Exact<{\r\n  ids: Array<Scalars['ID']> | Scalars['ID'];\r\n  force?: Maybe<Scalars['Boolean']>;\r\n}>;\r\n\r\n\r\nexport type DeleteFacetValuesMutation = { deleteFacetValues: Array<(\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  )> };\r\n\r\nexport type GetFacetListQueryVariables = Exact<{\r\n  options?: Maybe<FacetListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetFacetListQuery = { facets: (\r\n    { __typename?: 'FacetList' }\r\n    & Pick<FacetList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Facet' }\r\n      & FacetWithValuesFragment\r\n    )> }\r\n  ) };\r\n\r\nexport type GetFacetWithValuesQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetFacetWithValuesQuery = { facet?: Maybe<(\r\n    { __typename?: 'Facet' }\r\n    & FacetWithValuesFragment\r\n  )> };\r\n\r\nexport type DiscountFragment = (\r\n  { __typename?: 'Discount' }\r\n  & Pick<Discount, 'adjustmentSource' | 'amount' | 'amountWithTax' | 'description' | 'type'>\r\n);\r\n\r\nexport type RefundFragment = (\r\n  { __typename?: 'Refund' }\r\n  & Pick<Refund, 'id' | 'state' | 'items' | 'shipping' | 'adjustment' | 'transactionId' | 'paymentId'>\r\n);\r\n\r\nexport type OrderAddressFragment = (\r\n  { __typename?: 'OrderAddress' }\r\n  & Pick<OrderAddress, 'fullName' | 'company' | 'streetLine1' | 'streetLine2' | 'city' | 'province' | 'postalCode' | 'country' | 'countryCode' | 'phoneNumber'>\r\n);\r\n\r\nexport type OrderFragment = (\r\n  { __typename?: 'Order' }\r\n  & Pick<Order, 'id' | 'createdAt' | 'updatedAt' | 'orderPlacedAt' | 'code' | 'state' | 'nextStates' | 'total' | 'currencyCode'>\r\n  & { customer?: Maybe<(\r\n    { __typename?: 'Customer' }\r\n    & Pick<Customer, 'id' | 'firstName' | 'lastName'>\r\n  )>, shippingLines: Array<(\r\n    { __typename?: 'ShippingLine' }\r\n    & { shippingMethod: (\r\n      { __typename?: 'ShippingMethod' }\r\n      & Pick<ShippingMethod, 'name'>\r\n    ) }\r\n  )> }\r\n);\r\n\r\nexport type FulfillmentFragment = (\r\n  { __typename?: 'Fulfillment' }\r\n  & Pick<Fulfillment, 'id' | 'state' | 'nextStates' | 'createdAt' | 'updatedAt' | 'method' | 'trackingCode'>\r\n  & { orderItems: Array<(\r\n    { __typename?: 'OrderItem' }\r\n    & Pick<OrderItem, 'id'>\r\n  )> }\r\n);\r\n\r\nexport type OrderLineFragment = (\r\n  { __typename?: 'OrderLine' }\r\n  & Pick<OrderLine, 'id' | 'unitPrice' | 'unitPriceWithTax' | 'proratedUnitPrice' | 'proratedUnitPriceWithTax' | 'quantity' | 'linePrice' | 'lineTax' | 'linePriceWithTax' | 'discountedLinePrice' | 'discountedLinePriceWithTax'>\r\n  & { featuredAsset?: Maybe<(\r\n    { __typename?: 'Asset' }\r\n    & Pick<Asset, 'preview'>\r\n  )>, productVariant: (\r\n    { __typename?: 'ProductVariant' }\r\n    & Pick<ProductVariant, 'id' | 'name' | 'sku' | 'trackInventory' | 'stockOnHand'>\r\n  ), discounts: Array<(\r\n    { __typename?: 'Discount' }\r\n    & DiscountFragment\r\n  )>, items: Array<(\r\n    { __typename?: 'OrderItem' }\r\n    & Pick<OrderItem, 'id' | 'unitPrice' | 'unitPriceWithTax' | 'taxRate' | 'refundId' | 'cancelled'>\r\n    & { fulfillment?: Maybe<(\r\n      { __typename?: 'Fulfillment' }\r\n      & FulfillmentFragment\r\n    )> }\r\n  )> }\r\n);\r\n\r\nexport type OrderDetailFragment = (\r\n  { __typename?: 'Order' }\r\n  & Pick<Order, 'id' | 'createdAt' | 'updatedAt' | 'code' | 'state' | 'nextStates' | 'active' | 'couponCodes' | 'subTotal' | 'subTotalWithTax' | 'total' | 'totalWithTax' | 'currencyCode' | 'shipping' | 'shippingWithTax'>\r\n  & { customer?: Maybe<(\r\n    { __typename?: 'Customer' }\r\n    & Pick<Customer, 'id' | 'firstName' | 'lastName'>\r\n  )>, lines: Array<(\r\n    { __typename?: 'OrderLine' }\r\n    & OrderLineFragment\r\n  )>, surcharges: Array<(\r\n    { __typename?: 'Surcharge' }\r\n    & Pick<Surcharge, 'id' | 'sku' | 'description' | 'price' | 'priceWithTax' | 'taxRate'>\r\n  )>, discounts: Array<(\r\n    { __typename?: 'Discount' }\r\n    & DiscountFragment\r\n  )>, promotions: Array<(\r\n    { __typename?: 'Promotion' }\r\n    & Pick<Promotion, 'id' | 'couponCode'>\r\n  )>, shippingLines: Array<(\r\n    { __typename?: 'ShippingLine' }\r\n    & { shippingMethod: (\r\n      { __typename?: 'ShippingMethod' }\r\n      & Pick<ShippingMethod, 'id' | 'code' | 'name' | 'fulfillmentHandlerCode' | 'description'>\r\n    ) }\r\n  )>, taxSummary: Array<(\r\n    { __typename?: 'OrderTaxSummary' }\r\n    & Pick<OrderTaxSummary, 'description' | 'taxBase' | 'taxRate' | 'taxTotal'>\r\n  )>, shippingAddress?: Maybe<(\r\n    { __typename?: 'OrderAddress' }\r\n    & OrderAddressFragment\r\n  )>, billingAddress?: Maybe<(\r\n    { __typename?: 'OrderAddress' }\r\n    & OrderAddressFragment\r\n  )>, payments?: Maybe<Array<(\r\n    { __typename?: 'Payment' }\r\n    & Pick<Payment, 'id' | 'createdAt' | 'transactionId' | 'amount' | 'method' | 'state' | 'nextStates' | 'errorMessage' | 'metadata'>\r\n    & { refunds: Array<(\r\n      { __typename?: 'Refund' }\r\n      & Pick<Refund, 'id' | 'createdAt' | 'state' | 'items' | 'adjustment' | 'total' | 'paymentId' | 'reason' | 'transactionId' | 'method' | 'metadata'>\r\n      & { orderItems: Array<(\r\n        { __typename?: 'OrderItem' }\r\n        & Pick<OrderItem, 'id'>\r\n      )> }\r\n    )> }\r\n  )>>, fulfillments?: Maybe<Array<(\r\n    { __typename?: 'Fulfillment' }\r\n    & FulfillmentFragment\r\n  )>>, modifications: Array<(\r\n    { __typename?: 'OrderModification' }\r\n    & Pick<OrderModification, 'id' | 'createdAt' | 'isSettled' | 'priceChange' | 'note'>\r\n    & { payment?: Maybe<(\r\n      { __typename?: 'Payment' }\r\n      & Pick<Payment, 'id' | 'amount'>\r\n    )>, orderItems?: Maybe<Array<(\r\n      { __typename?: 'OrderItem' }\r\n      & Pick<OrderItem, 'id'>\r\n    )>>, refund?: Maybe<(\r\n      { __typename?: 'Refund' }\r\n      & Pick<Refund, 'id' | 'paymentId' | 'total'>\r\n    )>, surcharges?: Maybe<Array<(\r\n      { __typename?: 'Surcharge' }\r\n      & Pick<Surcharge, 'id'>\r\n    )>> }\r\n  )> }\r\n);\r\n\r\nexport type GetOrderListQueryVariables = Exact<{\r\n  options?: Maybe<OrderListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetOrderListQuery = { orders: (\r\n    { __typename?: 'OrderList' }\r\n    & Pick<OrderList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Order' }\r\n      & OrderFragment\r\n    )> }\r\n  ) };\r\n\r\nexport type GetOrderQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetOrderQuery = { order?: Maybe<(\r\n    { __typename?: 'Order' }\r\n    & OrderDetailFragment\r\n  )> };\r\n\r\nexport type SettlePaymentMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type SettlePaymentMutation = { settlePayment: (\r\n    { __typename?: 'Payment' }\r\n    & Pick<Payment, 'id' | 'transactionId' | 'amount' | 'method' | 'state' | 'metadata'>\r\n  ) | (\r\n    { __typename?: 'SettlePaymentError' }\r\n    & Pick<SettlePaymentError, 'paymentErrorMessage'>\r\n    & ErrorResult_SettlePaymentError_Fragment\r\n  ) | (\r\n    { __typename?: 'PaymentStateTransitionError' }\r\n    & Pick<PaymentStateTransitionError, 'transitionError'>\r\n    & ErrorResult_PaymentStateTransitionError_Fragment\r\n  ) | (\r\n    { __typename?: 'OrderStateTransitionError' }\r\n    & Pick<OrderStateTransitionError, 'transitionError'>\r\n    & ErrorResult_OrderStateTransitionError_Fragment\r\n  ) };\r\n\r\nexport type TransitionPaymentToStateMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n  state: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type TransitionPaymentToStateMutation = { transitionPaymentToState: (\r\n    { __typename?: 'Payment' }\r\n    & Pick<Payment, 'id' | 'transactionId' | 'amount' | 'method' | 'state' | 'metadata'>\r\n  ) | (\r\n    { __typename?: 'PaymentStateTransitionError' }\r\n    & Pick<PaymentStateTransitionError, 'transitionError'>\r\n    & ErrorResult_PaymentStateTransitionError_Fragment\r\n  ) };\r\n\r\nexport type CreateFulfillmentMutationVariables = Exact<{\r\n  input: FulfillOrderInput;\r\n}>;\r\n\r\n\r\nexport type CreateFulfillmentMutation = { addFulfillmentToOrder: (\r\n    { __typename?: 'Fulfillment' }\r\n    & FulfillmentFragment\r\n  ) | (\r\n    { __typename?: 'EmptyOrderLineSelectionError' }\r\n    & ErrorResult_EmptyOrderLineSelectionError_Fragment\r\n  ) | (\r\n    { __typename?: 'ItemsAlreadyFulfilledError' }\r\n    & ErrorResult_ItemsAlreadyFulfilledError_Fragment\r\n  ) | (\r\n    { __typename?: 'InsufficientStockOnHandError' }\r\n    & ErrorResult_InsufficientStockOnHandError_Fragment\r\n  ) | (\r\n    { __typename?: 'InvalidFulfillmentHandlerError' }\r\n    & ErrorResult_InvalidFulfillmentHandlerError_Fragment\r\n  ) | (\r\n    { __typename?: 'FulfillmentStateTransitionError' }\r\n    & Pick<FulfillmentStateTransitionError, 'errorCode' | 'message' | 'transitionError'>\r\n    & ErrorResult_FulfillmentStateTransitionError_Fragment\r\n  ) | (\r\n    { __typename?: 'CreateFulfillmentError' }\r\n    & Pick<CreateFulfillmentError, 'errorCode' | 'message' | 'fulfillmentHandlerError'>\r\n    & ErrorResult_CreateFulfillmentError_Fragment\r\n  ) };\r\n\r\nexport type CancelOrderMutationVariables = Exact<{\r\n  input: CancelOrderInput;\r\n}>;\r\n\r\n\r\nexport type CancelOrderMutation = { cancelOrder: (\r\n    { __typename?: 'Order' }\r\n    & OrderDetailFragment\r\n  ) | (\r\n    { __typename?: 'EmptyOrderLineSelectionError' }\r\n    & ErrorResult_EmptyOrderLineSelectionError_Fragment\r\n  ) | (\r\n    { __typename?: 'QuantityTooGreatError' }\r\n    & ErrorResult_QuantityTooGreatError_Fragment\r\n  ) | (\r\n    { __typename?: 'MultipleOrderError' }\r\n    & ErrorResult_MultipleOrderError_Fragment\r\n  ) | (\r\n    { __typename?: 'CancelActiveOrderError' }\r\n    & ErrorResult_CancelActiveOrderError_Fragment\r\n  ) | (\r\n    { __typename?: 'OrderStateTransitionError' }\r\n    & ErrorResult_OrderStateTransitionError_Fragment\r\n  ) };\r\n\r\nexport type RefundOrderMutationVariables = Exact<{\r\n  input: RefundOrderInput;\r\n}>;\r\n\r\n\r\nexport type RefundOrderMutation = { refundOrder: (\r\n    { __typename?: 'Refund' }\r\n    & RefundFragment\r\n  ) | (\r\n    { __typename?: 'QuantityTooGreatError' }\r\n    & ErrorResult_QuantityTooGreatError_Fragment\r\n  ) | (\r\n    { __typename?: 'NothingToRefundError' }\r\n    & ErrorResult_NothingToRefundError_Fragment\r\n  ) | (\r\n    { __typename?: 'OrderStateTransitionError' }\r\n    & ErrorResult_OrderStateTransitionError_Fragment\r\n  ) | (\r\n    { __typename?: 'MultipleOrderError' }\r\n    & ErrorResult_MultipleOrderError_Fragment\r\n  ) | (\r\n    { __typename?: 'PaymentOrderMismatchError' }\r\n    & ErrorResult_PaymentOrderMismatchError_Fragment\r\n  ) | (\r\n    { __typename?: 'RefundOrderStateError' }\r\n    & ErrorResult_RefundOrderStateError_Fragment\r\n  ) | (\r\n    { __typename?: 'AlreadyRefundedError' }\r\n    & ErrorResult_AlreadyRefundedError_Fragment\r\n  ) | (\r\n    { __typename?: 'RefundStateTransitionError' }\r\n    & ErrorResult_RefundStateTransitionError_Fragment\r\n  ) };\r\n\r\nexport type SettleRefundMutationVariables = Exact<{\r\n  input: SettleRefundInput;\r\n}>;\r\n\r\n\r\nexport type SettleRefundMutation = { settleRefund: (\r\n    { __typename?: 'Refund' }\r\n    & RefundFragment\r\n  ) | (\r\n    { __typename?: 'RefundStateTransitionError' }\r\n    & ErrorResult_RefundStateTransitionError_Fragment\r\n  ) };\r\n\r\nexport type GetOrderHistoryQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n  options?: Maybe<HistoryEntryListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetOrderHistoryQuery = { order?: Maybe<(\r\n    { __typename?: 'Order' }\r\n    & Pick<Order, 'id'>\r\n    & { history: (\r\n      { __typename?: 'HistoryEntryList' }\r\n      & Pick<HistoryEntryList, 'totalItems'>\r\n      & { items: Array<(\r\n        { __typename?: 'HistoryEntry' }\r\n        & Pick<HistoryEntry, 'id' | 'type' | 'createdAt' | 'isPublic' | 'data'>\r\n        & { administrator?: Maybe<(\r\n          { __typename?: 'Administrator' }\r\n          & Pick<Administrator, 'id' | 'firstName' | 'lastName'>\r\n        )> }\r\n      )> }\r\n    ) }\r\n  )> };\r\n\r\nexport type AddNoteToOrderMutationVariables = Exact<{\r\n  input: AddNoteToOrderInput;\r\n}>;\r\n\r\n\r\nexport type AddNoteToOrderMutation = { addNoteToOrder: (\r\n    { __typename?: 'Order' }\r\n    & Pick<Order, 'id'>\r\n  ) };\r\n\r\nexport type UpdateOrderNoteMutationVariables = Exact<{\r\n  input: UpdateOrderNoteInput;\r\n}>;\r\n\r\n\r\nexport type UpdateOrderNoteMutation = { updateOrderNote: (\r\n    { __typename?: 'HistoryEntry' }\r\n    & Pick<HistoryEntry, 'id' | 'data' | 'isPublic'>\r\n  ) };\r\n\r\nexport type DeleteOrderNoteMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteOrderNoteMutation = { deleteOrderNote: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type TransitionOrderToStateMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n  state: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type TransitionOrderToStateMutation = { transitionOrderToState?: Maybe<(\r\n    { __typename?: 'Order' }\r\n    & OrderFragment\r\n  ) | (\r\n    { __typename?: 'OrderStateTransitionError' }\r\n    & Pick<OrderStateTransitionError, 'transitionError'>\r\n    & ErrorResult_OrderStateTransitionError_Fragment\r\n  )> };\r\n\r\nexport type UpdateOrderCustomFieldsMutationVariables = Exact<{\r\n  input: UpdateOrderInput;\r\n}>;\r\n\r\n\r\nexport type UpdateOrderCustomFieldsMutation = { setOrderCustomFields?: Maybe<(\r\n    { __typename?: 'Order' }\r\n    & OrderFragment\r\n  )> };\r\n\r\nexport type TransitionFulfillmentToStateMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n  state: Scalars['String'];\r\n}>;\r\n\r\n\r\nexport type TransitionFulfillmentToStateMutation = { transitionFulfillmentToState: (\r\n    { __typename?: 'Fulfillment' }\r\n    & FulfillmentFragment\r\n  ) | (\r\n    { __typename?: 'FulfillmentStateTransitionError' }\r\n    & Pick<FulfillmentStateTransitionError, 'transitionError'>\r\n    & ErrorResult_FulfillmentStateTransitionError_Fragment\r\n  ) };\r\n\r\nexport type GetOrderSummaryQueryVariables = Exact<{\r\n  start: Scalars['DateTime'];\r\n  end: Scalars['DateTime'];\r\n}>;\r\n\r\n\r\nexport type GetOrderSummaryQuery = { orders: (\r\n    { __typename?: 'OrderList' }\r\n    & Pick<OrderList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Order' }\r\n      & Pick<Order, 'id' | 'total' | 'currencyCode'>\r\n    )> }\r\n  ) };\r\n\r\nexport type ModifyOrderMutationVariables = Exact<{\r\n  input: ModifyOrderInput;\r\n}>;\r\n\r\n\r\nexport type ModifyOrderMutation = { modifyOrder: (\r\n    { __typename?: 'Order' }\r\n    & OrderDetailFragment\r\n  ) | (\r\n    { __typename?: 'NoChangesSpecifiedError' }\r\n    & ErrorResult_NoChangesSpecifiedError_Fragment\r\n  ) | (\r\n    { __typename?: 'OrderModificationStateError' }\r\n    & ErrorResult_OrderModificationStateError_Fragment\r\n  ) | (\r\n    { __typename?: 'PaymentMethodMissingError' }\r\n    & ErrorResult_PaymentMethodMissingError_Fragment\r\n  ) | (\r\n    { __typename?: 'RefundPaymentIdMissingError' }\r\n    & ErrorResult_RefundPaymentIdMissingError_Fragment\r\n  ) | (\r\n    { __typename?: 'OrderLimitError' }\r\n    & ErrorResult_OrderLimitError_Fragment\r\n  ) | (\r\n    { __typename?: 'NegativeQuantityError' }\r\n    & ErrorResult_NegativeQuantityError_Fragment\r\n  ) | (\r\n    { __typename?: 'InsufficientStockError' }\r\n    & ErrorResult_InsufficientStockError_Fragment\r\n  ) | (\r\n    { __typename?: 'CouponCodeExpiredError' }\r\n    & ErrorResult_CouponCodeExpiredError_Fragment\r\n  ) | (\r\n    { __typename?: 'CouponCodeInvalidError' }\r\n    & ErrorResult_CouponCodeInvalidError_Fragment\r\n  ) | (\r\n    { __typename?: 'CouponCodeLimitError' }\r\n    & ErrorResult_CouponCodeLimitError_Fragment\r\n  ) };\r\n\r\nexport type AddManualPaymentMutationVariables = Exact<{\r\n  input: ManualPaymentInput;\r\n}>;\r\n\r\n\r\nexport type AddManualPaymentMutation = { addManualPaymentToOrder: (\r\n    { __typename?: 'Order' }\r\n    & OrderDetailFragment\r\n  ) | (\r\n    { __typename?: 'ManualPaymentStateError' }\r\n    & ErrorResult_ManualPaymentStateError_Fragment\r\n  ) };\r\n\r\nexport type AssetFragment = (\r\n  { __typename?: 'Asset' }\r\n  & Pick<Asset, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'fileSize' | 'mimeType' | 'type' | 'preview' | 'source' | 'width' | 'height'>\r\n  & { focalPoint?: Maybe<(\r\n    { __typename?: 'Coordinate' }\r\n    & Pick<Coordinate, 'x' | 'y'>\r\n  )> }\r\n);\r\n\r\nexport type TagFragment = (\r\n  { __typename?: 'Tag' }\r\n  & Pick<Tag, 'id' | 'value'>\r\n);\r\n\r\nexport type ProductOptionGroupFragment = (\r\n  { __typename?: 'ProductOptionGroup' }\r\n  & Pick<ProductOptionGroup, 'id' | 'createdAt' | 'updatedAt' | 'code' | 'languageCode' | 'name'>\r\n  & { translations: Array<(\r\n    { __typename?: 'ProductOptionGroupTranslation' }\r\n    & Pick<ProductOptionGroupTranslation, 'id' | 'languageCode' | 'name'>\r\n  )> }\r\n);\r\n\r\nexport type ProductOptionFragment = (\r\n  { __typename?: 'ProductOption' }\r\n  & Pick<ProductOption, 'id' | 'createdAt' | 'updatedAt' | 'code' | 'languageCode' | 'name' | 'groupId'>\r\n  & { translations: Array<(\r\n    { __typename?: 'ProductOptionTranslation' }\r\n    & Pick<ProductOptionTranslation, 'id' | 'languageCode' | 'name'>\r\n  )> }\r\n);\r\n\r\nexport type ProductVariantFragment = (\r\n  { __typename?: 'ProductVariant' }\r\n  & Pick<ProductVariant, 'id' | 'createdAt' | 'updatedAt' | 'enabled' | 'languageCode' | 'name' | 'price' | 'currencyCode' | 'priceWithTax' | 'stockOnHand' | 'stockAllocated' | 'trackInventory' | 'outOfStockThreshold' | 'useGlobalOutOfStockThreshold' | 'sku'>\r\n  & { taxRateApplied: (\r\n    { __typename?: 'TaxRate' }\r\n    & Pick<TaxRate, 'id' | 'name' | 'value'>\r\n  ), taxCategory: (\r\n    { __typename?: 'TaxCategory' }\r\n    & Pick<TaxCategory, 'id' | 'name'>\r\n  ), options: Array<(\r\n    { __typename?: 'ProductOption' }\r\n    & ProductOptionFragment\r\n  )>, facetValues: Array<(\r\n    { __typename?: 'FacetValue' }\r\n    & Pick<FacetValue, 'id' | 'code' | 'name'>\r\n    & { facet: (\r\n      { __typename?: 'Facet' }\r\n      & Pick<Facet, 'id' | 'name'>\r\n    ) }\r\n  )>, featuredAsset?: Maybe<(\r\n    { __typename?: 'Asset' }\r\n    & AssetFragment\r\n  )>, assets: Array<(\r\n    { __typename?: 'Asset' }\r\n    & AssetFragment\r\n  )>, translations: Array<(\r\n    { __typename?: 'ProductVariantTranslation' }\r\n    & Pick<ProductVariantTranslation, 'id' | 'languageCode' | 'name'>\r\n  )>, channels: Array<(\r\n    { __typename?: 'Channel' }\r\n    & Pick<Channel, 'id' | 'code'>\r\n  )> }\r\n);\r\n\r\nexport type ProductDetailFragment = (\r\n  { __typename?: 'Product' }\r\n  & Pick<Product, 'id' | 'createdAt' | 'updatedAt' | 'enabled' | 'languageCode' | 'name' | 'slug' | 'description'>\r\n  & { featuredAsset?: Maybe<(\r\n    { __typename?: 'Asset' }\r\n    & AssetFragment\r\n  )>, assets: Array<(\r\n    { __typename?: 'Asset' }\r\n    & AssetFragment\r\n  )>, translations: Array<(\r\n    { __typename?: 'ProductTranslation' }\r\n    & Pick<ProductTranslation, 'id' | 'languageCode' | 'name' | 'slug' | 'description'>\r\n  )>, optionGroups: Array<(\r\n    { __typename?: 'ProductOptionGroup' }\r\n    & ProductOptionGroupFragment\r\n  )>, facetValues: Array<(\r\n    { __typename?: 'FacetValue' }\r\n    & Pick<FacetValue, 'id' | 'code' | 'name'>\r\n    & { facet: (\r\n      { __typename?: 'Facet' }\r\n      & Pick<Facet, 'id' | 'name'>\r\n    ) }\r\n  )>, channels: Array<(\r\n    { __typename?: 'Channel' }\r\n    & Pick<Channel, 'id' | 'code'>\r\n  )> }\r\n);\r\n\r\nexport type ProductOptionGroupWithOptionsFragment = (\r\n  { __typename?: 'ProductOptionGroup' }\r\n  & Pick<ProductOptionGroup, 'id' | 'createdAt' | 'updatedAt' | 'languageCode' | 'code' | 'name'>\r\n  & { translations: Array<(\r\n    { __typename?: 'ProductOptionGroupTranslation' }\r\n    & Pick<ProductOptionGroupTranslation, 'id' | 'name'>\r\n  )>, options: Array<(\r\n    { __typename?: 'ProductOption' }\r\n    & Pick<ProductOption, 'id' | 'languageCode' | 'name' | 'code'>\r\n    & { translations: Array<(\r\n      { __typename?: 'ProductOptionTranslation' }\r\n      & Pick<ProductOptionTranslation, 'name'>\r\n    )> }\r\n  )> }\r\n);\r\n\r\nexport type UpdateProductMutationVariables = Exact<{\r\n  input: UpdateProductInput;\r\n  variantListOptions?: Maybe<ProductVariantListOptions>;\r\n}>;\r\n\r\n\r\nexport type UpdateProductMutation = { updateProduct: (\r\n    { __typename?: 'Product' }\r\n    & { variantList: (\r\n      { __typename?: 'ProductVariantList' }\r\n      & Pick<ProductVariantList, 'totalItems'>\r\n      & { items: Array<(\r\n        { __typename?: 'ProductVariant' }\r\n        & ProductVariantFragment\r\n      )> }\r\n    ) }\r\n    & ProductDetailFragment\r\n  ) };\r\n\r\nexport type CreateProductMutationVariables = Exact<{\r\n  input: CreateProductInput;\r\n  variantListOptions?: Maybe<ProductVariantListOptions>;\r\n}>;\r\n\r\n\r\nexport type CreateProductMutation = { createProduct: (\r\n    { __typename?: 'Product' }\r\n    & { variantList: (\r\n      { __typename?: 'ProductVariantList' }\r\n      & Pick<ProductVariantList, 'totalItems'>\r\n      & { items: Array<(\r\n        { __typename?: 'ProductVariant' }\r\n        & ProductVariantFragment\r\n      )> }\r\n    ) }\r\n    & ProductDetailFragment\r\n  ) };\r\n\r\nexport type DeleteProductMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteProductMutation = { deleteProduct: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type CreateProductVariantsMutationVariables = Exact<{\r\n  input: Array<CreateProductVariantInput> | CreateProductVariantInput;\r\n}>;\r\n\r\n\r\nexport type CreateProductVariantsMutation = { createProductVariants: Array<Maybe<(\r\n    { __typename?: 'ProductVariant' }\r\n    & ProductVariantFragment\r\n  )>> };\r\n\r\nexport type UpdateProductVariantsMutationVariables = Exact<{\r\n  input: Array<UpdateProductVariantInput> | UpdateProductVariantInput;\r\n}>;\r\n\r\n\r\nexport type UpdateProductVariantsMutation = { updateProductVariants: Array<Maybe<(\r\n    { __typename?: 'ProductVariant' }\r\n    & ProductVariantFragment\r\n  )>> };\r\n\r\nexport type CreateProductOptionGroupMutationVariables = Exact<{\r\n  input: CreateProductOptionGroupInput;\r\n}>;\r\n\r\n\r\nexport type CreateProductOptionGroupMutation = { createProductOptionGroup: (\r\n    { __typename?: 'ProductOptionGroup' }\r\n    & ProductOptionGroupWithOptionsFragment\r\n  ) };\r\n\r\nexport type GetProductOptionGroupQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetProductOptionGroupQuery = { productOptionGroup?: Maybe<(\r\n    { __typename?: 'ProductOptionGroup' }\r\n    & ProductOptionGroupWithOptionsFragment\r\n  )> };\r\n\r\nexport type AddOptionToGroupMutationVariables = Exact<{\r\n  input: CreateProductOptionInput;\r\n}>;\r\n\r\n\r\nexport type AddOptionToGroupMutation = { createProductOption: (\r\n    { __typename?: 'ProductOption' }\r\n    & Pick<ProductOption, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'code' | 'groupId'>\r\n  ) };\r\n\r\nexport type AddOptionGroupToProductMutationVariables = Exact<{\r\n  productId: Scalars['ID'];\r\n  optionGroupId: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type AddOptionGroupToProductMutation = { addOptionGroupToProduct: (\r\n    { __typename?: 'Product' }\r\n    & Pick<Product, 'id' | 'createdAt' | 'updatedAt'>\r\n    & { optionGroups: Array<(\r\n      { __typename?: 'ProductOptionGroup' }\r\n      & Pick<ProductOptionGroup, 'id' | 'createdAt' | 'updatedAt' | 'code'>\r\n      & { options: Array<(\r\n        { __typename?: 'ProductOption' }\r\n        & Pick<ProductOption, 'id' | 'createdAt' | 'updatedAt' | 'code'>\r\n      )> }\r\n    )> }\r\n  ) };\r\n\r\nexport type RemoveOptionGroupFromProductMutationVariables = Exact<{\r\n  productId: Scalars['ID'];\r\n  optionGroupId: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type RemoveOptionGroupFromProductMutation = { removeOptionGroupFromProduct: (\r\n    { __typename?: 'Product' }\r\n    & Pick<Product, 'id' | 'createdAt' | 'updatedAt'>\r\n    & { optionGroups: Array<(\r\n      { __typename?: 'ProductOptionGroup' }\r\n      & Pick<ProductOptionGroup, 'id' | 'createdAt' | 'updatedAt' | 'code'>\r\n      & { options: Array<(\r\n        { __typename?: 'ProductOption' }\r\n        & Pick<ProductOption, 'id' | 'createdAt' | 'updatedAt' | 'code'>\r\n      )> }\r\n    )> }\r\n  ) | (\r\n    { __typename?: 'ProductOptionInUseError' }\r\n    & ErrorResult_ProductOptionInUseError_Fragment\r\n  ) };\r\n\r\nexport type GetProductWithVariantsQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n  variantListOptions?: Maybe<ProductVariantListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetProductWithVariantsQuery = { product?: Maybe<(\r\n    { __typename?: 'Product' }\r\n    & { variantList: (\r\n      { __typename?: 'ProductVariantList' }\r\n      & Pick<ProductVariantList, 'totalItems'>\r\n      & { items: Array<(\r\n        { __typename?: 'ProductVariant' }\r\n        & ProductVariantFragment\r\n      )> }\r\n    ) }\r\n    & ProductDetailFragment\r\n  )> };\r\n\r\nexport type GetProductSimpleQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetProductSimpleQuery = { product?: Maybe<(\r\n    { __typename?: 'Product' }\r\n    & Pick<Product, 'id' | 'name'>\r\n    & { featuredAsset?: Maybe<(\r\n      { __typename?: 'Asset' }\r\n      & AssetFragment\r\n    )> }\r\n  )> };\r\n\r\nexport type GetProductListQueryVariables = Exact<{\r\n  options?: Maybe<ProductListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetProductListQuery = { products: (\r\n    { __typename?: 'ProductList' }\r\n    & Pick<ProductList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Product' }\r\n      & Pick<Product, 'id' | 'createdAt' | 'updatedAt' | 'enabled' | 'languageCode' | 'name' | 'slug'>\r\n      & { featuredAsset?: Maybe<(\r\n        { __typename?: 'Asset' }\r\n        & Pick<Asset, 'id' | 'createdAt' | 'updatedAt' | 'preview'>\r\n      )> }\r\n    )> }\r\n  ) };\r\n\r\nexport type GetProductOptionGroupsQueryVariables = Exact<{\r\n  filterTerm?: Maybe<Scalars['String']>;\r\n}>;\r\n\r\n\r\nexport type GetProductOptionGroupsQuery = { productOptionGroups: Array<(\r\n    { __typename?: 'ProductOptionGroup' }\r\n    & Pick<ProductOptionGroup, 'id' | 'createdAt' | 'updatedAt' | 'languageCode' | 'code' | 'name'>\r\n    & { options: Array<(\r\n      { __typename?: 'ProductOption' }\r\n      & Pick<ProductOption, 'id' | 'createdAt' | 'updatedAt' | 'languageCode' | 'code' | 'name'>\r\n    )> }\r\n  )> };\r\n\r\nexport type GetAssetListQueryVariables = Exact<{\r\n  options?: Maybe<AssetListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetAssetListQuery = { assets: (\r\n    { __typename?: 'AssetList' }\r\n    & Pick<AssetList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Asset' }\r\n      & { tags: Array<(\r\n        { __typename?: 'Tag' }\r\n        & TagFragment\r\n      )> }\r\n      & AssetFragment\r\n    )> }\r\n  ) };\r\n\r\nexport type GetAssetQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetAssetQuery = { asset?: Maybe<(\r\n    { __typename?: 'Asset' }\r\n    & { tags: Array<(\r\n      { __typename?: 'Tag' }\r\n      & TagFragment\r\n    )> }\r\n    & AssetFragment\r\n  )> };\r\n\r\nexport type CreateAssetsMutationVariables = Exact<{\r\n  input: Array<CreateAssetInput> | CreateAssetInput;\r\n}>;\r\n\r\n\r\nexport type CreateAssetsMutation = { createAssets: Array<(\r\n    { __typename?: 'Asset' }\r\n    & { tags: Array<(\r\n      { __typename?: 'Tag' }\r\n      & TagFragment\r\n    )> }\r\n    & AssetFragment\r\n  ) | (\r\n    { __typename?: 'MimeTypeError' }\r\n    & Pick<MimeTypeError, 'message'>\r\n  )> };\r\n\r\nexport type UpdateAssetMutationVariables = Exact<{\r\n  input: UpdateAssetInput;\r\n}>;\r\n\r\n\r\nexport type UpdateAssetMutation = { updateAsset: (\r\n    { __typename?: 'Asset' }\r\n    & { tags: Array<(\r\n      { __typename?: 'Tag' }\r\n      & TagFragment\r\n    )> }\r\n    & AssetFragment\r\n  ) };\r\n\r\nexport type DeleteAssetsMutationVariables = Exact<{\r\n  input: DeleteAssetsInput;\r\n}>;\r\n\r\n\r\nexport type DeleteAssetsMutation = { deleteAssets: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type SearchProductsQueryVariables = Exact<{\r\n  input: SearchInput;\r\n}>;\r\n\r\n\r\nexport type SearchProductsQuery = { search: (\r\n    { __typename?: 'SearchResponse' }\r\n    & Pick<SearchResponse, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'SearchResult' }\r\n      & Pick<SearchResult, 'enabled' | 'productId' | 'productName' | 'productVariantId' | 'productVariantName' | 'sku' | 'channelIds'>\r\n      & { productAsset?: Maybe<(\r\n        { __typename?: 'SearchResultAsset' }\r\n        & Pick<SearchResultAsset, 'id' | 'preview'>\r\n        & { focalPoint?: Maybe<(\r\n          { __typename?: 'Coordinate' }\r\n          & Pick<Coordinate, 'x' | 'y'>\r\n        )> }\r\n      )>, productVariantAsset?: Maybe<(\r\n        { __typename?: 'SearchResultAsset' }\r\n        & Pick<SearchResultAsset, 'id' | 'preview'>\r\n        & { focalPoint?: Maybe<(\r\n          { __typename?: 'Coordinate' }\r\n          & Pick<Coordinate, 'x' | 'y'>\r\n        )> }\r\n      )> }\r\n    )>, facetValues: Array<(\r\n      { __typename?: 'FacetValueResult' }\r\n      & Pick<FacetValueResult, 'count'>\r\n      & { facetValue: (\r\n        { __typename?: 'FacetValue' }\r\n        & Pick<FacetValue, 'id' | 'createdAt' | 'updatedAt' | 'name'>\r\n        & { facet: (\r\n          { __typename?: 'Facet' }\r\n          & Pick<Facet, 'id' | 'createdAt' | 'updatedAt' | 'name'>\r\n        ) }\r\n      ) }\r\n    )> }\r\n  ) };\r\n\r\nexport type ProductSelectorSearchQueryVariables = Exact<{\r\n  term: Scalars['String'];\r\n  take: Scalars['Int'];\r\n}>;\r\n\r\n\r\nexport type ProductSelectorSearchQuery = { search: (\r\n    { __typename?: 'SearchResponse' }\r\n    & { items: Array<(\r\n      { __typename?: 'SearchResult' }\r\n      & Pick<SearchResult, 'productVariantId' | 'productVariantName' | 'sku'>\r\n      & { productAsset?: Maybe<(\r\n        { __typename?: 'SearchResultAsset' }\r\n        & Pick<SearchResultAsset, 'id' | 'preview'>\r\n        & { focalPoint?: Maybe<(\r\n          { __typename?: 'Coordinate' }\r\n          & Pick<Coordinate, 'x' | 'y'>\r\n        )> }\r\n      )>, price: { __typename?: 'PriceRange' } | (\r\n        { __typename?: 'SinglePrice' }\r\n        & Pick<SinglePrice, 'value'>\r\n      ), priceWithTax: { __typename?: 'PriceRange' } | (\r\n        { __typename?: 'SinglePrice' }\r\n        & Pick<SinglePrice, 'value'>\r\n      ) }\r\n    )> }\r\n  ) };\r\n\r\nexport type UpdateProductOptionGroupMutationVariables = Exact<{\r\n  input: UpdateProductOptionGroupInput;\r\n}>;\r\n\r\n\r\nexport type UpdateProductOptionGroupMutation = { updateProductOptionGroup: (\r\n    { __typename?: 'ProductOptionGroup' }\r\n    & ProductOptionGroupFragment\r\n  ) };\r\n\r\nexport type UpdateProductOptionMutationVariables = Exact<{\r\n  input: UpdateProductOptionInput;\r\n}>;\r\n\r\n\r\nexport type UpdateProductOptionMutation = { updateProductOption: (\r\n    { __typename?: 'ProductOption' }\r\n    & ProductOptionFragment\r\n  ) };\r\n\r\nexport type DeleteProductVariantMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteProductVariantMutation = { deleteProductVariant: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type GetProductVariantOptionsQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetProductVariantOptionsQuery = { product?: Maybe<(\r\n    { __typename?: 'Product' }\r\n    & Pick<Product, 'id' | 'createdAt' | 'updatedAt' | 'name'>\r\n    & { optionGroups: Array<(\r\n      { __typename?: 'ProductOptionGroup' }\r\n      & { options: Array<(\r\n        { __typename?: 'ProductOption' }\r\n        & ProductOptionFragment\r\n      )> }\r\n      & ProductOptionGroupFragment\r\n    )>, variants: Array<(\r\n      { __typename?: 'ProductVariant' }\r\n      & Pick<ProductVariant, 'id' | 'createdAt' | 'updatedAt' | 'enabled' | 'name' | 'sku' | 'price' | 'stockOnHand'>\r\n      & { options: Array<(\r\n        { __typename?: 'ProductOption' }\r\n        & Pick<ProductOption, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'code' | 'groupId'>\r\n      )> }\r\n    )> }\r\n  )> };\r\n\r\nexport type AssignProductsToChannelMutationVariables = Exact<{\r\n  input: AssignProductsToChannelInput;\r\n}>;\r\n\r\n\r\nexport type AssignProductsToChannelMutation = { assignProductsToChannel: Array<(\r\n    { __typename?: 'Product' }\r\n    & Pick<Product, 'id'>\r\n    & { channels: Array<(\r\n      { __typename?: 'Channel' }\r\n      & Pick<Channel, 'id' | 'code'>\r\n    )> }\r\n  )> };\r\n\r\nexport type AssignVariantsToChannelMutationVariables = Exact<{\r\n  input: AssignProductVariantsToChannelInput;\r\n}>;\r\n\r\n\r\nexport type AssignVariantsToChannelMutation = { assignProductVariantsToChannel: Array<(\r\n    { __typename?: 'ProductVariant' }\r\n    & Pick<ProductVariant, 'id'>\r\n    & { channels: Array<(\r\n      { __typename?: 'Channel' }\r\n      & Pick<Channel, 'id' | 'code'>\r\n    )> }\r\n  )> };\r\n\r\nexport type RemoveProductsFromChannelMutationVariables = Exact<{\r\n  input: RemoveProductsFromChannelInput;\r\n}>;\r\n\r\n\r\nexport type RemoveProductsFromChannelMutation = { removeProductsFromChannel: Array<(\r\n    { __typename?: 'Product' }\r\n    & Pick<Product, 'id'>\r\n    & { channels: Array<(\r\n      { __typename?: 'Channel' }\r\n      & Pick<Channel, 'id' | 'code'>\r\n    )> }\r\n  )> };\r\n\r\nexport type RemoveVariantsFromChannelMutationVariables = Exact<{\r\n  input: RemoveProductVariantsFromChannelInput;\r\n}>;\r\n\r\n\r\nexport type RemoveVariantsFromChannelMutation = { removeProductVariantsFromChannel: Array<(\r\n    { __typename?: 'ProductVariant' }\r\n    & Pick<ProductVariant, 'id'>\r\n    & { channels: Array<(\r\n      { __typename?: 'Channel' }\r\n      & Pick<Channel, 'id' | 'code'>\r\n    )> }\r\n  )> };\r\n\r\nexport type GetProductVariantQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetProductVariantQuery = { productVariant?: Maybe<(\r\n    { __typename?: 'ProductVariant' }\r\n    & Pick<ProductVariant, 'id' | 'name' | 'sku'>\r\n    & { featuredAsset?: Maybe<(\r\n      { __typename?: 'Asset' }\r\n      & Pick<Asset, 'id' | 'preview'>\r\n      & { focalPoint?: Maybe<(\r\n        { __typename?: 'Coordinate' }\r\n        & Pick<Coordinate, 'x' | 'y'>\r\n      )> }\r\n    )>, product: (\r\n      { __typename?: 'Product' }\r\n      & Pick<Product, 'id'>\r\n      & { featuredAsset?: Maybe<(\r\n        { __typename?: 'Asset' }\r\n        & Pick<Asset, 'id' | 'preview'>\r\n        & { focalPoint?: Maybe<(\r\n          { __typename?: 'Coordinate' }\r\n          & Pick<Coordinate, 'x' | 'y'>\r\n        )> }\r\n      )> }\r\n    ) }\r\n  )> };\r\n\r\nexport type GetProductVariantListSimpleQueryVariables = Exact<{\r\n  options: ProductVariantListOptions;\r\n  productId?: Maybe<Scalars['ID']>;\r\n}>;\r\n\r\n\r\nexport type GetProductVariantListSimpleQuery = { productVariants: (\r\n    { __typename?: 'ProductVariantList' }\r\n    & Pick<ProductVariantList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'ProductVariant' }\r\n      & Pick<ProductVariant, 'id' | 'name' | 'sku'>\r\n      & { featuredAsset?: Maybe<(\r\n        { __typename?: 'Asset' }\r\n        & Pick<Asset, 'id' | 'preview'>\r\n        & { focalPoint?: Maybe<(\r\n          { __typename?: 'Coordinate' }\r\n          & Pick<Coordinate, 'x' | 'y'>\r\n        )> }\r\n      )>, product: (\r\n        { __typename?: 'Product' }\r\n        & Pick<Product, 'id'>\r\n        & { featuredAsset?: Maybe<(\r\n          { __typename?: 'Asset' }\r\n          & Pick<Asset, 'id' | 'preview'>\r\n          & { focalPoint?: Maybe<(\r\n            { __typename?: 'Coordinate' }\r\n            & Pick<Coordinate, 'x' | 'y'>\r\n          )> }\r\n        )> }\r\n      ) }\r\n    )> }\r\n  ) };\r\n\r\nexport type GetProductVariantListQueryVariables = Exact<{\r\n  options: ProductVariantListOptions;\r\n  productId?: Maybe<Scalars['ID']>;\r\n}>;\r\n\r\n\r\nexport type GetProductVariantListQuery = { productVariants: (\r\n    { __typename?: 'ProductVariantList' }\r\n    & Pick<ProductVariantList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'ProductVariant' }\r\n      & ProductVariantFragment\r\n    )> }\r\n  ) };\r\n\r\nexport type GetTagListQueryVariables = Exact<{\r\n  options?: Maybe<TagListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetTagListQuery = { tags: (\r\n    { __typename?: 'TagList' }\r\n    & Pick<TagList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Tag' }\r\n      & TagFragment\r\n    )> }\r\n  ) };\r\n\r\nexport type GetTagQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetTagQuery = { tag: (\r\n    { __typename?: 'Tag' }\r\n    & TagFragment\r\n  ) };\r\n\r\nexport type CreateTagMutationVariables = Exact<{\r\n  input: CreateTagInput;\r\n}>;\r\n\r\n\r\nexport type CreateTagMutation = { createTag: (\r\n    { __typename?: 'Tag' }\r\n    & TagFragment\r\n  ) };\r\n\r\nexport type UpdateTagMutationVariables = Exact<{\r\n  input: UpdateTagInput;\r\n}>;\r\n\r\n\r\nexport type UpdateTagMutation = { updateTag: (\r\n    { __typename?: 'Tag' }\r\n    & TagFragment\r\n  ) };\r\n\r\nexport type DeleteTagMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteTagMutation = { deleteTag: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'message' | 'result'>\r\n  ) };\r\n\r\nexport type PromotionFragment = (\r\n  { __typename?: 'Promotion' }\r\n  & Pick<Promotion, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'enabled' | 'couponCode' | 'perCustomerUsageLimit' | 'startsAt' | 'endsAt'>\r\n  & { conditions: Array<(\r\n    { __typename?: 'ConfigurableOperation' }\r\n    & ConfigurableOperationFragment\r\n  )>, actions: Array<(\r\n    { __typename?: 'ConfigurableOperation' }\r\n    & ConfigurableOperationFragment\r\n  )> }\r\n);\r\n\r\nexport type GetPromotionListQueryVariables = Exact<{\r\n  options?: Maybe<PromotionListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetPromotionListQuery = { promotions: (\r\n    { __typename?: 'PromotionList' }\r\n    & Pick<PromotionList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Promotion' }\r\n      & PromotionFragment\r\n    )> }\r\n  ) };\r\n\r\nexport type GetPromotionQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetPromotionQuery = { promotion?: Maybe<(\r\n    { __typename?: 'Promotion' }\r\n    & PromotionFragment\r\n  )> };\r\n\r\nexport type GetAdjustmentOperationsQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetAdjustmentOperationsQuery = { promotionConditions: Array<(\r\n    { __typename?: 'ConfigurableOperationDefinition' }\r\n    & ConfigurableOperationDefFragment\r\n  )>, promotionActions: Array<(\r\n    { __typename?: 'ConfigurableOperationDefinition' }\r\n    & ConfigurableOperationDefFragment\r\n  )> };\r\n\r\nexport type CreatePromotionMutationVariables = Exact<{\r\n  input: CreatePromotionInput;\r\n}>;\r\n\r\n\r\nexport type CreatePromotionMutation = { createPromotion: (\r\n    { __typename?: 'Promotion' }\r\n    & PromotionFragment\r\n  ) | (\r\n    { __typename?: 'MissingConditionsError' }\r\n    & ErrorResult_MissingConditionsError_Fragment\r\n  ) };\r\n\r\nexport type UpdatePromotionMutationVariables = Exact<{\r\n  input: UpdatePromotionInput;\r\n}>;\r\n\r\n\r\nexport type UpdatePromotionMutation = { updatePromotion: (\r\n    { __typename?: 'Promotion' }\r\n    & PromotionFragment\r\n  ) | { __typename?: 'MissingConditionsError' } };\r\n\r\nexport type DeletePromotionMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeletePromotionMutation = { deletePromotion: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type CountryFragment = (\r\n  { __typename?: 'Country' }\r\n  & Pick<Country, 'id' | 'createdAt' | 'updatedAt' | 'code' | 'name' | 'enabled'>\r\n  & { translations: Array<(\r\n    { __typename?: 'CountryTranslation' }\r\n    & Pick<CountryTranslation, 'id' | 'languageCode' | 'name'>\r\n  )> }\r\n);\r\n\r\nexport type GetCountryListQueryVariables = Exact<{\r\n  options?: Maybe<CountryListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetCountryListQuery = { countries: (\r\n    { __typename?: 'CountryList' }\r\n    & Pick<CountryList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Country' }\r\n      & Pick<Country, 'id' | 'code' | 'name' | 'enabled'>\r\n    )> }\r\n  ) };\r\n\r\nexport type GetAvailableCountriesQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetAvailableCountriesQuery = { countries: (\r\n    { __typename?: 'CountryList' }\r\n    & { items: Array<(\r\n      { __typename?: 'Country' }\r\n      & Pick<Country, 'id' | 'code' | 'name' | 'enabled'>\r\n    )> }\r\n  ) };\r\n\r\nexport type GetCountryQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetCountryQuery = { country?: Maybe<(\r\n    { __typename?: 'Country' }\r\n    & CountryFragment\r\n  )> };\r\n\r\nexport type CreateCountryMutationVariables = Exact<{\r\n  input: CreateCountryInput;\r\n}>;\r\n\r\n\r\nexport type CreateCountryMutation = { createCountry: (\r\n    { __typename?: 'Country' }\r\n    & CountryFragment\r\n  ) };\r\n\r\nexport type UpdateCountryMutationVariables = Exact<{\r\n  input: UpdateCountryInput;\r\n}>;\r\n\r\n\r\nexport type UpdateCountryMutation = { updateCountry: (\r\n    { __typename?: 'Country' }\r\n    & CountryFragment\r\n  ) };\r\n\r\nexport type DeleteCountryMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteCountryMutation = { deleteCountry: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type ZoneFragment = (\r\n  { __typename?: 'Zone' }\r\n  & Pick<Zone, 'id' | 'createdAt' | 'updatedAt' | 'name'>\r\n  & { members: Array<(\r\n    { __typename?: 'Country' }\r\n    & CountryFragment\r\n  )> }\r\n);\r\n\r\nexport type GetZonesQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetZonesQuery = { zones: Array<(\r\n    { __typename?: 'Zone' }\r\n    & { members: Array<(\r\n      { __typename?: 'Country' }\r\n      & Pick<Country, 'createdAt' | 'updatedAt' | 'id' | 'name' | 'code' | 'enabled'>\r\n    )> }\r\n    & ZoneFragment\r\n  )> };\r\n\r\nexport type GetZoneQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetZoneQuery = { zone?: Maybe<(\r\n    { __typename?: 'Zone' }\r\n    & ZoneFragment\r\n  )> };\r\n\r\nexport type CreateZoneMutationVariables = Exact<{\r\n  input: CreateZoneInput;\r\n}>;\r\n\r\n\r\nexport type CreateZoneMutation = { createZone: (\r\n    { __typename?: 'Zone' }\r\n    & ZoneFragment\r\n  ) };\r\n\r\nexport type UpdateZoneMutationVariables = Exact<{\r\n  input: UpdateZoneInput;\r\n}>;\r\n\r\n\r\nexport type UpdateZoneMutation = { updateZone: (\r\n    { __typename?: 'Zone' }\r\n    & ZoneFragment\r\n  ) };\r\n\r\nexport type DeleteZoneMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteZoneMutation = { deleteZone: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'message' | 'result'>\r\n  ) };\r\n\r\nexport type AddMembersToZoneMutationVariables = Exact<{\r\n  zoneId: Scalars['ID'];\r\n  memberIds: Array<Scalars['ID']> | Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type AddMembersToZoneMutation = { addMembersToZone: (\r\n    { __typename?: 'Zone' }\r\n    & ZoneFragment\r\n  ) };\r\n\r\nexport type RemoveMembersFromZoneMutationVariables = Exact<{\r\n  zoneId: Scalars['ID'];\r\n  memberIds: Array<Scalars['ID']> | Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type RemoveMembersFromZoneMutation = { removeMembersFromZone: (\r\n    { __typename?: 'Zone' }\r\n    & ZoneFragment\r\n  ) };\r\n\r\nexport type TaxCategoryFragment = (\r\n  { __typename?: 'TaxCategory' }\r\n  & Pick<TaxCategory, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'isDefault'>\r\n);\r\n\r\nexport type GetTaxCategoriesQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetTaxCategoriesQuery = { taxCategories: Array<(\r\n    { __typename?: 'TaxCategory' }\r\n    & TaxCategoryFragment\r\n  )> };\r\n\r\nexport type GetTaxCategoryQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetTaxCategoryQuery = { taxCategory?: Maybe<(\r\n    { __typename?: 'TaxCategory' }\r\n    & TaxCategoryFragment\r\n  )> };\r\n\r\nexport type CreateTaxCategoryMutationVariables = Exact<{\r\n  input: CreateTaxCategoryInput;\r\n}>;\r\n\r\n\r\nexport type CreateTaxCategoryMutation = { createTaxCategory: (\r\n    { __typename?: 'TaxCategory' }\r\n    & TaxCategoryFragment\r\n  ) };\r\n\r\nexport type UpdateTaxCategoryMutationVariables = Exact<{\r\n  input: UpdateTaxCategoryInput;\r\n}>;\r\n\r\n\r\nexport type UpdateTaxCategoryMutation = { updateTaxCategory: (\r\n    { __typename?: 'TaxCategory' }\r\n    & TaxCategoryFragment\r\n  ) };\r\n\r\nexport type DeleteTaxCategoryMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteTaxCategoryMutation = { deleteTaxCategory: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type TaxRateFragment = (\r\n  { __typename?: 'TaxRate' }\r\n  & Pick<TaxRate, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'enabled' | 'value'>\r\n  & { category: (\r\n    { __typename?: 'TaxCategory' }\r\n    & Pick<TaxCategory, 'id' | 'name'>\r\n  ), zone: (\r\n    { __typename?: 'Zone' }\r\n    & Pick<Zone, 'id' | 'name'>\r\n  ), customerGroup?: Maybe<(\r\n    { __typename?: 'CustomerGroup' }\r\n    & Pick<CustomerGroup, 'id' | 'name'>\r\n  )> }\r\n);\r\n\r\nexport type GetTaxRateListQueryVariables = Exact<{\r\n  options?: Maybe<TaxRateListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetTaxRateListQuery = { taxRates: (\r\n    { __typename?: 'TaxRateList' }\r\n    & Pick<TaxRateList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'TaxRate' }\r\n      & TaxRateFragment\r\n    )> }\r\n  ) };\r\n\r\nexport type GetTaxRateListSimpleQueryVariables = Exact<{\r\n  options?: Maybe<TaxRateListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetTaxRateListSimpleQuery = { taxRates: (\r\n    { __typename?: 'TaxRateList' }\r\n    & Pick<TaxRateList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'TaxRate' }\r\n      & Pick<TaxRate, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'enabled' | 'value'>\r\n      & { category: (\r\n        { __typename?: 'TaxCategory' }\r\n        & Pick<TaxCategory, 'id' | 'name'>\r\n      ), zone: (\r\n        { __typename?: 'Zone' }\r\n        & Pick<Zone, 'id' | 'name'>\r\n      ) }\r\n    )> }\r\n  ) };\r\n\r\nexport type GetTaxRateQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetTaxRateQuery = { taxRate?: Maybe<(\r\n    { __typename?: 'TaxRate' }\r\n    & TaxRateFragment\r\n  )> };\r\n\r\nexport type CreateTaxRateMutationVariables = Exact<{\r\n  input: CreateTaxRateInput;\r\n}>;\r\n\r\n\r\nexport type CreateTaxRateMutation = { createTaxRate: (\r\n    { __typename?: 'TaxRate' }\r\n    & TaxRateFragment\r\n  ) };\r\n\r\nexport type UpdateTaxRateMutationVariables = Exact<{\r\n  input: UpdateTaxRateInput;\r\n}>;\r\n\r\n\r\nexport type UpdateTaxRateMutation = { updateTaxRate: (\r\n    { __typename?: 'TaxRate' }\r\n    & TaxRateFragment\r\n  ) };\r\n\r\nexport type DeleteTaxRateMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteTaxRateMutation = { deleteTaxRate: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type ChannelFragment = (\r\n  { __typename?: 'Channel' }\r\n  & Pick<Channel, 'id' | 'createdAt' | 'updatedAt' | 'code' | 'token' | 'pricesIncludeTax' | 'currencyCode' | 'defaultLanguageCode'>\r\n  & { defaultShippingZone?: Maybe<(\r\n    { __typename?: 'Zone' }\r\n    & Pick<Zone, 'id' | 'name'>\r\n  )>, defaultTaxZone?: Maybe<(\r\n    { __typename?: 'Zone' }\r\n    & Pick<Zone, 'id' | 'name'>\r\n  )> }\r\n);\r\n\r\nexport type GetChannelsQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetChannelsQuery = { channels: Array<(\r\n    { __typename?: 'Channel' }\r\n    & ChannelFragment\r\n  )> };\r\n\r\nexport type GetChannelQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetChannelQuery = { channel?: Maybe<(\r\n    { __typename?: 'Channel' }\r\n    & ChannelFragment\r\n  )> };\r\n\r\nexport type GetActiveChannelQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetActiveChannelQuery = { activeChannel: (\r\n    { __typename?: 'Channel' }\r\n    & ChannelFragment\r\n  ) };\r\n\r\nexport type CreateChannelMutationVariables = Exact<{\r\n  input: CreateChannelInput;\r\n}>;\r\n\r\n\r\nexport type CreateChannelMutation = { createChannel: (\r\n    { __typename?: 'Channel' }\r\n    & ChannelFragment\r\n  ) | (\r\n    { __typename?: 'LanguageNotAvailableError' }\r\n    & ErrorResult_LanguageNotAvailableError_Fragment\r\n  ) };\r\n\r\nexport type UpdateChannelMutationVariables = Exact<{\r\n  input: UpdateChannelInput;\r\n}>;\r\n\r\n\r\nexport type UpdateChannelMutation = { updateChannel: (\r\n    { __typename?: 'Channel' }\r\n    & ChannelFragment\r\n  ) | (\r\n    { __typename?: 'LanguageNotAvailableError' }\r\n    & ErrorResult_LanguageNotAvailableError_Fragment\r\n  ) };\r\n\r\nexport type DeleteChannelMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteChannelMutation = { deleteChannel: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type PaymentMethodFragment = (\r\n  { __typename?: 'PaymentMethod' }\r\n  & Pick<PaymentMethod, 'id' | 'createdAt' | 'updatedAt' | 'name' | 'code' | 'description' | 'enabled'>\r\n  & { checker?: Maybe<(\r\n    { __typename?: 'ConfigurableOperation' }\r\n    & ConfigurableOperationFragment\r\n  )>, handler: (\r\n    { __typename?: 'ConfigurableOperation' }\r\n    & ConfigurableOperationFragment\r\n  ) }\r\n);\r\n\r\nexport type GetPaymentMethodListQueryVariables = Exact<{\r\n  options: PaymentMethodListOptions;\r\n}>;\r\n\r\n\r\nexport type GetPaymentMethodListQuery = { paymentMethods: (\r\n    { __typename?: 'PaymentMethodList' }\r\n    & Pick<PaymentMethodList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'PaymentMethod' }\r\n      & PaymentMethodFragment\r\n    )> }\r\n  ) };\r\n\r\nexport type GetPaymentMethodOperationsQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetPaymentMethodOperationsQuery = { paymentMethodEligibilityCheckers: Array<(\r\n    { __typename?: 'ConfigurableOperationDefinition' }\r\n    & ConfigurableOperationDefFragment\r\n  )>, paymentMethodHandlers: Array<(\r\n    { __typename?: 'ConfigurableOperationDefinition' }\r\n    & ConfigurableOperationDefFragment\r\n  )> };\r\n\r\nexport type GetPaymentMethodQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetPaymentMethodQuery = { paymentMethod?: Maybe<(\r\n    { __typename?: 'PaymentMethod' }\r\n    & PaymentMethodFragment\r\n  )> };\r\n\r\nexport type CreatePaymentMethodMutationVariables = Exact<{\r\n  input: CreatePaymentMethodInput;\r\n}>;\r\n\r\n\r\nexport type CreatePaymentMethodMutation = { createPaymentMethod: (\r\n    { __typename?: 'PaymentMethod' }\r\n    & PaymentMethodFragment\r\n  ) };\r\n\r\nexport type UpdatePaymentMethodMutationVariables = Exact<{\r\n  input: UpdatePaymentMethodInput;\r\n}>;\r\n\r\n\r\nexport type UpdatePaymentMethodMutation = { updatePaymentMethod: (\r\n    { __typename?: 'PaymentMethod' }\r\n    & PaymentMethodFragment\r\n  ) };\r\n\r\nexport type DeletePaymentMethodMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n  force?: Maybe<Scalars['Boolean']>;\r\n}>;\r\n\r\n\r\nexport type DeletePaymentMethodMutation = { deletePaymentMethod: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type GlobalSettingsFragment = (\r\n  { __typename?: 'GlobalSettings' }\r\n  & Pick<GlobalSettings, 'id' | 'availableLanguages' | 'trackInventory' | 'outOfStockThreshold'>\r\n  & { serverConfig: (\r\n    { __typename?: 'ServerConfig' }\r\n    & { permissions: Array<(\r\n      { __typename?: 'PermissionDefinition' }\r\n      & Pick<PermissionDefinition, 'name' | 'description' | 'assignable'>\r\n    )>, orderProcess: Array<(\r\n      { __typename?: 'OrderProcessState' }\r\n      & Pick<OrderProcessState, 'name'>\r\n    )> }\r\n  ) }\r\n);\r\n\r\nexport type GetGlobalSettingsQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetGlobalSettingsQuery = { globalSettings: (\r\n    { __typename?: 'GlobalSettings' }\r\n    & GlobalSettingsFragment\r\n  ) };\r\n\r\nexport type UpdateGlobalSettingsMutationVariables = Exact<{\r\n  input: UpdateGlobalSettingsInput;\r\n}>;\r\n\r\n\r\nexport type UpdateGlobalSettingsMutation = { updateGlobalSettings: (\r\n    { __typename?: 'GlobalSettings' }\r\n    & GlobalSettingsFragment\r\n  ) | (\r\n    { __typename?: 'ChannelDefaultLanguageError' }\r\n    & ErrorResult_ChannelDefaultLanguageError_Fragment\r\n  ) };\r\n\r\ntype CustomFieldConfig_BooleanCustomFieldConfig_Fragment = (\r\n  { __typename?: 'BooleanCustomFieldConfig' }\r\n  & Pick<BooleanCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly' | 'nullable' | 'ui'>\r\n  & { description?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>>, label?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>> }\r\n);\r\n\r\ntype CustomFieldConfig_DateTimeCustomFieldConfig_Fragment = (\r\n  { __typename?: 'DateTimeCustomFieldConfig' }\r\n  & Pick<DateTimeCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly' | 'nullable' | 'ui'>\r\n  & { description?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>>, label?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>> }\r\n);\r\n\r\ntype CustomFieldConfig_FloatCustomFieldConfig_Fragment = (\r\n  { __typename?: 'FloatCustomFieldConfig' }\r\n  & Pick<FloatCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly' | 'nullable' | 'ui'>\r\n  & { description?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>>, label?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>> }\r\n);\r\n\r\ntype CustomFieldConfig_IntCustomFieldConfig_Fragment = (\r\n  { __typename?: 'IntCustomFieldConfig' }\r\n  & Pick<IntCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly' | 'nullable' | 'ui'>\r\n  & { description?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>>, label?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>> }\r\n);\r\n\r\ntype CustomFieldConfig_LocaleStringCustomFieldConfig_Fragment = (\r\n  { __typename?: 'LocaleStringCustomFieldConfig' }\r\n  & Pick<LocaleStringCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly' | 'nullable' | 'ui'>\r\n  & { description?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>>, label?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>> }\r\n);\r\n\r\ntype CustomFieldConfig_RelationCustomFieldConfig_Fragment = (\r\n  { __typename?: 'RelationCustomFieldConfig' }\r\n  & Pick<RelationCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly' | 'nullable' | 'ui'>\r\n  & { description?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>>, label?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>> }\r\n);\r\n\r\ntype CustomFieldConfig_StringCustomFieldConfig_Fragment = (\r\n  { __typename?: 'StringCustomFieldConfig' }\r\n  & Pick<StringCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly' | 'nullable' | 'ui'>\r\n  & { description?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>>, label?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>> }\r\n);\r\n\r\ntype CustomFieldConfig_TextCustomFieldConfig_Fragment = (\r\n  { __typename?: 'TextCustomFieldConfig' }\r\n  & Pick<TextCustomFieldConfig, 'name' | 'type' | 'list' | 'readonly' | 'nullable' | 'ui'>\r\n  & { description?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>>, label?: Maybe<Array<(\r\n    { __typename?: 'LocalizedString' }\r\n    & Pick<LocalizedString, 'languageCode' | 'value'>\r\n  )>> }\r\n);\r\n\r\nexport type CustomFieldConfigFragment = CustomFieldConfig_BooleanCustomFieldConfig_Fragment | CustomFieldConfig_DateTimeCustomFieldConfig_Fragment | CustomFieldConfig_FloatCustomFieldConfig_Fragment | CustomFieldConfig_IntCustomFieldConfig_Fragment | CustomFieldConfig_LocaleStringCustomFieldConfig_Fragment | CustomFieldConfig_RelationCustomFieldConfig_Fragment | CustomFieldConfig_StringCustomFieldConfig_Fragment | CustomFieldConfig_TextCustomFieldConfig_Fragment;\r\n\r\nexport type StringCustomFieldFragment = (\r\n  { __typename?: 'StringCustomFieldConfig' }\r\n  & Pick<StringCustomFieldConfig, 'pattern'>\r\n  & { options?: Maybe<Array<(\r\n    { __typename?: 'StringFieldOption' }\r\n    & Pick<StringFieldOption, 'value'>\r\n    & { label?: Maybe<Array<(\r\n      { __typename?: 'LocalizedString' }\r\n      & Pick<LocalizedString, 'languageCode' | 'value'>\r\n    )>> }\r\n  )>> }\r\n  & CustomFieldConfig_StringCustomFieldConfig_Fragment\r\n);\r\n\r\nexport type LocaleStringCustomFieldFragment = (\r\n  { __typename?: 'LocaleStringCustomFieldConfig' }\r\n  & Pick<LocaleStringCustomFieldConfig, 'pattern'>\r\n  & CustomFieldConfig_LocaleStringCustomFieldConfig_Fragment\r\n);\r\n\r\nexport type TextCustomFieldFragment = (\r\n  { __typename?: 'TextCustomFieldConfig' }\r\n  & CustomFieldConfig_TextCustomFieldConfig_Fragment\r\n);\r\n\r\nexport type BooleanCustomFieldFragment = (\r\n  { __typename?: 'BooleanCustomFieldConfig' }\r\n  & CustomFieldConfig_BooleanCustomFieldConfig_Fragment\r\n);\r\n\r\nexport type IntCustomFieldFragment = (\r\n  { __typename?: 'IntCustomFieldConfig' }\r\n  & { intMin: IntCustomFieldConfig['min'], intMax: IntCustomFieldConfig['max'], intStep: IntCustomFieldConfig['step'] }\r\n  & CustomFieldConfig_IntCustomFieldConfig_Fragment\r\n);\r\n\r\nexport type FloatCustomFieldFragment = (\r\n  { __typename?: 'FloatCustomFieldConfig' }\r\n  & { floatMin: FloatCustomFieldConfig['min'], floatMax: FloatCustomFieldConfig['max'], floatStep: FloatCustomFieldConfig['step'] }\r\n  & CustomFieldConfig_FloatCustomFieldConfig_Fragment\r\n);\r\n\r\nexport type DateTimeCustomFieldFragment = (\r\n  { __typename?: 'DateTimeCustomFieldConfig' }\r\n  & { datetimeMin: DateTimeCustomFieldConfig['min'], datetimeMax: DateTimeCustomFieldConfig['max'], datetimeStep: DateTimeCustomFieldConfig['step'] }\r\n  & CustomFieldConfig_DateTimeCustomFieldConfig_Fragment\r\n);\r\n\r\nexport type RelationCustomFieldFragment = (\r\n  { __typename?: 'RelationCustomFieldConfig' }\r\n  & Pick<RelationCustomFieldConfig, 'entity' | 'scalarFields'>\r\n  & CustomFieldConfig_RelationCustomFieldConfig_Fragment\r\n);\r\n\r\ntype CustomFields_BooleanCustomFieldConfig_Fragment = (\r\n  { __typename?: 'BooleanCustomFieldConfig' }\r\n  & BooleanCustomFieldFragment\r\n);\r\n\r\ntype CustomFields_DateTimeCustomFieldConfig_Fragment = (\r\n  { __typename?: 'DateTimeCustomFieldConfig' }\r\n  & DateTimeCustomFieldFragment\r\n);\r\n\r\ntype CustomFields_FloatCustomFieldConfig_Fragment = (\r\n  { __typename?: 'FloatCustomFieldConfig' }\r\n  & FloatCustomFieldFragment\r\n);\r\n\r\ntype CustomFields_IntCustomFieldConfig_Fragment = (\r\n  { __typename?: 'IntCustomFieldConfig' }\r\n  & IntCustomFieldFragment\r\n);\r\n\r\ntype CustomFields_LocaleStringCustomFieldConfig_Fragment = (\r\n  { __typename?: 'LocaleStringCustomFieldConfig' }\r\n  & LocaleStringCustomFieldFragment\r\n);\r\n\r\ntype CustomFields_RelationCustomFieldConfig_Fragment = (\r\n  { __typename?: 'RelationCustomFieldConfig' }\r\n  & RelationCustomFieldFragment\r\n);\r\n\r\ntype CustomFields_StringCustomFieldConfig_Fragment = (\r\n  { __typename?: 'StringCustomFieldConfig' }\r\n  & StringCustomFieldFragment\r\n);\r\n\r\ntype CustomFields_TextCustomFieldConfig_Fragment = (\r\n  { __typename?: 'TextCustomFieldConfig' }\r\n  & TextCustomFieldFragment\r\n);\r\n\r\nexport type CustomFieldsFragment = CustomFields_BooleanCustomFieldConfig_Fragment | CustomFields_DateTimeCustomFieldConfig_Fragment | CustomFields_FloatCustomFieldConfig_Fragment | CustomFields_IntCustomFieldConfig_Fragment | CustomFields_LocaleStringCustomFieldConfig_Fragment | CustomFields_RelationCustomFieldConfig_Fragment | CustomFields_StringCustomFieldConfig_Fragment | CustomFields_TextCustomFieldConfig_Fragment;\r\n\r\nexport type GetServerConfigQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetServerConfigQuery = { globalSettings: (\r\n    { __typename?: 'GlobalSettings' }\r\n    & Pick<GlobalSettings, 'id'>\r\n    & { serverConfig: (\r\n      { __typename?: 'ServerConfig' }\r\n      & Pick<ServerConfig, 'permittedAssetTypes'>\r\n      & { orderProcess: Array<(\r\n        { __typename?: 'OrderProcessState' }\r\n        & Pick<OrderProcessState, 'name' | 'to'>\r\n      )>, permissions: Array<(\r\n        { __typename?: 'PermissionDefinition' }\r\n        & Pick<PermissionDefinition, 'name' | 'description' | 'assignable'>\r\n      )>, customFieldConfig: (\r\n        { __typename?: 'CustomFields' }\r\n        & { Address: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, Administrator: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, Asset: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, Channel: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, Collection: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, Country: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, Customer: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, CustomerGroup: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, Facet: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, FacetValue: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, Fulfillment: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, GlobalSettings: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, Order: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, OrderLine: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, PaymentMethod: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, Product: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, ProductOption: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, ProductOptionGroup: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, ProductVariant: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, Promotion: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, ShippingMethod: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, TaxCategory: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, TaxRate: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, User: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )>, Zone: Array<(\r\n          { __typename?: 'StringCustomFieldConfig' }\r\n          & CustomFields_StringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'LocaleStringCustomFieldConfig' }\r\n          & CustomFields_LocaleStringCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'IntCustomFieldConfig' }\r\n          & CustomFields_IntCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'FloatCustomFieldConfig' }\r\n          & CustomFields_FloatCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'BooleanCustomFieldConfig' }\r\n          & CustomFields_BooleanCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'DateTimeCustomFieldConfig' }\r\n          & CustomFields_DateTimeCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'RelationCustomFieldConfig' }\r\n          & CustomFields_RelationCustomFieldConfig_Fragment\r\n        ) | (\r\n          { __typename?: 'TextCustomFieldConfig' }\r\n          & CustomFields_TextCustomFieldConfig_Fragment\r\n        )> }\r\n      ) }\r\n    ) }\r\n  ) };\r\n\r\nexport type JobInfoFragment = (\r\n  { __typename?: 'Job' }\r\n  & Pick<Job, 'id' | 'createdAt' | 'startedAt' | 'settledAt' | 'queueName' | 'state' | 'isSettled' | 'progress' | 'duration' | 'data' | 'result' | 'error' | 'retries' | 'attempts'>\r\n);\r\n\r\nexport type GetJobInfoQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetJobInfoQuery = { job?: Maybe<(\r\n    { __typename?: 'Job' }\r\n    & JobInfoFragment\r\n  )> };\r\n\r\nexport type GetAllJobsQueryVariables = Exact<{\r\n  options?: Maybe<JobListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetAllJobsQuery = { jobs: (\r\n    { __typename?: 'JobList' }\r\n    & Pick<JobList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'Job' }\r\n      & JobInfoFragment\r\n    )> }\r\n  ) };\r\n\r\nexport type GetJobsByIdQueryVariables = Exact<{\r\n  ids: Array<Scalars['ID']> | Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetJobsByIdQuery = { jobsById: Array<(\r\n    { __typename?: 'Job' }\r\n    & JobInfoFragment\r\n  )> };\r\n\r\nexport type GetJobQueueListQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetJobQueueListQuery = { jobQueues: Array<(\r\n    { __typename?: 'JobQueue' }\r\n    & Pick<JobQueue, 'name' | 'running'>\r\n  )> };\r\n\r\nexport type CancelJobMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type CancelJobMutation = { cancelJob: (\r\n    { __typename?: 'Job' }\r\n    & JobInfoFragment\r\n  ) };\r\n\r\nexport type ReindexMutationVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type ReindexMutation = { reindex: (\r\n    { __typename?: 'Job' }\r\n    & JobInfoFragment\r\n  ) };\r\n\r\nexport type GetPendingSearchIndexUpdatesQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetPendingSearchIndexUpdatesQuery = Pick<Query, 'pendingSearchIndexUpdates'>;\r\n\r\nexport type RunPendingSearchIndexUpdatesMutationVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type RunPendingSearchIndexUpdatesMutation = { runPendingSearchIndexUpdates: (\r\n    { __typename?: 'Success' }\r\n    & Pick<Success, 'success'>\r\n  ) };\r\n\r\nexport type ConfigurableOperationFragment = (\r\n  { __typename?: 'ConfigurableOperation' }\r\n  & Pick<ConfigurableOperation, 'code'>\r\n  & { args: Array<(\r\n    { __typename?: 'ConfigArg' }\r\n    & Pick<ConfigArg, 'name' | 'value'>\r\n  )> }\r\n);\r\n\r\nexport type ConfigurableOperationDefFragment = (\r\n  { __typename?: 'ConfigurableOperationDefinition' }\r\n  & Pick<ConfigurableOperationDefinition, 'code' | 'description'>\r\n  & { args: Array<(\r\n    { __typename?: 'ConfigArgDefinition' }\r\n    & Pick<ConfigArgDefinition, 'name' | 'type' | 'required' | 'defaultValue' | 'list' | 'ui' | 'label'>\r\n  )> }\r\n);\r\n\r\ntype ErrorResult_AlreadyRefundedError_Fragment = (\r\n  { __typename?: 'AlreadyRefundedError' }\r\n  & Pick<AlreadyRefundedError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_CancelActiveOrderError_Fragment = (\r\n  { __typename?: 'CancelActiveOrderError' }\r\n  & Pick<CancelActiveOrderError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_ChannelDefaultLanguageError_Fragment = (\r\n  { __typename?: 'ChannelDefaultLanguageError' }\r\n  & Pick<ChannelDefaultLanguageError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_CouponCodeExpiredError_Fragment = (\r\n  { __typename?: 'CouponCodeExpiredError' }\r\n  & Pick<CouponCodeExpiredError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_CouponCodeInvalidError_Fragment = (\r\n  { __typename?: 'CouponCodeInvalidError' }\r\n  & Pick<CouponCodeInvalidError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_CouponCodeLimitError_Fragment = (\r\n  { __typename?: 'CouponCodeLimitError' }\r\n  & Pick<CouponCodeLimitError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_CreateFulfillmentError_Fragment = (\r\n  { __typename?: 'CreateFulfillmentError' }\r\n  & Pick<CreateFulfillmentError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_EmailAddressConflictError_Fragment = (\r\n  { __typename?: 'EmailAddressConflictError' }\r\n  & Pick<EmailAddressConflictError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_EmptyOrderLineSelectionError_Fragment = (\r\n  { __typename?: 'EmptyOrderLineSelectionError' }\r\n  & Pick<EmptyOrderLineSelectionError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_FulfillmentStateTransitionError_Fragment = (\r\n  { __typename?: 'FulfillmentStateTransitionError' }\r\n  & Pick<FulfillmentStateTransitionError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_InsufficientStockError_Fragment = (\r\n  { __typename?: 'InsufficientStockError' }\r\n  & Pick<InsufficientStockError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_InsufficientStockOnHandError_Fragment = (\r\n  { __typename?: 'InsufficientStockOnHandError' }\r\n  & Pick<InsufficientStockOnHandError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_InvalidCredentialsError_Fragment = (\r\n  { __typename?: 'InvalidCredentialsError' }\r\n  & Pick<InvalidCredentialsError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_InvalidFulfillmentHandlerError_Fragment = (\r\n  { __typename?: 'InvalidFulfillmentHandlerError' }\r\n  & Pick<InvalidFulfillmentHandlerError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_ItemsAlreadyFulfilledError_Fragment = (\r\n  { __typename?: 'ItemsAlreadyFulfilledError' }\r\n  & Pick<ItemsAlreadyFulfilledError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_LanguageNotAvailableError_Fragment = (\r\n  { __typename?: 'LanguageNotAvailableError' }\r\n  & Pick<LanguageNotAvailableError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_ManualPaymentStateError_Fragment = (\r\n  { __typename?: 'ManualPaymentStateError' }\r\n  & Pick<ManualPaymentStateError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_MimeTypeError_Fragment = (\r\n  { __typename?: 'MimeTypeError' }\r\n  & Pick<MimeTypeError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_MissingConditionsError_Fragment = (\r\n  { __typename?: 'MissingConditionsError' }\r\n  & Pick<MissingConditionsError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_MultipleOrderError_Fragment = (\r\n  { __typename?: 'MultipleOrderError' }\r\n  & Pick<MultipleOrderError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_NativeAuthStrategyError_Fragment = (\r\n  { __typename?: 'NativeAuthStrategyError' }\r\n  & Pick<NativeAuthStrategyError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_NegativeQuantityError_Fragment = (\r\n  { __typename?: 'NegativeQuantityError' }\r\n  & Pick<NegativeQuantityError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_NoChangesSpecifiedError_Fragment = (\r\n  { __typename?: 'NoChangesSpecifiedError' }\r\n  & Pick<NoChangesSpecifiedError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_NothingToRefundError_Fragment = (\r\n  { __typename?: 'NothingToRefundError' }\r\n  & Pick<NothingToRefundError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_OrderLimitError_Fragment = (\r\n  { __typename?: 'OrderLimitError' }\r\n  & Pick<OrderLimitError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_OrderModificationStateError_Fragment = (\r\n  { __typename?: 'OrderModificationStateError' }\r\n  & Pick<OrderModificationStateError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_OrderStateTransitionError_Fragment = (\r\n  { __typename?: 'OrderStateTransitionError' }\r\n  & Pick<OrderStateTransitionError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_PaymentMethodMissingError_Fragment = (\r\n  { __typename?: 'PaymentMethodMissingError' }\r\n  & Pick<PaymentMethodMissingError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_PaymentOrderMismatchError_Fragment = (\r\n  { __typename?: 'PaymentOrderMismatchError' }\r\n  & Pick<PaymentOrderMismatchError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_PaymentStateTransitionError_Fragment = (\r\n  { __typename?: 'PaymentStateTransitionError' }\r\n  & Pick<PaymentStateTransitionError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_ProductOptionInUseError_Fragment = (\r\n  { __typename?: 'ProductOptionInUseError' }\r\n  & Pick<ProductOptionInUseError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_QuantityTooGreatError_Fragment = (\r\n  { __typename?: 'QuantityTooGreatError' }\r\n  & Pick<QuantityTooGreatError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_RefundOrderStateError_Fragment = (\r\n  { __typename?: 'RefundOrderStateError' }\r\n  & Pick<RefundOrderStateError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_RefundPaymentIdMissingError_Fragment = (\r\n  { __typename?: 'RefundPaymentIdMissingError' }\r\n  & Pick<RefundPaymentIdMissingError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_RefundStateTransitionError_Fragment = (\r\n  { __typename?: 'RefundStateTransitionError' }\r\n  & Pick<RefundStateTransitionError, 'errorCode' | 'message'>\r\n);\r\n\r\ntype ErrorResult_SettlePaymentError_Fragment = (\r\n  { __typename?: 'SettlePaymentError' }\r\n  & Pick<SettlePaymentError, 'errorCode' | 'message'>\r\n);\r\n\r\nexport type ErrorResultFragment = ErrorResult_AlreadyRefundedError_Fragment | ErrorResult_CancelActiveOrderError_Fragment | ErrorResult_ChannelDefaultLanguageError_Fragment | ErrorResult_CouponCodeExpiredError_Fragment | ErrorResult_CouponCodeInvalidError_Fragment | ErrorResult_CouponCodeLimitError_Fragment | ErrorResult_CreateFulfillmentError_Fragment | ErrorResult_EmailAddressConflictError_Fragment | ErrorResult_EmptyOrderLineSelectionError_Fragment | ErrorResult_FulfillmentStateTransitionError_Fragment | ErrorResult_InsufficientStockError_Fragment | ErrorResult_InsufficientStockOnHandError_Fragment | ErrorResult_InvalidCredentialsError_Fragment | ErrorResult_InvalidFulfillmentHandlerError_Fragment | ErrorResult_ItemsAlreadyFulfilledError_Fragment | ErrorResult_LanguageNotAvailableError_Fragment | ErrorResult_ManualPaymentStateError_Fragment | ErrorResult_MimeTypeError_Fragment | ErrorResult_MissingConditionsError_Fragment | ErrorResult_MultipleOrderError_Fragment | ErrorResult_NativeAuthStrategyError_Fragment | ErrorResult_NegativeQuantityError_Fragment | ErrorResult_NoChangesSpecifiedError_Fragment | ErrorResult_NothingToRefundError_Fragment | ErrorResult_OrderLimitError_Fragment | ErrorResult_OrderModificationStateError_Fragment | ErrorResult_OrderStateTransitionError_Fragment | ErrorResult_PaymentMethodMissingError_Fragment | ErrorResult_PaymentOrderMismatchError_Fragment | ErrorResult_PaymentStateTransitionError_Fragment | ErrorResult_ProductOptionInUseError_Fragment | ErrorResult_QuantityTooGreatError_Fragment | ErrorResult_RefundOrderStateError_Fragment | ErrorResult_RefundPaymentIdMissingError_Fragment | ErrorResult_RefundStateTransitionError_Fragment | ErrorResult_SettlePaymentError_Fragment;\r\n\r\nexport type ShippingMethodFragment = (\r\n  { __typename?: 'ShippingMethod' }\r\n  & Pick<ShippingMethod, 'id' | 'createdAt' | 'updatedAt' | 'code' | 'name' | 'description' | 'fulfillmentHandlerCode'>\r\n  & { checker: (\r\n    { __typename?: 'ConfigurableOperation' }\r\n    & ConfigurableOperationFragment\r\n  ), calculator: (\r\n    { __typename?: 'ConfigurableOperation' }\r\n    & ConfigurableOperationFragment\r\n  ), translations: Array<(\r\n    { __typename?: 'ShippingMethodTranslation' }\r\n    & Pick<ShippingMethodTranslation, 'id' | 'languageCode' | 'name' | 'description'>\r\n  )> }\r\n);\r\n\r\nexport type GetShippingMethodListQueryVariables = Exact<{\r\n  options?: Maybe<ShippingMethodListOptions>;\r\n}>;\r\n\r\n\r\nexport type GetShippingMethodListQuery = { shippingMethods: (\r\n    { __typename?: 'ShippingMethodList' }\r\n    & Pick<ShippingMethodList, 'totalItems'>\r\n    & { items: Array<(\r\n      { __typename?: 'ShippingMethod' }\r\n      & ShippingMethodFragment\r\n    )> }\r\n  ) };\r\n\r\nexport type GetShippingMethodQueryVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type GetShippingMethodQuery = { shippingMethod?: Maybe<(\r\n    { __typename?: 'ShippingMethod' }\r\n    & ShippingMethodFragment\r\n  )> };\r\n\r\nexport type GetShippingMethodOperationsQueryVariables = Exact<{ [key: string]: never; }>;\r\n\r\n\r\nexport type GetShippingMethodOperationsQuery = { shippingEligibilityCheckers: Array<(\r\n    { __typename?: 'ConfigurableOperationDefinition' }\r\n    & ConfigurableOperationDefFragment\r\n  )>, shippingCalculators: Array<(\r\n    { __typename?: 'ConfigurableOperationDefinition' }\r\n    & ConfigurableOperationDefFragment\r\n  )>, fulfillmentHandlers: Array<(\r\n    { __typename?: 'ConfigurableOperationDefinition' }\r\n    & ConfigurableOperationDefFragment\r\n  )> };\r\n\r\nexport type CreateShippingMethodMutationVariables = Exact<{\r\n  input: CreateShippingMethodInput;\r\n}>;\r\n\r\n\r\nexport type CreateShippingMethodMutation = { createShippingMethod: (\r\n    { __typename?: 'ShippingMethod' }\r\n    & ShippingMethodFragment\r\n  ) };\r\n\r\nexport type UpdateShippingMethodMutationVariables = Exact<{\r\n  input: UpdateShippingMethodInput;\r\n}>;\r\n\r\n\r\nexport type UpdateShippingMethodMutation = { updateShippingMethod: (\r\n    { __typename?: 'ShippingMethod' }\r\n    & ShippingMethodFragment\r\n  ) };\r\n\r\nexport type DeleteShippingMethodMutationVariables = Exact<{\r\n  id: Scalars['ID'];\r\n}>;\r\n\r\n\r\nexport type DeleteShippingMethodMutation = { deleteShippingMethod: (\r\n    { __typename?: 'DeletionResponse' }\r\n    & Pick<DeletionResponse, 'result' | 'message'>\r\n  ) };\r\n\r\nexport type TestShippingMethodQueryVariables = Exact<{\r\n  input: TestShippingMethodInput;\r\n}>;\r\n\r\n\r\nexport type TestShippingMethodQuery = { testShippingMethod: (\r\n    { __typename?: 'TestShippingMethodResult' }\r\n    & Pick<TestShippingMethodResult, 'eligible'>\r\n    & { quote?: Maybe<(\r\n      { __typename?: 'TestShippingMethodQuote' }\r\n      & Pick<TestShippingMethodQuote, 'price' | 'priceWithTax' | 'metadata'>\r\n    )> }\r\n  ) };\r\n\r\nexport type TestEligibleShippingMethodsQueryVariables = Exact<{\r\n  input: TestEligibleShippingMethodsInput;\r\n}>;\r\n\r\n\r\nexport type TestEligibleShippingMethodsQuery = { testEligibleShippingMethods: Array<(\r\n    { __typename?: 'ShippingMethodQuote' }\r\n    & Pick<ShippingMethodQuote, 'id' | 'name' | 'code' | 'description' | 'price' | 'priceWithTax' | 'metadata'>\r\n  )> };\r\n\r\ntype DiscriminateUnion<T, U> = T extends U ? T : never;\r\n\r\nexport namespace Role {\r\n  export type Fragment = RoleFragment;\r\n  export type Channels = NonNullable<(NonNullable<RoleFragment['channels']>)[number]>;\r\n}\r\n\r\nexport namespace Administrator {\r\n  export type Fragment = AdministratorFragment;\r\n  export type User = (NonNullable<AdministratorFragment['user']>);\r\n  export type Roles = NonNullable<(NonNullable<(NonNullable<AdministratorFragment['user']>)['roles']>)[number]>;\r\n}\r\n\r\nexport namespace GetAdministrators {\r\n  export type Variables = GetAdministratorsQueryVariables;\r\n  export type Query = GetAdministratorsQuery;\r\n  export type Administrators = (NonNullable<GetAdministratorsQuery['administrators']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetAdministratorsQuery['administrators']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetActiveAdministrator {\r\n  export type Variables = GetActiveAdministratorQueryVariables;\r\n  export type Query = GetActiveAdministratorQuery;\r\n  export type ActiveAdministrator = (NonNullable<GetActiveAdministratorQuery['activeAdministrator']>);\r\n}\r\n\r\nexport namespace GetAdministrator {\r\n  export type Variables = GetAdministratorQueryVariables;\r\n  export type Query = GetAdministratorQuery;\r\n  export type Administrator = (NonNullable<GetAdministratorQuery['administrator']>);\r\n}\r\n\r\nexport namespace CreateAdministrator {\r\n  export type Variables = CreateAdministratorMutationVariables;\r\n  export type Mutation = CreateAdministratorMutation;\r\n  export type CreateAdministrator = (NonNullable<CreateAdministratorMutation['createAdministrator']>);\r\n}\r\n\r\nexport namespace UpdateAdministrator {\r\n  export type Variables = UpdateAdministratorMutationVariables;\r\n  export type Mutation = UpdateAdministratorMutation;\r\n  export type UpdateAdministrator = (NonNullable<UpdateAdministratorMutation['updateAdministrator']>);\r\n}\r\n\r\nexport namespace UpdateActiveAdministrator {\r\n  export type Variables = UpdateActiveAdministratorMutationVariables;\r\n  export type Mutation = UpdateActiveAdministratorMutation;\r\n  export type UpdateActiveAdministrator = (NonNullable<UpdateActiveAdministratorMutation['updateActiveAdministrator']>);\r\n}\r\n\r\nexport namespace DeleteAdministrator {\r\n  export type Variables = DeleteAdministratorMutationVariables;\r\n  export type Mutation = DeleteAdministratorMutation;\r\n  export type DeleteAdministrator = (NonNullable<DeleteAdministratorMutation['deleteAdministrator']>);\r\n}\r\n\r\nexport namespace GetRoles {\r\n  export type Variables = GetRolesQueryVariables;\r\n  export type Query = GetRolesQuery;\r\n  export type Roles = (NonNullable<GetRolesQuery['roles']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetRolesQuery['roles']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetRole {\r\n  export type Variables = GetRoleQueryVariables;\r\n  export type Query = GetRoleQuery;\r\n  export type Role = (NonNullable<GetRoleQuery['role']>);\r\n}\r\n\r\nexport namespace CreateRole {\r\n  export type Variables = CreateRoleMutationVariables;\r\n  export type Mutation = CreateRoleMutation;\r\n  export type CreateRole = (NonNullable<CreateRoleMutation['createRole']>);\r\n}\r\n\r\nexport namespace UpdateRole {\r\n  export type Variables = UpdateRoleMutationVariables;\r\n  export type Mutation = UpdateRoleMutation;\r\n  export type UpdateRole = (NonNullable<UpdateRoleMutation['updateRole']>);\r\n}\r\n\r\nexport namespace DeleteRole {\r\n  export type Variables = DeleteRoleMutationVariables;\r\n  export type Mutation = DeleteRoleMutation;\r\n  export type DeleteRole = (NonNullable<DeleteRoleMutation['deleteRole']>);\r\n}\r\n\r\nexport namespace AssignRoleToAdministrator {\r\n  export type Variables = AssignRoleToAdministratorMutationVariables;\r\n  export type Mutation = AssignRoleToAdministratorMutation;\r\n  export type AssignRoleToAdministrator = (NonNullable<AssignRoleToAdministratorMutation['assignRoleToAdministrator']>);\r\n}\r\n\r\nexport namespace CurrentUser {\r\n  export type Fragment = CurrentUserFragment;\r\n  export type Channels = NonNullable<(NonNullable<CurrentUserFragment['channels']>)[number]>;\r\n}\r\n\r\nexport namespace AttemptLogin {\r\n  export type Variables = AttemptLoginMutationVariables;\r\n  export type Mutation = AttemptLoginMutation;\r\n  export type Login = (NonNullable<AttemptLoginMutation['login']>);\r\n}\r\n\r\nexport namespace LogOut {\r\n  export type Variables = LogOutMutationVariables;\r\n  export type Mutation = LogOutMutation;\r\n  export type Logout = (NonNullable<LogOutMutation['logout']>);\r\n}\r\n\r\nexport namespace GetCurrentUser {\r\n  export type Variables = GetCurrentUserQueryVariables;\r\n  export type Query = GetCurrentUserQuery;\r\n  export type Me = (NonNullable<GetCurrentUserQuery['me']>);\r\n}\r\n\r\nexport namespace RequestStarted {\r\n  export type Variables = RequestStartedMutationVariables;\r\n  export type Mutation = RequestStartedMutation;\r\n}\r\n\r\nexport namespace RequestCompleted {\r\n  export type Variables = RequestCompletedMutationVariables;\r\n  export type Mutation = RequestCompletedMutation;\r\n}\r\n\r\nexport namespace UserStatus {\r\n  export type Fragment = UserStatusFragment;\r\n  export type Channels = NonNullable<(NonNullable<UserStatusFragment['channels']>)[number]>;\r\n}\r\n\r\nexport namespace SetAsLoggedIn {\r\n  export type Variables = SetAsLoggedInMutationVariables;\r\n  export type Mutation = SetAsLoggedInMutation;\r\n  export type SetAsLoggedIn = (NonNullable<SetAsLoggedInMutation['setAsLoggedIn']>);\r\n}\r\n\r\nexport namespace SetAsLoggedOut {\r\n  export type Variables = SetAsLoggedOutMutationVariables;\r\n  export type Mutation = SetAsLoggedOutMutation;\r\n  export type SetAsLoggedOut = (NonNullable<SetAsLoggedOutMutation['setAsLoggedOut']>);\r\n}\r\n\r\nexport namespace SetUiLanguage {\r\n  export type Variables = SetUiLanguageMutationVariables;\r\n  export type Mutation = SetUiLanguageMutation;\r\n}\r\n\r\nexport namespace SetUiLocale {\r\n  export type Variables = SetUiLocaleMutationVariables;\r\n  export type Mutation = SetUiLocaleMutation;\r\n}\r\n\r\nexport namespace SetDisplayUiExtensionPoints {\r\n  export type Variables = SetDisplayUiExtensionPointsMutationVariables;\r\n  export type Mutation = SetDisplayUiExtensionPointsMutation;\r\n}\r\n\r\nexport namespace SetContentLanguage {\r\n  export type Variables = SetContentLanguageMutationVariables;\r\n  export type Mutation = SetContentLanguageMutation;\r\n}\r\n\r\nexport namespace SetUiTheme {\r\n  export type Variables = SetUiThemeMutationVariables;\r\n  export type Mutation = SetUiThemeMutation;\r\n}\r\n\r\nexport namespace GetNetworkStatus {\r\n  export type Variables = GetNetworkStatusQueryVariables;\r\n  export type Query = GetNetworkStatusQuery;\r\n  export type NetworkStatus = (NonNullable<GetNetworkStatusQuery['networkStatus']>);\r\n}\r\n\r\nexport namespace GetUserStatus {\r\n  export type Variables = GetUserStatusQueryVariables;\r\n  export type Query = GetUserStatusQuery;\r\n  export type UserStatus = (NonNullable<GetUserStatusQuery['userStatus']>);\r\n}\r\n\r\nexport namespace GetUiState {\r\n  export type Variables = GetUiStateQueryVariables;\r\n  export type Query = GetUiStateQuery;\r\n  export type UiState = (NonNullable<GetUiStateQuery['uiState']>);\r\n}\r\n\r\nexport namespace GetClientState {\r\n  export type Variables = GetClientStateQueryVariables;\r\n  export type Query = GetClientStateQuery;\r\n  export type NetworkStatus = (NonNullable<GetClientStateQuery['networkStatus']>);\r\n  export type UserStatus = (NonNullable<GetClientStateQuery['userStatus']>);\r\n  export type UiState = (NonNullable<GetClientStateQuery['uiState']>);\r\n}\r\n\r\nexport namespace SetActiveChannel {\r\n  export type Variables = SetActiveChannelMutationVariables;\r\n  export type Mutation = SetActiveChannelMutation;\r\n  export type SetActiveChannel = (NonNullable<SetActiveChannelMutation['setActiveChannel']>);\r\n}\r\n\r\nexport namespace UpdateUserChannels {\r\n  export type Variables = UpdateUserChannelsMutationVariables;\r\n  export type Mutation = UpdateUserChannelsMutation;\r\n  export type UpdateUserChannels = (NonNullable<UpdateUserChannelsMutation['updateUserChannels']>);\r\n}\r\n\r\nexport namespace GetCollectionFilters {\r\n  export type Variables = GetCollectionFiltersQueryVariables;\r\n  export type Query = GetCollectionFiltersQuery;\r\n  export type CollectionFilters = NonNullable<(NonNullable<GetCollectionFiltersQuery['collectionFilters']>)[number]>;\r\n}\r\n\r\nexport namespace Collection {\r\n  export type Fragment = CollectionFragment;\r\n  export type FeaturedAsset = (NonNullable<CollectionFragment['featuredAsset']>);\r\n  export type Assets = NonNullable<(NonNullable<CollectionFragment['assets']>)[number]>;\r\n  export type Filters = NonNullable<(NonNullable<CollectionFragment['filters']>)[number]>;\r\n  export type Translations = NonNullable<(NonNullable<CollectionFragment['translations']>)[number]>;\r\n  export type Parent = (NonNullable<CollectionFragment['parent']>);\r\n  export type Children = NonNullable<(NonNullable<CollectionFragment['children']>)[number]>;\r\n}\r\n\r\nexport namespace GetCollectionList {\r\n  export type Variables = GetCollectionListQueryVariables;\r\n  export type Query = GetCollectionListQuery;\r\n  export type Collections = (NonNullable<GetCollectionListQuery['collections']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetCollectionListQuery['collections']>)['items']>)[number]>;\r\n  export type FeaturedAsset = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetCollectionListQuery['collections']>)['items']>)[number]>['featuredAsset']>);\r\n  export type Parent = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetCollectionListQuery['collections']>)['items']>)[number]>['parent']>);\r\n}\r\n\r\nexport namespace GetCollection {\r\n  export type Variables = GetCollectionQueryVariables;\r\n  export type Query = GetCollectionQuery;\r\n  export type Collection = (NonNullable<GetCollectionQuery['collection']>);\r\n}\r\n\r\nexport namespace CreateCollection {\r\n  export type Variables = CreateCollectionMutationVariables;\r\n  export type Mutation = CreateCollectionMutation;\r\n  export type CreateCollection = (NonNullable<CreateCollectionMutation['createCollection']>);\r\n}\r\n\r\nexport namespace UpdateCollection {\r\n  export type Variables = UpdateCollectionMutationVariables;\r\n  export type Mutation = UpdateCollectionMutation;\r\n  export type UpdateCollection = (NonNullable<UpdateCollectionMutation['updateCollection']>);\r\n}\r\n\r\nexport namespace MoveCollection {\r\n  export type Variables = MoveCollectionMutationVariables;\r\n  export type Mutation = MoveCollectionMutation;\r\n  export type MoveCollection = (NonNullable<MoveCollectionMutation['moveCollection']>);\r\n}\r\n\r\nexport namespace DeleteCollection {\r\n  export type Variables = DeleteCollectionMutationVariables;\r\n  export type Mutation = DeleteCollectionMutation;\r\n  export type DeleteCollection = (NonNullable<DeleteCollectionMutation['deleteCollection']>);\r\n}\r\n\r\nexport namespace GetCollectionContents {\r\n  export type Variables = GetCollectionContentsQueryVariables;\r\n  export type Query = GetCollectionContentsQuery;\r\n  export type Collection = (NonNullable<GetCollectionContentsQuery['collection']>);\r\n  export type ProductVariants = (NonNullable<(NonNullable<GetCollectionContentsQuery['collection']>)['productVariants']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetCollectionContentsQuery['collection']>)['productVariants']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace Address {\r\n  export type Fragment = AddressFragment;\r\n  export type Country = (NonNullable<AddressFragment['country']>);\r\n}\r\n\r\nexport namespace Customer {\r\n  export type Fragment = CustomerFragment;\r\n  export type User = (NonNullable<CustomerFragment['user']>);\r\n  export type Addresses = NonNullable<(NonNullable<CustomerFragment['addresses']>)[number]>;\r\n}\r\n\r\nexport namespace CustomerGroup {\r\n  export type Fragment = CustomerGroupFragment;\r\n}\r\n\r\nexport namespace GetCustomerList {\r\n  export type Variables = GetCustomerListQueryVariables;\r\n  export type Query = GetCustomerListQuery;\r\n  export type Customers = (NonNullable<GetCustomerListQuery['customers']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetCustomerListQuery['customers']>)['items']>)[number]>;\r\n  export type User = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetCustomerListQuery['customers']>)['items']>)[number]>['user']>);\r\n}\r\n\r\nexport namespace GetCustomer {\r\n  export type Variables = GetCustomerQueryVariables;\r\n  export type Query = GetCustomerQuery;\r\n  export type Customer = (NonNullable<GetCustomerQuery['customer']>);\r\n  export type Groups = NonNullable<(NonNullable<(NonNullable<GetCustomerQuery['customer']>)['groups']>)[number]>;\r\n  export type Orders = (NonNullable<(NonNullable<GetCustomerQuery['customer']>)['orders']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetCustomerQuery['customer']>)['orders']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace CreateCustomer {\r\n  export type Variables = CreateCustomerMutationVariables;\r\n  export type Mutation = CreateCustomerMutation;\r\n  export type CreateCustomer = (NonNullable<CreateCustomerMutation['createCustomer']>);\r\n}\r\n\r\nexport namespace UpdateCustomer {\r\n  export type Variables = UpdateCustomerMutationVariables;\r\n  export type Mutation = UpdateCustomerMutation;\r\n  export type UpdateCustomer = (NonNullable<UpdateCustomerMutation['updateCustomer']>);\r\n}\r\n\r\nexport namespace DeleteCustomer {\r\n  export type Variables = DeleteCustomerMutationVariables;\r\n  export type Mutation = DeleteCustomerMutation;\r\n  export type DeleteCustomer = (NonNullable<DeleteCustomerMutation['deleteCustomer']>);\r\n}\r\n\r\nexport namespace CreateCustomerAddress {\r\n  export type Variables = CreateCustomerAddressMutationVariables;\r\n  export type Mutation = CreateCustomerAddressMutation;\r\n  export type CreateCustomerAddress = (NonNullable<CreateCustomerAddressMutation['createCustomerAddress']>);\r\n}\r\n\r\nexport namespace UpdateCustomerAddress {\r\n  export type Variables = UpdateCustomerAddressMutationVariables;\r\n  export type Mutation = UpdateCustomerAddressMutation;\r\n  export type UpdateCustomerAddress = (NonNullable<UpdateCustomerAddressMutation['updateCustomerAddress']>);\r\n}\r\n\r\nexport namespace DeleteCustomerAddress {\r\n  export type Variables = DeleteCustomerAddressMutationVariables;\r\n  export type Mutation = DeleteCustomerAddressMutation;\r\n  export type DeleteCustomerAddress = (NonNullable<DeleteCustomerAddressMutation['deleteCustomerAddress']>);\r\n}\r\n\r\nexport namespace CreateCustomerGroup {\r\n  export type Variables = CreateCustomerGroupMutationVariables;\r\n  export type Mutation = CreateCustomerGroupMutation;\r\n  export type CreateCustomerGroup = (NonNullable<CreateCustomerGroupMutation['createCustomerGroup']>);\r\n}\r\n\r\nexport namespace UpdateCustomerGroup {\r\n  export type Variables = UpdateCustomerGroupMutationVariables;\r\n  export type Mutation = UpdateCustomerGroupMutation;\r\n  export type UpdateCustomerGroup = (NonNullable<UpdateCustomerGroupMutation['updateCustomerGroup']>);\r\n}\r\n\r\nexport namespace DeleteCustomerGroup {\r\n  export type Variables = DeleteCustomerGroupMutationVariables;\r\n  export type Mutation = DeleteCustomerGroupMutation;\r\n  export type DeleteCustomerGroup = (NonNullable<DeleteCustomerGroupMutation['deleteCustomerGroup']>);\r\n}\r\n\r\nexport namespace GetCustomerGroups {\r\n  export type Variables = GetCustomerGroupsQueryVariables;\r\n  export type Query = GetCustomerGroupsQuery;\r\n  export type CustomerGroups = (NonNullable<GetCustomerGroupsQuery['customerGroups']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetCustomerGroupsQuery['customerGroups']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetCustomerGroupWithCustomers {\r\n  export type Variables = GetCustomerGroupWithCustomersQueryVariables;\r\n  export type Query = GetCustomerGroupWithCustomersQuery;\r\n  export type CustomerGroup = (NonNullable<GetCustomerGroupWithCustomersQuery['customerGroup']>);\r\n  export type Customers = (NonNullable<(NonNullable<GetCustomerGroupWithCustomersQuery['customerGroup']>)['customers']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetCustomerGroupWithCustomersQuery['customerGroup']>)['customers']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace AddCustomersToGroup {\r\n  export type Variables = AddCustomersToGroupMutationVariables;\r\n  export type Mutation = AddCustomersToGroupMutation;\r\n  export type AddCustomersToGroup = (NonNullable<AddCustomersToGroupMutation['addCustomersToGroup']>);\r\n}\r\n\r\nexport namespace RemoveCustomersFromGroup {\r\n  export type Variables = RemoveCustomersFromGroupMutationVariables;\r\n  export type Mutation = RemoveCustomersFromGroupMutation;\r\n  export type RemoveCustomersFromGroup = (NonNullable<RemoveCustomersFromGroupMutation['removeCustomersFromGroup']>);\r\n}\r\n\r\nexport namespace GetCustomerHistory {\r\n  export type Variables = GetCustomerHistoryQueryVariables;\r\n  export type Query = GetCustomerHistoryQuery;\r\n  export type Customer = (NonNullable<GetCustomerHistoryQuery['customer']>);\r\n  export type History = (NonNullable<(NonNullable<GetCustomerHistoryQuery['customer']>)['history']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetCustomerHistoryQuery['customer']>)['history']>)['items']>)[number]>;\r\n  export type Administrator = (NonNullable<NonNullable<(NonNullable<(NonNullable<(NonNullable<GetCustomerHistoryQuery['customer']>)['history']>)['items']>)[number]>['administrator']>);\r\n}\r\n\r\nexport namespace AddNoteToCustomer {\r\n  export type Variables = AddNoteToCustomerMutationVariables;\r\n  export type Mutation = AddNoteToCustomerMutation;\r\n  export type AddNoteToCustomer = (NonNullable<AddNoteToCustomerMutation['addNoteToCustomer']>);\r\n}\r\n\r\nexport namespace UpdateCustomerNote {\r\n  export type Variables = UpdateCustomerNoteMutationVariables;\r\n  export type Mutation = UpdateCustomerNoteMutation;\r\n  export type UpdateCustomerNote = (NonNullable<UpdateCustomerNoteMutation['updateCustomerNote']>);\r\n}\r\n\r\nexport namespace DeleteCustomerNote {\r\n  export type Variables = DeleteCustomerNoteMutationVariables;\r\n  export type Mutation = DeleteCustomerNoteMutation;\r\n  export type DeleteCustomerNote = (NonNullable<DeleteCustomerNoteMutation['deleteCustomerNote']>);\r\n}\r\n\r\nexport namespace FacetValue {\r\n  export type Fragment = FacetValueFragment;\r\n  export type Translations = NonNullable<(NonNullable<FacetValueFragment['translations']>)[number]>;\r\n  export type Facet = (NonNullable<FacetValueFragment['facet']>);\r\n}\r\n\r\nexport namespace FacetWithValues {\r\n  export type Fragment = FacetWithValuesFragment;\r\n  export type Translations = NonNullable<(NonNullable<FacetWithValuesFragment['translations']>)[number]>;\r\n  export type Values = NonNullable<(NonNullable<FacetWithValuesFragment['values']>)[number]>;\r\n}\r\n\r\nexport namespace CreateFacet {\r\n  export type Variables = CreateFacetMutationVariables;\r\n  export type Mutation = CreateFacetMutation;\r\n  export type CreateFacet = (NonNullable<CreateFacetMutation['createFacet']>);\r\n}\r\n\r\nexport namespace UpdateFacet {\r\n  export type Variables = UpdateFacetMutationVariables;\r\n  export type Mutation = UpdateFacetMutation;\r\n  export type UpdateFacet = (NonNullable<UpdateFacetMutation['updateFacet']>);\r\n}\r\n\r\nexport namespace DeleteFacet {\r\n  export type Variables = DeleteFacetMutationVariables;\r\n  export type Mutation = DeleteFacetMutation;\r\n  export type DeleteFacet = (NonNullable<DeleteFacetMutation['deleteFacet']>);\r\n}\r\n\r\nexport namespace CreateFacetValues {\r\n  export type Variables = CreateFacetValuesMutationVariables;\r\n  export type Mutation = CreateFacetValuesMutation;\r\n  export type CreateFacetValues = NonNullable<(NonNullable<CreateFacetValuesMutation['createFacetValues']>)[number]>;\r\n}\r\n\r\nexport namespace UpdateFacetValues {\r\n  export type Variables = UpdateFacetValuesMutationVariables;\r\n  export type Mutation = UpdateFacetValuesMutation;\r\n  export type UpdateFacetValues = NonNullable<(NonNullable<UpdateFacetValuesMutation['updateFacetValues']>)[number]>;\r\n}\r\n\r\nexport namespace DeleteFacetValues {\r\n  export type Variables = DeleteFacetValuesMutationVariables;\r\n  export type Mutation = DeleteFacetValuesMutation;\r\n  export type DeleteFacetValues = NonNullable<(NonNullable<DeleteFacetValuesMutation['deleteFacetValues']>)[number]>;\r\n}\r\n\r\nexport namespace GetFacetList {\r\n  export type Variables = GetFacetListQueryVariables;\r\n  export type Query = GetFacetListQuery;\r\n  export type Facets = (NonNullable<GetFacetListQuery['facets']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetFacetListQuery['facets']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetFacetWithValues {\r\n  export type Variables = GetFacetWithValuesQueryVariables;\r\n  export type Query = GetFacetWithValuesQuery;\r\n  export type Facet = (NonNullable<GetFacetWithValuesQuery['facet']>);\r\n}\r\n\r\nexport namespace Discount {\r\n  export type Fragment = DiscountFragment;\r\n}\r\n\r\nexport namespace Refund {\r\n  export type Fragment = RefundFragment;\r\n}\r\n\r\nexport namespace OrderAddress {\r\n  export type Fragment = OrderAddressFragment;\r\n}\r\n\r\nexport namespace Order {\r\n  export type Fragment = OrderFragment;\r\n  export type Customer = (NonNullable<OrderFragment['customer']>);\r\n  export type ShippingLines = NonNullable<(NonNullable<OrderFragment['shippingLines']>)[number]>;\r\n  export type ShippingMethod = (NonNullable<NonNullable<(NonNullable<OrderFragment['shippingLines']>)[number]>['shippingMethod']>);\r\n}\r\n\r\nexport namespace Fulfillment {\r\n  export type Fragment = FulfillmentFragment;\r\n  export type OrderItems = NonNullable<(NonNullable<FulfillmentFragment['orderItems']>)[number]>;\r\n}\r\n\r\nexport namespace OrderLine {\r\n  export type Fragment = OrderLineFragment;\r\n  export type FeaturedAsset = (NonNullable<OrderLineFragment['featuredAsset']>);\r\n  export type ProductVariant = (NonNullable<OrderLineFragment['productVariant']>);\r\n  export type Discounts = NonNullable<(NonNullable<OrderLineFragment['discounts']>)[number]>;\r\n  export type Items = NonNullable<(NonNullable<OrderLineFragment['items']>)[number]>;\r\n  export type Fulfillment = (NonNullable<NonNullable<(NonNullable<OrderLineFragment['items']>)[number]>['fulfillment']>);\r\n}\r\n\r\nexport namespace OrderDetail {\r\n  export type Fragment = OrderDetailFragment;\r\n  export type Customer = (NonNullable<OrderDetailFragment['customer']>);\r\n  export type Lines = NonNullable<(NonNullable<OrderDetailFragment['lines']>)[number]>;\r\n  export type Surcharges = NonNullable<(NonNullable<OrderDetailFragment['surcharges']>)[number]>;\r\n  export type Discounts = NonNullable<(NonNullable<OrderDetailFragment['discounts']>)[number]>;\r\n  export type Promotions = NonNullable<(NonNullable<OrderDetailFragment['promotions']>)[number]>;\r\n  export type ShippingLines = NonNullable<(NonNullable<OrderDetailFragment['shippingLines']>)[number]>;\r\n  export type ShippingMethod = (NonNullable<NonNullable<(NonNullable<OrderDetailFragment['shippingLines']>)[number]>['shippingMethod']>);\r\n  export type TaxSummary = NonNullable<(NonNullable<OrderDetailFragment['taxSummary']>)[number]>;\r\n  export type ShippingAddress = (NonNullable<OrderDetailFragment['shippingAddress']>);\r\n  export type BillingAddress = (NonNullable<OrderDetailFragment['billingAddress']>);\r\n  export type Payments = NonNullable<(NonNullable<OrderDetailFragment['payments']>)[number]>;\r\n  export type Refunds = NonNullable<(NonNullable<NonNullable<(NonNullable<OrderDetailFragment['payments']>)[number]>['refunds']>)[number]>;\r\n  export type OrderItems = NonNullable<(NonNullable<NonNullable<(NonNullable<NonNullable<(NonNullable<OrderDetailFragment['payments']>)[number]>['refunds']>)[number]>['orderItems']>)[number]>;\r\n  export type Fulfillments = NonNullable<(NonNullable<OrderDetailFragment['fulfillments']>)[number]>;\r\n  export type Modifications = NonNullable<(NonNullable<OrderDetailFragment['modifications']>)[number]>;\r\n  export type Payment = (NonNullable<NonNullable<(NonNullable<OrderDetailFragment['modifications']>)[number]>['payment']>);\r\n  export type _OrderItems = NonNullable<(NonNullable<NonNullable<(NonNullable<OrderDetailFragment['modifications']>)[number]>['orderItems']>)[number]>;\r\n  export type Refund = (NonNullable<NonNullable<(NonNullable<OrderDetailFragment['modifications']>)[number]>['refund']>);\r\n  export type _Surcharges = NonNullable<(NonNullable<NonNullable<(NonNullable<OrderDetailFragment['modifications']>)[number]>['surcharges']>)[number]>;\r\n}\r\n\r\nexport namespace GetOrderList {\r\n  export type Variables = GetOrderListQueryVariables;\r\n  export type Query = GetOrderListQuery;\r\n  export type Orders = (NonNullable<GetOrderListQuery['orders']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetOrderListQuery['orders']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetOrder {\r\n  export type Variables = GetOrderQueryVariables;\r\n  export type Query = GetOrderQuery;\r\n  export type Order = (NonNullable<GetOrderQuery['order']>);\r\n}\r\n\r\nexport namespace SettlePayment {\r\n  export type Variables = SettlePaymentMutationVariables;\r\n  export type Mutation = SettlePaymentMutation;\r\n  export type SettlePayment = (NonNullable<SettlePaymentMutation['settlePayment']>);\r\n  export type PaymentInlineFragment = (DiscriminateUnion<(NonNullable<SettlePaymentMutation['settlePayment']>), { __typename?: 'Payment' }>);\r\n  export type SettlePaymentErrorInlineFragment = (DiscriminateUnion<(NonNullable<SettlePaymentMutation['settlePayment']>), { __typename?: 'SettlePaymentError' }>);\r\n  export type PaymentStateTransitionErrorInlineFragment = (DiscriminateUnion<(NonNullable<SettlePaymentMutation['settlePayment']>), { __typename?: 'PaymentStateTransitionError' }>);\r\n  export type OrderStateTransitionErrorInlineFragment = (DiscriminateUnion<(NonNullable<SettlePaymentMutation['settlePayment']>), { __typename?: 'OrderStateTransitionError' }>);\r\n}\r\n\r\nexport namespace TransitionPaymentToState {\r\n  export type Variables = TransitionPaymentToStateMutationVariables;\r\n  export type Mutation = TransitionPaymentToStateMutation;\r\n  export type TransitionPaymentToState = (NonNullable<TransitionPaymentToStateMutation['transitionPaymentToState']>);\r\n  export type PaymentInlineFragment = (DiscriminateUnion<(NonNullable<TransitionPaymentToStateMutation['transitionPaymentToState']>), { __typename?: 'Payment' }>);\r\n  export type PaymentStateTransitionErrorInlineFragment = (DiscriminateUnion<(NonNullable<TransitionPaymentToStateMutation['transitionPaymentToState']>), { __typename?: 'PaymentStateTransitionError' }>);\r\n}\r\n\r\nexport namespace CreateFulfillment {\r\n  export type Variables = CreateFulfillmentMutationVariables;\r\n  export type Mutation = CreateFulfillmentMutation;\r\n  export type AddFulfillmentToOrder = (NonNullable<CreateFulfillmentMutation['addFulfillmentToOrder']>);\r\n  export type CreateFulfillmentErrorInlineFragment = (DiscriminateUnion<(NonNullable<CreateFulfillmentMutation['addFulfillmentToOrder']>), { __typename?: 'CreateFulfillmentError' }>);\r\n  export type FulfillmentStateTransitionErrorInlineFragment = (DiscriminateUnion<(NonNullable<CreateFulfillmentMutation['addFulfillmentToOrder']>), { __typename?: 'FulfillmentStateTransitionError' }>);\r\n}\r\n\r\nexport namespace CancelOrder {\r\n  export type Variables = CancelOrderMutationVariables;\r\n  export type Mutation = CancelOrderMutation;\r\n  export type CancelOrder = (NonNullable<CancelOrderMutation['cancelOrder']>);\r\n}\r\n\r\nexport namespace RefundOrder {\r\n  export type Variables = RefundOrderMutationVariables;\r\n  export type Mutation = RefundOrderMutation;\r\n  export type RefundOrder = (NonNullable<RefundOrderMutation['refundOrder']>);\r\n}\r\n\r\nexport namespace SettleRefund {\r\n  export type Variables = SettleRefundMutationVariables;\r\n  export type Mutation = SettleRefundMutation;\r\n  export type SettleRefund = (NonNullable<SettleRefundMutation['settleRefund']>);\r\n}\r\n\r\nexport namespace GetOrderHistory {\r\n  export type Variables = GetOrderHistoryQueryVariables;\r\n  export type Query = GetOrderHistoryQuery;\r\n  export type Order = (NonNullable<GetOrderHistoryQuery['order']>);\r\n  export type History = (NonNullable<(NonNullable<GetOrderHistoryQuery['order']>)['history']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetOrderHistoryQuery['order']>)['history']>)['items']>)[number]>;\r\n  export type Administrator = (NonNullable<NonNullable<(NonNullable<(NonNullable<(NonNullable<GetOrderHistoryQuery['order']>)['history']>)['items']>)[number]>['administrator']>);\r\n}\r\n\r\nexport namespace AddNoteToOrder {\r\n  export type Variables = AddNoteToOrderMutationVariables;\r\n  export type Mutation = AddNoteToOrderMutation;\r\n  export type AddNoteToOrder = (NonNullable<AddNoteToOrderMutation['addNoteToOrder']>);\r\n}\r\n\r\nexport namespace UpdateOrderNote {\r\n  export type Variables = UpdateOrderNoteMutationVariables;\r\n  export type Mutation = UpdateOrderNoteMutation;\r\n  export type UpdateOrderNote = (NonNullable<UpdateOrderNoteMutation['updateOrderNote']>);\r\n}\r\n\r\nexport namespace DeleteOrderNote {\r\n  export type Variables = DeleteOrderNoteMutationVariables;\r\n  export type Mutation = DeleteOrderNoteMutation;\r\n  export type DeleteOrderNote = (NonNullable<DeleteOrderNoteMutation['deleteOrderNote']>);\r\n}\r\n\r\nexport namespace TransitionOrderToState {\r\n  export type Variables = TransitionOrderToStateMutationVariables;\r\n  export type Mutation = TransitionOrderToStateMutation;\r\n  export type TransitionOrderToState = (NonNullable<TransitionOrderToStateMutation['transitionOrderToState']>);\r\n  export type OrderStateTransitionErrorInlineFragment = (DiscriminateUnion<(NonNullable<TransitionOrderToStateMutation['transitionOrderToState']>), { __typename?: 'OrderStateTransitionError' }>);\r\n}\r\n\r\nexport namespace UpdateOrderCustomFields {\r\n  export type Variables = UpdateOrderCustomFieldsMutationVariables;\r\n  export type Mutation = UpdateOrderCustomFieldsMutation;\r\n  export type SetOrderCustomFields = (NonNullable<UpdateOrderCustomFieldsMutation['setOrderCustomFields']>);\r\n}\r\n\r\nexport namespace TransitionFulfillmentToState {\r\n  export type Variables = TransitionFulfillmentToStateMutationVariables;\r\n  export type Mutation = TransitionFulfillmentToStateMutation;\r\n  export type TransitionFulfillmentToState = (NonNullable<TransitionFulfillmentToStateMutation['transitionFulfillmentToState']>);\r\n  export type FulfillmentStateTransitionErrorInlineFragment = (DiscriminateUnion<(NonNullable<TransitionFulfillmentToStateMutation['transitionFulfillmentToState']>), { __typename?: 'FulfillmentStateTransitionError' }>);\r\n}\r\n\r\nexport namespace GetOrderSummary {\r\n  export type Variables = GetOrderSummaryQueryVariables;\r\n  export type Query = GetOrderSummaryQuery;\r\n  export type Orders = (NonNullable<GetOrderSummaryQuery['orders']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetOrderSummaryQuery['orders']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace ModifyOrder {\r\n  export type Variables = ModifyOrderMutationVariables;\r\n  export type Mutation = ModifyOrderMutation;\r\n  export type ModifyOrder = (NonNullable<ModifyOrderMutation['modifyOrder']>);\r\n}\r\n\r\nexport namespace AddManualPayment {\r\n  export type Variables = AddManualPaymentMutationVariables;\r\n  export type Mutation = AddManualPaymentMutation;\r\n  export type AddManualPaymentToOrder = (NonNullable<AddManualPaymentMutation['addManualPaymentToOrder']>);\r\n}\r\n\r\nexport namespace Asset {\r\n  export type Fragment = AssetFragment;\r\n  export type FocalPoint = (NonNullable<AssetFragment['focalPoint']>);\r\n}\r\n\r\nexport namespace Tag {\r\n  export type Fragment = TagFragment;\r\n}\r\n\r\nexport namespace ProductOptionGroup {\r\n  export type Fragment = ProductOptionGroupFragment;\r\n  export type Translations = NonNullable<(NonNullable<ProductOptionGroupFragment['translations']>)[number]>;\r\n}\r\n\r\nexport namespace ProductOption {\r\n  export type Fragment = ProductOptionFragment;\r\n  export type Translations = NonNullable<(NonNullable<ProductOptionFragment['translations']>)[number]>;\r\n}\r\n\r\nexport namespace ProductVariant {\r\n  export type Fragment = ProductVariantFragment;\r\n  export type TaxRateApplied = (NonNullable<ProductVariantFragment['taxRateApplied']>);\r\n  export type TaxCategory = (NonNullable<ProductVariantFragment['taxCategory']>);\r\n  export type Options = NonNullable<(NonNullable<ProductVariantFragment['options']>)[number]>;\r\n  export type FacetValues = NonNullable<(NonNullable<ProductVariantFragment['facetValues']>)[number]>;\r\n  export type Facet = (NonNullable<NonNullable<(NonNullable<ProductVariantFragment['facetValues']>)[number]>['facet']>);\r\n  export type FeaturedAsset = (NonNullable<ProductVariantFragment['featuredAsset']>);\r\n  export type Assets = NonNullable<(NonNullable<ProductVariantFragment['assets']>)[number]>;\r\n  export type Translations = NonNullable<(NonNullable<ProductVariantFragment['translations']>)[number]>;\r\n  export type Channels = NonNullable<(NonNullable<ProductVariantFragment['channels']>)[number]>;\r\n}\r\n\r\nexport namespace ProductDetail {\r\n  export type Fragment = ProductDetailFragment;\r\n  export type FeaturedAsset = (NonNullable<ProductDetailFragment['featuredAsset']>);\r\n  export type Assets = NonNullable<(NonNullable<ProductDetailFragment['assets']>)[number]>;\r\n  export type Translations = NonNullable<(NonNullable<ProductDetailFragment['translations']>)[number]>;\r\n  export type OptionGroups = NonNullable<(NonNullable<ProductDetailFragment['optionGroups']>)[number]>;\r\n  export type FacetValues = NonNullable<(NonNullable<ProductDetailFragment['facetValues']>)[number]>;\r\n  export type Facet = (NonNullable<NonNullable<(NonNullable<ProductDetailFragment['facetValues']>)[number]>['facet']>);\r\n  export type Channels = NonNullable<(NonNullable<ProductDetailFragment['channels']>)[number]>;\r\n}\r\n\r\nexport namespace ProductOptionGroupWithOptions {\r\n  export type Fragment = ProductOptionGroupWithOptionsFragment;\r\n  export type Translations = NonNullable<(NonNullable<ProductOptionGroupWithOptionsFragment['translations']>)[number]>;\r\n  export type Options = NonNullable<(NonNullable<ProductOptionGroupWithOptionsFragment['options']>)[number]>;\r\n  export type _Translations = NonNullable<(NonNullable<NonNullable<(NonNullable<ProductOptionGroupWithOptionsFragment['options']>)[number]>['translations']>)[number]>;\r\n}\r\n\r\nexport namespace UpdateProduct {\r\n  export type Variables = UpdateProductMutationVariables;\r\n  export type Mutation = UpdateProductMutation;\r\n  export type UpdateProduct = (NonNullable<UpdateProductMutation['updateProduct']>);\r\n  export type VariantList = (NonNullable<(NonNullable<UpdateProductMutation['updateProduct']>)['variantList']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<UpdateProductMutation['updateProduct']>)['variantList']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace CreateProduct {\r\n  export type Variables = CreateProductMutationVariables;\r\n  export type Mutation = CreateProductMutation;\r\n  export type CreateProduct = (NonNullable<CreateProductMutation['createProduct']>);\r\n  export type VariantList = (NonNullable<(NonNullable<CreateProductMutation['createProduct']>)['variantList']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<CreateProductMutation['createProduct']>)['variantList']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace DeleteProduct {\r\n  export type Variables = DeleteProductMutationVariables;\r\n  export type Mutation = DeleteProductMutation;\r\n  export type DeleteProduct = (NonNullable<DeleteProductMutation['deleteProduct']>);\r\n}\r\n\r\nexport namespace CreateProductVariants {\r\n  export type Variables = CreateProductVariantsMutationVariables;\r\n  export type Mutation = CreateProductVariantsMutation;\r\n  export type CreateProductVariants = NonNullable<(NonNullable<CreateProductVariantsMutation['createProductVariants']>)[number]>;\r\n}\r\n\r\nexport namespace UpdateProductVariants {\r\n  export type Variables = UpdateProductVariantsMutationVariables;\r\n  export type Mutation = UpdateProductVariantsMutation;\r\n  export type UpdateProductVariants = NonNullable<(NonNullable<UpdateProductVariantsMutation['updateProductVariants']>)[number]>;\r\n}\r\n\r\nexport namespace CreateProductOptionGroup {\r\n  export type Variables = CreateProductOptionGroupMutationVariables;\r\n  export type Mutation = CreateProductOptionGroupMutation;\r\n  export type CreateProductOptionGroup = (NonNullable<CreateProductOptionGroupMutation['createProductOptionGroup']>);\r\n}\r\n\r\nexport namespace GetProductOptionGroup {\r\n  export type Variables = GetProductOptionGroupQueryVariables;\r\n  export type Query = GetProductOptionGroupQuery;\r\n  export type ProductOptionGroup = (NonNullable<GetProductOptionGroupQuery['productOptionGroup']>);\r\n}\r\n\r\nexport namespace AddOptionToGroup {\r\n  export type Variables = AddOptionToGroupMutationVariables;\r\n  export type Mutation = AddOptionToGroupMutation;\r\n  export type CreateProductOption = (NonNullable<AddOptionToGroupMutation['createProductOption']>);\r\n}\r\n\r\nexport namespace AddOptionGroupToProduct {\r\n  export type Variables = AddOptionGroupToProductMutationVariables;\r\n  export type Mutation = AddOptionGroupToProductMutation;\r\n  export type AddOptionGroupToProduct = (NonNullable<AddOptionGroupToProductMutation['addOptionGroupToProduct']>);\r\n  export type OptionGroups = NonNullable<(NonNullable<(NonNullable<AddOptionGroupToProductMutation['addOptionGroupToProduct']>)['optionGroups']>)[number]>;\r\n  export type Options = NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<AddOptionGroupToProductMutation['addOptionGroupToProduct']>)['optionGroups']>)[number]>['options']>)[number]>;\r\n}\r\n\r\nexport namespace RemoveOptionGroupFromProduct {\r\n  export type Variables = RemoveOptionGroupFromProductMutationVariables;\r\n  export type Mutation = RemoveOptionGroupFromProductMutation;\r\n  export type RemoveOptionGroupFromProduct = (NonNullable<RemoveOptionGroupFromProductMutation['removeOptionGroupFromProduct']>);\r\n  export type ProductInlineFragment = (DiscriminateUnion<(NonNullable<RemoveOptionGroupFromProductMutation['removeOptionGroupFromProduct']>), { __typename?: 'Product' }>);\r\n  export type OptionGroups = NonNullable<(NonNullable<(DiscriminateUnion<(NonNullable<RemoveOptionGroupFromProductMutation['removeOptionGroupFromProduct']>), { __typename?: 'Product' }>)['optionGroups']>)[number]>;\r\n  export type Options = NonNullable<(NonNullable<NonNullable<(NonNullable<(DiscriminateUnion<(NonNullable<RemoveOptionGroupFromProductMutation['removeOptionGroupFromProduct']>), { __typename?: 'Product' }>)['optionGroups']>)[number]>['options']>)[number]>;\r\n}\r\n\r\nexport namespace GetProductWithVariants {\r\n  export type Variables = GetProductWithVariantsQueryVariables;\r\n  export type Query = GetProductWithVariantsQuery;\r\n  export type Product = (NonNullable<GetProductWithVariantsQuery['product']>);\r\n  export type VariantList = (NonNullable<(NonNullable<GetProductWithVariantsQuery['product']>)['variantList']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetProductWithVariantsQuery['product']>)['variantList']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetProductSimple {\r\n  export type Variables = GetProductSimpleQueryVariables;\r\n  export type Query = GetProductSimpleQuery;\r\n  export type Product = (NonNullable<GetProductSimpleQuery['product']>);\r\n  export type FeaturedAsset = (NonNullable<(NonNullable<GetProductSimpleQuery['product']>)['featuredAsset']>);\r\n}\r\n\r\nexport namespace GetProductList {\r\n  export type Variables = GetProductListQueryVariables;\r\n  export type Query = GetProductListQuery;\r\n  export type Products = (NonNullable<GetProductListQuery['products']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetProductListQuery['products']>)['items']>)[number]>;\r\n  export type FeaturedAsset = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductListQuery['products']>)['items']>)[number]>['featuredAsset']>);\r\n}\r\n\r\nexport namespace GetProductOptionGroups {\r\n  export type Variables = GetProductOptionGroupsQueryVariables;\r\n  export type Query = GetProductOptionGroupsQuery;\r\n  export type ProductOptionGroups = NonNullable<(NonNullable<GetProductOptionGroupsQuery['productOptionGroups']>)[number]>;\r\n  export type Options = NonNullable<(NonNullable<NonNullable<(NonNullable<GetProductOptionGroupsQuery['productOptionGroups']>)[number]>['options']>)[number]>;\r\n}\r\n\r\nexport namespace GetAssetList {\r\n  export type Variables = GetAssetListQueryVariables;\r\n  export type Query = GetAssetListQuery;\r\n  export type Assets = (NonNullable<GetAssetListQuery['assets']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetAssetListQuery['assets']>)['items']>)[number]>;\r\n  export type Tags = NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<GetAssetListQuery['assets']>)['items']>)[number]>['tags']>)[number]>;\r\n}\r\n\r\nexport namespace GetAsset {\r\n  export type Variables = GetAssetQueryVariables;\r\n  export type Query = GetAssetQuery;\r\n  export type Asset = (NonNullable<GetAssetQuery['asset']>);\r\n  export type Tags = NonNullable<(NonNullable<(NonNullable<GetAssetQuery['asset']>)['tags']>)[number]>;\r\n}\r\n\r\nexport namespace CreateAssets {\r\n  export type Variables = CreateAssetsMutationVariables;\r\n  export type Mutation = CreateAssetsMutation;\r\n  export type CreateAssets = NonNullable<(NonNullable<CreateAssetsMutation['createAssets']>)[number]>;\r\n  export type AssetInlineFragment = (DiscriminateUnion<NonNullable<(NonNullable<CreateAssetsMutation['createAssets']>)[number]>, { __typename?: 'Asset' }>);\r\n  export type Tags = NonNullable<(NonNullable<(DiscriminateUnion<NonNullable<(NonNullable<CreateAssetsMutation['createAssets']>)[number]>, { __typename?: 'Asset' }>)['tags']>)[number]>;\r\n  export type ErrorResultInlineFragment = (DiscriminateUnion<NonNullable<(NonNullable<CreateAssetsMutation['createAssets']>)[number]>, { __typename?: 'ErrorResult' }>);\r\n}\r\n\r\nexport namespace UpdateAsset {\r\n  export type Variables = UpdateAssetMutationVariables;\r\n  export type Mutation = UpdateAssetMutation;\r\n  export type UpdateAsset = (NonNullable<UpdateAssetMutation['updateAsset']>);\r\n  export type Tags = NonNullable<(NonNullable<(NonNullable<UpdateAssetMutation['updateAsset']>)['tags']>)[number]>;\r\n}\r\n\r\nexport namespace DeleteAssets {\r\n  export type Variables = DeleteAssetsMutationVariables;\r\n  export type Mutation = DeleteAssetsMutation;\r\n  export type DeleteAssets = (NonNullable<DeleteAssetsMutation['deleteAssets']>);\r\n}\r\n\r\nexport namespace SearchProducts {\r\n  export type Variables = SearchProductsQueryVariables;\r\n  export type Query = SearchProductsQuery;\r\n  export type Search = (NonNullable<SearchProductsQuery['search']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['items']>)[number]>;\r\n  export type ProductAsset = (NonNullable<NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['items']>)[number]>['productAsset']>);\r\n  export type FocalPoint = (NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['items']>)[number]>['productAsset']>)['focalPoint']>);\r\n  export type ProductVariantAsset = (NonNullable<NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['items']>)[number]>['productVariantAsset']>);\r\n  export type _FocalPoint = (NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['items']>)[number]>['productVariantAsset']>)['focalPoint']>);\r\n  export type FacetValues = NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['facetValues']>)[number]>;\r\n  export type FacetValue = (NonNullable<NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['facetValues']>)[number]>['facetValue']>);\r\n  export type Facet = (NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<SearchProductsQuery['search']>)['facetValues']>)[number]>['facetValue']>)['facet']>);\r\n}\r\n\r\nexport namespace ProductSelectorSearch {\r\n  export type Variables = ProductSelectorSearchQueryVariables;\r\n  export type Query = ProductSelectorSearchQuery;\r\n  export type Search = (NonNullable<ProductSelectorSearchQuery['search']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>;\r\n  export type ProductAsset = (NonNullable<NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>['productAsset']>);\r\n  export type FocalPoint = (NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>['productAsset']>)['focalPoint']>);\r\n  export type Price = (NonNullable<NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>['price']>);\r\n  export type SinglePriceInlineFragment = (DiscriminateUnion<(NonNullable<NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>['price']>), { __typename?: 'SinglePrice' }>);\r\n  export type PriceWithTax = (NonNullable<NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>['priceWithTax']>);\r\n  export type _SinglePriceInlineFragment = (DiscriminateUnion<(NonNullable<NonNullable<(NonNullable<(NonNullable<ProductSelectorSearchQuery['search']>)['items']>)[number]>['priceWithTax']>), { __typename?: 'SinglePrice' }>);\r\n}\r\n\r\nexport namespace UpdateProductOptionGroup {\r\n  export type Variables = UpdateProductOptionGroupMutationVariables;\r\n  export type Mutation = UpdateProductOptionGroupMutation;\r\n  export type UpdateProductOptionGroup = (NonNullable<UpdateProductOptionGroupMutation['updateProductOptionGroup']>);\r\n}\r\n\r\nexport namespace UpdateProductOption {\r\n  export type Variables = UpdateProductOptionMutationVariables;\r\n  export type Mutation = UpdateProductOptionMutation;\r\n  export type UpdateProductOption = (NonNullable<UpdateProductOptionMutation['updateProductOption']>);\r\n}\r\n\r\nexport namespace DeleteProductVariant {\r\n  export type Variables = DeleteProductVariantMutationVariables;\r\n  export type Mutation = DeleteProductVariantMutation;\r\n  export type DeleteProductVariant = (NonNullable<DeleteProductVariantMutation['deleteProductVariant']>);\r\n}\r\n\r\nexport namespace GetProductVariantOptions {\r\n  export type Variables = GetProductVariantOptionsQueryVariables;\r\n  export type Query = GetProductVariantOptionsQuery;\r\n  export type Product = (NonNullable<GetProductVariantOptionsQuery['product']>);\r\n  export type OptionGroups = NonNullable<(NonNullable<(NonNullable<GetProductVariantOptionsQuery['product']>)['optionGroups']>)[number]>;\r\n  export type Options = NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantOptionsQuery['product']>)['optionGroups']>)[number]>['options']>)[number]>;\r\n  export type Variants = NonNullable<(NonNullable<(NonNullable<GetProductVariantOptionsQuery['product']>)['variants']>)[number]>;\r\n  export type _Options = NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantOptionsQuery['product']>)['variants']>)[number]>['options']>)[number]>;\r\n}\r\n\r\nexport namespace AssignProductsToChannel {\r\n  export type Variables = AssignProductsToChannelMutationVariables;\r\n  export type Mutation = AssignProductsToChannelMutation;\r\n  export type AssignProductsToChannel = NonNullable<(NonNullable<AssignProductsToChannelMutation['assignProductsToChannel']>)[number]>;\r\n  export type Channels = NonNullable<(NonNullable<NonNullable<(NonNullable<AssignProductsToChannelMutation['assignProductsToChannel']>)[number]>['channels']>)[number]>;\r\n}\r\n\r\nexport namespace AssignVariantsToChannel {\r\n  export type Variables = AssignVariantsToChannelMutationVariables;\r\n  export type Mutation = AssignVariantsToChannelMutation;\r\n  export type AssignProductVariantsToChannel = NonNullable<(NonNullable<AssignVariantsToChannelMutation['assignProductVariantsToChannel']>)[number]>;\r\n  export type Channels = NonNullable<(NonNullable<NonNullable<(NonNullable<AssignVariantsToChannelMutation['assignProductVariantsToChannel']>)[number]>['channels']>)[number]>;\r\n}\r\n\r\nexport namespace RemoveProductsFromChannel {\r\n  export type Variables = RemoveProductsFromChannelMutationVariables;\r\n  export type Mutation = RemoveProductsFromChannelMutation;\r\n  export type RemoveProductsFromChannel = NonNullable<(NonNullable<RemoveProductsFromChannelMutation['removeProductsFromChannel']>)[number]>;\r\n  export type Channels = NonNullable<(NonNullable<NonNullable<(NonNullable<RemoveProductsFromChannelMutation['removeProductsFromChannel']>)[number]>['channels']>)[number]>;\r\n}\r\n\r\nexport namespace RemoveVariantsFromChannel {\r\n  export type Variables = RemoveVariantsFromChannelMutationVariables;\r\n  export type Mutation = RemoveVariantsFromChannelMutation;\r\n  export type RemoveProductVariantsFromChannel = NonNullable<(NonNullable<RemoveVariantsFromChannelMutation['removeProductVariantsFromChannel']>)[number]>;\r\n  export type Channels = NonNullable<(NonNullable<NonNullable<(NonNullable<RemoveVariantsFromChannelMutation['removeProductVariantsFromChannel']>)[number]>['channels']>)[number]>;\r\n}\r\n\r\nexport namespace GetProductVariant {\r\n  export type Variables = GetProductVariantQueryVariables;\r\n  export type Query = GetProductVariantQuery;\r\n  export type ProductVariant = (NonNullable<GetProductVariantQuery['productVariant']>);\r\n  export type FeaturedAsset = (NonNullable<(NonNullable<GetProductVariantQuery['productVariant']>)['featuredAsset']>);\r\n  export type FocalPoint = (NonNullable<(NonNullable<(NonNullable<GetProductVariantQuery['productVariant']>)['featuredAsset']>)['focalPoint']>);\r\n  export type Product = (NonNullable<(NonNullable<GetProductVariantQuery['productVariant']>)['product']>);\r\n  export type _FeaturedAsset = (NonNullable<(NonNullable<(NonNullable<GetProductVariantQuery['productVariant']>)['product']>)['featuredAsset']>);\r\n  export type _FocalPoint = (NonNullable<(NonNullable<(NonNullable<(NonNullable<GetProductVariantQuery['productVariant']>)['product']>)['featuredAsset']>)['focalPoint']>);\r\n}\r\n\r\nexport namespace GetProductVariantListSimple {\r\n  export type Variables = GetProductVariantListSimpleQueryVariables;\r\n  export type Query = GetProductVariantListSimpleQuery;\r\n  export type ProductVariants = (NonNullable<GetProductVariantListSimpleQuery['productVariants']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetProductVariantListSimpleQuery['productVariants']>)['items']>)[number]>;\r\n  export type FeaturedAsset = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantListSimpleQuery['productVariants']>)['items']>)[number]>['featuredAsset']>);\r\n  export type FocalPoint = (NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantListSimpleQuery['productVariants']>)['items']>)[number]>['featuredAsset']>)['focalPoint']>);\r\n  export type Product = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantListSimpleQuery['productVariants']>)['items']>)[number]>['product']>);\r\n  export type _FeaturedAsset = (NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantListSimpleQuery['productVariants']>)['items']>)[number]>['product']>)['featuredAsset']>);\r\n  export type _FocalPoint = (NonNullable<(NonNullable<(NonNullable<NonNullable<(NonNullable<(NonNullable<GetProductVariantListSimpleQuery['productVariants']>)['items']>)[number]>['product']>)['featuredAsset']>)['focalPoint']>);\r\n}\r\n\r\nexport namespace GetProductVariantList {\r\n  export type Variables = GetProductVariantListQueryVariables;\r\n  export type Query = GetProductVariantListQuery;\r\n  export type ProductVariants = (NonNullable<GetProductVariantListQuery['productVariants']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetProductVariantListQuery['productVariants']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetTagList {\r\n  export type Variables = GetTagListQueryVariables;\r\n  export type Query = GetTagListQuery;\r\n  export type Tags = (NonNullable<GetTagListQuery['tags']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetTagListQuery['tags']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetTag {\r\n  export type Variables = GetTagQueryVariables;\r\n  export type Query = GetTagQuery;\r\n  export type Tag = (NonNullable<GetTagQuery['tag']>);\r\n}\r\n\r\nexport namespace CreateTag {\r\n  export type Variables = CreateTagMutationVariables;\r\n  export type Mutation = CreateTagMutation;\r\n  export type CreateTag = (NonNullable<CreateTagMutation['createTag']>);\r\n}\r\n\r\nexport namespace UpdateTag {\r\n  export type Variables = UpdateTagMutationVariables;\r\n  export type Mutation = UpdateTagMutation;\r\n  export type UpdateTag = (NonNullable<UpdateTagMutation['updateTag']>);\r\n}\r\n\r\nexport namespace DeleteTag {\r\n  export type Variables = DeleteTagMutationVariables;\r\n  export type Mutation = DeleteTagMutation;\r\n  export type DeleteTag = (NonNullable<DeleteTagMutation['deleteTag']>);\r\n}\r\n\r\nexport namespace Promotion {\r\n  export type Fragment = PromotionFragment;\r\n  export type Conditions = NonNullable<(NonNullable<PromotionFragment['conditions']>)[number]>;\r\n  export type Actions = NonNullable<(NonNullable<PromotionFragment['actions']>)[number]>;\r\n}\r\n\r\nexport namespace GetPromotionList {\r\n  export type Variables = GetPromotionListQueryVariables;\r\n  export type Query = GetPromotionListQuery;\r\n  export type Promotions = (NonNullable<GetPromotionListQuery['promotions']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetPromotionListQuery['promotions']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetPromotion {\r\n  export type Variables = GetPromotionQueryVariables;\r\n  export type Query = GetPromotionQuery;\r\n  export type Promotion = (NonNullable<GetPromotionQuery['promotion']>);\r\n}\r\n\r\nexport namespace GetAdjustmentOperations {\r\n  export type Variables = GetAdjustmentOperationsQueryVariables;\r\n  export type Query = GetAdjustmentOperationsQuery;\r\n  export type PromotionConditions = NonNullable<(NonNullable<GetAdjustmentOperationsQuery['promotionConditions']>)[number]>;\r\n  export type PromotionActions = NonNullable<(NonNullable<GetAdjustmentOperationsQuery['promotionActions']>)[number]>;\r\n}\r\n\r\nexport namespace CreatePromotion {\r\n  export type Variables = CreatePromotionMutationVariables;\r\n  export type Mutation = CreatePromotionMutation;\r\n  export type CreatePromotion = (NonNullable<CreatePromotionMutation['createPromotion']>);\r\n}\r\n\r\nexport namespace UpdatePromotion {\r\n  export type Variables = UpdatePromotionMutationVariables;\r\n  export type Mutation = UpdatePromotionMutation;\r\n  export type UpdatePromotion = (NonNullable<UpdatePromotionMutation['updatePromotion']>);\r\n}\r\n\r\nexport namespace DeletePromotion {\r\n  export type Variables = DeletePromotionMutationVariables;\r\n  export type Mutation = DeletePromotionMutation;\r\n  export type DeletePromotion = (NonNullable<DeletePromotionMutation['deletePromotion']>);\r\n}\r\n\r\nexport namespace Country {\r\n  export type Fragment = CountryFragment;\r\n  export type Translations = NonNullable<(NonNullable<CountryFragment['translations']>)[number]>;\r\n}\r\n\r\nexport namespace GetCountryList {\r\n  export type Variables = GetCountryListQueryVariables;\r\n  export type Query = GetCountryListQuery;\r\n  export type Countries = (NonNullable<GetCountryListQuery['countries']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetCountryListQuery['countries']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetAvailableCountries {\r\n  export type Variables = GetAvailableCountriesQueryVariables;\r\n  export type Query = GetAvailableCountriesQuery;\r\n  export type Countries = (NonNullable<GetAvailableCountriesQuery['countries']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetAvailableCountriesQuery['countries']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetCountry {\r\n  export type Variables = GetCountryQueryVariables;\r\n  export type Query = GetCountryQuery;\r\n  export type Country = (NonNullable<GetCountryQuery['country']>);\r\n}\r\n\r\nexport namespace CreateCountry {\r\n  export type Variables = CreateCountryMutationVariables;\r\n  export type Mutation = CreateCountryMutation;\r\n  export type CreateCountry = (NonNullable<CreateCountryMutation['createCountry']>);\r\n}\r\n\r\nexport namespace UpdateCountry {\r\n  export type Variables = UpdateCountryMutationVariables;\r\n  export type Mutation = UpdateCountryMutation;\r\n  export type UpdateCountry = (NonNullable<UpdateCountryMutation['updateCountry']>);\r\n}\r\n\r\nexport namespace DeleteCountry {\r\n  export type Variables = DeleteCountryMutationVariables;\r\n  export type Mutation = DeleteCountryMutation;\r\n  export type DeleteCountry = (NonNullable<DeleteCountryMutation['deleteCountry']>);\r\n}\r\n\r\nexport namespace Zone {\r\n  export type Fragment = ZoneFragment;\r\n  export type Members = NonNullable<(NonNullable<ZoneFragment['members']>)[number]>;\r\n}\r\n\r\nexport namespace GetZones {\r\n  export type Variables = GetZonesQueryVariables;\r\n  export type Query = GetZonesQuery;\r\n  export type Zones = NonNullable<(NonNullable<GetZonesQuery['zones']>)[number]>;\r\n  export type Members = NonNullable<(NonNullable<NonNullable<(NonNullable<GetZonesQuery['zones']>)[number]>['members']>)[number]>;\r\n}\r\n\r\nexport namespace GetZone {\r\n  export type Variables = GetZoneQueryVariables;\r\n  export type Query = GetZoneQuery;\r\n  export type Zone = (NonNullable<GetZoneQuery['zone']>);\r\n}\r\n\r\nexport namespace CreateZone {\r\n  export type Variables = CreateZoneMutationVariables;\r\n  export type Mutation = CreateZoneMutation;\r\n  export type CreateZone = (NonNullable<CreateZoneMutation['createZone']>);\r\n}\r\n\r\nexport namespace UpdateZone {\r\n  export type Variables = UpdateZoneMutationVariables;\r\n  export type Mutation = UpdateZoneMutation;\r\n  export type UpdateZone = (NonNullable<UpdateZoneMutation['updateZone']>);\r\n}\r\n\r\nexport namespace DeleteZone {\r\n  export type Variables = DeleteZoneMutationVariables;\r\n  export type Mutation = DeleteZoneMutation;\r\n  export type DeleteZone = (NonNullable<DeleteZoneMutation['deleteZone']>);\r\n}\r\n\r\nexport namespace AddMembersToZone {\r\n  export type Variables = AddMembersToZoneMutationVariables;\r\n  export type Mutation = AddMembersToZoneMutation;\r\n  export type AddMembersToZone = (NonNullable<AddMembersToZoneMutation['addMembersToZone']>);\r\n}\r\n\r\nexport namespace RemoveMembersFromZone {\r\n  export type Variables = RemoveMembersFromZoneMutationVariables;\r\n  export type Mutation = RemoveMembersFromZoneMutation;\r\n  export type RemoveMembersFromZone = (NonNullable<RemoveMembersFromZoneMutation['removeMembersFromZone']>);\r\n}\r\n\r\nexport namespace TaxCategory {\r\n  export type Fragment = TaxCategoryFragment;\r\n}\r\n\r\nexport namespace GetTaxCategories {\r\n  export type Variables = GetTaxCategoriesQueryVariables;\r\n  export type Query = GetTaxCategoriesQuery;\r\n  export type TaxCategories = NonNullable<(NonNullable<GetTaxCategoriesQuery['taxCategories']>)[number]>;\r\n}\r\n\r\nexport namespace GetTaxCategory {\r\n  export type Variables = GetTaxCategoryQueryVariables;\r\n  export type Query = GetTaxCategoryQuery;\r\n  export type TaxCategory = (NonNullable<GetTaxCategoryQuery['taxCategory']>);\r\n}\r\n\r\nexport namespace CreateTaxCategory {\r\n  export type Variables = CreateTaxCategoryMutationVariables;\r\n  export type Mutation = CreateTaxCategoryMutation;\r\n  export type CreateTaxCategory = (NonNullable<CreateTaxCategoryMutation['createTaxCategory']>);\r\n}\r\n\r\nexport namespace UpdateTaxCategory {\r\n  export type Variables = UpdateTaxCategoryMutationVariables;\r\n  export type Mutation = UpdateTaxCategoryMutation;\r\n  export type UpdateTaxCategory = (NonNullable<UpdateTaxCategoryMutation['updateTaxCategory']>);\r\n}\r\n\r\nexport namespace DeleteTaxCategory {\r\n  export type Variables = DeleteTaxCategoryMutationVariables;\r\n  export type Mutation = DeleteTaxCategoryMutation;\r\n  export type DeleteTaxCategory = (NonNullable<DeleteTaxCategoryMutation['deleteTaxCategory']>);\r\n}\r\n\r\nexport namespace TaxRate {\r\n  export type Fragment = TaxRateFragment;\r\n  export type Category = (NonNullable<TaxRateFragment['category']>);\r\n  export type Zone = (NonNullable<TaxRateFragment['zone']>);\r\n  export type CustomerGroup = (NonNullable<TaxRateFragment['customerGroup']>);\r\n}\r\n\r\nexport namespace GetTaxRateList {\r\n  export type Variables = GetTaxRateListQueryVariables;\r\n  export type Query = GetTaxRateListQuery;\r\n  export type TaxRates = (NonNullable<GetTaxRateListQuery['taxRates']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetTaxRateListQuery['taxRates']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetTaxRateListSimple {\r\n  export type Variables = GetTaxRateListSimpleQueryVariables;\r\n  export type Query = GetTaxRateListSimpleQuery;\r\n  export type TaxRates = (NonNullable<GetTaxRateListSimpleQuery['taxRates']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetTaxRateListSimpleQuery['taxRates']>)['items']>)[number]>;\r\n  export type Category = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetTaxRateListSimpleQuery['taxRates']>)['items']>)[number]>['category']>);\r\n  export type Zone = (NonNullable<NonNullable<(NonNullable<(NonNullable<GetTaxRateListSimpleQuery['taxRates']>)['items']>)[number]>['zone']>);\r\n}\r\n\r\nexport namespace GetTaxRate {\r\n  export type Variables = GetTaxRateQueryVariables;\r\n  export type Query = GetTaxRateQuery;\r\n  export type TaxRate = (NonNullable<GetTaxRateQuery['taxRate']>);\r\n}\r\n\r\nexport namespace CreateTaxRate {\r\n  export type Variables = CreateTaxRateMutationVariables;\r\n  export type Mutation = CreateTaxRateMutation;\r\n  export type CreateTaxRate = (NonNullable<CreateTaxRateMutation['createTaxRate']>);\r\n}\r\n\r\nexport namespace UpdateTaxRate {\r\n  export type Variables = UpdateTaxRateMutationVariables;\r\n  export type Mutation = UpdateTaxRateMutation;\r\n  export type UpdateTaxRate = (NonNullable<UpdateTaxRateMutation['updateTaxRate']>);\r\n}\r\n\r\nexport namespace DeleteTaxRate {\r\n  export type Variables = DeleteTaxRateMutationVariables;\r\n  export type Mutation = DeleteTaxRateMutation;\r\n  export type DeleteTaxRate = (NonNullable<DeleteTaxRateMutation['deleteTaxRate']>);\r\n}\r\n\r\nexport namespace Channel {\r\n  export type Fragment = ChannelFragment;\r\n  export type DefaultShippingZone = (NonNullable<ChannelFragment['defaultShippingZone']>);\r\n  export type DefaultTaxZone = (NonNullable<ChannelFragment['defaultTaxZone']>);\r\n}\r\n\r\nexport namespace GetChannels {\r\n  export type Variables = GetChannelsQueryVariables;\r\n  export type Query = GetChannelsQuery;\r\n  export type Channels = NonNullable<(NonNullable<GetChannelsQuery['channels']>)[number]>;\r\n}\r\n\r\nexport namespace GetChannel {\r\n  export type Variables = GetChannelQueryVariables;\r\n  export type Query = GetChannelQuery;\r\n  export type Channel = (NonNullable<GetChannelQuery['channel']>);\r\n}\r\n\r\nexport namespace GetActiveChannel {\r\n  export type Variables = GetActiveChannelQueryVariables;\r\n  export type Query = GetActiveChannelQuery;\r\n  export type ActiveChannel = (NonNullable<GetActiveChannelQuery['activeChannel']>);\r\n}\r\n\r\nexport namespace CreateChannel {\r\n  export type Variables = CreateChannelMutationVariables;\r\n  export type Mutation = CreateChannelMutation;\r\n  export type CreateChannel = (NonNullable<CreateChannelMutation['createChannel']>);\r\n}\r\n\r\nexport namespace UpdateChannel {\r\n  export type Variables = UpdateChannelMutationVariables;\r\n  export type Mutation = UpdateChannelMutation;\r\n  export type UpdateChannel = (NonNullable<UpdateChannelMutation['updateChannel']>);\r\n}\r\n\r\nexport namespace DeleteChannel {\r\n  export type Variables = DeleteChannelMutationVariables;\r\n  export type Mutation = DeleteChannelMutation;\r\n  export type DeleteChannel = (NonNullable<DeleteChannelMutation['deleteChannel']>);\r\n}\r\n\r\nexport namespace PaymentMethod {\r\n  export type Fragment = PaymentMethodFragment;\r\n  export type Checker = (NonNullable<PaymentMethodFragment['checker']>);\r\n  export type Handler = (NonNullable<PaymentMethodFragment['handler']>);\r\n}\r\n\r\nexport namespace GetPaymentMethodList {\r\n  export type Variables = GetPaymentMethodListQueryVariables;\r\n  export type Query = GetPaymentMethodListQuery;\r\n  export type PaymentMethods = (NonNullable<GetPaymentMethodListQuery['paymentMethods']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetPaymentMethodListQuery['paymentMethods']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetPaymentMethodOperations {\r\n  export type Variables = GetPaymentMethodOperationsQueryVariables;\r\n  export type Query = GetPaymentMethodOperationsQuery;\r\n  export type PaymentMethodEligibilityCheckers = NonNullable<(NonNullable<GetPaymentMethodOperationsQuery['paymentMethodEligibilityCheckers']>)[number]>;\r\n  export type PaymentMethodHandlers = NonNullable<(NonNullable<GetPaymentMethodOperationsQuery['paymentMethodHandlers']>)[number]>;\r\n}\r\n\r\nexport namespace GetPaymentMethod {\r\n  export type Variables = GetPaymentMethodQueryVariables;\r\n  export type Query = GetPaymentMethodQuery;\r\n  export type PaymentMethod = (NonNullable<GetPaymentMethodQuery['paymentMethod']>);\r\n}\r\n\r\nexport namespace CreatePaymentMethod {\r\n  export type Variables = CreatePaymentMethodMutationVariables;\r\n  export type Mutation = CreatePaymentMethodMutation;\r\n  export type CreatePaymentMethod = (NonNullable<CreatePaymentMethodMutation['createPaymentMethod']>);\r\n}\r\n\r\nexport namespace UpdatePaymentMethod {\r\n  export type Variables = UpdatePaymentMethodMutationVariables;\r\n  export type Mutation = UpdatePaymentMethodMutation;\r\n  export type UpdatePaymentMethod = (NonNullable<UpdatePaymentMethodMutation['updatePaymentMethod']>);\r\n}\r\n\r\nexport namespace DeletePaymentMethod {\r\n  export type Variables = DeletePaymentMethodMutationVariables;\r\n  export type Mutation = DeletePaymentMethodMutation;\r\n  export type DeletePaymentMethod = (NonNullable<DeletePaymentMethodMutation['deletePaymentMethod']>);\r\n}\r\n\r\nexport namespace GlobalSettings {\r\n  export type Fragment = GlobalSettingsFragment;\r\n  export type ServerConfig = (NonNullable<GlobalSettingsFragment['serverConfig']>);\r\n  export type Permissions = NonNullable<(NonNullable<(NonNullable<GlobalSettingsFragment['serverConfig']>)['permissions']>)[number]>;\r\n  export type OrderProcess = NonNullable<(NonNullable<(NonNullable<GlobalSettingsFragment['serverConfig']>)['orderProcess']>)[number]>;\r\n}\r\n\r\nexport namespace GetGlobalSettings {\r\n  export type Variables = GetGlobalSettingsQueryVariables;\r\n  export type Query = GetGlobalSettingsQuery;\r\n  export type GlobalSettings = (NonNullable<GetGlobalSettingsQuery['globalSettings']>);\r\n}\r\n\r\nexport namespace UpdateGlobalSettings {\r\n  export type Variables = UpdateGlobalSettingsMutationVariables;\r\n  export type Mutation = UpdateGlobalSettingsMutation;\r\n  export type UpdateGlobalSettings = (NonNullable<UpdateGlobalSettingsMutation['updateGlobalSettings']>);\r\n}\r\n\r\nexport namespace CustomFieldConfig {\r\n  export type Fragment = CustomFieldConfigFragment;\r\n  export type Description = NonNullable<(NonNullable<CustomFieldConfigFragment['description']>)[number]>;\r\n  export type Label = NonNullable<(NonNullable<CustomFieldConfigFragment['label']>)[number]>;\r\n}\r\n\r\nexport namespace StringCustomField {\r\n  export type Fragment = StringCustomFieldFragment;\r\n  export type Options = NonNullable<(NonNullable<StringCustomFieldFragment['options']>)[number]>;\r\n  export type Label = NonNullable<(NonNullable<NonNullable<(NonNullable<StringCustomFieldFragment['options']>)[number]>['label']>)[number]>;\r\n}\r\n\r\nexport namespace LocaleStringCustomField {\r\n  export type Fragment = LocaleStringCustomFieldFragment;\r\n}\r\n\r\nexport namespace TextCustomField {\r\n  export type Fragment = TextCustomFieldFragment;\r\n}\r\n\r\nexport namespace BooleanCustomField {\r\n  export type Fragment = BooleanCustomFieldFragment;\r\n}\r\n\r\nexport namespace IntCustomField {\r\n  export type Fragment = IntCustomFieldFragment;\r\n}\r\n\r\nexport namespace FloatCustomField {\r\n  export type Fragment = FloatCustomFieldFragment;\r\n}\r\n\r\nexport namespace DateTimeCustomField {\r\n  export type Fragment = DateTimeCustomFieldFragment;\r\n}\r\n\r\nexport namespace RelationCustomField {\r\n  export type Fragment = RelationCustomFieldFragment;\r\n}\r\n\r\nexport namespace CustomFields {\r\n  export type Fragment = CustomFieldsFragment;\r\n  export type StringCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'StringCustomFieldConfig' }>);\r\n  export type LocaleStringCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'LocaleStringCustomFieldConfig' }>);\r\n  export type TextCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'TextCustomFieldConfig' }>);\r\n  export type BooleanCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'BooleanCustomFieldConfig' }>);\r\n  export type IntCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'IntCustomFieldConfig' }>);\r\n  export type FloatCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'FloatCustomFieldConfig' }>);\r\n  export type DateTimeCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'DateTimeCustomFieldConfig' }>);\r\n  export type RelationCustomFieldConfigInlineFragment = (DiscriminateUnion<CustomFieldsFragment, { __typename?: 'RelationCustomFieldConfig' }>);\r\n}\r\n\r\nexport namespace GetServerConfig {\r\n  export type Variables = GetServerConfigQueryVariables;\r\n  export type Query = GetServerConfigQuery;\r\n  export type GlobalSettings = (NonNullable<GetServerConfigQuery['globalSettings']>);\r\n  export type ServerConfig = (NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>);\r\n  export type OrderProcess = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['orderProcess']>)[number]>;\r\n  export type Permissions = NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['permissions']>)[number]>;\r\n  export type CustomFieldConfig = (NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>);\r\n  export type Address = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Address']>)[number]>;\r\n  export type Administrator = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Administrator']>)[number]>;\r\n  export type Asset = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Asset']>)[number]>;\r\n  export type Channel = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Channel']>)[number]>;\r\n  export type Collection = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Collection']>)[number]>;\r\n  export type Country = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Country']>)[number]>;\r\n  export type Customer = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Customer']>)[number]>;\r\n  export type CustomerGroup = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['CustomerGroup']>)[number]>;\r\n  export type Facet = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Facet']>)[number]>;\r\n  export type FacetValue = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['FacetValue']>)[number]>;\r\n  export type Fulfillment = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Fulfillment']>)[number]>;\r\n  export type _GlobalSettings = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['GlobalSettings']>)[number]>;\r\n  export type Order = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Order']>)[number]>;\r\n  export type OrderLine = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['OrderLine']>)[number]>;\r\n  export type PaymentMethod = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['PaymentMethod']>)[number]>;\r\n  export type Product = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Product']>)[number]>;\r\n  export type ProductOption = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['ProductOption']>)[number]>;\r\n  export type ProductOptionGroup = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['ProductOptionGroup']>)[number]>;\r\n  export type ProductVariant = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['ProductVariant']>)[number]>;\r\n  export type Promotion = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Promotion']>)[number]>;\r\n  export type ShippingMethod = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['ShippingMethod']>)[number]>;\r\n  export type TaxCategory = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['TaxCategory']>)[number]>;\r\n  export type TaxRate = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['TaxRate']>)[number]>;\r\n  export type User = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['User']>)[number]>;\r\n  export type Zone = NonNullable<(NonNullable<(NonNullable<(NonNullable<(NonNullable<GetServerConfigQuery['globalSettings']>)['serverConfig']>)['customFieldConfig']>)['Zone']>)[number]>;\r\n}\r\n\r\nexport namespace JobInfo {\r\n  export type Fragment = JobInfoFragment;\r\n}\r\n\r\nexport namespace GetJobInfo {\r\n  export type Variables = GetJobInfoQueryVariables;\r\n  export type Query = GetJobInfoQuery;\r\n  export type Job = (NonNullable<GetJobInfoQuery['job']>);\r\n}\r\n\r\nexport namespace GetAllJobs {\r\n  export type Variables = GetAllJobsQueryVariables;\r\n  export type Query = GetAllJobsQuery;\r\n  export type Jobs = (NonNullable<GetAllJobsQuery['jobs']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetAllJobsQuery['jobs']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetJobsById {\r\n  export type Variables = GetJobsByIdQueryVariables;\r\n  export type Query = GetJobsByIdQuery;\r\n  export type JobsById = NonNullable<(NonNullable<GetJobsByIdQuery['jobsById']>)[number]>;\r\n}\r\n\r\nexport namespace GetJobQueueList {\r\n  export type Variables = GetJobQueueListQueryVariables;\r\n  export type Query = GetJobQueueListQuery;\r\n  export type JobQueues = NonNullable<(NonNullable<GetJobQueueListQuery['jobQueues']>)[number]>;\r\n}\r\n\r\nexport namespace CancelJob {\r\n  export type Variables = CancelJobMutationVariables;\r\n  export type Mutation = CancelJobMutation;\r\n  export type CancelJob = (NonNullable<CancelJobMutation['cancelJob']>);\r\n}\r\n\r\nexport namespace Reindex {\r\n  export type Variables = ReindexMutationVariables;\r\n  export type Mutation = ReindexMutation;\r\n  export type Reindex = (NonNullable<ReindexMutation['reindex']>);\r\n}\r\n\r\nexport namespace GetPendingSearchIndexUpdates {\r\n  export type Variables = GetPendingSearchIndexUpdatesQueryVariables;\r\n  export type Query = GetPendingSearchIndexUpdatesQuery;\r\n}\r\n\r\nexport namespace RunPendingSearchIndexUpdates {\r\n  export type Variables = RunPendingSearchIndexUpdatesMutationVariables;\r\n  export type Mutation = RunPendingSearchIndexUpdatesMutation;\r\n  export type RunPendingSearchIndexUpdates = (NonNullable<RunPendingSearchIndexUpdatesMutation['runPendingSearchIndexUpdates']>);\r\n}\r\n\r\nexport namespace ConfigurableOperation {\r\n  export type Fragment = ConfigurableOperationFragment;\r\n  export type Args = NonNullable<(NonNullable<ConfigurableOperationFragment['args']>)[number]>;\r\n}\r\n\r\nexport namespace ConfigurableOperationDef {\r\n  export type Fragment = ConfigurableOperationDefFragment;\r\n  export type Args = NonNullable<(NonNullable<ConfigurableOperationDefFragment['args']>)[number]>;\r\n}\r\n\r\nexport namespace ErrorResult {\r\n  export type Fragment = ErrorResultFragment;\r\n}\r\n\r\nexport namespace ShippingMethod {\r\n  export type Fragment = ShippingMethodFragment;\r\n  export type Checker = (NonNullable<ShippingMethodFragment['checker']>);\r\n  export type Calculator = (NonNullable<ShippingMethodFragment['calculator']>);\r\n  export type Translations = NonNullable<(NonNullable<ShippingMethodFragment['translations']>)[number]>;\r\n}\r\n\r\nexport namespace GetShippingMethodList {\r\n  export type Variables = GetShippingMethodListQueryVariables;\r\n  export type Query = GetShippingMethodListQuery;\r\n  export type ShippingMethods = (NonNullable<GetShippingMethodListQuery['shippingMethods']>);\r\n  export type Items = NonNullable<(NonNullable<(NonNullable<GetShippingMethodListQuery['shippingMethods']>)['items']>)[number]>;\r\n}\r\n\r\nexport namespace GetShippingMethod {\r\n  export type Variables = GetShippingMethodQueryVariables;\r\n  export type Query = GetShippingMethodQuery;\r\n  export type ShippingMethod = (NonNullable<GetShippingMethodQuery['shippingMethod']>);\r\n}\r\n\r\nexport namespace GetShippingMethodOperations {\r\n  export type Variables = GetShippingMethodOperationsQueryVariables;\r\n  export type Query = GetShippingMethodOperationsQuery;\r\n  export type ShippingEligibilityCheckers = NonNullable<(NonNullable<GetShippingMethodOperationsQuery['shippingEligibilityCheckers']>)[number]>;\r\n  export type ShippingCalculators = NonNullable<(NonNullable<GetShippingMethodOperationsQuery['shippingCalculators']>)[number]>;\r\n  export type FulfillmentHandlers = NonNullable<(NonNullable<GetShippingMethodOperationsQuery['fulfillmentHandlers']>)[number]>;\r\n}\r\n\r\nexport namespace CreateShippingMethod {\r\n  export type Variables = CreateShippingMethodMutationVariables;\r\n  export type Mutation = CreateShippingMethodMutation;\r\n  export type CreateShippingMethod = (NonNullable<CreateShippingMethodMutation['createShippingMethod']>);\r\n}\r\n\r\nexport namespace UpdateShippingMethod {\r\n  export type Variables = UpdateShippingMethodMutationVariables;\r\n  export type Mutation = UpdateShippingMethodMutation;\r\n  export type UpdateShippingMethod = (NonNullable<UpdateShippingMethodMutation['updateShippingMethod']>);\r\n}\r\n\r\nexport namespace DeleteShippingMethod {\r\n  export type Variables = DeleteShippingMethodMutationVariables;\r\n  export type Mutation = DeleteShippingMethodMutation;\r\n  export type DeleteShippingMethod = (NonNullable<DeleteShippingMethodMutation['deleteShippingMethod']>);\r\n}\r\n\r\nexport namespace TestShippingMethod {\r\n  export type Variables = TestShippingMethodQueryVariables;\r\n  export type Query = TestShippingMethodQuery;\r\n  export type TestShippingMethod = (NonNullable<TestShippingMethodQuery['testShippingMethod']>);\r\n  export type Quote = (NonNullable<(NonNullable<TestShippingMethodQuery['testShippingMethod']>)['quote']>);\r\n}\r\n\r\nexport namespace TestEligibleShippingMethods {\r\n  export type Variables = TestEligibleShippingMethodsQueryVariables;\r\n  export type Query = TestEligibleShippingMethodsQuery;\r\n  export type TestEligibleShippingMethods = NonNullable<(NonNullable<TestEligibleShippingMethodsQuery['testEligibleShippingMethods']>)[number]>;\r\n}\r\n","import { pick } from '@vendure/common/lib/pick';\r\n\r\nimport {\r\n    AddOptionGroupToProduct,\r\n    AddOptionToGroup,\r\n    AssignProductsToChannel,\r\n    AssignProductsToChannelInput,\r\n    AssignProductVariantsToChannelInput,\r\n    AssignVariantsToChannel,\r\n    CreateAssets,\r\n    CreateProduct,\r\n    CreateProductInput,\r\n    CreateProductOptionGroup,\r\n    CreateProductOptionGroupInput,\r\n    CreateProductOptionInput,\r\n    CreateProductVariantInput,\r\n    CreateProductVariants,\r\n    CreateTag,\r\n    CreateTagInput,\r\n    DeleteAssets,\r\n    DeleteProduct,\r\n    DeleteProductVariant,\r\n    DeleteTag,\r\n    GetAsset,\r\n    GetAssetList,\r\n    GetPendingSearchIndexUpdates,\r\n    GetProductList,\r\n    GetProductOptionGroup,\r\n    GetProductOptionGroups,\r\n    GetProductSimple,\r\n    GetProductVariant,\r\n    GetProductVariantList,\r\n    GetProductVariantListSimple,\r\n    GetProductVariantOptions,\r\n    GetProductWithVariants,\r\n    GetTag,\r\n    GetTagList,\r\n    ProductListOptions,\r\n    ProductSelectorSearch,\r\n    ProductVariantListOptions,\r\n    Reindex,\r\n    RemoveOptionGroupFromProduct,\r\n    RemoveProductsFromChannel,\r\n    RemoveProductsFromChannelInput,\r\n    RemoveProductVariantsFromChannelInput,\r\n    RemoveVariantsFromChannel,\r\n    RunPendingSearchIndexUpdates,\r\n    SearchProducts,\r\n    SortOrder,\r\n    TagListOptions,\r\n    UpdateAsset,\r\n    UpdateAssetInput,\r\n    UpdateProduct,\r\n    UpdateProductInput,\r\n    UpdateProductOption,\r\n    UpdateProductOptionGroup,\r\n    UpdateProductOptionGroupInput,\r\n    UpdateProductOptionInput,\r\n    UpdateProductVariantInput,\r\n    UpdateProductVariants,\r\n    UpdateTag,\r\n    UpdateTagInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    ADD_OPTION_GROUP_TO_PRODUCT,\r\n    ADD_OPTION_TO_GROUP,\r\n    ASSIGN_PRODUCTS_TO_CHANNEL,\r\n    ASSIGN_VARIANTS_TO_CHANNEL,\r\n    CREATE_ASSETS,\r\n    CREATE_PRODUCT,\r\n    CREATE_PRODUCT_OPTION_GROUP,\r\n    CREATE_PRODUCT_VARIANTS,\r\n    CREATE_TAG,\r\n    DELETE_ASSETS,\r\n    DELETE_PRODUCT,\r\n    DELETE_PRODUCT_VARIANT,\r\n    DELETE_TAG,\r\n    GET_ASSET,\r\n    GET_ASSET_LIST,\r\n    GET_PRODUCT_LIST,\r\n    GET_PRODUCT_OPTION_GROUP,\r\n    GET_PRODUCT_OPTION_GROUPS,\r\n    GET_PRODUCT_SIMPLE,\r\n    GET_PRODUCT_VARIANT,\r\n    GET_PRODUCT_VARIANT_LIST,\r\n    GET_PRODUCT_VARIANT_LIST_SIMPLE,\r\n    GET_PRODUCT_VARIANT_OPTIONS,\r\n    GET_PRODUCT_WITH_VARIANTS,\r\n    GET_TAG,\r\n    GET_TAG_LIST,\r\n    PRODUCT_SELECTOR_SEARCH,\r\n    REMOVE_OPTION_GROUP_FROM_PRODUCT,\r\n    REMOVE_PRODUCTS_FROM_CHANNEL,\r\n    REMOVE_VARIANTS_FROM_CHANNEL,\r\n    SEARCH_PRODUCTS,\r\n    UPDATE_ASSET,\r\n    UPDATE_PRODUCT,\r\n    UPDATE_PRODUCT_OPTION,\r\n    UPDATE_PRODUCT_OPTION_GROUP,\r\n    UPDATE_PRODUCT_VARIANTS,\r\n    UPDATE_TAG,\r\n} from '../definitions/product-definitions';\r\nimport {\r\n    GET_PENDING_SEARCH_INDEX_UPDATES,\r\n    REINDEX,\r\n    RUN_PENDING_SEARCH_INDEX_UPDATES,\r\n} from '../definitions/settings-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class ProductDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    searchProducts(term: string, take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<SearchProducts.Query, SearchProducts.Variables>(SEARCH_PRODUCTS, {\r\n            input: {\r\n                term,\r\n                take,\r\n                skip,\r\n                groupByProduct: true,\r\n            },\r\n        });\r\n    }\r\n\r\n    productSelectorSearch(term: string, take: number) {\r\n        return this.baseDataService.query<ProductSelectorSearch.Query, ProductSelectorSearch.Variables>(\r\n            PRODUCT_SELECTOR_SEARCH,\r\n            {\r\n                take,\r\n                term,\r\n            },\r\n        );\r\n    }\r\n\r\n    reindex() {\r\n        return this.baseDataService.mutate<Reindex.Mutation>(REINDEX);\r\n    }\r\n\r\n    getPendingSearchIndexUpdates() {\r\n        return this.baseDataService.query<GetPendingSearchIndexUpdates.Query>(\r\n            GET_PENDING_SEARCH_INDEX_UPDATES,\r\n        );\r\n    }\r\n\r\n    runPendingSearchIndexUpdates() {\r\n        return this.baseDataService.mutate<RunPendingSearchIndexUpdates.Mutation>(\r\n            RUN_PENDING_SEARCH_INDEX_UPDATES,\r\n        );\r\n    }\r\n\r\n    getProducts(options: ProductListOptions) {\r\n        return this.baseDataService.query<GetProductList.Query, GetProductList.Variables>(GET_PRODUCT_LIST, {\r\n            options,\r\n        });\r\n    }\r\n\r\n    getProduct(id: string, variantListOptions?: ProductVariantListOptions) {\r\n        return this.baseDataService.query<GetProductWithVariants.Query, GetProductWithVariants.Variables>(\r\n            GET_PRODUCT_WITH_VARIANTS,\r\n            {\r\n                id,\r\n                variantListOptions,\r\n            },\r\n        );\r\n    }\r\n\r\n    getProductSimple(id: string) {\r\n        return this.baseDataService.query<GetProductSimple.Query, GetProductSimple.Variables>(\r\n            GET_PRODUCT_SIMPLE,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    getProductVariantsSimple(options: ProductVariantListOptions, productId?: string) {\r\n        return this.baseDataService.query<\r\n            GetProductVariantListSimple.Query,\r\n            GetProductVariantListSimple.Variables\r\n        >(GET_PRODUCT_VARIANT_LIST_SIMPLE, { options, productId });\r\n    }\r\n\r\n    getProductVariants(options: ProductVariantListOptions, productId?: string) {\r\n        return this.baseDataService.query<GetProductVariantList.Query, GetProductVariantList.Variables>(\r\n            GET_PRODUCT_VARIANT_LIST,\r\n            { options, productId },\r\n        );\r\n    }\r\n\r\n    getProductVariant(id: string) {\r\n        return this.baseDataService.query<GetProductVariant.Query, GetProductVariant.Variables>(\r\n            GET_PRODUCT_VARIANT,\r\n            { id },\r\n        );\r\n    }\r\n\r\n    getProductVariantsOptions(id: string) {\r\n        return this.baseDataService.query<GetProductVariantOptions.Query, GetProductVariantOptions.Variables>(\r\n            GET_PRODUCT_VARIANT_OPTIONS,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    getProductOptionGroup(id: string) {\r\n        return this.baseDataService.query<GetProductOptionGroup.Query, GetProductOptionGroup.Variables>(\r\n            GET_PRODUCT_OPTION_GROUP,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    createProduct(product: CreateProductInput) {\r\n        const input: CreateProduct.Variables = {\r\n            input: pick(product, [\r\n                'enabled',\r\n                'translations',\r\n                'customFields',\r\n                'assetIds',\r\n                'featuredAssetId',\r\n                'facetValueIds',\r\n            ]),\r\n        };\r\n        return this.baseDataService.mutate<CreateProduct.Mutation, CreateProduct.Variables>(\r\n            CREATE_PRODUCT,\r\n            input,\r\n        );\r\n    }\r\n\r\n    updateProduct(product: UpdateProductInput) {\r\n        const input: UpdateProduct.Variables = {\r\n            input: pick(product, [\r\n                'id',\r\n                'enabled',\r\n                'translations',\r\n                'customFields',\r\n                'assetIds',\r\n                'featuredAssetId',\r\n                'facetValueIds',\r\n            ]),\r\n        };\r\n        return this.baseDataService.mutate<UpdateProduct.Mutation, UpdateProduct.Variables>(\r\n            UPDATE_PRODUCT,\r\n            input,\r\n        );\r\n    }\r\n\r\n    deleteProduct(id: string) {\r\n        return this.baseDataService.mutate<DeleteProduct.Mutation, DeleteProduct.Variables>(DELETE_PRODUCT, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    createProductVariants(input: CreateProductVariantInput[]) {\r\n        return this.baseDataService.mutate<CreateProductVariants.Mutation, CreateProductVariants.Variables>(\r\n            CREATE_PRODUCT_VARIANTS,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateProductVariants(variants: UpdateProductVariantInput[]) {\r\n        const input: UpdateProductVariants.Variables = {\r\n            input: variants.map(\r\n                pick([\r\n                    'id',\r\n                    'enabled',\r\n                    'translations',\r\n                    'sku',\r\n                    'price',\r\n                    'taxCategoryId',\r\n                    'facetValueIds',\r\n                    'featuredAssetId',\r\n                    'assetIds',\r\n                    'trackInventory',\r\n                    'outOfStockThreshold',\r\n                    'useGlobalOutOfStockThreshold',\r\n                    'stockOnHand',\r\n                    'customFields',\r\n                ]),\r\n            ),\r\n        };\r\n        return this.baseDataService.mutate<UpdateProductVariants.Mutation, UpdateProductVariants.Variables>(\r\n            UPDATE_PRODUCT_VARIANTS,\r\n            input,\r\n        );\r\n    }\r\n\r\n    deleteProductVariant(id: string) {\r\n        return this.baseDataService.mutate<DeleteProductVariant.Mutation, DeleteProductVariant.Variables>(\r\n            DELETE_PRODUCT_VARIANT,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    createProductOptionGroups(productOptionGroup: CreateProductOptionGroupInput) {\r\n        const input: CreateProductOptionGroup.Variables = {\r\n            input: productOptionGroup,\r\n        };\r\n        return this.baseDataService.mutate<\r\n            CreateProductOptionGroup.Mutation,\r\n            CreateProductOptionGroup.Variables\r\n        >(CREATE_PRODUCT_OPTION_GROUP, input);\r\n    }\r\n\r\n    addOptionGroupToProduct(variables: AddOptionGroupToProduct.Variables) {\r\n        return this.baseDataService.mutate<\r\n            AddOptionGroupToProduct.Mutation,\r\n            AddOptionGroupToProduct.Variables\r\n        >(ADD_OPTION_GROUP_TO_PRODUCT, variables);\r\n    }\r\n\r\n    addOptionToGroup(input: CreateProductOptionInput) {\r\n        return this.baseDataService.mutate<AddOptionToGroup.Mutation, AddOptionToGroup.Variables>(\r\n            ADD_OPTION_TO_GROUP,\r\n            { input },\r\n        );\r\n    }\r\n\r\n    removeOptionGroupFromProduct(variables: RemoveOptionGroupFromProduct.Variables) {\r\n        return this.baseDataService.mutate<\r\n            RemoveOptionGroupFromProduct.Mutation,\r\n            RemoveOptionGroupFromProduct.Variables\r\n        >(REMOVE_OPTION_GROUP_FROM_PRODUCT, variables);\r\n    }\r\n\r\n    updateProductOption(input: UpdateProductOptionInput) {\r\n        return this.baseDataService.mutate<UpdateProductOption.Mutation, UpdateProductOption.Variables>(\r\n            UPDATE_PRODUCT_OPTION,\r\n            {\r\n                input: pick(input, ['id', 'code', 'translations', 'customFields']),\r\n            },\r\n        );\r\n    }\r\n\r\n    updateProductOptionGroup(input: UpdateProductOptionGroupInput) {\r\n        return this.baseDataService.mutate<\r\n            UpdateProductOptionGroup.Mutation,\r\n            UpdateProductOptionGroup.Variables\r\n        >(UPDATE_PRODUCT_OPTION_GROUP, {\r\n            input: pick(input, ['id', 'code', 'translations', 'customFields']),\r\n        });\r\n    }\r\n\r\n    getProductOptionGroups(filterTerm?: string) {\r\n        return this.baseDataService.query<GetProductOptionGroups.Query, GetProductOptionGroups.Variables>(\r\n            GET_PRODUCT_OPTION_GROUPS,\r\n            {\r\n                filterTerm,\r\n            },\r\n        );\r\n    }\r\n\r\n    getAssetList(take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<GetAssetList.Query, GetAssetList.Variables>(GET_ASSET_LIST, {\r\n            options: {\r\n                skip,\r\n                take,\r\n                sort: {\r\n                    createdAt: SortOrder.DESC,\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    getAsset(id: string) {\r\n        return this.baseDataService.query<GetAsset.Query, GetAsset.Variables>(GET_ASSET, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    createAssets(files: File[]) {\r\n        return this.baseDataService.mutate<CreateAssets.Mutation, CreateAssets.Variables>(CREATE_ASSETS, {\r\n            input: files.map(file => ({ file })),\r\n        });\r\n    }\r\n\r\n    updateAsset(input: UpdateAssetInput) {\r\n        return this.baseDataService.mutate<UpdateAsset.Mutation, UpdateAsset.Variables>(UPDATE_ASSET, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    deleteAssets(ids: string[], force: boolean) {\r\n        return this.baseDataService.mutate<DeleteAssets.Mutation, DeleteAssets.Variables>(DELETE_ASSETS, {\r\n            input: {\r\n                assetIds: ids,\r\n                force,\r\n            },\r\n        });\r\n    }\r\n\r\n    assignProductsToChannel(input: AssignProductsToChannelInput) {\r\n        return this.baseDataService.mutate<\r\n            AssignProductsToChannel.Mutation,\r\n            AssignProductsToChannel.Variables\r\n        >(ASSIGN_PRODUCTS_TO_CHANNEL, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    removeProductsFromChannel(input: RemoveProductsFromChannelInput) {\r\n        return this.baseDataService.mutate<\r\n            RemoveProductsFromChannel.Mutation,\r\n            RemoveProductsFromChannel.Variables\r\n        >(REMOVE_PRODUCTS_FROM_CHANNEL, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    assignVariantsToChannel(input: AssignProductVariantsToChannelInput) {\r\n        return this.baseDataService.mutate<\r\n            AssignVariantsToChannel.Mutation,\r\n            AssignVariantsToChannel.Variables\r\n        >(ASSIGN_VARIANTS_TO_CHANNEL, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    removeVariantsFromChannel(input: RemoveProductVariantsFromChannelInput) {\r\n        return this.baseDataService.mutate<\r\n            RemoveVariantsFromChannel.Mutation,\r\n            RemoveVariantsFromChannel.Variables\r\n        >(REMOVE_VARIANTS_FROM_CHANNEL, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    getTag(id: string) {\r\n        return this.baseDataService.query<GetTag.Query, GetTag.Variables>(GET_TAG, { id });\r\n    }\r\n\r\n    getTagList(options?: TagListOptions) {\r\n        return this.baseDataService.query<GetTagList.Query, GetTagList.Variables>(GET_TAG_LIST, { options });\r\n    }\r\n\r\n    createTag(input: CreateTagInput) {\r\n        return this.baseDataService.mutate<CreateTag.Mutation, CreateTag.Variables>(CREATE_TAG, { input });\r\n    }\r\n\r\n    updateTag(input: UpdateTagInput) {\r\n        return this.baseDataService.mutate<UpdateTag.Mutation, UpdateTag.Variables>(UPDATE_TAG, { input });\r\n    }\r\n\r\n    deleteTag(id: string) {\r\n        return this.baseDataService.mutate<DeleteTag.Mutation, DeleteTag.Variables>(DELETE_TAG, { id });\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nimport {\r\n    CONFIGURABLE_OPERATION_DEF_FRAGMENT,\r\n    CONFIGURABLE_OPERATION_FRAGMENT,\r\n    ERROR_RESULT_FRAGMENT,\r\n} from './shared-definitions';\r\n\r\nexport const PROMOTION_FRAGMENT = gql`\r\n    fragment Promotion on Promotion {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        enabled\r\n        couponCode\r\n        perCustomerUsageLimit\r\n        startsAt\r\n        endsAt\r\n        conditions {\r\n            ...ConfigurableOperation\r\n        }\r\n        actions {\r\n            ...ConfigurableOperation\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PROMOTION_LIST = gql`\r\n    query GetPromotionList($options: PromotionListOptions) {\r\n        promotions(options: $options) {\r\n            items {\r\n                ...Promotion\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n`;\r\n\r\nexport const GET_PROMOTION = gql`\r\n    query GetPromotion($id: ID!) {\r\n        promotion(id: $id) {\r\n            ...Promotion\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n`;\r\n\r\nexport const GET_ADJUSTMENT_OPERATIONS = gql`\r\n    query GetAdjustmentOperations {\r\n        promotionConditions {\r\n            ...ConfigurableOperationDef\r\n        }\r\n        promotionActions {\r\n            ...ConfigurableOperationDef\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_DEF_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_PROMOTION = gql`\r\n    mutation CreatePromotion($input: CreatePromotionInput!) {\r\n        createPromotion(input: $input) {\r\n            ...Promotion\r\n            ...ErrorResult\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n    ${ERROR_RESULT_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_PROMOTION = gql`\r\n    mutation UpdatePromotion($input: UpdatePromotionInput!) {\r\n        updatePromotion(input: $input) {\r\n            ...Promotion\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_PROMOTION = gql`\r\n    mutation DeletePromotion($id: ID!) {\r\n        deletePromotion(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n","import {\r\n    CreatePromotion,\r\n    CreatePromotionInput,\r\n    DeletePromotion,\r\n    GetAdjustmentOperations,\r\n    GetPromotion,\r\n    GetPromotionList,\r\n    PromotionFilterParameter,\r\n    UpdatePromotion,\r\n    UpdatePromotionInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    CREATE_PROMOTION,\r\n    DELETE_PROMOTION,\r\n    GET_ADJUSTMENT_OPERATIONS,\r\n    GET_PROMOTION,\r\n    GET_PROMOTION_LIST,\r\n    UPDATE_PROMOTION,\r\n} from '../definitions/promotion-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class PromotionDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getPromotions(take: number = 10, skip: number = 0, filter?: PromotionFilterParameter) {\r\n        return this.baseDataService.query<GetPromotionList.Query, GetPromotionList.Variables>(\r\n            GET_PROMOTION_LIST,\r\n            {\r\n                options: {\r\n                    take,\r\n                    skip,\r\n                    filter,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    getPromotion(id: string) {\r\n        return this.baseDataService.query<GetPromotion.Query, GetPromotion.Variables>(GET_PROMOTION, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    getPromotionActionsAndConditions() {\r\n        return this.baseDataService.query<GetAdjustmentOperations.Query>(GET_ADJUSTMENT_OPERATIONS);\r\n    }\r\n\r\n    createPromotion(input: CreatePromotionInput) {\r\n        return this.baseDataService.mutate<CreatePromotion.Mutation, CreatePromotion.Variables>(\r\n            CREATE_PROMOTION,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updatePromotion(input: UpdatePromotionInput) {\r\n        return this.baseDataService.mutate<UpdatePromotion.Mutation, UpdatePromotion.Variables>(\r\n            UPDATE_PROMOTION,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deletePromotion(id: string) {\r\n        return this.baseDataService.mutate<DeletePromotion.Mutation, DeletePromotion.Variables>(\r\n            DELETE_PROMOTION,\r\n            { id },\r\n        );\r\n    }\r\n}\r\n","import { FetchPolicy, WatchQueryFetchPolicy } from '@apollo/client/core';\r\nimport { pick } from '@vendure/common/lib/pick';\r\n\r\nimport {\r\n    AddMembersToZone,\r\n    CancelJob,\r\n    CreateChannel,\r\n    CreateChannelInput,\r\n    CreateCountry,\r\n    CreateCountryInput,\r\n    CreatePaymentMethod,\r\n    CreatePaymentMethodInput,\r\n    CreateTaxCategory,\r\n    CreateTaxCategoryInput,\r\n    CreateTaxRate,\r\n    CreateTaxRateInput,\r\n    CreateZone,\r\n    CreateZoneInput,\r\n    DeleteChannel,\r\n    DeleteCountry,\r\n    DeletePaymentMethod,\r\n    DeleteTaxCategory,\r\n    DeleteTaxRate,\r\n    DeleteZone,\r\n    GetActiveChannel,\r\n    GetAllJobs,\r\n    GetAvailableCountries,\r\n    GetChannel,\r\n    GetChannels,\r\n    GetCountry,\r\n    GetCountryList,\r\n    GetGlobalSettings,\r\n    GetJobInfo,\r\n    GetJobQueueList,\r\n    GetJobsById,\r\n    GetPaymentMethod,\r\n    GetPaymentMethodList,\r\n    GetPaymentMethodOperations,\r\n    GetTaxCategories,\r\n    GetTaxCategory,\r\n    GetTaxRate,\r\n    GetTaxRateList,\r\n    GetTaxRateListSimple,\r\n    GetZone,\r\n    GetZones,\r\n    JobListOptions,\r\n    JobState,\r\n    RemoveMembersFromZone,\r\n    UpdateChannel,\r\n    UpdateChannelInput,\r\n    UpdateCountry,\r\n    UpdateCountryInput,\r\n    UpdateGlobalSettings,\r\n    UpdateGlobalSettingsInput,\r\n    UpdatePaymentMethod,\r\n    UpdatePaymentMethodInput,\r\n    UpdateTaxCategory,\r\n    UpdateTaxCategoryInput,\r\n    UpdateTaxRate,\r\n    UpdateTaxRateInput,\r\n    UpdateZone,\r\n    UpdateZoneInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    ADD_MEMBERS_TO_ZONE,\r\n    CANCEL_JOB,\r\n    CREATE_CHANNEL,\r\n    CREATE_COUNTRY,\r\n    CREATE_PAYMENT_METHOD,\r\n    CREATE_TAX_CATEGORY,\r\n    CREATE_TAX_RATE,\r\n    CREATE_ZONE,\r\n    DELETE_CHANNEL,\r\n    DELETE_COUNTRY,\r\n    DELETE_PAYMENT_METHOD,\r\n    DELETE_TAX_CATEGORY,\r\n    DELETE_TAX_RATE,\r\n    DELETE_ZONE,\r\n    GET_ACTIVE_CHANNEL,\r\n    GET_AVAILABLE_COUNTRIES,\r\n    GET_CHANNEL,\r\n    GET_CHANNELS,\r\n    GET_COUNTRY,\r\n    GET_COUNTRY_LIST,\r\n    GET_GLOBAL_SETTINGS,\r\n    GET_JOBS_BY_ID,\r\n    GET_JOBS_LIST,\r\n    GET_JOB_INFO,\r\n    GET_JOB_QUEUE_LIST,\r\n    GET_PAYMENT_METHOD,\r\n    GET_PAYMENT_METHOD_LIST,\r\n    GET_PAYMENT_METHOD_OPERATIONS,\r\n    GET_TAX_CATEGORIES,\r\n    GET_TAX_CATEGORY,\r\n    GET_TAX_RATE,\r\n    GET_TAX_RATE_LIST,\r\n    GET_TAX_RATE_LIST_SIMPLE,\r\n    GET_ZONES,\r\n    REMOVE_MEMBERS_FROM_ZONE,\r\n    UPDATE_CHANNEL,\r\n    UPDATE_COUNTRY,\r\n    UPDATE_GLOBAL_SETTINGS,\r\n    UPDATE_PAYMENT_METHOD,\r\n    UPDATE_TAX_CATEGORY,\r\n    UPDATE_TAX_RATE,\r\n    UPDATE_ZONE,\r\n} from '../definitions/settings-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class SettingsDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getCountries(take: number = 10, skip: number = 0, filterTerm?: string) {\r\n        return this.baseDataService.query<GetCountryList.Query, GetCountryList.Variables>(GET_COUNTRY_LIST, {\r\n            options: {\r\n                take,\r\n                skip,\r\n                filter: {\r\n                    name: filterTerm ? { contains: filterTerm } : null,\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    getAvailableCountries() {\r\n        return this.baseDataService.query<GetAvailableCountries.Query>(GET_AVAILABLE_COUNTRIES);\r\n    }\r\n\r\n    getCountry(id: string) {\r\n        return this.baseDataService.query<GetCountry.Query, GetCountry.Variables>(GET_COUNTRY, { id });\r\n    }\r\n\r\n    createCountry(input: CreateCountryInput) {\r\n        return this.baseDataService.mutate<CreateCountry.Mutation, CreateCountry.Variables>(CREATE_COUNTRY, {\r\n            input: pick(input, ['code', 'enabled', 'translations', 'customFields']),\r\n        });\r\n    }\r\n\r\n    updateCountry(input: UpdateCountryInput) {\r\n        return this.baseDataService.mutate<UpdateCountry.Mutation, UpdateCountry.Variables>(UPDATE_COUNTRY, {\r\n            input: pick(input, ['id', 'code', 'enabled', 'translations', 'customFields']),\r\n        });\r\n    }\r\n\r\n    deleteCountry(id: string) {\r\n        return this.baseDataService.mutate<DeleteCountry.Mutation, DeleteCountry.Variables>(DELETE_COUNTRY, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    getZones() {\r\n        return this.baseDataService.query<GetZones.Query>(GET_ZONES);\r\n    }\r\n\r\n    getZone(id: string) {\r\n        return this.baseDataService.query<GetZone.Query, GetZone.Variables>(GET_ZONES, { id });\r\n    }\r\n\r\n    createZone(input: CreateZoneInput) {\r\n        return this.baseDataService.mutate<CreateZone.Mutation, CreateZone.Variables>(CREATE_ZONE, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    updateZone(input: UpdateZoneInput) {\r\n        return this.baseDataService.mutate<UpdateZone.Mutation, UpdateZone.Variables>(UPDATE_ZONE, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    deleteZone(id: string) {\r\n        return this.baseDataService.mutate<DeleteZone.Mutation, DeleteZone.Variables>(DELETE_ZONE, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    addMembersToZone(zoneId: string, memberIds: string[]) {\r\n        return this.baseDataService.mutate<AddMembersToZone.Mutation, AddMembersToZone.Variables>(\r\n            ADD_MEMBERS_TO_ZONE,\r\n            {\r\n                zoneId,\r\n                memberIds,\r\n            },\r\n        );\r\n    }\r\n\r\n    removeMembersFromZone(zoneId: string, memberIds: string[]) {\r\n        return this.baseDataService.mutate<RemoveMembersFromZone.Mutation, RemoveMembersFromZone.Variables>(\r\n            REMOVE_MEMBERS_FROM_ZONE,\r\n            {\r\n                zoneId,\r\n                memberIds,\r\n            },\r\n        );\r\n    }\r\n\r\n    getTaxCategories() {\r\n        return this.baseDataService.query<GetTaxCategories.Query>(GET_TAX_CATEGORIES);\r\n    }\r\n\r\n    getTaxCategory(id: string) {\r\n        return this.baseDataService.query<GetTaxCategory.Query, GetTaxCategory.Variables>(GET_TAX_CATEGORY, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    createTaxCategory(input: CreateTaxCategoryInput) {\r\n        return this.baseDataService.mutate<CreateTaxCategory.Mutation, CreateTaxCategory.Variables>(\r\n            CREATE_TAX_CATEGORY,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updateTaxCategory(input: UpdateTaxCategoryInput) {\r\n        return this.baseDataService.mutate<UpdateTaxCategory.Mutation, UpdateTaxCategory.Variables>(\r\n            UPDATE_TAX_CATEGORY,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deleteTaxCategory(id: string) {\r\n        return this.baseDataService.mutate<DeleteTaxCategory.Mutation, DeleteTaxRate.Variables>(\r\n            DELETE_TAX_CATEGORY,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    getTaxRates(take: number = 10, skip: number = 0, fetchPolicy?: FetchPolicy) {\r\n        return this.baseDataService.query<GetTaxRateList.Query, GetTaxRateList.Variables>(\r\n            GET_TAX_RATE_LIST,\r\n            {\r\n                options: {\r\n                    take,\r\n                    skip,\r\n                },\r\n            },\r\n            fetchPolicy,\r\n        );\r\n    }\r\n\r\n    getTaxRatesSimple(take: number = 10, skip: number = 0, fetchPolicy?: FetchPolicy) {\r\n        return this.baseDataService.query<GetTaxRateListSimple.Query, GetTaxRateListSimple.Variables>(\r\n            GET_TAX_RATE_LIST_SIMPLE,\r\n            {\r\n                options: {\r\n                    take,\r\n                    skip,\r\n                },\r\n            },\r\n            fetchPolicy,\r\n        );\r\n    }\r\n\r\n    getTaxRate(id: string) {\r\n        return this.baseDataService.query<GetTaxRate.Query, GetTaxRate.Variables>(GET_TAX_RATE, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    createTaxRate(input: CreateTaxRateInput) {\r\n        return this.baseDataService.mutate<CreateTaxRate.Mutation, CreateTaxRate.Variables>(CREATE_TAX_RATE, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    updateTaxRate(input: UpdateTaxRateInput) {\r\n        return this.baseDataService.mutate<UpdateTaxRate.Mutation, UpdateTaxRate.Variables>(UPDATE_TAX_RATE, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    deleteTaxRate(id: string) {\r\n        return this.baseDataService.mutate<DeleteTaxRate.Mutation, DeleteTaxRate.Variables>(DELETE_TAX_RATE, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    getChannels() {\r\n        return this.baseDataService.query<GetChannels.Query>(GET_CHANNELS);\r\n    }\r\n\r\n    getChannel(id: string) {\r\n        return this.baseDataService.query<GetChannel.Query, GetChannel.Variables>(GET_CHANNEL, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    getActiveChannel(fetchPolicy?: FetchPolicy) {\r\n        return this.baseDataService.query<GetActiveChannel.Query, GetActiveChannel.Variables>(\r\n            GET_ACTIVE_CHANNEL,\r\n            {},\r\n            fetchPolicy,\r\n        );\r\n    }\r\n\r\n    createChannel(input: CreateChannelInput) {\r\n        return this.baseDataService.mutate<CreateChannel.Mutation, CreateChannel.Variables>(CREATE_CHANNEL, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    updateChannel(input: UpdateChannelInput) {\r\n        return this.baseDataService.mutate<UpdateChannel.Mutation, UpdateChannel.Variables>(UPDATE_CHANNEL, {\r\n            input,\r\n        });\r\n    }\r\n\r\n    deleteChannel(id: string) {\r\n        return this.baseDataService.mutate<DeleteChannel.Mutation, DeleteChannel.Variables>(DELETE_CHANNEL, {\r\n            id,\r\n        });\r\n    }\r\n\r\n    getPaymentMethods(take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<GetPaymentMethodList.Query, GetPaymentMethodList.Variables>(\r\n            GET_PAYMENT_METHOD_LIST,\r\n            {\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    getPaymentMethod(id: string) {\r\n        return this.baseDataService.query<GetPaymentMethod.Query, GetPaymentMethod.Variables>(\r\n            GET_PAYMENT_METHOD,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    createPaymentMethod(input: CreatePaymentMethodInput) {\r\n        return this.baseDataService.mutate<CreatePaymentMethod.Mutation, CreatePaymentMethod.Variables>(\r\n            CREATE_PAYMENT_METHOD,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    updatePaymentMethod(input: UpdatePaymentMethodInput) {\r\n        return this.baseDataService.mutate<UpdatePaymentMethod.Mutation, UpdatePaymentMethod.Variables>(\r\n            UPDATE_PAYMENT_METHOD,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    deletePaymentMethod(id: string, force: boolean) {\r\n        return this.baseDataService.mutate<DeletePaymentMethod.Mutation, DeletePaymentMethod.Variables>(\r\n            DELETE_PAYMENT_METHOD,\r\n            {\r\n                id,\r\n                force,\r\n            },\r\n        );\r\n    }\r\n\r\n    getPaymentMethodOperations() {\r\n        return this.baseDataService.query<GetPaymentMethodOperations.Query>(GET_PAYMENT_METHOD_OPERATIONS);\r\n    }\r\n\r\n    getGlobalSettings(fetchPolicy?: WatchQueryFetchPolicy) {\r\n        return this.baseDataService.query<GetGlobalSettings.Query>(\r\n            GET_GLOBAL_SETTINGS,\r\n            undefined,\r\n            fetchPolicy,\r\n        );\r\n    }\r\n\r\n    updateGlobalSettings(input: UpdateGlobalSettingsInput) {\r\n        return this.baseDataService.mutate<UpdateGlobalSettings.Mutation, UpdateGlobalSettings.Variables>(\r\n            UPDATE_GLOBAL_SETTINGS,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    getJob(id: string) {\r\n        return this.baseDataService.query<GetJobInfo.Query, GetJobInfo.Variables>(GET_JOB_INFO, { id });\r\n    }\r\n\r\n    pollJobs(ids: string[]) {\r\n        return this.baseDataService.query<GetJobsById.Query, GetJobsById.Variables>(GET_JOBS_BY_ID, {\r\n            ids,\r\n        });\r\n    }\r\n\r\n    getAllJobs(options?: JobListOptions) {\r\n        return this.baseDataService.query<GetAllJobs.Query, GetAllJobs.Variables>(\r\n            GET_JOBS_LIST,\r\n            {\r\n                options,\r\n            },\r\n            'cache-first',\r\n        );\r\n    }\r\n\r\n    getJobQueues() {\r\n        return this.baseDataService.query<GetJobQueueList.Query>(GET_JOB_QUEUE_LIST);\r\n    }\r\n\r\n    getRunningJobs() {\r\n        return this.baseDataService.query<GetAllJobs.Query, GetAllJobs.Variables>(GET_JOBS_LIST, {\r\n            options: {\r\n                filter: {\r\n                    state: {\r\n                        eq: JobState.RUNNING,\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    cancelJob(id: string) {\r\n        return this.baseDataService.mutate<CancelJob.Mutation, CancelJob.Variables>(CANCEL_JOB, {\r\n            id,\r\n        });\r\n    }\r\n}\r\n","import { gql } from 'apollo-angular';\r\n\r\nimport { CONFIGURABLE_OPERATION_DEF_FRAGMENT, CONFIGURABLE_OPERATION_FRAGMENT } from './shared-definitions';\r\n\r\nexport const SHIPPING_METHOD_FRAGMENT = gql`\r\n    fragment ShippingMethod on ShippingMethod {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        name\r\n        description\r\n        fulfillmentHandlerCode\r\n        checker {\r\n            ...ConfigurableOperation\r\n        }\r\n        calculator {\r\n            ...ConfigurableOperation\r\n        }\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n            description\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_FRAGMENT}\r\n`;\r\n\r\nexport const GET_SHIPPING_METHOD_LIST = gql`\r\n    query GetShippingMethodList($options: ShippingMethodListOptions) {\r\n        shippingMethods(options: $options) {\r\n            items {\r\n                ...ShippingMethod\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${SHIPPING_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const GET_SHIPPING_METHOD = gql`\r\n    query GetShippingMethod($id: ID!) {\r\n        shippingMethod(id: $id) {\r\n            ...ShippingMethod\r\n        }\r\n    }\r\n    ${SHIPPING_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const GET_SHIPPING_METHOD_OPERATIONS = gql`\r\n    query GetShippingMethodOperations {\r\n        shippingEligibilityCheckers {\r\n            ...ConfigurableOperationDef\r\n        }\r\n        shippingCalculators {\r\n            ...ConfigurableOperationDef\r\n        }\r\n        fulfillmentHandlers {\r\n            ...ConfigurableOperationDef\r\n        }\r\n    }\r\n    ${CONFIGURABLE_OPERATION_DEF_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_SHIPPING_METHOD = gql`\r\n    mutation CreateShippingMethod($input: CreateShippingMethodInput!) {\r\n        createShippingMethod(input: $input) {\r\n            ...ShippingMethod\r\n        }\r\n    }\r\n    ${SHIPPING_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_SHIPPING_METHOD = gql`\r\n    mutation UpdateShippingMethod($input: UpdateShippingMethodInput!) {\r\n        updateShippingMethod(input: $input) {\r\n            ...ShippingMethod\r\n        }\r\n    }\r\n    ${SHIPPING_METHOD_FRAGMENT}\r\n`;\r\n\r\nexport const DELETE_SHIPPING_METHOD = gql`\r\n    mutation DeleteShippingMethod($id: ID!) {\r\n        deleteShippingMethod(id: $id) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TEST_SHIPPING_METHOD = gql`\r\n    query TestShippingMethod($input: TestShippingMethodInput!) {\r\n        testShippingMethod(input: $input) {\r\n            eligible\r\n            quote {\r\n                price\r\n                priceWithTax\r\n                metadata\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TEST_ELIGIBLE_SHIPPING_METHODS = gql`\r\n    query TestEligibleShippingMethods($input: TestEligibleShippingMethodsInput!) {\r\n        testEligibleShippingMethods(input: $input) {\r\n            id\r\n            name\r\n            code\r\n            description\r\n            price\r\n            priceWithTax\r\n            metadata\r\n        }\r\n    }\r\n`;\r\n","import { pick } from '@vendure/common/lib/pick';\r\n\r\nimport {\r\n    CreateShippingMethod,\r\n    CreateShippingMethodInput,\r\n    DeleteShippingMethod,\r\n    GetShippingMethod,\r\n    GetShippingMethodList,\r\n    GetShippingMethodOperations,\r\n    TestEligibleShippingMethods,\r\n    TestEligibleShippingMethodsInput,\r\n    TestShippingMethod,\r\n    TestShippingMethodInput,\r\n    UpdateShippingMethod,\r\n    UpdateShippingMethodInput,\r\n} from '../../common/generated-types';\r\nimport {\r\n    CREATE_SHIPPING_METHOD,\r\n    DELETE_SHIPPING_METHOD,\r\n    GET_SHIPPING_METHOD,\r\n    GET_SHIPPING_METHOD_LIST,\r\n    GET_SHIPPING_METHOD_OPERATIONS,\r\n    TEST_ELIGIBLE_SHIPPING_METHODS,\r\n    TEST_SHIPPING_METHOD,\r\n    UPDATE_SHIPPING_METHOD,\r\n} from '../definitions/shipping-definitions';\r\n\r\nimport { BaseDataService } from './base-data.service';\r\n\r\nexport class ShippingMethodDataService {\r\n    constructor(private baseDataService: BaseDataService) {}\r\n\r\n    getShippingMethods(take: number = 10, skip: number = 0) {\r\n        return this.baseDataService.query<GetShippingMethodList.Query, GetShippingMethodList.Variables>(\r\n            GET_SHIPPING_METHOD_LIST,\r\n            {\r\n                options: {\r\n                    take,\r\n                    skip,\r\n                },\r\n            },\r\n        );\r\n    }\r\n\r\n    getShippingMethod(id: string) {\r\n        return this.baseDataService.query<GetShippingMethod.Query, GetShippingMethod.Variables>(\r\n            GET_SHIPPING_METHOD,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    getShippingMethodOperations() {\r\n        return this.baseDataService.query<GetShippingMethodOperations.Query>(GET_SHIPPING_METHOD_OPERATIONS);\r\n    }\r\n\r\n    createShippingMethod(input: CreateShippingMethodInput) {\r\n        const variables: CreateShippingMethod.Variables = {\r\n            input: pick(input, [\r\n                'code',\r\n                'checker',\r\n                'calculator',\r\n                'fulfillmentHandler',\r\n                'customFields',\r\n                'translations',\r\n            ]),\r\n        };\r\n        return this.baseDataService.mutate<CreateShippingMethod.Mutation, CreateShippingMethod.Variables>(\r\n            CREATE_SHIPPING_METHOD,\r\n            variables,\r\n        );\r\n    }\r\n\r\n    updateShippingMethod(input: UpdateShippingMethodInput) {\r\n        const variables: UpdateShippingMethod.Variables = {\r\n            input: pick(input, [\r\n                'id',\r\n                'code',\r\n                'checker',\r\n                'calculator',\r\n                'fulfillmentHandler',\r\n                'customFields',\r\n                'translations',\r\n            ]),\r\n        };\r\n        return this.baseDataService.mutate<UpdateShippingMethod.Mutation, UpdateShippingMethod.Variables>(\r\n            UPDATE_SHIPPING_METHOD,\r\n            variables,\r\n        );\r\n    }\r\n\r\n    deleteShippingMethod(id: string) {\r\n        return this.baseDataService.mutate<DeleteShippingMethod.Mutation, DeleteShippingMethod.Variables>(\r\n            DELETE_SHIPPING_METHOD,\r\n            {\r\n                id,\r\n            },\r\n        );\r\n    }\r\n\r\n    testShippingMethod(input: TestShippingMethodInput) {\r\n        return this.baseDataService.query<TestShippingMethod.Query, TestShippingMethod.Variables>(\r\n            TEST_SHIPPING_METHOD,\r\n            {\r\n                input,\r\n            },\r\n        );\r\n    }\r\n\r\n    testEligibleShippingMethods(input: TestEligibleShippingMethodsInput) {\r\n        return this.baseDataService.query<\r\n            TestEligibleShippingMethods.Query,\r\n            TestEligibleShippingMethods.Variables\r\n        >(TEST_ELIGIBLE_SHIPPING_METHODS, {\r\n            input,\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MutationUpdaterFn, WatchQueryFetchPolicy } from '@apollo/client/core';\r\nimport { DocumentNode } from 'graphql';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { QueryResult } from '../query-result';\r\n\r\nimport { AdministratorDataService } from './administrator-data.service';\r\nimport { AuthDataService } from './auth-data.service';\r\nimport { BaseDataService } from './base-data.service';\r\nimport { ClientDataService } from './client-data.service';\r\nimport { CollectionDataService } from './collection-data.service';\r\nimport { CustomerDataService } from './customer-data.service';\r\nimport { FacetDataService } from './facet-data.service';\r\nimport { OrderDataService } from './order-data.service';\r\nimport { ProductDataService } from './product-data.service';\r\nimport { PromotionDataService } from './promotion-data.service';\r\nimport { SettingsDataService } from './settings-data.service';\r\nimport { ShippingMethodDataService } from './shipping-method-data.service';\r\n\r\n/**\r\n * @description\r\n * Used to interact with the Admin API via GraphQL queries. Internally this service uses the\r\n * Apollo Client, which means it maintains a normalized entity cache. For this reason, it is\r\n * advisable to always select the `id` field of any entity, which will allow the returned data\r\n * to be effectively cached.\r\n *\r\n * @docsCategory providers\r\n * @docsPage DataService\r\n * @docsWeight 0\r\n */\r\n@Injectable()\r\nexport class DataService {\r\n    /** @internal */ promotion: PromotionDataService;\r\n    /** @internal */ administrator: AdministratorDataService;\r\n    /** @internal */ auth: AuthDataService;\r\n    /** @internal */ collection: CollectionDataService;\r\n    /** @internal */ product: ProductDataService;\r\n    /** @internal */ client: ClientDataService;\r\n    /** @internal */ facet: FacetDataService;\r\n    /** @internal */ order: OrderDataService;\r\n    /** @internal */ settings: SettingsDataService;\r\n    /** @internal */ customer: CustomerDataService;\r\n    /** @internal */ shippingMethod: ShippingMethodDataService;\r\n\r\n    /** @internal */\r\n    constructor(private baseDataService: BaseDataService) {\r\n        this.promotion = new PromotionDataService(baseDataService);\r\n        this.administrator = new AdministratorDataService(baseDataService);\r\n        this.auth = new AuthDataService(baseDataService);\r\n        this.collection = new CollectionDataService(baseDataService);\r\n        this.product = new ProductDataService(baseDataService);\r\n        this.client = new ClientDataService(baseDataService);\r\n        this.facet = new FacetDataService(baseDataService);\r\n        this.order = new OrderDataService(baseDataService);\r\n        this.settings = new SettingsDataService(baseDataService);\r\n        this.customer = new CustomerDataService(baseDataService);\r\n        this.shippingMethod = new ShippingMethodDataService(baseDataService);\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Perform a GraphQL query. Returns a {@link QueryResult} which allows further control over\r\n     * they type of result returned, e.g. stream of values, single value etc.\r\n     *\r\n     * @example\r\n     * ```TypeScript\r\n     * const result$ = this.dataService.query(gql`\r\n     *   query MyQuery($id: ID!) {\r\n     *     product(id: $id) {\r\n     *       id\r\n     *       name\r\n     *       slug\r\n     *     }\r\n     *   },\r\n     *   { id: 123 },\r\n     * ).mapSingle(data => data.product);\r\n     * ```\r\n     */\r\n    query<T, V = Record<string, any>>(\r\n        query: DocumentNode,\r\n        variables?: V,\r\n        fetchPolicy: WatchQueryFetchPolicy = 'cache-and-network',\r\n    ): QueryResult<T, V> {\r\n        return this.baseDataService.query(query, variables, fetchPolicy);\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Perform a GraphQL mutation.\r\n     *\r\n     * @example\r\n     * ```TypeScript\r\n     * const result$ = this.dataService.mutate(gql`\r\n     *   mutation MyMutation($input: UpdateEntityInput!) {\r\n     *     updateEntity(input: $input) {\r\n     *       id\r\n     *       name\r\n     *     }\r\n     *   },\r\n     *   { input: updateEntityInput },\r\n     * );\r\n     * ```\r\n     */\r\n    mutate<T, V = Record<string, any>>(\r\n        mutation: DocumentNode,\r\n        variables?: V,\r\n        update?: MutationUpdaterFn<T>,\r\n    ): Observable<T> {\r\n        return this.baseDataService.mutate(mutation, variables, update);\r\n    }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Component, HostListener, Inject, isDevMode, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map, switchMap } from 'rxjs/operators';\r\n\r\nimport { DataService } from './data/providers/data.service';\r\nimport { ServerConfigService } from './data/server-config';\r\nimport { LocalStorageService } from './providers/local-storage/local-storage.service';\r\n\r\n@Component({\r\n    selector: 'vdr-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n    loading$: Observable<boolean>;\r\n    private _document?: Document;\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private serverConfigService: ServerConfigService,\r\n        private localStorageService: LocalStorageService,\r\n        @Inject(DOCUMENT) private document?: any,\r\n    ) {\r\n        this._document = document;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loading$ = this.dataService.client\r\n            .getNetworkStatus()\r\n            .stream$.pipe(map(data => 0 < data.networkStatus.inFlightRequests));\r\n\r\n        this.dataService.client\r\n            .uiState()\r\n            .mapStream(data => data.uiState.theme)\r\n            .subscribe(theme => {\r\n                this._document?.body.setAttribute('data-theme', theme);\r\n            });\r\n\r\n        // Once logged in, keep the localStorage \"contentLanguageCode\" in sync with the\r\n        // uiState. Also perform a check to ensure that the current contentLanguage is\r\n        // one of the availableLanguages per GlobalSettings.\r\n        this.dataService.client\r\n            .userStatus()\r\n            .mapStream(({ userStatus }) => userStatus.isLoggedIn)\r\n            .pipe(\r\n                filter(loggedIn => loggedIn === true),\r\n                switchMap(() => {\r\n                    return this.dataService.client.uiState().mapStream(data => data.uiState.contentLanguage);\r\n                }),\r\n                switchMap(contentLang => {\r\n                    return this.serverConfigService\r\n                        .getAvailableLanguages()\r\n                        .pipe(map(available => [contentLang, available] as const));\r\n                }),\r\n            )\r\n            .subscribe({\r\n                next: ([contentLanguage, availableLanguages]) => {\r\n                    this.localStorageService.set('contentLanguageCode', contentLanguage);\r\n                    if (availableLanguages.length && !availableLanguages.includes(contentLanguage)) {\r\n                        this.dataService.client.setContentLanguage(availableLanguages[0]).subscribe();\r\n                    }\r\n                },\r\n            });\r\n\r\n        if (isDevMode()) {\r\n            // tslint:disable-next-line:no-console\r\n            console.log(\r\n                `%cVendure Admin UI: Press \"ctrl/cmd + u\" to view UI extension points`,\r\n                `color: #17C1FF; font-weight: bold;`,\r\n            );\r\n        }\r\n    }\r\n\r\n    @HostListener('window:keydown', ['$event'])\r\n    handleGlobalHotkeys(event: KeyboardEvent) {\r\n        if ((event.ctrlKey === true || event.metaKey === true) && event.key === 'u') {\r\n            event.preventDefault();\r\n            if (isDevMode()) {\r\n                this.dataService.client\r\n                    .uiState()\r\n                    .single$.pipe(\r\n                        switchMap(({ uiState }) =>\r\n                            this.dataService.client.setDisplayUiExtensionPoints(\r\n                                !uiState.displayUiExtensionPoints,\r\n                            ),\r\n                        ),\r\n                    )\r\n                    .subscribe();\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { AdminUiConfig } from '@vendure/common/lib/shared-types';\r\n\r\nimport { LanguageCode } from './common/generated-types';\r\n\r\nlet vendureUiConfig: AdminUiConfig | undefined;\r\n\r\nexport function loadAppConfig(): Promise<void> {\r\n    return fetch('./vendure-ui-config.json')\r\n        .then(res => res.json())\r\n        .then(config => {\r\n            vendureUiConfig = config;\r\n        });\r\n}\r\n\r\nexport function getAppConfig(): AdminUiConfig {\r\n    if (!vendureUiConfig) {\r\n        throw new Error(`vendure ui config not loaded`);\r\n    }\r\n    return vendureUiConfig;\r\n}\r\n","import { getAppConfig } from '../../app.config';\r\nimport { LanguageCode } from '../generated-types';\r\n\r\nexport function getDefaultUiLanguage(): LanguageCode {\r\n    return getAppConfig().defaultLanguage;\r\n}\r\n\r\nexport function getDefaultUiLocale(): string | undefined {\r\n    const defaultLocale = getAppConfig().defaultLocale;\r\n    if (defaultLocale) {\r\n        return defaultLocale;\r\n    }\r\n    return navigator.language.split('-')[1]?.toUpperCase();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, mapTo, mergeMap, switchMap } from 'rxjs/operators';\r\n\r\nimport {\r\n    AttemptLogin,\r\n    CurrentUserChannel,\r\n    CurrentUserFragment,\r\n    SetAsLoggedIn,\r\n} from '../../common/generated-types';\r\nimport { DataService } from '../../data/providers/data.service';\r\nimport { ServerConfigService } from '../../data/server-config';\r\nimport { LocalStorageService } from '../local-storage/local-storage.service';\r\n\r\n/**\r\n * This service handles logic relating to authentication of the current user.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n    constructor(\r\n        private localStorageService: LocalStorageService,\r\n        private dataService: DataService,\r\n        private serverConfigService: ServerConfigService,\r\n    ) {}\r\n\r\n    /**\r\n     * Attempts to log in via the REST login endpoint and updates the app\r\n     * state on success.\r\n     */\r\n    logIn(username: string, password: string, rememberMe: boolean): Observable<AttemptLogin.Login> {\r\n        return this.dataService.auth.attemptLogin(username, password, rememberMe).pipe(\r\n            switchMap(response => {\r\n                if (response.login.__typename === 'CurrentUser') {\r\n                    this.setChannelToken(response.login.channels);\r\n                }\r\n                return this.serverConfigService.getServerConfig().then(() => response.login);\r\n            }),\r\n            switchMap(login => {\r\n                if (login.__typename === 'CurrentUser') {\r\n                    const { id } = this.getActiveChannel(login.channels);\r\n                    return this.dataService.client\r\n                        .loginSuccess(username, id, login.channels)\r\n                        .pipe(map(() => login));\r\n                }\r\n                return of(login);\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Update the user status to being logged out.\r\n     */\r\n    logOut(): Observable<boolean> {\r\n        return this.dataService.client.userStatus().single$.pipe(\r\n            switchMap(status => {\r\n                if (status.userStatus.isLoggedIn) {\r\n                    return this.dataService.client\r\n                        .logOut()\r\n                        .pipe(mergeMap(() => this.dataService.auth.logOut()));\r\n                } else {\r\n                    return [];\r\n                }\r\n            }),\r\n            mapTo(true),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Checks the app state to see if the user is already logged in,\r\n     * and if not, attempts to validate any auth token found.\r\n     */\r\n    checkAuthenticatedStatus(): Observable<boolean> {\r\n        return this.dataService.client.userStatus().single$.pipe(\r\n            mergeMap(data => {\r\n                if (!data.userStatus.isLoggedIn) {\r\n                    return this.validateAuthToken();\r\n                } else {\r\n                    return of(true);\r\n                }\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Checks for an auth token and if found, attempts to validate\r\n     * that token against the API.\r\n     */\r\n    validateAuthToken(): Observable<boolean> {\r\n        return this.dataService.auth.currentUser().single$.pipe(\r\n            mergeMap(result => {\r\n                if (!result.me) {\r\n                    return of(false) as any;\r\n                }\r\n                this.setChannelToken(result.me.channels);\r\n                const { id } = this.getActiveChannel(result.me.channels);\r\n                return this.dataService.client.loginSuccess(result.me.identifier, id, result.me.channels);\r\n            }),\r\n            mapTo(true),\r\n            catchError(err => of(false)),\r\n        );\r\n    }\r\n\r\n    private getActiveChannel(userChannels: CurrentUserFragment['channels']) {\r\n        const lastActiveChannelToken = this.localStorageService.get('activeChannelToken');\r\n        if (lastActiveChannelToken) {\r\n            const lastActiveChannel = userChannels.find(c => c.token === lastActiveChannelToken);\r\n            if (lastActiveChannel) {\r\n                return lastActiveChannel;\r\n            }\r\n        }\r\n        const defaultChannel = userChannels.find(c => c.code === DEFAULT_CHANNEL_CODE);\r\n        return defaultChannel || userChannels[0];\r\n    }\r\n\r\n    private setChannelToken(userChannels: CurrentUserFragment['channels']) {\r\n        this.localStorageService.set('activeChannelToken', this.getActiveChannel(userChannels).token);\r\n    }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { LanguageCode } from '../../common/generated-types';\r\n\r\n/** @dynamic */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class I18nService {\r\n    _availableLanguages: LanguageCode[] = [];\r\n\r\n    get availableLanguages(): LanguageCode[] {\r\n        return [...this._availableLanguages];\r\n    }\r\n\r\n    constructor(private ngxTranslate: TranslateService, @Inject(DOCUMENT) private document: Document) {}\r\n\r\n    /**\r\n     * Set the default language\r\n     */\r\n    setDefaultLanguage(languageCode: LanguageCode) {\r\n        this.ngxTranslate.setDefaultLang(languageCode);\r\n    }\r\n\r\n    /**\r\n     * Set the UI language\r\n     */\r\n    setLanguage(language: LanguageCode): void {\r\n        this.ngxTranslate.use(language);\r\n        if (this.document?.documentElement) {\r\n            this.document.documentElement.lang = language;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the available UI languages\r\n     */\r\n    setAvailableLanguages(languages: LanguageCode[]) {\r\n        this._availableLanguages = languages;\r\n    }\r\n\r\n    /**\r\n     * Translate the given key.\r\n     */\r\n    translate(key: string | string[], params?: any): string {\r\n        return this.ngxTranslate.instant(key, params);\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ContentChild,\r\n    ContentChildren,\r\n    QueryList,\r\n    TemplateRef,\r\n    Type,\r\n    ViewChild,\r\n    ViewChildren,\r\n} from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { Dialog, ModalOptions } from '../../../providers/modal/modal.service';\r\n\r\nimport { DialogButtonsDirective } from './dialog-buttons.directive';\r\n\r\n/**\r\n * This component should only be instantiated dynamically by the ModalService. It should not be used\r\n * directly in templates. See {@link ModalService.fromComponent} method for more detail.\r\n */\r\n@Component({\r\n    selector: 'vdr-modal-dialog',\r\n    templateUrl: './modal-dialog.component.html',\r\n    styleUrls: ['./modal-dialog.component.scss'],\r\n})\r\nexport class ModalDialogComponent<T extends Dialog<any>> {\r\n    childComponentType: Type<T>;\r\n    closeModal: (result?: any) => void;\r\n    titleTemplateRef$ = new Subject<TemplateRef<any>>();\r\n    buttonsTemplateRef$ = new Subject<TemplateRef<any>>();\r\n    options?: ModalOptions<T>;\r\n\r\n    /**\r\n     * This callback is invoked when the childComponentType is instantiated in the\r\n     * template by the {@link DialogComponentOutletComponent}.\r\n     * Once we have the instance, we can set the resolveWith function and any\r\n     * locals which were specified in the config.\r\n     */\r\n    onCreate(componentInstance: T) {\r\n        componentInstance.resolveWith = (result?: any) => {\r\n            this.closeModal(result);\r\n        };\r\n        if (this.options && this.options.locals) {\r\n            // tslint:disable-next-line\r\n            for (const key in this.options.locals) {\r\n                componentInstance[key] = this.options.locals[key] as T[Extract<keyof T, string>];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This should be called by the {@link DialogTitleDirective} only\r\n     */\r\n    registerTitleTemplate(titleTemplateRef: TemplateRef<any>) {\r\n        this.titleTemplateRef$.next(titleTemplateRef);\r\n    }\r\n\r\n    /**\r\n     * This should be called by the {@link DialogButtonsDirective} only\r\n     */\r\n    registerButtonsTemplate(buttonsTemplateRef: TemplateRef<any>) {\r\n        this.buttonsTemplateRef$.next(buttonsTemplateRef);\r\n    }\r\n\r\n    /**\r\n     * Called when the modal is closed by clicking the X or the mask.\r\n     */\r\n    modalOpenChange(status: any) {\r\n        if (status === false) {\r\n            this.closeModal();\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\nimport { Dialog, DialogButtonConfig } from '../../../providers/modal/modal.service';\r\n\r\n/**\r\n * Used by ModalService.dialog() to host a generic configurable modal dialog.\r\n */\r\n@Component({\r\n    selector: 'vdr-simple-dialog',\r\n    templateUrl: './simple-dialog.component.html',\r\n    styleUrls: ['./simple-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SimpleDialogComponent implements Dialog<any> {\r\n    resolveWith: (result?: any) => void;\r\n    title = '';\r\n    body = '';\r\n    translationVars = {};\r\n    buttons: Array<DialogButtonConfig<any>> = [];\r\n}\r\n","import { Injectable, ViewContainerRef } from '@angular/core';\r\n\r\n/**\r\n * The OverlayHostService is used to get a reference to the ViewConainerRef of the\r\n * OverlayHost component, so that other components may insert components & elements\r\n * into the DOM at that point.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class OverlayHostService {\r\n    private hostView: ViewContainerRef;\r\n    private promiseResolveFns: Array<(result: any) => void> = [];\r\n\r\n    /**\r\n     * Used to pass in the ViewContainerRed from the OverlayHost component.\r\n     * Should not be used by any other component.\r\n     */\r\n    registerHostView(viewContainerRef: ViewContainerRef): void {\r\n        this.hostView = viewContainerRef;\r\n        if (0 < this.promiseResolveFns.length) {\r\n            this.resolveHostView();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a promise which resolves to the ViewContainerRef of the OverlayHost\r\n     * component. This can then be used to insert components and elements into the\r\n     * DOM at that point.\r\n     */\r\n    getHostView(): Promise<ViewContainerRef> {\r\n        return new Promise((resolve: (result: any) => void) => {\r\n            this.promiseResolveFns.push(resolve);\r\n            if (this.hostView !== undefined) {\r\n                this.resolveHostView();\r\n            }\r\n        });\r\n    }\r\n\r\n    private resolveHostView(): void {\r\n        this.promiseResolveFns.forEach(resolve => resolve(this.hostView));\r\n        this.promiseResolveFns = [];\r\n    }\r\n}\r\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\r\nimport { Type } from '@vendure/common/lib/shared-types';\r\nimport { from, Observable } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { ModalDialogComponent } from '../../shared/components/modal-dialog/modal-dialog.component';\r\nimport { SimpleDialogComponent } from '../../shared/components/simple-dialog/simple-dialog.component';\r\nimport { OverlayHostService } from '../overlay-host/overlay-host.service';\r\n\r\n/**\r\n * @description\r\n * Any component intended to be used with the ModalService.fromComponent() method must implement\r\n * this interface.\r\n *\r\n * @docsCategory providers\r\n * @docsPage ModalService\r\n */\r\nexport interface Dialog<R = any> {\r\n    /**\r\n     * @description\r\n     * Function to be invoked in order to close the dialog when the action is complete.\r\n     * The Observable returned from the .fromComponent() method will emit the value passed\r\n     * to this method and then complete.\r\n     */\r\n    resolveWith: (result?: R) => void;\r\n}\r\n\r\nexport interface DialogButtonConfig<T> {\r\n    label: string;\r\n    type: 'secondary' | 'primary' | 'danger';\r\n    returnValue?: T;\r\n}\r\n\r\n/**\r\n * @description\r\n * Configures a generic modal dialog.\r\n *\r\n * @docsCategory providers\r\n * @docsPage ModalService\r\n */\r\nexport interface DialogConfig<T> {\r\n    title: string;\r\n    body?: string;\r\n    translationVars?: { [key: string]: string | number };\r\n    buttons: Array<DialogButtonConfig<T>>;\r\n}\r\n\r\n/**\r\n * @description\r\n * Options to configure the behaviour of the modal.\r\n *\r\n * @docsCategory providers\r\n * @docsPage ModalService\r\n */\r\nexport interface ModalOptions<T> {\r\n    /**\r\n     * @description\r\n     * Sets the width of the dialog\r\n     */\r\n    size?: 'sm' | 'md' | 'lg' | 'xl';\r\n    /**\r\n     * @description\r\n     * Sets the vertical alignment of the dialog\r\n     */\r\n    verticalAlign?: 'top' | 'center' | 'bottom';\r\n    /**\r\n     * @description\r\n     * When true, the \"x\" icon is shown\r\n     * and clicking it or the mask will close the dialog\r\n     */\r\n    closable?: boolean;\r\n    /**\r\n     * @description\r\n     * Values to be passed directly to the component being instantiated inside the dialog.\r\n     */\r\n    locals?: Partial<T>;\r\n}\r\n\r\n/**\r\n * @description\r\n * This service is responsible for instantiating a ModalDialog component and\r\n * embedding the specified component within.\r\n *\r\n * @docsCategory providers\r\n * @docsPage ModalService\r\n * @docsWeight 0\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ModalService {\r\n    constructor(\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private overlayHostService: OverlayHostService,\r\n    ) {}\r\n\r\n    /**\r\n     * @description\r\n     * Create a modal from a component. The component must implement the {@link Dialog} interface.\r\n     * Additionally, the component should include templates for the title and the buttons to be\r\n     * displayed in the modal dialog. See example:\r\n     *\r\n     * @example\r\n     * ```HTML\r\n     * class MyDialog implements Dialog {\r\n     *  resolveWith: (result?: any) => void;\r\n     *\r\n     *  okay() {\r\n     *    doSomeWork().subscribe(result => {\r\n     *      this.resolveWith(result);\r\n     *    })\r\n     *  }\r\n     *\r\n     *  cancel() {\r\n     *    this.resolveWith(false);\r\n     *  }\r\n     * }\r\n     * ```\r\n     *\r\n     * @example\r\n     * ```HTML\r\n     * <ng-template vdrDialogTitle>Title of the modal</ng-template>\r\n     *\r\n     * <p>\r\n     *   My Content\r\n     * </p>\r\n     *\r\n     * <ng-template vdrDialogButtons>\r\n     *   <button type=\"button\"\r\n     *           class=\"btn\"\r\n     *           (click)=\"cancel()\">Cancel</button>\r\n     *   <button type=\"button\"\r\n     *           class=\"btn btn-primary\"\r\n     *           (click)=\"okay()\">Okay</button>\r\n     * </ng-template>\r\n     * ```\r\n     */\r\n    fromComponent<T extends Dialog<any>, R>(\r\n        component: Type<T> & Type<Dialog<R>>,\r\n        options?: ModalOptions<T>,\r\n    ): Observable<R | undefined> {\r\n        const modalFactory = this.componentFactoryResolver.resolveComponentFactory(ModalDialogComponent);\r\n\r\n        return from(this.overlayHostService.getHostView()).pipe(\r\n            mergeMap(hostView => {\r\n                const modalComponentRef = hostView.createComponent(modalFactory);\r\n                const modalInstance: ModalDialogComponent<any> = modalComponentRef.instance;\r\n                modalInstance.childComponentType = component;\r\n                modalInstance.options = options;\r\n\r\n                return new Observable<R>(subscriber => {\r\n                    modalInstance.closeModal = (result: R) => {\r\n                        modalComponentRef.destroy();\r\n                        subscriber.next(result);\r\n                        subscriber.complete();\r\n                    };\r\n                });\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Displays a modal dialog with the provided title, body and buttons.\r\n     */\r\n    dialog<T>(config: DialogConfig<T>): Observable<T | undefined> {\r\n        return this.fromComponent(SimpleDialogComponent, {\r\n            locals: config,\r\n        });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\nimport { CurrencyCode, LanguageCode } from '../../common/generated-types';\r\nimport { Dialog } from '../../providers/modal/modal.service';\r\n\r\n@Component({\r\n    selector: 'vdr-ui-language-switcher',\r\n    templateUrl: './ui-language-switcher-dialog.component.html',\r\n    styleUrls: ['./ui-language-switcher-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiLanguageSwitcherDialogComponent implements Dialog<[LanguageCode, string | undefined]>, OnInit {\r\n    resolveWith: (result?: [LanguageCode, string | undefined]) => void;\r\n    currentLanguage: LanguageCode;\r\n    availableLanguages: LanguageCode[] = [];\r\n    currentLocale: string | undefined;\r\n    availableLocales: string[] = [\r\n        'AF',\r\n        'AL',\r\n        'DZ',\r\n        'AS',\r\n        'AD',\r\n        'AO',\r\n        'AI',\r\n        'AQ',\r\n        'AG',\r\n        'AR',\r\n        'AM',\r\n        'AW',\r\n        'AU',\r\n        'AT',\r\n        'AZ',\r\n        'BS',\r\n        'BH',\r\n        'BD',\r\n        'BB',\r\n        'BY',\r\n        'BE',\r\n        'BZ',\r\n        'BJ',\r\n        'BM',\r\n        'BT',\r\n        'BO',\r\n        'BQ',\r\n        'BA',\r\n        'BW',\r\n        'BV',\r\n        'BR',\r\n        'IO',\r\n        'BN',\r\n        'BG',\r\n        'BF',\r\n        'BI',\r\n        'CV',\r\n        'KH',\r\n        'CM',\r\n        'CA',\r\n        'KY',\r\n        'CF',\r\n        'TD',\r\n        'CL',\r\n        'CN',\r\n        'CX',\r\n        'CC',\r\n        'CO',\r\n        'KM',\r\n        'CD',\r\n        'CG',\r\n        'CK',\r\n        'CR',\r\n        'HR',\r\n        'CU',\r\n        'CW',\r\n        'CY',\r\n        'CZ',\r\n        'CI',\r\n        'DK',\r\n        'DJ',\r\n        'DM',\r\n        'DO',\r\n        'EC',\r\n        'EG',\r\n        'SV',\r\n        'GQ',\r\n        'ER',\r\n        'EE',\r\n        'SZ',\r\n        'ET',\r\n        'FK',\r\n        'FO',\r\n        'FJ',\r\n        'FI',\r\n        'FR',\r\n        'GF',\r\n        'PF',\r\n        'TF',\r\n        'GA',\r\n        'GM',\r\n        'GE',\r\n        'DE',\r\n        'GH',\r\n        'GI',\r\n        'GR',\r\n        'GL',\r\n        'GD',\r\n        'GP',\r\n        'GU',\r\n        'GT',\r\n        'GG',\r\n        'GN',\r\n        'GW',\r\n        'GY',\r\n        'HT',\r\n        'HM',\r\n        'VA',\r\n        'HN',\r\n        'HK',\r\n        'HU',\r\n        'IS',\r\n        'IN',\r\n        'ID',\r\n        'IR',\r\n        'IQ',\r\n        'IE',\r\n        'IM',\r\n        'IL',\r\n        'IT',\r\n        'JM',\r\n        'JP',\r\n        'JE',\r\n        'JO',\r\n        'KZ',\r\n        'KE',\r\n        'KI',\r\n        'KP',\r\n        'KR',\r\n        'KW',\r\n        'KG',\r\n        'LA',\r\n        'LV',\r\n        'LB',\r\n        'LS',\r\n        'LR',\r\n        'LY',\r\n        'LI',\r\n        'LT',\r\n        'LU',\r\n        'MO',\r\n        'MG',\r\n        'MW',\r\n        'MY',\r\n        'MV',\r\n        'ML',\r\n        'MT',\r\n        'MH',\r\n        'MQ',\r\n        'MR',\r\n        'MU',\r\n        'YT',\r\n        'MX',\r\n        'FM',\r\n        'MD',\r\n        'MC',\r\n        'MN',\r\n        'ME',\r\n        'MS',\r\n        'MA',\r\n        'MZ',\r\n        'MM',\r\n        'NA',\r\n        'NR',\r\n        'NP',\r\n        'NL',\r\n        'NC',\r\n        'NZ',\r\n        'NI',\r\n        'NE',\r\n        'NG',\r\n        'NU',\r\n        'NF',\r\n        'MK',\r\n        'MP',\r\n        'NO',\r\n        'OM',\r\n        'PK',\r\n        'PW',\r\n        'PS',\r\n        'PA',\r\n        'PG',\r\n        'PY',\r\n        'PE',\r\n        'PH',\r\n        'PN',\r\n        'PL',\r\n        'PT',\r\n        'PR',\r\n        'QA',\r\n        'RO',\r\n        'RU',\r\n        'RW',\r\n        'RE',\r\n        'BL',\r\n        'SH',\r\n        'KN',\r\n        'LC',\r\n        'MF',\r\n        'PM',\r\n        'VC',\r\n        'WS',\r\n        'SM',\r\n        'ST',\r\n        'SA',\r\n        'SN',\r\n        'RS',\r\n        'SC',\r\n        'SL',\r\n        'SG',\r\n        'SX',\r\n        'SK',\r\n        'SI',\r\n        'SB',\r\n        'SO',\r\n        'ZA',\r\n        'GS',\r\n        'SS',\r\n        'ES',\r\n        'LK',\r\n        'SD',\r\n        'SR',\r\n        'SJ',\r\n        'SE',\r\n        'CH',\r\n        'SY',\r\n        'TW',\r\n        'TJ',\r\n        'TZ',\r\n        'TH',\r\n        'TL',\r\n        'TG',\r\n        'TK',\r\n        'TO',\r\n        'TT',\r\n        'TN',\r\n        'TR',\r\n        'TM',\r\n        'TC',\r\n        'TV',\r\n        'UG',\r\n        'UA',\r\n        'AE',\r\n        'GB',\r\n        'UM',\r\n        'US',\r\n        'UY',\r\n        'UZ',\r\n        'VU',\r\n        'VE',\r\n        'VN',\r\n        'VG',\r\n        'VI',\r\n        'WF',\r\n        'EH',\r\n        'YE',\r\n        'ZM',\r\n        'ZW',\r\n        'AX',\r\n    ];\r\n    availableCurrencyCodes = Object.values(CurrencyCode);\r\n    selectedCurrencyCode = 'USD';\r\n    previewLocale: string;\r\n    readonly browserDefaultLocale: string | undefined;\r\n    readonly now = new Date().toISOString();\r\n\r\n    constructor() {\r\n        const browserLanguage = navigator.language.split('-');\r\n        this.browserDefaultLocale = browserLanguage.length === 1 ? undefined : browserLanguage[1];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.updatePreviewLocale();\r\n    }\r\n\r\n    updatePreviewLocale() {\r\n        if (!this.currentLocale || this.currentLocale.length === 0 || this.currentLocale.length === 2) {\r\n            this.previewLocale = this.createLocaleString(this.currentLanguage, this.currentLocale);\r\n        }\r\n    }\r\n\r\n    setLanguage() {\r\n        this.resolveWith([this.currentLanguage, this.currentLocale?.toUpperCase()]);\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    private createLocaleString(languageCode: LanguageCode, region?: string): string {\r\n        if (!region) {\r\n            return languageCode;\r\n        }\r\n        return [languageCode, region.toUpperCase()].join('-');\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { map, switchMap, take } from 'rxjs/operators';\r\n\r\nimport { getAppConfig } from '../../app.config';\r\nimport { LanguageCode } from '../../common/generated-types';\r\nimport { DataService } from '../../data/providers/data.service';\r\nimport { AuthService } from '../../providers/auth/auth.service';\r\nimport { I18nService } from '../../providers/i18n/i18n.service';\r\nimport { LocalStorageService } from '../../providers/local-storage/local-storage.service';\r\nimport { ModalService } from '../../providers/modal/modal.service';\r\nimport { UiLanguageSwitcherDialogComponent } from '../ui-language-switcher-dialog/ui-language-switcher-dialog.component';\r\n\r\n@Component({\r\n    selector: 'vdr-app-shell',\r\n    templateUrl: './app-shell.component.html',\r\n    styleUrls: ['./app-shell.component.scss'],\r\n})\r\nexport class AppShellComponent implements OnInit {\r\n    userName$: Observable<string>;\r\n    uiLanguageAndLocale$: Observable<[LanguageCode, string | undefined]>;\r\n    availableLanguages: LanguageCode[] = [];\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private dataService: DataService,\r\n        private router: Router,\r\n        private i18nService: I18nService,\r\n        private modalService: ModalService,\r\n        private localStorageService: LocalStorageService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.userName$ = this.dataService.client\r\n            .userStatus()\r\n            .single$.pipe(map(data => data.userStatus.username));\r\n        this.uiLanguageAndLocale$ = this.dataService.client\r\n            .uiState()\r\n            .stream$.pipe(map(({ uiState }) => [uiState.language, uiState.locale ?? undefined]));\r\n        this.availableLanguages = this.i18nService.availableLanguages;\r\n    }\r\n\r\n    selectUiLanguage() {\r\n        this.uiLanguageAndLocale$\r\n            .pipe(\r\n                take(1),\r\n                switchMap(([currentLanguage, currentLocale]) =>\r\n                    this.modalService.fromComponent(UiLanguageSwitcherDialogComponent, {\r\n                        closable: true,\r\n                        size: 'lg',\r\n                        locals: {\r\n                            availableLanguages: this.availableLanguages,\r\n                            currentLanguage,\r\n                            currentLocale,\r\n                        },\r\n                    }),\r\n                ),\r\n                switchMap(result =>\r\n                    result ? this.dataService.client.setUiLanguage(result[0], result[1]) : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe(result => {\r\n                if (result.setUiLanguage) {\r\n                    this.i18nService.setLanguage(result.setUiLanguage);\r\n                    this.localStorageService.set('uiLanguageCode', result.setUiLanguage);\r\n                    this.localStorageService.set('uiLocale', result.setUiLocale ?? undefined);\r\n                }\r\n            });\r\n    }\r\n\r\n    logOut() {\r\n        this.authService.logOut().subscribe(() => {\r\n            const { loginUrl } = getAppConfig();\r\n            if (loginUrl) {\r\n                window.location.href = loginUrl;\r\n            } else {\r\n                this.router.navigate(['/login']);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Data, NavigationEnd, Params, PRIMARY_OUTLET, Router } from '@angular/router';\r\nimport { flatten } from 'lodash';\r\nimport { combineLatest as observableCombineLatest, Observable, of as observableOf, Subject } from 'rxjs';\r\nimport { filter, map, startWith, switchMap, takeUntil } from 'rxjs/operators';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nexport type BreadcrumbString = string;\r\nexport interface BreadcrumbLabelLinkPair {\r\n    label: string;\r\n    link: any[];\r\n}\r\nexport type BreadcrumbValue = BreadcrumbString | BreadcrumbLabelLinkPair | BreadcrumbLabelLinkPair[];\r\nexport type BreadcrumbFunction = (\r\n    data: Data,\r\n    params: Params,\r\n    dataService: DataService,\r\n) => BreadcrumbValue | Observable<BreadcrumbValue>;\r\nexport type BreadcrumbDefinition = BreadcrumbValue | BreadcrumbFunction | Observable<BreadcrumbValue>;\r\n\r\n/**\r\n * A breadcrumbs component which reads the route config and any route that has a `data.breadcrumb` property will\r\n * be displayed in the breadcrumb trail.\r\n *\r\n * The `breadcrumb` property can be a string or a function. If a function, it will be passed the route's `data`\r\n * object (which will include all resolved keys) and any route params, and should return a BreadcrumbValue.\r\n *\r\n * See the test config to get an idea of allowable configs for breadcrumbs.\r\n */\r\n@Component({\r\n    selector: 'vdr-breadcrumb',\r\n    templateUrl: './breadcrumb.component.html',\r\n    styleUrls: ['./breadcrumb.component.scss'],\r\n})\r\nexport class BreadcrumbComponent implements OnDestroy {\r\n    breadcrumbs$: Observable<Array<{ link: string | any[]; label: string }>>;\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(private router: Router, private route: ActivatedRoute, private dataService: DataService) {\r\n        this.breadcrumbs$ = this.router.events.pipe(\r\n            filter(event => event instanceof NavigationEnd),\r\n            takeUntil(this.destroy$),\r\n            startWith(true),\r\n            switchMap(() => this.generateBreadcrumbs(this.route.root)),\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    private generateBreadcrumbs(\r\n        rootRoute: ActivatedRoute,\r\n    ): Observable<Array<{ link: Array<string | any>; label: string }>> {\r\n        const breadcrumbParts = this.assembleBreadcrumbParts(rootRoute);\r\n        const breadcrumbObservables$ = breadcrumbParts.map(({ value$, path }) => {\r\n            return value$.pipe(\r\n                map(value => {\r\n                    if (isBreadcrumbLabelLinkPair(value)) {\r\n                        return {\r\n                            label: value.label,\r\n                            link: this.normalizeRelativeLinks(value.link, path),\r\n                        };\r\n                    } else if (isBreadcrumbPairArray(value)) {\r\n                        return value.map(val => ({\r\n                            label: val.label,\r\n                            link: this.normalizeRelativeLinks(val.link, path),\r\n                        }));\r\n                    } else {\r\n                        return {\r\n                            label: value,\r\n                            link: '/' + path.join('/'),\r\n                        };\r\n                    }\r\n                }),\r\n            ) as Observable<BreadcrumbLabelLinkPair | BreadcrumbLabelLinkPair[]>;\r\n        });\r\n\r\n        return observableCombineLatest(breadcrumbObservables$).pipe(map(links => flatten(links)));\r\n    }\r\n\r\n    /**\r\n     * Walks the route definition tree to assemble an array from which the breadcrumbs can be derived.\r\n     */\r\n    private assembleBreadcrumbParts(\r\n        rootRoute: ActivatedRoute,\r\n    ): Array<{ value$: Observable<BreadcrumbValue>; path: string[] }> {\r\n        const breadcrumbParts: Array<{ value$: Observable<BreadcrumbValue>; path: string[] }> = [];\r\n        const inferredUrl = '';\r\n        const segmentPaths: string[] = [];\r\n        let currentRoute: ActivatedRoute | null = rootRoute;\r\n        do {\r\n            const childRoutes = currentRoute.children;\r\n            currentRoute = null;\r\n            childRoutes.forEach((route: ActivatedRoute) => {\r\n                if (route.outlet === PRIMARY_OUTLET) {\r\n                    const routeSnapshot = route.snapshot;\r\n                    let breadcrumbDef: BreadcrumbDefinition | undefined =\r\n                        route.routeConfig && route.routeConfig.data && route.routeConfig.data['breadcrumb'];\r\n                    segmentPaths.push(routeSnapshot.url.map(segment => segment.path).join('/'));\r\n\r\n                    if (breadcrumbDef) {\r\n                        if (isBreadcrumbFunction(breadcrumbDef)) {\r\n                            breadcrumbDef = breadcrumbDef(\r\n                                routeSnapshot.data,\r\n                                routeSnapshot.params,\r\n                                this.dataService,\r\n                            );\r\n                        }\r\n                        const observableValue = isObservable(breadcrumbDef)\r\n                            ? breadcrumbDef\r\n                            : observableOf(breadcrumbDef);\r\n                        breadcrumbParts.push({ value$: observableValue, path: segmentPaths.slice() });\r\n                    }\r\n                    currentRoute = route;\r\n                }\r\n            });\r\n        } while (currentRoute);\r\n\r\n        return breadcrumbParts;\r\n    }\r\n\r\n    /**\r\n     * Accounts for relative routes in the link array, i.e. arrays whose first element is either:\r\n     * * `./`   - this appends the rest of the link segments to the current active route\r\n     * * `../`  - this removes the last segment of the current active route, and appends the link segments\r\n     *            to the parent route.\r\n     */\r\n    private normalizeRelativeLinks(link: any[], segmentPaths: string[]): any[] {\r\n        const clone = link.slice();\r\n        if (clone[0] === './') {\r\n            clone[0] = segmentPaths.join('/');\r\n        }\r\n        if (clone[0] === '../') {\r\n            clone[0] = segmentPaths.slice(0, -1).join('/');\r\n        }\r\n        return clone.filter(segment => segment !== '');\r\n    }\r\n}\r\n\r\nfunction isBreadcrumbFunction(value: BreadcrumbDefinition): value is BreadcrumbFunction {\r\n    return typeof value === 'function';\r\n}\r\n\r\nfunction isObservable(value: BreadcrumbDefinition): value is Observable<BreadcrumbValue> {\r\n    return value instanceof Observable;\r\n}\r\n\r\nfunction isBreadcrumbLabelLinkPair(value: BreadcrumbValue): value is BreadcrumbLabelLinkPair {\r\n    return value.hasOwnProperty('label') && value.hasOwnProperty('link');\r\n}\r\n\r\nfunction isBreadcrumbPairArray(value: BreadcrumbValue): value is BreadcrumbLabelLinkPair[] {\r\n    return Array.isArray(value) && isBreadcrumbLabelLinkPair(value[0]);\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { combineLatest, Observable } from 'rxjs';\r\nimport { filter, map, startWith } from 'rxjs/operators';\r\n\r\nimport { CurrentUserChannel } from '../../common/generated-types';\r\nimport { DataService } from '../../data/providers/data.service';\r\nimport { LocalStorageService } from '../../providers/local-storage/local-storage.service';\r\n\r\n@Component({\r\n    selector: 'vdr-channel-switcher',\r\n    templateUrl: './channel-switcher.component.html',\r\n    styleUrls: ['./channel-switcher.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChannelSwitcherComponent implements OnInit {\r\n    readonly displayFilterThreshold = 10;\r\n    channels$: Observable<CurrentUserChannel[]>;\r\n    channelCount$: Observable<number>;\r\n    filterControl = new FormControl('');\r\n    activeChannelCode$: Observable<string>;\r\n    constructor(private dataService: DataService, private localStorageService: LocalStorageService) {}\r\n\r\n    ngOnInit() {\r\n        const channels$ = this.dataService.client.userStatus().mapStream(data => data.userStatus.channels);\r\n        const filterTerm$ = this.filterControl.valueChanges.pipe<string>(startWith(''));\r\n        this.channels$ = combineLatest(channels$, filterTerm$).pipe(\r\n            map(([channels, filterTerm]) => {\r\n                return filterTerm\r\n                    ? channels.filter(c =>\r\n                          c.code.toLocaleLowerCase().includes(filterTerm.toLocaleLowerCase()),\r\n                      )\r\n                    : channels;\r\n            }),\r\n        );\r\n        this.channelCount$ = channels$.pipe(map(channels => channels.length));\r\n        const activeChannel$ = this.dataService.client\r\n            .userStatus()\r\n            .mapStream(data => data.userStatus.channels.find(c => c.id === data.userStatus.activeChannelId))\r\n            .pipe(filter(notNullOrUndefined));\r\n        this.activeChannelCode$ = activeChannel$.pipe(map(channel => channel.code));\r\n    }\r\n\r\n    setActiveChannel(channelId: string) {\r\n        this.dataService.client.setActiveChannel(channelId).subscribe(({ setActiveChannel }) => {\r\n            const activeChannel = setActiveChannel.channels.find(c => c.id === channelId);\r\n            if (activeChannel) {\r\n                this.localStorageService.set('activeChannelToken', activeChannel.token);\r\n            }\r\n            this.filterControl.patchValue('');\r\n        });\r\n    }\r\n}\r\n","import { getAppConfig } from '../../app.config';\r\n\r\n/**\r\n * Returns the location of the server, e.g. \"http://localhost:3000\"\r\n */\r\nexport function getServerLocation(): string {\r\n    const { apiHost, apiPort, adminApiPath, tokenMethod } = getAppConfig();\r\n    const host = apiHost === 'auto' ? `${location.protocol}//${location.hostname}` : apiHost;\r\n    const port = apiPort\r\n        ? apiPort === 'auto'\r\n            ? location.port === ''\r\n                ? ''\r\n                : `:${location.port}`\r\n            : `:${apiPort}`\r\n        : '';\r\n    return `${host}${port}`;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { merge, Observable, of, Subject, timer } from 'rxjs';\r\nimport { catchError, map, shareReplay, switchMap, throttleTime } from 'rxjs/operators';\r\n\r\nimport { getServerLocation } from '../../data/utils/get-server-location';\r\n\r\nexport type SystemStatus = 'ok' | 'error';\r\n\r\nexport interface HealthCheckResult {\r\n    status: SystemStatus;\r\n    info: { [name: string]: HealthCheckSuccessResult };\r\n    details: { [name: string]: HealthCheckSuccessResult | HealthCheckErrorResult };\r\n    error: { [name: string]: HealthCheckErrorResult };\r\n}\r\n\r\nexport interface HealthCheckSuccessResult {\r\n    status: 'up';\r\n}\r\n\r\nexport interface HealthCheckErrorResult {\r\n    status: 'down';\r\n    message: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class HealthCheckService {\r\n    status$: Observable<SystemStatus>;\r\n    details$: Observable<Array<{ key: string; result: HealthCheckSuccessResult | HealthCheckErrorResult }>>;\r\n    lastCheck$: Observable<Date>;\r\n\r\n    private readonly pollingDelayMs = 60 * 1000;\r\n    private readonly healthCheckEndpoint: string;\r\n    private readonly _refresh = new Subject();\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        this.healthCheckEndpoint = getServerLocation() + '/health';\r\n\r\n        const refresh$ = this._refresh.pipe(throttleTime(1000));\r\n        const result$ = merge(timer(0, this.pollingDelayMs), refresh$).pipe(\r\n            switchMap(() => this.checkHealth()),\r\n            shareReplay(1),\r\n        );\r\n\r\n        this.status$ = result$.pipe(map(res => res.status));\r\n        this.details$ = result$.pipe(\r\n            map(res =>\r\n                Object.keys(res.details).map(key => {\r\n                    return { key, result: res.details[key] };\r\n                }),\r\n            ),\r\n        );\r\n        this.lastCheck$ = result$.pipe(map(res => res.lastChecked));\r\n    }\r\n\r\n    refresh() {\r\n        this._refresh.next();\r\n    }\r\n\r\n    private checkHealth() {\r\n        return this.httpClient.get<HealthCheckResult>(this.healthCheckEndpoint).pipe(\r\n            catchError(err => of(err.error)),\r\n            map(res => ({ ...res, lastChecked: new Date() })),\r\n        );\r\n    }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { EMPTY, interval, Observable, of, Subject, Subscription, timer } from 'rxjs';\nimport { debounceTime, map, mapTo, scan, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { JobInfoFragment, JobState, Permission } from '../../common/generated-types';\nimport { DataService } from '../../data/providers/data.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class JobQueueService implements OnDestroy {\n    activeJobs$: Observable<JobInfoFragment[]>;\n\n    private updateJob$ = new Subject<JobInfoFragment>();\n    private onCompleteHandlers = new Map<string, (job: JobInfoFragment) => void>();\n    private readonly subscription: Subscription;\n\n    constructor(private dataService: DataService) {\n        this.checkForJobs();\n\n        this.activeJobs$ = this.updateJob$.pipe(\n            scan<JobInfoFragment, Map<string, JobInfoFragment>>(\n                (jobMap, job) => this.handleJob(jobMap, job),\n                new Map<string, JobInfoFragment>(),\n            ),\n            map(jobMap => Array.from(jobMap.values())),\n            debounceTime(500),\n            shareReplay(1),\n        );\n\n        this.subscription = this.activeJobs$\n            .pipe(\n                switchMap(jobs => {\n                    if (jobs.length) {\n                        return interval(2500).pipe(mapTo(jobs));\n                    } else {\n                        return of([]);\n                    }\n                }),\n            )\n            .subscribe(jobs => {\n                if (jobs.length) {\n                    this.dataService.settings.pollJobs(jobs.map(j => j.id)).single$.subscribe(data => {\n                        data.jobsById.forEach(job => {\n                            this.updateJob$.next(job);\n                        });\n                    });\n                }\n            });\n    }\n\n    ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    /**\n     * After a given delay, checks the server for any active jobs.\n     */\n    checkForJobs(delay: number = 1000) {\n        timer(delay)\n            .pipe(\n                switchMap(() => this.dataService.client.userStatus().mapSingle(data => data.userStatus)),\n                switchMap(userStatus => {\n                    if (userStatus.permissions.includes(Permission.ReadSettings) && userStatus.isLoggedIn) {\n                        return this.dataService.settings.getRunningJobs().single$;\n                    } else {\n                        return EMPTY;\n                    }\n                }),\n            )\n            .subscribe(data => data.jobs.items.forEach(job => this.updateJob$.next(job)));\n    }\n\n    addJob(jobId: string, onComplete?: (job: JobInfoFragment) => void) {\n        this.dataService.settings.getJob(jobId).single$.subscribe(({ job }) => {\n            if (job) {\n                this.updateJob$.next(job);\n                if (onComplete) {\n                    this.onCompleteHandlers.set(jobId, onComplete);\n                }\n            }\n        });\n    }\n\n    private handleJob(jobMap: Map<string, JobInfoFragment>, job: JobInfoFragment) {\n        switch (job.state) {\n            case JobState.RUNNING:\n            case JobState.PENDING:\n                jobMap.set(job.id, job);\n                break;\n            case JobState.COMPLETED:\n            case JobState.FAILED:\n            case JobState.CANCELLED:\n                jobMap.delete(job.id);\n                const handler = this.onCompleteHandlers.get(job.id);\n                if (handler) {\n                    handler(job);\n                    this.onCompleteHandlers.delete(job.id);\n                }\n                break;\n        }\n        return jobMap;\n    }\n}\n","import { APP_INITIALIZER, Injectable, Provider } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\nimport { Permission } from '../../common/generated-types';\r\n\r\nimport {\r\n    ActionBarItem,\r\n    NavMenuBadgeType,\r\n    NavMenuItem,\r\n    NavMenuSection,\r\n    RouterLinkDefinition,\r\n} from './nav-builder-types';\r\n\r\n/**\r\n * @description\r\n * Add a section to the main nav menu. Providing the `before` argument will\r\n * move the section before any existing section with the specified id. If\r\n * omitted (or if the id is not found) the section will be appended to the\r\n * existing set of sections.\r\n * This should be used in the NgModule `providers` array of your ui extension module.\r\n *\r\n * @example\r\n * ```TypeScript\r\n * \\@NgModule({\r\n *   imports: [SharedModule],\r\n *   providers: [\r\n *     addNavMenuSection({\r\n *       id: 'reports',\r\n *       label: 'Reports',\r\n *       items: [{\r\n *           // ...\r\n *       }],\r\n *     },\r\n *     'settings'),\r\n *   ],\r\n * })\r\n * export class MyUiExtensionModule {}\r\n * ```\r\n * @docsCategory nav-menu\r\n */\r\nexport function addNavMenuSection(config: NavMenuSection, before?: string): Provider {\r\n    return {\r\n        provide: APP_INITIALIZER,\r\n        multi: true,\r\n        useFactory: (navBuilderService: NavBuilderService) => () => {\r\n            navBuilderService.addNavMenuSection(config, before);\r\n        },\r\n        deps: [NavBuilderService],\r\n    };\r\n}\r\n\r\n/**\r\n * @description\r\n * Add a menu item to an existing section specified by `sectionId`. The id of the section\r\n * can be found by inspecting the DOM and finding the `data-section-id` attribute.\r\n * Providing the `before` argument will move the item before any existing item with the specified id.\r\n * If omitted (or if the name is not found) the item will be appended to the\r\n * end of the section.\r\n *\r\n * This should be used in the NgModule `providers` array of your ui extension module.\r\n *\r\n * @example\r\n * ```TypeScript\r\n * \\@NgModule({\r\n *   imports: [SharedModule],\r\n *   providers: [\r\n *     addNavMenuItem({\r\n *       id: 'reviews',\r\n *       label: 'Product Reviews',\r\n *       routerLink: ['/extensions/reviews'],\r\n *       icon: 'star',\r\n *     },\r\n *     'marketing'),\r\n *   ],\r\n * })\r\n * export class MyUiExtensionModule {}\r\n * ``\r\n *\r\n * @docsCategory nav-menu\r\n */\r\nexport function addNavMenuItem(config: NavMenuItem, sectionId: string, before?: string): Provider {\r\n    return {\r\n        provide: APP_INITIALIZER,\r\n        multi: true,\r\n        useFactory: (navBuilderService: NavBuilderService) => () => {\r\n            navBuilderService.addNavMenuItem(config, sectionId, before);\r\n        },\r\n        deps: [NavBuilderService],\r\n    };\r\n}\r\n\r\n/**\r\n * @description\r\n * Adds a button to the ActionBar at the top right of each list or detail view. The locationId can\r\n * be determined by inspecting the DOM and finding the <vdr-action-bar> element and its\r\n * `data-location-id` attribute.\r\n *\r\n * This should be used in the NgModule `providers` array of your ui extension module.\r\n *\r\n * @example\r\n * ```TypeScript\r\n * \\@NgModule({\r\n *   imports: [SharedModule],\r\n *   providers: [\r\n *     addActionBarItem({\r\n *      id: 'print-invoice'\r\n *      label: 'Print Invoice',\r\n *      locationId: 'order-detail',\r\n *      routerLink: ['/extensions/invoicing'],\r\n *     }),\r\n *   ],\r\n * })\r\n * export class MyUiExtensionModule {}\r\n * ```\r\n * @docsCategory action-bar\r\n */\r\nexport function addActionBarItem(config: ActionBarItem): Provider {\r\n    return {\r\n        provide: APP_INITIALIZER,\r\n        multi: true,\r\n        useFactory: (navBuilderService: NavBuilderService) => () => {\r\n            navBuilderService.addActionBarItem(config);\r\n        },\r\n        deps: [NavBuilderService],\r\n    };\r\n}\r\n\r\n/**\r\n * This service is used to define the contents of configurable menus in the application.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class NavBuilderService {\r\n    navMenuConfig$: Observable<NavMenuSection[]>;\r\n    actionBarConfig$: Observable<ActionBarItem[]>;\r\n    sectionBadges: { [sectionId: string]: Observable<NavMenuBadgeType> } = {};\r\n\r\n    private initialNavMenuConfig$ = new BehaviorSubject<NavMenuSection[]>([]);\r\n    private addedNavMenuSections: Array<{ config: NavMenuSection; before?: string }> = [];\r\n    private addedNavMenuItems: Array<{\r\n        config: NavMenuItem;\r\n        sectionId: string;\r\n        before?: string;\r\n    }> = [];\r\n    private addedActionBarItems: ActionBarItem[] = [];\r\n\r\n    constructor() {\r\n        this.setupStreams();\r\n    }\r\n\r\n    /**\r\n     * Used to define the initial sections and items of the main nav menu.\r\n     */\r\n    defineNavMenuSections(config: NavMenuSection[]) {\r\n        this.initialNavMenuConfig$.next(config);\r\n    }\r\n\r\n    /**\r\n     * Add a section to the main nav menu. Providing the `before` argument will\r\n     * move the section before any existing section with the specified id. If\r\n     * omitted (or if the id is not found) the section will be appended to the\r\n     * existing set of sections.\r\n     *\r\n     * Providing the `id` of an existing section will replace that section.\r\n     */\r\n    addNavMenuSection(config: NavMenuSection, before?: string) {\r\n        this.addedNavMenuSections.push({ config, before });\r\n    }\r\n\r\n    /**\r\n     * Add a menu item to an existing section specified by `sectionId`. The id of the section\r\n     * can be found by inspecting the DOM and finding the `data-section-id` attribute.\r\n     * Providing the `before` argument will move the item before any existing item with the specified id.\r\n     * If omitted (or if the name is not found) the item will be appended to the\r\n     * end of the section.\r\n     *\r\n     * Providing the `id` of an existing item in that section will replace\r\n     * that item.\r\n     */\r\n    addNavMenuItem(config: NavMenuItem, sectionId: string, before?: string) {\r\n        this.addedNavMenuItems.push({ config, sectionId, before });\r\n    }\r\n\r\n    /**\r\n     * Adds a button to the ActionBar at the top right of each list or detail view. The locationId can\r\n     * be determined by inspecting the DOM and finding the <vdr-action-bar> element and its\r\n     * `data-location-id` attribute.\r\n     */\r\n    addActionBarItem(config: ActionBarItem) {\r\n        this.addedActionBarItems.push({\r\n            requiresPermission: Permission.Authenticated,\r\n            ...config,\r\n        });\r\n    }\r\n\r\n    getRouterLink(config: { routerLink?: RouterLinkDefinition }, route: ActivatedRoute): string[] | null {\r\n        if (typeof config.routerLink === 'function') {\r\n            return config.routerLink(route);\r\n        }\r\n        if (Array.isArray(config.routerLink)) {\r\n            return config.routerLink;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private setupStreams() {\r\n        const sectionAdditions$ = of(this.addedNavMenuSections);\r\n        const itemAdditions$ = of(this.addedNavMenuItems);\r\n\r\n        const combinedConfig$ = combineLatest(this.initialNavMenuConfig$, sectionAdditions$).pipe(\r\n            map(([initialConfig, additions]) => {\r\n                for (const { config, before } of additions) {\r\n                    if (!config.requiresPermission) {\r\n                        config.requiresPermission = Permission.Authenticated;\r\n                    }\r\n                    const existingIndex = initialConfig.findIndex(c => c.id === config.id);\r\n                    if (-1 < existingIndex) {\r\n                        initialConfig[existingIndex] = config;\r\n                    }\r\n                    const beforeIndex = initialConfig.findIndex(c => c.id === before);\r\n                    if (-1 < beforeIndex) {\r\n                        if (-1 < existingIndex) {\r\n                            initialConfig.splice(existingIndex, 1);\r\n                        }\r\n                        initialConfig.splice(beforeIndex, 0, config);\r\n                    } else if (existingIndex === -1) {\r\n                        initialConfig.push(config);\r\n                    }\r\n                }\r\n                return initialConfig;\r\n            }),\r\n            shareReplay(1),\r\n        );\r\n\r\n        this.navMenuConfig$ = combineLatest(combinedConfig$, itemAdditions$).pipe(\r\n            map(([sections, additionalItems]) => {\r\n                for (const item of additionalItems) {\r\n                    const section = sections.find(s => s.id === item.sectionId);\r\n                    if (!section) {\r\n                        // tslint:disable-next-line:no-console\r\n                        console.error(\r\n                            `Could not add menu item \"${item.config.id}\", section \"${item.sectionId}\" does not exist`,\r\n                        );\r\n                    } else {\r\n                        const { config, sectionId, before } = item;\r\n                        const existingIndex = section.items.findIndex(i => i.id === config.id);\r\n                        if (-1 < existingIndex) {\r\n                            section.items[existingIndex] = config;\r\n                        }\r\n                        const beforeIndex = section.items.findIndex(i => i.id === before);\r\n                        if (-1 < beforeIndex) {\r\n                            if (-1 < existingIndex) {\r\n                                section.items.splice(existingIndex, 1);\r\n                            }\r\n                            section.items.splice(beforeIndex, 0, config);\r\n                        } else if (existingIndex === -1) {\r\n                            section.items.push(config);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Aggregate any badges defined for the nav items in each section\r\n                for (const section of sections) {\r\n                    const itemBadgeStatuses = section.items\r\n                        .map(i => i.statusBadge)\r\n                        .filter(notNullOrUndefined);\r\n                    this.sectionBadges[section.id] = combineLatest(itemBadgeStatuses).pipe(\r\n                        map(badges => {\r\n                            const propagatingBadges = badges.filter(b => b.propagateToSection);\r\n                            if (propagatingBadges.length === 0) {\r\n                                return 'none';\r\n                            }\r\n                            const statuses = propagatingBadges.map(b => b.type);\r\n                            if (statuses.includes('error')) {\r\n                                return 'error';\r\n                            } else if (statuses.includes('warning')) {\r\n                                return 'warning';\r\n                            } else if (statuses.includes('info')) {\r\n                                return 'info';\r\n                            } else {\r\n                                return 'none';\r\n                            }\r\n                        }),\r\n                    );\r\n                }\r\n\r\n                return sections;\r\n            }),\r\n        );\r\n\r\n        this.actionBarConfig$ = of(this.addedActionBarItems);\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { Subscription } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { Permission } from '../../common/generated-types';\nimport { DataService } from '../../data/providers/data.service';\nimport { HealthCheckService } from '../../providers/health-check/health-check.service';\nimport { JobQueueService } from '../../providers/job-queue/job-queue.service';\nimport { NavMenuBadge, NavMenuItem } from '../../providers/nav-builder/nav-builder-types';\nimport { NavBuilderService } from '../../providers/nav-builder/nav-builder.service';\n\n@Component({\n    selector: 'vdr-main-nav',\n    templateUrl: './main-nav.component.html',\n    styleUrls: ['./main-nav.component.scss'],\n})\nexport class MainNavComponent implements OnInit, OnDestroy {\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        public navBuilderService: NavBuilderService,\n        private healthCheckService: HealthCheckService,\n        private jobQueueService: JobQueueService,\n        private dataService: DataService,\n    ) {}\n\n    private userPermissions: string[];\n    private subscription: Subscription;\n\n    shouldDisplayLink(menuItem: Pick<NavMenuItem, 'requiresPermission'>) {\n        if (!this.userPermissions) {\n            return false;\n        }\n        if (!menuItem.requiresPermission) {\n            return true;\n        }\n        if (typeof menuItem.requiresPermission === 'string') {\n            return this.userPermissions.includes(menuItem.requiresPermission);\n        }\n        if (typeof menuItem.requiresPermission === 'function') {\n            return menuItem.requiresPermission(this.userPermissions);\n        }\n    }\n\n    ngOnInit(): void {\n        this.defineNavMenu();\n        this.subscription = this.dataService.client\n            .userStatus()\n            .mapStream(({ userStatus }) => {\n                this.userPermissions = userStatus.permissions;\n            })\n            .subscribe();\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    getRouterLink(item: NavMenuItem) {\n        return this.navBuilderService.getRouterLink(item, this.route);\n    }\n\n    private defineNavMenu() {\n        function allow(...permissions: string[]): (userPermissions: string[]) => boolean {\n            return userPermissions => {\n                for (const permission of permissions) {\n                    if (userPermissions.includes(permission)) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n        }\n\n        this.navBuilderService.defineNavMenuSections([\n            {\n                requiresPermission: allow(\n                    Permission.ReadCatalog,\n                    Permission.ReadProduct,\n                    Permission.ReadFacet,\n                    Permission.ReadCollection,\n                    Permission.ReadAsset,\n                ),\n                id: 'catalog',\n                label: _('nav.catalog'),\n                items: [\n                    {\n                        requiresPermission: allow(Permission.ReadCatalog, Permission.ReadProduct),\n                        id: 'products',\n                        label: _('nav.products'),\n                        icon: 'library',\n                        routerLink: ['/catalog', 'products'],\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadCatalog, Permission.ReadFacet),\n                        id: 'facets',\n                        label: _('nav.facets'),\n                        icon: 'tag',\n                        routerLink: ['/catalog', 'facets'],\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadCatalog, Permission.ReadCollection),\n                        id: 'collections',\n                        label: _('nav.collections'),\n                        icon: 'folder-open',\n                        routerLink: ['/catalog', 'collections'],\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadCatalog, Permission.ReadAsset),\n                        id: 'assets',\n                        label: _('nav.assets'),\n                        icon: 'image-gallery',\n                        routerLink: ['/catalog', 'assets'],\n                    },\n                ],\n            },\n            {\n                id: 'sales',\n                label: _('nav.sales'),\n                requiresPermission: allow(Permission.ReadOrder),\n                items: [\n                    {\n                        requiresPermission: allow(Permission.ReadOrder),\n                        id: 'orders',\n                        label: _('nav.orders'),\n                        routerLink: ['/orders'],\n                        icon: 'shopping-cart',\n                    },\n                ],\n            },\n            {\n                id: 'customers',\n                label: _('nav.customers'),\n                requiresPermission: allow(Permission.ReadCustomer, Permission.ReadCustomerGroup),\n                items: [\n                    {\n                        requiresPermission: allow(Permission.ReadCustomer),\n                        id: 'customers',\n                        label: _('nav.customers'),\n                        routerLink: ['/customer', 'customers'],\n                        icon: 'user',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadCustomerGroup),\n                        id: 'customer-groups',\n                        label: _('nav.customer-groups'),\n                        routerLink: ['/customer', 'groups'],\n                        icon: 'users',\n                    },\n                ],\n            },\n            {\n                id: 'marketing',\n                label: _('nav.marketing'),\n                requiresPermission: allow(Permission.ReadPromotion),\n                items: [\n                    {\n                        requiresPermission: allow(Permission.ReadPromotion),\n                        id: 'promotions',\n                        label: _('nav.promotions'),\n                        routerLink: ['/marketing', 'promotions'],\n                        icon: 'asterisk',\n                    },\n                ],\n            },\n            {\n                id: 'settings',\n                label: _('nav.settings'),\n                requiresPermission: allow(\n                    Permission.ReadSettings,\n                    Permission.ReadChannel,\n                    Permission.ReadAdministrator,\n                    Permission.ReadShippingMethod,\n                    Permission.ReadPaymentMethod,\n                    Permission.ReadTaxCategory,\n                    Permission.ReadTaxRate,\n                    Permission.ReadCountry,\n                    Permission.ReadZone,\n                    Permission.UpdateGlobalSettings,\n                ),\n                collapsible: true,\n                collapsedByDefault: true,\n                items: [\n                    {\n                        requiresPermission: allow(Permission.ReadChannel),\n                        id: 'channels',\n                        label: _('nav.channels'),\n                        routerLink: ['/settings', 'channels'],\n                        icon: 'layers',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadAdministrator),\n                        id: 'administrators',\n                        label: _('nav.administrators'),\n                        routerLink: ['/settings', 'administrators'],\n                        icon: 'administrator',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadAdministrator),\n                        id: 'roles',\n                        label: _('nav.roles'),\n                        routerLink: ['/settings', 'roles'],\n                        icon: 'users',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadShippingMethod),\n                        id: 'shipping-methods',\n                        label: _('nav.shipping-methods'),\n                        routerLink: ['/settings', 'shipping-methods'],\n                        icon: 'truck',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadPaymentMethod),\n                        id: 'payment-methods',\n                        label: _('nav.payment-methods'),\n                        routerLink: ['/settings', 'payment-methods'],\n                        icon: 'credit-card',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadTaxCategory),\n                        id: 'tax-categories',\n                        label: _('nav.tax-categories'),\n                        routerLink: ['/settings', 'tax-categories'],\n                        icon: 'view-list',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadTaxRate),\n                        id: 'tax-rates',\n                        label: _('nav.tax-rates'),\n                        routerLink: ['/settings', 'tax-rates'],\n                        icon: 'calculator',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadCountry),\n                        id: 'countries',\n                        label: _('nav.countries'),\n                        routerLink: ['/settings', 'countries'],\n                        icon: 'flag',\n                    },\n                    {\n                        requiresPermission: allow(Permission.ReadZone),\n                        id: 'zones',\n                        label: _('nav.zones'),\n                        routerLink: ['/settings', 'zones'],\n                        icon: 'world',\n                    },\n                    {\n                        requiresPermission: allow(Permission.UpdateGlobalSettings),\n                        id: 'global-settings',\n                        label: _('nav.global-settings'),\n                        routerLink: ['/settings', 'global-settings'],\n                        icon: 'cog',\n                    },\n                ],\n            },\n            {\n                id: 'system',\n                label: _('nav.system'),\n                requiresPermission: Permission.ReadSystem,\n                collapsible: true,\n                collapsedByDefault: true,\n                items: [\n                    {\n                        id: 'job-queue',\n                        label: _('nav.job-queue'),\n                        routerLink: ['/system', 'jobs'],\n                        icon: 'tick-chart',\n                        statusBadge: this.jobQueueService.activeJobs$.pipe(\n                            startWith([]),\n                            map(\n                                jobs =>\n                                    ({\n                                        type: jobs.length === 0 ? 'none' : 'info',\n                                        propagateToSection: jobs.length > 0,\n                                    } as NavMenuBadge),\n                            ),\n                        ),\n                    },\n                    {\n                        id: 'system-status',\n                        label: _('nav.system-status'),\n                        routerLink: ['/system', 'system-status'],\n                        icon: 'rack-server',\n                        statusBadge: this.healthCheckService.status$.pipe(\n                            map(status => ({\n                                type: status === 'ok' ? 'success' : 'error',\n                                propagateToSection: status === 'error',\n                            })),\n                        ),\n                    },\n                ],\n            },\n        ]);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\r\n\r\nimport { NotificationType } from '../../providers/notification/notification.service';\r\n\r\n@Component({\r\n    selector: 'vdr-notification',\r\n    templateUrl: './notification.component.html',\r\n    styleUrls: ['./notification.component.scss'],\r\n})\r\nexport class NotificationComponent {\r\n    @ViewChild('wrapper', { static: true }) wrapper: ElementRef;\r\n    offsetTop = 0;\r\n    message = '';\r\n    translationVars: { [key: string]: string | number } = {};\r\n    type: NotificationType = 'info';\r\n    isVisible = true;\r\n    private onClickFn: () => void = () => {\r\n        /* */\r\n    }\r\n\r\n    registerOnClickFn(fn: () => void): void {\r\n        this.onClickFn = fn;\r\n    }\r\n\r\n    @HostListener('click')\r\n    onClick(): void {\r\n        if (this.isVisible) {\r\n            this.onClickFn();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fade out the toast. When promise resolves, toast is invisible and\r\n     * can be removed.\r\n     */\r\n    fadeOut(): Promise<any> {\r\n        this.isVisible = false;\r\n        return new Promise(resolve => setTimeout(resolve, 1000));\r\n    }\r\n\r\n    /**\r\n     * Returns the height of the toast element in px.\r\n     */\r\n    getHeight(): number {\r\n        if (!this.wrapper) {\r\n            return 0;\r\n        }\r\n        const el: HTMLElement = this.wrapper.nativeElement;\r\n        return el.getBoundingClientRect().height;\r\n    }\r\n\r\n    getIcon(): string {\r\n        switch (this.type) {\r\n            case 'info':\r\n                return 'info-circle';\r\n            case 'success':\r\n                return 'check-circle';\r\n            case 'error':\r\n                return 'exclamation-circle';\r\n            case 'warning':\r\n                return 'exclamation-triangle';\r\n        }\r\n    }\r\n\r\n    stringifyMessage(message: unknown) {\r\n        if (typeof message === 'string') {\r\n            return message;\r\n        } else {\r\n            return JSON.stringify(message, null, 2);\r\n        }\r\n    }\r\n}\r\n","import { Component, ViewContainerRef } from '@angular/core';\r\n\r\nimport { OverlayHostService } from '../../providers/overlay-host/overlay-host.service';\r\n\r\n/**\r\n * The OverlayHostComponent is a placeholder component which provides a location in the DOM into which overlay\r\n * elements (modals, notify notifications etc) may be injected dynamically.\r\n */\r\n@Component({\r\n    selector: 'vdr-overlay-host',\r\n    template: '<!-- -->',\r\n})\r\nexport class OverlayHostComponent {\r\n    constructor(viewContainerRef: ViewContainerRef, overlayHostService: OverlayHostService) {\r\n        overlayHostService.registerHostView(viewContainerRef);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\nimport { LocalStorageService } from '../../providers/local-storage/local-storage.service';\r\n\r\n@Component({\r\n    selector: 'vdr-theme-switcher',\r\n    templateUrl: './theme-switcher.component.html',\r\n    styleUrls: ['./theme-switcher.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ThemeSwitcherComponent implements OnInit {\r\n    activeTheme$: Observable<string>;\r\n\r\n    constructor(private dataService: DataService, private localStorageService: LocalStorageService) {}\r\n\r\n    ngOnInit() {\r\n        this.activeTheme$ = this.dataService.client.uiState().mapStream(data => data.uiState.theme);\r\n    }\r\n\r\n    toggleTheme(current: string) {\r\n        const newTheme = current === 'default' ? 'dark' : 'default';\r\n        this.dataService.client.setUiTheme(newTheme).subscribe(() => {\r\n            this.localStorageService.set('activeTheme', newTheme);\r\n        });\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { LanguageCode } from '../../common/generated-types';\r\n\r\n@Component({\r\n    selector: 'vdr-user-menu',\r\n    templateUrl: './user-menu.component.html',\r\n    styleUrls: ['./user-menu.component.scss'],\r\n})\r\nexport class UserMenuComponent {\r\n    @Input() userName = '';\r\n    @Input() availableLanguages: LanguageCode[] = [];\r\n    @Input() uiLanguageAndLocale: [LanguageCode, string | undefined];\r\n    @Output() logOut = new EventEmitter<void>();\r\n    @Output() selectUiLanguage = new EventEmitter<void>();\r\n}\r\n","// tslint:disable\r\n\r\nexport interface PossibleTypesResultData {\r\n    possibleTypes: {\r\n        [key: string]: string[];\r\n    };\r\n}\r\nconst result: PossibleTypesResultData = {\r\n    possibleTypes: {\r\n        AddFulfillmentToOrderResult: [\r\n            'Fulfillment',\r\n            'EmptyOrderLineSelectionError',\r\n            'ItemsAlreadyFulfilledError',\r\n            'InsufficientStockOnHandError',\r\n            'InvalidFulfillmentHandlerError',\r\n            'FulfillmentStateTransitionError',\r\n            'CreateFulfillmentError',\r\n        ],\r\n        AddManualPaymentToOrderResult: ['Order', 'ManualPaymentStateError'],\r\n        AuthenticationResult: ['CurrentUser', 'InvalidCredentialsError'],\r\n        CancelOrderResult: [\r\n            'Order',\r\n            'EmptyOrderLineSelectionError',\r\n            'QuantityTooGreatError',\r\n            'MultipleOrderError',\r\n            'CancelActiveOrderError',\r\n            'OrderStateTransitionError',\r\n        ],\r\n        CreateAssetResult: ['Asset', 'MimeTypeError'],\r\n        CreateChannelResult: ['Channel', 'LanguageNotAvailableError'],\r\n        CreateCustomerResult: ['Customer', 'EmailAddressConflictError'],\r\n        CreatePromotionResult: ['Promotion', 'MissingConditionsError'],\r\n        CustomField: [\r\n            'BooleanCustomFieldConfig',\r\n            'DateTimeCustomFieldConfig',\r\n            'FloatCustomFieldConfig',\r\n            'IntCustomFieldConfig',\r\n            'LocaleStringCustomFieldConfig',\r\n            'RelationCustomFieldConfig',\r\n            'StringCustomFieldConfig',\r\n            'TextCustomFieldConfig',\r\n        ],\r\n        CustomFieldConfig: [\r\n            'StringCustomFieldConfig',\r\n            'LocaleStringCustomFieldConfig',\r\n            'IntCustomFieldConfig',\r\n            'FloatCustomFieldConfig',\r\n            'BooleanCustomFieldConfig',\r\n            'DateTimeCustomFieldConfig',\r\n            'RelationCustomFieldConfig',\r\n            'TextCustomFieldConfig',\r\n        ],\r\n        ErrorResult: [\r\n            'AlreadyRefundedError',\r\n            'CancelActiveOrderError',\r\n            'ChannelDefaultLanguageError',\r\n            'CouponCodeExpiredError',\r\n            'CouponCodeInvalidError',\r\n            'CouponCodeLimitError',\r\n            'CreateFulfillmentError',\r\n            'EmailAddressConflictError',\r\n            'EmptyOrderLineSelectionError',\r\n            'FulfillmentStateTransitionError',\r\n            'InsufficientStockError',\r\n            'InsufficientStockOnHandError',\r\n            'InvalidCredentialsError',\r\n            'InvalidFulfillmentHandlerError',\r\n            'ItemsAlreadyFulfilledError',\r\n            'LanguageNotAvailableError',\r\n            'ManualPaymentStateError',\r\n            'MimeTypeError',\r\n            'MissingConditionsError',\r\n            'MultipleOrderError',\r\n            'NativeAuthStrategyError',\r\n            'NegativeQuantityError',\r\n            'NoChangesSpecifiedError',\r\n            'NothingToRefundError',\r\n            'OrderLimitError',\r\n            'OrderModificationStateError',\r\n            'OrderStateTransitionError',\r\n            'PaymentMethodMissingError',\r\n            'PaymentOrderMismatchError',\r\n            'PaymentStateTransitionError',\r\n            'ProductOptionInUseError',\r\n            'QuantityTooGreatError',\r\n            'RefundOrderStateError',\r\n            'RefundPaymentIdMissingError',\r\n            'RefundStateTransitionError',\r\n            'SettlePaymentError',\r\n        ],\r\n        ModifyOrderResult: [\r\n            'Order',\r\n            'NoChangesSpecifiedError',\r\n            'OrderModificationStateError',\r\n            'PaymentMethodMissingError',\r\n            'RefundPaymentIdMissingError',\r\n            'OrderLimitError',\r\n            'NegativeQuantityError',\r\n            'InsufficientStockError',\r\n            'CouponCodeExpiredError',\r\n            'CouponCodeInvalidError',\r\n            'CouponCodeLimitError',\r\n        ],\r\n        NativeAuthenticationResult: ['CurrentUser', 'InvalidCredentialsError', 'NativeAuthStrategyError'],\r\n        Node: [\r\n            'Address',\r\n            'Administrator',\r\n            'Allocation',\r\n            'Asset',\r\n            'AuthenticationMethod',\r\n            'Cancellation',\r\n            'Channel',\r\n            'Collection',\r\n            'Country',\r\n            'Customer',\r\n            'CustomerGroup',\r\n            'Facet',\r\n            'FacetValue',\r\n            'Fulfillment',\r\n            'HistoryEntry',\r\n            'Job',\r\n            'Order',\r\n            'OrderItem',\r\n            'OrderLine',\r\n            'OrderModification',\r\n            'Payment',\r\n            'PaymentMethod',\r\n            'Product',\r\n            'ProductOption',\r\n            'ProductOptionGroup',\r\n            'ProductVariant',\r\n            'Promotion',\r\n            'Refund',\r\n            'Release',\r\n            'Return',\r\n            'Role',\r\n            'Sale',\r\n            'ShippingMethod',\r\n            'StockAdjustment',\r\n            'Surcharge',\r\n            'Tag',\r\n            'TaxCategory',\r\n            'TaxRate',\r\n            'User',\r\n            'Zone',\r\n        ],\r\n        PaginatedList: [\r\n            'AdministratorList',\r\n            'AssetList',\r\n            'CollectionList',\r\n            'CountryList',\r\n            'CustomerGroupList',\r\n            'CustomerList',\r\n            'FacetList',\r\n            'HistoryEntryList',\r\n            'JobList',\r\n            'OrderList',\r\n            'PaymentMethodList',\r\n            'ProductList',\r\n            'ProductVariantList',\r\n            'PromotionList',\r\n            'RoleList',\r\n            'ShippingMethodList',\r\n            'TagList',\r\n            'TaxRateList',\r\n        ],\r\n        RefundOrderResult: [\r\n            'Refund',\r\n            'QuantityTooGreatError',\r\n            'NothingToRefundError',\r\n            'OrderStateTransitionError',\r\n            'MultipleOrderError',\r\n            'PaymentOrderMismatchError',\r\n            'RefundOrderStateError',\r\n            'AlreadyRefundedError',\r\n            'RefundStateTransitionError',\r\n        ],\r\n        RemoveOptionGroupFromProductResult: ['Product', 'ProductOptionInUseError'],\r\n        SearchResultPrice: ['PriceRange', 'SinglePrice'],\r\n        SettlePaymentResult: [\r\n            'Payment',\r\n            'SettlePaymentError',\r\n            'PaymentStateTransitionError',\r\n            'OrderStateTransitionError',\r\n        ],\r\n        SettleRefundResult: ['Refund', 'RefundStateTransitionError'],\r\n        StockMovement: ['Allocation', 'Cancellation', 'Release', 'Return', 'Sale', 'StockAdjustment'],\r\n        StockMovementItem: ['StockAdjustment', 'Allocation', 'Sale', 'Cancellation', 'Return', 'Release'],\r\n        TransitionFulfillmentToStateResult: ['Fulfillment', 'FulfillmentStateTransitionError'],\r\n        TransitionOrderToStateResult: ['Order', 'OrderStateTransitionError'],\r\n        TransitionPaymentToStateResult: ['Payment', 'PaymentStateTransitionError'],\r\n        UpdateChannelResult: ['Channel', 'LanguageNotAvailableError'],\r\n        UpdateCustomerResult: ['Customer', 'EmailAddressConflictError'],\r\n        UpdateGlobalSettingsResult: ['GlobalSettings', 'ChannelDefaultLanguageError'],\r\n        UpdatePromotionResult: ['Promotion', 'MissingConditionsError'],\r\n    },\r\n};\r\nexport default result;\r\n","// Allows the introspectionResult to be imported as a named symbol\r\nexport { default as introspectionResult } from './introspection-result';\r\n","import { Injector } from '@angular/core';\r\nimport { ApolloLink, Operation } from '@apollo/client/core';\r\n\r\nimport { JobQueueService } from '../providers/job-queue/job-queue.service';\r\n\r\n/**\r\n * This link checks each operation and if it is a mutation, it tells the JobQueueService\r\n * to poll for active jobs. This is because certain mutations trigger background jobs\r\n * which should be made known in the UI.\r\n */\r\nexport class CheckJobsLink extends ApolloLink {\r\n    private _jobQueueService: JobQueueService;\r\n    get jobQueueService(): JobQueueService {\r\n        if (!this._jobQueueService) {\r\n            this._jobQueueService = this.injector.get(JobQueueService);\r\n        }\r\n        return this._jobQueueService;\r\n    }\r\n\r\n    /**\r\n     * We inject the Injector rather than the JobQueueService directly in order\r\n     * to avoid a circular dependency error.\r\n     */\r\n    constructor(private injector: Injector) {\r\n        super((operation, forward) => {\r\n            if (this.isMutation(operation)) {\r\n                this.jobQueueService.checkForJobs();\r\n            }\r\n            return forward ? forward(operation) : null;\r\n        });\r\n    }\r\n\r\n    private isMutation(operation: Operation): boolean {\r\n        return !!operation.query.definitions.find(\r\n            d => d.kind === 'OperationDefinition' && d.operation === 'mutation',\r\n        );\r\n    }\r\n}\r\n","import { getAppConfig } from '../../app.config';\r\nimport { GetNetworkStatus, GetUiState, GetUserStatus } from '../../common/generated-types';\r\nimport { getDefaultUiLanguage, getDefaultUiLocale } from '../../common/utilities/get-default-ui-language';\r\nimport { LocalStorageService } from '../../providers/local-storage/local-storage.service';\r\n\r\nexport function getClientDefaults(localStorageService: LocalStorageService) {\r\n    const currentLanguage = localStorageService.get('uiLanguageCode') || getDefaultUiLanguage();\r\n    const currentLocale = localStorageService.get('uiLocale') || getDefaultUiLocale();\r\n    const currentContentLanguage = localStorageService.get('contentLanguageCode') || getDefaultUiLanguage();\r\n    const activeTheme = localStorageService.get('activeTheme') || 'default';\r\n    return {\r\n        networkStatus: {\r\n            inFlightRequests: 0,\r\n            __typename: 'NetworkStatus',\r\n        } as GetNetworkStatus.NetworkStatus,\r\n        userStatus: {\r\n            username: '',\r\n            isLoggedIn: false,\r\n            loginTime: '',\r\n            activeChannelId: null,\r\n            permissions: [],\r\n            channels: [],\r\n            __typename: 'UserStatus',\r\n        } as GetUserStatus.UserStatus,\r\n        uiState: {\r\n            language: currentLanguage,\r\n            locale: currentLocale || '',\r\n            contentLanguage: currentContentLanguage,\r\n            theme: activeTheme,\r\n            displayUiExtensionPoints: false,\r\n            __typename: 'UiState',\r\n        } as GetUiState.UiState,\r\n    };\r\n}\r\n","import { InMemoryCache } from '@apollo/client/core';\r\n\r\nimport {\r\n    GetNetworkStatus,\r\n    GetUiState,\r\n    GetUserStatus,\r\n    LanguageCode,\r\n    SetActiveChannel,\r\n    SetAsLoggedIn,\r\n    SetContentLanguage,\r\n    SetDisplayUiExtensionPoints,\r\n    SetUiLanguage,\r\n    SetUiLocale,\r\n    SetUiTheme,\r\n    UpdateUserChannels,\r\n    UserStatus,\r\n} from '../../common/generated-types';\r\nimport { GET_NEWTORK_STATUS, GET_UI_STATE, GET_USER_STATUS } from '../definitions/client-definitions';\r\n\r\nexport type ResolverContext = {\r\n    cache: InMemoryCache;\r\n    optimisticResponse: any;\r\n    getCacheKey: (storeObj: any) => string;\r\n};\r\n\r\nexport type ResolverDefinition = {\r\n    Mutation: {\r\n        [name: string]: (rootValue: any, args: any, context: ResolverContext, info?: any) => any;\r\n    };\r\n};\r\n\r\nexport const clientResolvers: ResolverDefinition = {\r\n    Mutation: {\r\n        requestStarted: (_, args, { cache }): number => {\r\n            return updateRequestsInFlight(cache, 1);\r\n        },\r\n        requestCompleted: (_, args, { cache }): number => {\r\n            return updateRequestsInFlight(cache, -1);\r\n        },\r\n        setAsLoggedIn: (_, args: SetAsLoggedIn.Variables, { cache }): GetUserStatus.UserStatus => {\r\n            const {\r\n                input: { username, loginTime, channels, activeChannelId },\r\n            } = args;\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const permissions = channels.find(c => c.id === activeChannelId)!.permissions;\r\n            const data: { userStatus: UserStatus } = {\r\n                userStatus: {\r\n                    __typename: 'UserStatus',\r\n                    username,\r\n                    loginTime,\r\n                    isLoggedIn: true,\r\n                    permissions,\r\n                    channels,\r\n                    activeChannelId,\r\n                },\r\n            };\r\n            cache.writeQuery({ query: GET_USER_STATUS, data });\r\n            return data.userStatus;\r\n        },\r\n        setAsLoggedOut: (_, args, { cache }): GetUserStatus.UserStatus => {\r\n            const data: GetUserStatus.Query = {\r\n                userStatus: {\r\n                    __typename: 'UserStatus',\r\n                    username: '',\r\n                    loginTime: '',\r\n                    isLoggedIn: false,\r\n                    permissions: [],\r\n                    channels: [],\r\n                    activeChannelId: null,\r\n                },\r\n            };\r\n            cache.writeQuery({ query: GET_USER_STATUS, data });\r\n            return data.userStatus;\r\n        },\r\n        setUiLanguage: (_, args: SetUiLanguage.Variables, { cache }): LanguageCode => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const previous = cache.readQuery<GetUiState.Query>({ query: GET_UI_STATE })!;\r\n            const data = updateUiState(previous, 'language', args.languageCode);\r\n            cache.writeQuery({ query: GET_UI_STATE, data });\r\n            return args.languageCode;\r\n        },\r\n        setUiLocale: (_, args: SetUiLocale.Variables, { cache }): string | undefined => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const previous = cache.readQuery<GetUiState.Query>({ query: GET_UI_STATE })!;\r\n            const data = updateUiState(previous, 'locale', args.locale);\r\n            cache.writeQuery({ query: GET_UI_STATE, data });\r\n            return args.locale ?? undefined;\r\n        },\r\n        setContentLanguage: (_, args: SetContentLanguage.Variables, { cache }): LanguageCode => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const previous = cache.readQuery<GetUiState.Query>({ query: GET_UI_STATE })!;\r\n            const data = updateUiState(previous, 'contentLanguage', args.languageCode);\r\n            cache.writeQuery({ query: GET_UI_STATE, data });\r\n            return args.languageCode;\r\n        },\r\n        setUiTheme: (_, args: SetUiTheme.Variables, { cache }): string => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const previous = cache.readQuery<GetUiState.Query>({ query: GET_UI_STATE })!;\r\n            const data = updateUiState(previous, 'theme', args.theme);\r\n            cache.writeQuery({ query: GET_UI_STATE, data });\r\n            return args.theme;\r\n        },\r\n        setDisplayUiExtensionPoints: (_, args: SetDisplayUiExtensionPoints.Variables, { cache }): boolean => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const previous = cache.readQuery<GetUiState.Query>({ query: GET_UI_STATE })!;\r\n            const data = updateUiState(previous, 'displayUiExtensionPoints', args.display);\r\n            cache.writeQuery({ query: GET_UI_STATE, data });\r\n            return args.display;\r\n        },\r\n        setActiveChannel: (_, args: SetActiveChannel.Variables, { cache }): UserStatus => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const previous = cache.readQuery<GetUserStatus.Query>({ query: GET_USER_STATUS })!;\r\n            const activeChannel = previous.userStatus.channels.find(c => c.id === args.channelId);\r\n            if (!activeChannel) {\r\n                throw new Error('setActiveChannel: Could not find Channel with ID ' + args.channelId);\r\n            }\r\n            const permissions = activeChannel.permissions;\r\n            const data: { userStatus: UserStatus } = {\r\n                userStatus: {\r\n                    ...previous.userStatus,\r\n                    permissions,\r\n                    activeChannelId: activeChannel.id,\r\n                },\r\n            };\r\n            cache.writeQuery({ query: GET_USER_STATUS, data });\r\n            return data.userStatus;\r\n        },\r\n        updateUserChannels: (_, args: UpdateUserChannels.Variables, { cache }): UserStatus => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            const previous = cache.readQuery<GetUserStatus.Query>({ query: GET_USER_STATUS })!;\r\n            const data = {\r\n                userStatus: {\r\n                    ...previous.userStatus,\r\n                    channels: Array.isArray(args.channels) ? args.channels : [args.channels],\r\n                },\r\n            };\r\n            cache.writeQuery({ query: GET_USER_STATUS, data });\r\n            return data.userStatus;\r\n        },\r\n    },\r\n};\r\n\r\nfunction updateUiState<K extends keyof GetUiState.Query['uiState']>(\r\n    previous: GetUiState.Query,\r\n    key: K,\r\n    value: GetUiState.Query['uiState'][K],\r\n): GetUiState.Query {\r\n    return {\r\n        uiState: {\r\n            ...previous.uiState,\r\n            [key]: value,\r\n            __typename: 'UiState',\r\n        },\r\n    };\r\n}\r\n\r\nfunction updateRequestsInFlight(cache: InMemoryCache, increment: 1 | -1): number {\r\n    const previous = cache.readQuery<GetNetworkStatus.Query>({ query: GET_NEWTORK_STATUS });\r\n    const inFlightRequests = previous ? previous.networkStatus.inFlightRequests + increment : increment;\r\n    const data: GetNetworkStatus.Query = {\r\n        networkStatus: {\r\n            __typename: 'NetworkStatus',\r\n            inFlightRequests,\r\n        },\r\n    };\r\n    cache.writeQuery({ query: GET_NEWTORK_STATUS, data });\r\n    return inFlightRequests;\r\n}\r\n","import { ApolloLink } from '@apollo/client/core';\r\nimport { omit } from '@vendure/common/lib/omit';\r\n\r\n/**\r\n * The \"__typename\" property added by Apollo Client causes errors when posting the entity\r\n * back in a mutation. Therefore this link will remove all such keys before the object\r\n * reaches the API layer.\r\n *\r\n * See: https://github.com/apollographql/apollo-client/issues/1913#issuecomment-393721604\r\n */\r\nexport class OmitTypenameLink extends ApolloLink {\r\n    constructor() {\r\n        super((operation, forward) => {\r\n            if (operation.variables) {\r\n                operation.variables = omit(operation.variables, ['__typename'], true);\r\n            }\r\n\r\n            return forward ? forward(operation) : null;\r\n        });\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * An adapter that allows the Angular HttpClient to be used as a replacement for the global `fetch` function.\r\n * This is used to supply a custom fetch function to the apollo-upload-client whilst also allowing the\r\n * use of Angular's http infrastructure such as interceptors.\r\n */\r\n@Injectable()\r\nexport class FetchAdapter {\r\n    constructor(private httpClient: HttpClient) {}\r\n\r\n    fetch = (input: Request | string, init: RequestInit): Promise<Response> => {\r\n        const url = typeof input === 'string' ? input : input.url;\r\n        const method = typeof input === 'string' ? (init.method ? init.method : 'GET') : input.method;\r\n\r\n        return this.httpClient\r\n            .request(method, url, {\r\n                body: init.body,\r\n                headers: init.headers as any,\r\n                observe: 'response',\r\n                responseType: 'json',\r\n                withCredentials: true,\r\n            })\r\n            .toPromise()\r\n            .then(result => {\r\n                return new Response(JSON.stringify(result.body), {\r\n                    status: result.status,\r\n                    statusText: result.statusText,\r\n                });\r\n            });\r\n    };\r\n}\r\n","import { ComponentFactoryResolver, ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\r\n\r\nimport { NotificationComponent } from '../../components/notification/notification.component';\r\nimport { I18nService } from '../i18n/i18n.service';\r\nimport { OverlayHostService } from '../overlay-host/overlay-host.service';\r\n\r\n/**\r\n * @description\r\n * The types of notification available.\r\n *\r\n * @docsCategory providers\r\n * @docsPage NotificationService\r\n */\r\nexport type NotificationType = 'info' | 'success' | 'error' | 'warning';\r\n\r\n/**\r\n * @description\r\n * Configuration for a toast notification.\r\n *\r\n * @docsCategory providers\r\n * @docsPage NotificationService\r\n */\r\nexport interface ToastConfig {\r\n    message: string;\r\n    translationVars?: { [key: string]: string | number };\r\n    type?: NotificationType;\r\n    duration?: number;\r\n}\r\n\r\n// How many ms before the toast is dismissed.\r\nconst TOAST_DURATION = 3000;\r\n\r\n/**\r\n * @description\r\n * Provides toast notification functionality.\r\n *\r\n * @example\r\n * ```TypeScript\r\n * class MyComponent {\r\n *   constructor(private notificationService: NotificationService) {}\r\n *\r\n *   save() {\r\n *     this.notificationService\r\n *         .success(_('asset.notify-create-assets-success'), {\r\n *           count: successCount,\r\n *         });\r\n *   }\r\n * }\r\n *\r\n * @docsCategory providers\r\n * @docsPage NotificationService\r\n * @docsWeight 0\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class NotificationService {\r\n    private get hostView(): Promise<ViewContainerRef> {\r\n        return this.overlayHostService.getHostView();\r\n    }\r\n\r\n    private openToastRefs: Array<{ ref: ComponentRef<NotificationComponent>; timerId: any }> = [];\r\n\r\n    constructor(\r\n        private i18nService: I18nService,\r\n        private resolver: ComponentFactoryResolver,\r\n        private overlayHostService: OverlayHostService,\r\n    ) {}\r\n\r\n    /**\r\n     * @description\r\n     * Display a success toast notification\r\n     */\r\n    success(message: string, translationVars?: { [key: string]: string | number }): void {\r\n        this.notify({\r\n            message,\r\n            translationVars,\r\n            type: 'success',\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Display an info toast notification\r\n     */\r\n    info(message: string, translationVars?: { [key: string]: string | number }): void {\r\n        this.notify({\r\n            message,\r\n            translationVars,\r\n            type: 'info',\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Display a warning toast notification\r\n     */\r\n    warning(message: string, translationVars?: { [key: string]: string | number }): void {\r\n        this.notify({\r\n            message,\r\n            translationVars,\r\n            type: 'warning',\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Display an error toast notification\r\n     */\r\n    error(message: string, translationVars?: { [key: string]: string | number }): void {\r\n        this.notify({\r\n            message,\r\n            translationVars,\r\n            type: 'error',\r\n            duration: 20000,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Display a toast notification.\r\n     */\r\n    notify(config: ToastConfig): void {\r\n        this.createToast(config);\r\n    }\r\n\r\n    /**\r\n     * Load a ToastComponent into the DOM host location.\r\n     */\r\n    private async createToast(config: ToastConfig): Promise<void> {\r\n        const toastFactory = this.resolver.resolveComponentFactory(NotificationComponent);\r\n        const hostView = await this.hostView;\r\n        const ref = hostView.createComponent<NotificationComponent>(toastFactory);\r\n        const toast: NotificationComponent = ref.instance;\r\n        const dismissFn = this.createDismissFunction(ref);\r\n        toast.type = config.type || 'info';\r\n        toast.message = config.message;\r\n        toast.translationVars = this.translateTranslationVars(config.translationVars || {});\r\n        toast.registerOnClickFn(dismissFn);\r\n\r\n        let timerId;\r\n        if (!config.duration || 0 < config.duration) {\r\n            timerId = setTimeout(dismissFn, config.duration || TOAST_DURATION);\r\n        }\r\n\r\n        this.openToastRefs.unshift({ ref, timerId });\r\n        setTimeout(() => this.calculatePositions());\r\n    }\r\n\r\n    /**\r\n     * Returns a function which will destroy the toast component and\r\n     * remove it from the openToastRefs array.\r\n     */\r\n    private createDismissFunction(ref: ComponentRef<NotificationComponent>): () => void {\r\n        return () => {\r\n            const toast: NotificationComponent = ref.instance;\r\n            const index = this.openToastRefs.map(o => o.ref).indexOf(ref);\r\n\r\n            if (this.openToastRefs[index]) {\r\n                clearTimeout(this.openToastRefs[index].timerId);\r\n            }\r\n\r\n            toast.fadeOut().then(() => {\r\n                ref.destroy();\r\n                this.openToastRefs.splice(index, 1);\r\n                this.calculatePositions();\r\n            });\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Calculate and set the top offsets for each of the open toasts.\r\n     */\r\n    private calculatePositions(): void {\r\n        let cumulativeHeight = 10;\r\n\r\n        this.openToastRefs.forEach(obj => {\r\n            const toast: NotificationComponent = obj.ref.instance;\r\n            toast.offsetTop = cumulativeHeight;\r\n            cumulativeHeight += toast.getHeight() + 6;\r\n        });\r\n    }\r\n\r\n    private translateTranslationVars(translationVars: { [key: string]: string | number }): {\r\n        [key: string]: string | number;\r\n    } {\r\n        for (const [key, val] of Object.entries(translationVars)) {\r\n            if (typeof val === 'string') {\r\n                translationVars[key] = this.i18nService.translate(val);\r\n            }\r\n        }\r\n        return translationVars;\r\n    }\r\n}\r\n","import {\n    HttpErrorResponse,\n    HttpEvent,\n    HttpHandler,\n    HttpInterceptor,\n    HttpRequest,\n    HttpResponse,\n} from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { DEFAULT_AUTH_TOKEN_HEADER_KEY } from '@vendure/common/lib/shared-constants';\nimport { AdminUiConfig } from '@vendure/common/lib/shared-types';\nimport { Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\nimport { getAppConfig } from '../../app.config';\nimport { AuthService } from '../../providers/auth/auth.service';\nimport { LocalStorageService } from '../../providers/local-storage/local-storage.service';\nimport { NotificationService } from '../../providers/notification/notification.service';\nimport { DataService } from '../providers/data.service';\n\nexport const AUTH_REDIRECT_PARAM = 'redirectTo';\n\n/**\n * The default interceptor examines all HTTP requests & responses and automatically updates the requesting state\n * and shows error notifications.\n */\n@Injectable()\nexport class DefaultInterceptor implements HttpInterceptor {\n    private readonly tokenMethod: AdminUiConfig['tokenMethod'] = 'cookie';\n    private readonly authTokenHeaderKey: string;\n\n    constructor(\n        private dataService: DataService,\n        private injector: Injector,\n        private authService: AuthService,\n        private router: Router,\n        private localStorageService: LocalStorageService,\n    ) {\n        this.tokenMethod = getAppConfig().tokenMethod;\n        this.authTokenHeaderKey = getAppConfig().authTokenHeaderKey || DEFAULT_AUTH_TOKEN_HEADER_KEY;\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        this.dataService.client.startRequest().subscribe();\n        return this.dataService.client.uiState().single$.pipe(\n            switchMap(({ uiState }) => {\n                const request = req.clone({\n                    setParams: {\n                        languageCode: uiState?.contentLanguage ?? '',\n                    },\n                });\n                return next.handle(request);\n            }),\n            tap(\n                event => {\n                    if (event instanceof HttpResponse) {\n                        this.checkForAuthToken(event);\n                        this.notifyOnError(event);\n                        this.dataService.client.completeRequest().subscribe();\n                    }\n                },\n                err => {\n                    if (err instanceof HttpErrorResponse) {\n                        this.notifyOnError(err);\n                        this.dataService.client.completeRequest().subscribe();\n                    } else {\n                        this.displayErrorNotification(err.message);\n                    }\n                },\n            ),\n        );\n    }\n\n    private notifyOnError(response: HttpResponse<any> | HttpErrorResponse) {\n        if (response instanceof HttpErrorResponse) {\n            if (response.status === 0) {\n                const { apiHost, apiPort } = getAppConfig();\n                this.displayErrorNotification(_(`error.could-not-connect-to-server`), {\n                    url: `${apiHost}:${apiPort}`,\n                });\n            } else if (response.status === 503 && response.url?.endsWith('/health')) {\n                this.displayErrorNotification(_(`error.health-check-failed`));\n            } else {\n                this.displayErrorNotification(this.extractErrorFromHttpResponse(response));\n            }\n        } else {\n            // GraphQL errors still return 200 OK responses, but have the actual error message\n            // inside the body of the response.\n            const graqhQLErrors = response.body.errors;\n            if (graqhQLErrors && Array.isArray(graqhQLErrors)) {\n                const firstCode: string = graqhQLErrors[0]?.extensions?.code;\n                if (firstCode === 'FORBIDDEN') {\n                    this.authService.logOut().subscribe(() => {\n                        if (!window.location.pathname.includes('login')) {\n                            const path = graqhQLErrors[0].path.join(' > ');\n                            this.displayErrorNotification(_(`error.403-forbidden`), { path });\n                        }\n                        this.router.navigate(['/login'], {\n                            queryParams: {\n                                [AUTH_REDIRECT_PARAM]: btoa(this.router.url),\n                            },\n                        });\n                    });\n                } else if (firstCode === 'CHANNEL_NOT_FOUND') {\n                    const message = graqhQLErrors.map(err => err.message).join('\\n');\n                    this.displayErrorNotification(message);\n                    this.localStorageService.remove('activeChannelToken');\n                } else {\n                    const message = graqhQLErrors.map(err => err.message).join('\\n');\n                    this.displayErrorNotification(message);\n                }\n            }\n        }\n    }\n\n    private extractErrorFromHttpResponse(response: HttpErrorResponse): string {\n        const errors = response.error.errors;\n        if (Array.isArray(errors)) {\n            return errors.map(e => e.message).join('\\n');\n        } else {\n            return response.message;\n        }\n    }\n\n    /**\n     * We need to lazily inject the NotificationService since it depends on the I18nService which\n     * eventually depends on the HttpClient (used to load messages from json files). If we were to\n     * directly inject NotificationService into the constructor, we get a cyclic dependency.\n     */\n    private displayErrorNotification(message: string, vars?: Record<string, any>): void {\n        const notificationService = this.injector.get<NotificationService>(NotificationService);\n        notificationService.error(message, vars);\n    }\n\n    /**\n     * If the server is configured to use the \"bearer\" tokenMethod, each response should be checked\n     * for the existence of an auth token.\n     */\n    private checkForAuthToken(response: HttpResponse<any>) {\n        if (this.tokenMethod === 'bearer') {\n            const authToken = response.headers.get(this.authTokenHeaderKey);\n            if (authToken) {\n                this.localStorageService.set('authToken', authToken);\n            }\n        }\n    }\n}\n","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\r\nimport { ApolloClientOptions, InMemoryCache } from '@apollo/client/core';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { ApolloLink } from '@apollo/client/link/core';\r\nimport { APOLLO_OPTIONS } from 'apollo-angular';\r\nimport { createUploadLink } from 'apollo-upload-client';\r\n\r\nimport { getAppConfig } from '../app.config';\r\nimport { introspectionResult } from '../common/introspection-result-wrapper';\r\nimport { LocalStorageService } from '../providers/local-storage/local-storage.service';\r\n\r\nimport { CheckJobsLink } from './check-jobs-link';\r\nimport { getClientDefaults } from './client-state/client-defaults';\r\nimport { clientResolvers } from './client-state/client-resolvers';\r\nimport { GET_CLIENT_STATE } from './definitions/client-definitions';\r\nimport { OmitTypenameLink } from './omit-typename-link';\r\nimport { BaseDataService } from './providers/base-data.service';\r\nimport { DataService } from './providers/data.service';\r\nimport { FetchAdapter } from './providers/fetch-adapter';\r\nimport { DefaultInterceptor } from './providers/interceptor';\r\nimport { initializeServerConfigService, ServerConfigService } from './server-config';\r\nimport { getServerLocation } from './utils/get-server-location';\r\n\r\nexport function createApollo(\r\n    localStorageService: LocalStorageService,\r\n    fetchAdapter: FetchAdapter,\r\n    injector: Injector,\r\n): ApolloClientOptions<any> {\r\n    const { adminApiPath, tokenMethod } = getAppConfig();\r\n    const serverLocation = getServerLocation();\r\n    const apolloCache = new InMemoryCache({\r\n        possibleTypes: introspectionResult.possibleTypes,\r\n        typePolicies: {\r\n            GlobalSettings: {\r\n                fields: {\r\n                    serverConfig: {\r\n                        merge: (existing, incoming) => ({ ...existing, ...incoming }),\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    });\r\n    apolloCache.writeQuery({\r\n        query: GET_CLIENT_STATE,\r\n        data: getClientDefaults(localStorageService),\r\n    });\r\n\r\n    if (!false) {\r\n        // TODO: enable only for dev mode\r\n        // make the Apollo Cache inspectable in the console for debug purposes\r\n        (window as any)['apolloCache'] = apolloCache;\r\n    }\r\n    return {\r\n        link: ApolloLink.from([\r\n            new OmitTypenameLink(),\r\n            new CheckJobsLink(injector),\r\n            setContext(() => {\r\n                const headers: Record<string, string> = {};\r\n                const channelToken = localStorageService.get('activeChannelToken');\r\n                if (channelToken) {\r\n                    headers['vendure-token'] = channelToken;\r\n                }\r\n                if (tokenMethod === 'bearer') {\r\n                    const authToken = localStorageService.get('authToken');\r\n                    if (authToken) {\r\n                        headers.authorization = `Bearer ${authToken}`;\r\n                    }\r\n                }\r\n                return { headers };\r\n            }),\r\n            createUploadLink({\r\n                uri: `${serverLocation}/${adminApiPath}`,\r\n                fetch: fetchAdapter.fetch,\r\n            }),\r\n        ]),\r\n        cache: apolloCache,\r\n        resolvers: clientResolvers,\r\n    };\r\n}\r\n\r\n/**\r\n * The DataModule is responsible for all API calls *and* serves as the source of truth for global app\r\n * state via the apollo-link-state package.\r\n */\r\n@NgModule({\r\n    imports: [HttpClientModule],\r\n    exports: [],\r\n    declarations: [],\r\n    providers: [\r\n        BaseDataService,\r\n        DataService,\r\n        FetchAdapter,\r\n        ServerConfigService,\r\n        {\r\n            provide: APOLLO_OPTIONS,\r\n            useFactory: createApollo,\r\n            deps: [LocalStorageService, FetchAdapter, Injector],\r\n        },\r\n        { provide: HTTP_INTERCEPTORS, useClass: DefaultInterceptor, multi: true },\r\n        {\r\n            provide: APP_INITIALIZER,\r\n            multi: true,\r\n            useFactory: initializeServerConfigService,\r\n            deps: [ServerConfigService],\r\n        },\r\n    ],\r\n})\r\nexport class DataModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport type Dictionary = {\r\n    [key: string]: string | Dictionary;\r\n};\r\n\r\n/**\r\n * A loader for ngx-translate which extends the HttpLoader functionality by stripping out any\r\n * values which are empty strings. This means that during development, translation keys which have\r\n * been extracted but not yet defined will fall back to the raw key text rather than displaying nothing.\r\n *\r\n * Originally from https://github.com/ngx-translate/core/issues/662#issuecomment-377010232\r\n */\r\nexport class CustomHttpTranslationLoader implements TranslateLoader {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private prefix: string = '/assets/i18n/',\r\n        private suffix: string = '.json',\r\n    ) {}\r\n\r\n    public getTranslation(lang: string): Observable<any> {\r\n        return this.http\r\n            .get(`${this.prefix}${lang}${this.suffix}`)\r\n            .pipe(map((res: any) => this.process(res)));\r\n    }\r\n\r\n    private process(object: Dictionary): Dictionary {\r\n        const newObject: Dictionary = {};\r\n\r\n        for (const key in object) {\r\n            if (object.hasOwnProperty(key)) {\r\n                const value = object[key];\r\n                if (typeof value !== 'string') {\r\n                    newObject[key] = this.process(value);\r\n                } else if (typeof value === 'string' && value === '') {\r\n                    // do not copy empty strings\r\n                } else {\r\n                    newObject[key] = object[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return newObject;\r\n    }\r\n}\r\n","/* tslint:disable:no-console */\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n    TranslateMessageFormatCompiler,\r\n    TranslateMessageFormatDebugCompiler,\r\n} from 'ngx-translate-messageformat-compiler';\r\n\r\n/**\r\n * Work-around for Angular 9 compat.\r\n * See https://github.com/lephyrus/ngx-translate-messageformat-compiler/issues/53#issuecomment-583677994\r\n *\r\n * Also logs errors which would otherwise get swallowed by ngx-translate. This is important\r\n * because it is quite easy to make errors in messageformat syntax, and without clear\r\n * error messages it's very hard to debug.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class InjectableTranslateMessageFormatCompiler extends TranslateMessageFormatCompiler {\r\n    compileTranslations(value: any, lang: string): any {\r\n        try {\r\n            return super.compileTranslations(value, lang);\r\n        } catch (e) {\r\n            console.error(`There was an error with the ${lang} translations:`);\r\n            console.log(e);\r\n            console.log(\r\n                `Check the messageformat docs: https://messageformat.github.io/messageformat/page-guide`,\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { Injectable, Type } from '@angular/core';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../common/component-registry-types';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ComponentRegistryService {\r\n    private inputComponentMap = new Map<string, Type<FormInputComponent<any>>>();\r\n\r\n    registerInputComponent(id: string, component: Type<FormInputComponent<any>>) {\r\n        if (this.inputComponentMap.has(id)) {\r\n            throw new Error(\r\n                `Cannot register an InputComponent with the id \"${id}\", as one with that id already exists`,\r\n            );\r\n        }\r\n        this.inputComponentMap.set(id, component);\r\n    }\r\n\r\n    getInputComponent(id: string): Type<FormInputComponent<any>> | undefined {\r\n        return this.inputComponentMap.get(id);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Type } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent } from '../../common/component-registry-types';\r\nimport { CustomFields, CustomFieldsFragment } from '../../common/generated-types';\r\nimport { ComponentRegistryService } from '../component-registry/component-registry.service';\r\n\r\nexport type CustomFieldConfigType = CustomFieldsFragment;\r\n\r\nexport interface CustomFieldControl extends FormInputComponent<CustomFieldConfigType> {}\r\n\r\nexport type CustomFieldEntityName = Exclude<keyof CustomFields, '__typename'>;\r\n\r\n/**\r\n * This service allows the registration of custom controls for customFields.\r\n *\r\n * @deprecated The ComponentRegistryService now handles custom field components directly.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CustomFieldComponentService {\r\n    constructor(private componentRegistryService: ComponentRegistryService) {}\r\n\r\n    /**\r\n     * Register a CustomFieldControl component to be used with the specified customField and entity.\r\n     */\r\n    registerCustomFieldComponent(\r\n        entity: CustomFieldEntityName,\r\n        fieldName: string,\r\n        component: Type<CustomFieldControl>,\r\n    ) {\r\n        const id = this.generateId(entity, fieldName, true);\r\n        this.componentRegistryService.registerInputComponent(id, component);\r\n    }\r\n\r\n    /**\r\n     * Checks whether a custom component is registered for the given entity custom field,\r\n     * and if so returns the ID of that component.\r\n     */\r\n    customFieldComponentExists(entity: CustomFieldEntityName, fieldName: string): string | undefined {\r\n        const id = this.generateId(entity, fieldName, true);\r\n        return this.componentRegistryService.getInputComponent(id) ? id : undefined;\r\n    }\r\n\r\n    private generateId(entity: CustomFieldEntityName, fieldName: string, isCustomField: boolean) {\r\n        let id = entity;\r\n        if (isCustomField) {\r\n            id += '-customFields';\r\n        }\r\n        id += '-' + fieldName;\r\n        return id;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\n\r\n/**\r\n * @description\r\n * A checkbox input. The default input component for `boolean` fields.\r\n *\r\n * @docsCategory custom-input-components\r\n * @docsPage default-inputs\r\n */\r\n@Component({\r\n    selector: 'vdr-boolean-form-input',\r\n    templateUrl: './boolean-form-input.component.html',\r\n    styleUrls: ['./boolean-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BooleanFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'boolean-form-input';\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    config: DefaultFormComponentConfig<'boolean-form-input'>;\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\nimport { CodeJar } from 'codejar';\r\n\r\nimport { FormInputComponent } from '../../../common/component-registry-types';\r\n\r\nexport function jsonValidator(): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n        const error: ValidationErrors = { jsonInvalid: true };\r\n\r\n        try {\r\n            JSON.parse(control.value);\r\n        } catch (e) {\r\n            control.setErrors(error);\r\n            return error;\r\n        }\r\n\r\n        control.setErrors(null);\r\n        return null;\r\n    };\r\n}\r\n\r\n/**\r\n * @description\r\n * A JSON editor input with syntax highlighting and error detection. Works well\r\n * with `text` type fields.\r\n *\r\n * @docsCategory custom-input-components\r\n * @docsPage default-inputs\r\n */\r\n@Component({\r\n    selector: 'vdr-json-editor-form-input',\r\n    templateUrl: './json-editor-form-input.component.html',\r\n    styleUrls: ['./json-editor-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class JsonEditorFormInputComponent implements FormInputComponent, AfterViewInit, OnInit {\r\n    static readonly id: DefaultFormComponentId = 'json-editor-form-input';\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    config: DefaultFormComponentConfig<'json-editor-form-input'>;\r\n    isValid = true;\r\n    errorMessage: string | undefined;\r\n    @ViewChild('editor') private editorElementRef: ElementRef<HTMLDivElement>;\r\n    jar: CodeJar;\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n    get height() {\r\n        return this.config.ui?.height || this.config.height;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.formControl.addValidators(jsonValidator());\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        let lastVal = '';\r\n        const highlight = (editor: HTMLElement) => {\r\n            const code = editor.textContent ?? '';\r\n            if (code === lastVal) {\r\n                return;\r\n            }\r\n            lastVal = code;\r\n            this.errorMessage = this.getJsonError(code);\r\n            this.changeDetector.markForCheck();\r\n            editor.innerHTML = this.syntaxHighlight(code, this.getErrorPos(this.errorMessage));\r\n        };\r\n        this.jar = CodeJar(this.editorElementRef.nativeElement, highlight);\r\n        this.jar.onUpdate(value => {\r\n            this.formControl.setValue(value);\r\n            this.formControl.markAsDirty();\r\n            this.isValid = this.formControl.valid;\r\n        });\r\n        this.jar.updateCode(this.formControl.value);\r\n\r\n        if (this.readonly) {\r\n            this.editorElementRef.nativeElement.contentEditable = 'false';\r\n        }\r\n    }\r\n\r\n    private getJsonError(json: string): string | undefined {\r\n        try {\r\n            JSON.parse(json);\r\n        } catch (e) {\r\n            return e.message;\r\n        }\r\n        return;\r\n    }\r\n\r\n    private getErrorPos(errorMessage: string | undefined): number | undefined {\r\n        if (!errorMessage) {\r\n            return;\r\n        }\r\n        const matches = errorMessage.match(/at position (\\d+)/);\r\n        const pos = matches?.[1];\r\n        return pos != null ? +pos : undefined;\r\n    }\r\n\r\n    private syntaxHighlight(json: string, errorPos: number | undefined) {\r\n        json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n        let hasMarkedError = false;\r\n        return json.replace(\r\n            /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g,\r\n            (match, ...args) => {\r\n                let cls = 'number';\r\n                if (/^\"/.test(match)) {\r\n                    if (/:$/.test(match)) {\r\n                        cls = 'key';\r\n                    } else {\r\n                        cls = 'string';\r\n                    }\r\n                } else if (/true|false/.test(match)) {\r\n                    cls = 'boolean';\r\n                } else if (/null/.test(match)) {\r\n                    cls = 'null';\r\n                }\r\n                let errorClass = '';\r\n                if (errorPos && !hasMarkedError) {\r\n                    const length = args[0].length;\r\n                    const offset = args[4];\r\n                    if (errorPos <= length + offset) {\r\n                        errorClass = 'je-error';\r\n                        hasMarkedError = true;\r\n                    }\r\n                }\r\n                return '<span class=\"je-' + cls + ' ' + errorClass + '\">' + match + '</span>';\r\n            },\r\n        );\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\nimport { CurrencyCode } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n/**\r\n * @description\r\n * An input for monetary values. Should be used with `int` type fields.\r\n *\r\n * @docsCategory custom-input-components\r\n * @docsPage default-inputs\r\n */\r\n@Component({\r\n    selector: 'vdr-currency-form-input',\r\n    templateUrl: './currency-form-input.component.html',\r\n    styleUrls: ['./currency-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CurrencyFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'currency-form-input';\r\n    @Input() readonly: boolean;\r\n    formControl: FormControl;\r\n    currencyCode$: Observable<CurrencyCode>;\r\n    config: DefaultFormComponentConfig<'currency-form-input'>;\r\n\r\n    constructor(private dataService: DataService) {\r\n        this.currencyCode$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .mapStream(data => data.activeChannel.currencyCode);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith } from 'rxjs/operators';\r\n\r\nimport { FormInputComponent } from '../../../common/component-registry-types';\r\nimport { GetCustomerGroups } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n/**\r\n * @description\r\n * Allows the selection of a Customer via an autocomplete select input.\r\n * Should be used with `ID` type fields which represent Customer IDs.\r\n *\r\n * @docsCategory custom-input-components\r\n * @docsPage default-inputs\r\n */\r\n@Component({\r\n    selector: 'vdr-customer-group-form-input',\r\n    templateUrl: './customer-group-form-input.component.html',\r\n    styleUrls: ['./customer-group-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CustomerGroupFormInputComponent implements FormInputComponent, OnInit {\r\n    static readonly id: DefaultFormComponentId = 'customer-group-form-input';\r\n    @Input() readonly: boolean;\r\n    formControl: FormControl;\r\n    customerGroups$: Observable<GetCustomerGroups.Items[]>;\r\n    config: DefaultFormComponentConfig<'customer-group-form-input'>;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.customerGroups$ = this.dataService.customer\r\n            .getCustomerGroupList({\r\n                take: 1000,\r\n            })\r\n            .mapSingle(res => res.customerGroups.items)\r\n            .pipe(startWith([]));\r\n    }\r\n\r\n    selectGroup(group: GetCustomerGroups.Items) {\r\n        this.formControl.setValue(group.id);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent } from '../../../common/component-registry-types';\r\n\r\n/**\r\n * @description\r\n * Allows selection of a datetime. Default input for `datetime` type fields.\r\n *\r\n * @docsCategory custom-input-components\r\n * @docsPage default-inputs\r\n */\r\n@Component({\r\n    selector: 'vdr-date-form-input',\r\n    templateUrl: './date-form-input.component.html',\r\n    styleUrls: ['./date-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DateFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'date-form-input';\r\n    @Input() readonly: boolean;\r\n    formControl: FormControl;\r\n    config: DefaultFormComponentConfig<'date-form-input'>;\r\n    get min() {\r\n        return this.config.ui?.min || this.config.min;\r\n    }\r\n    get max() {\r\n        return this.config.ui?.max || this.config.max;\r\n    }\r\n    get yearRange() {\r\n        return this.config.ui?.yearRange || this.config.yearRange;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\nimport { Observable } from 'rxjs';\r\nimport { shareReplay } from 'rxjs/operators';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\nimport { FacetWithValues } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n/**\r\n * @description\r\n * Allows the selection of multiple FacetValues via an autocomplete select input.\r\n * Should be used with `ID` type **list** fields which represent FacetValue IDs.\r\n *\r\n * @docsCategory custom-input-components\r\n * @docsPage default-inputs\r\n */\r\n@Component({\r\n    selector: 'vdr-facet-value-form-input',\r\n    templateUrl: './facet-value-form-input.component.html',\r\n    styleUrls: ['./facet-value-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FacetValueFormInputComponent implements FormInputComponent, OnInit {\r\n    static readonly id: DefaultFormComponentId = 'facet-value-form-input';\r\n    readonly isListInput = true;\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    facets$: Observable<FacetWithValues.Fragment[]>;\r\n    config: InputComponentConfig;\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.facets$ = this.dataService.facet\r\n            .getAllFacets()\r\n            .mapSingle(data => data.facets.items)\r\n            .pipe(shareReplay(1));\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent } from '../../../common/component-registry-types';\r\n\r\n/**\r\n * @description\r\n * Displays a number input. Default input for `int` and `float` type fields.\r\n *\r\n * @docsCategory custom-input-components\r\n * @docsPage default-inputs\r\n */\r\n@Component({\r\n    selector: 'vdr-number-form-input',\r\n    templateUrl: './number-form-input.component.html',\r\n    styleUrls: ['./number-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NumberFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'number-form-input';\r\n    @Input() readonly: boolean;\r\n    formControl: FormControl;\r\n    config: DefaultFormComponentConfig<'number-form-input'>;\r\n\r\n    get prefix() {\r\n        return this.config.ui?.prefix || this.config.prefix;\r\n    }\r\n    get suffix() {\r\n        return this.config.ui?.suffix || this.config.suffix;\r\n    }\r\n    get min() {\r\n        return this.config.ui?.min || this.config.min;\r\n    }\r\n    get max() {\r\n        return this.config.ui?.max || this.config.max;\r\n    }\r\n    get step() {\r\n        return this.config.ui?.step || this.config.step;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\n\r\n/**\r\n * @description\r\n * Displays a password text input. Should be used with `string` type fields.\r\n *\r\n * @docsCategory custom-input-components\r\n * @docsPage default-inputs\r\n */\r\n@Component({\r\n    selector: 'vdr-password-form-input',\r\n    templateUrl: './password-form-input.component.html',\r\n    styleUrls: ['./password-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PasswordFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'password-form-input';\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    config: InputComponentConfig;\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { map, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\nimport { GetProductVariant, ProductSelectorSearch } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n/**\r\n * @description\r\n * Allows the selection of multiple ProductVariants via an autocomplete select input.\r\n * Should be used with `ID` type **list** fields which represent ProductVariant IDs.\r\n *\r\n * @docsCategory custom-input-components\r\n * @docsPage default-inputs\r\n */\r\n@Component({\r\n    selector: 'vdr-product-selector-form-input',\r\n    templateUrl: './product-selector-form-input.component.html',\r\n    styleUrls: ['./product-selector-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductSelectorFormInputComponent implements FormInputComponent, OnInit {\r\n    static readonly id: DefaultFormComponentId = 'product-selector-form-input';\r\n    readonly isListInput = true;\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    config: InputComponentConfig;\r\n    selection$: Observable<GetProductVariant.ProductVariant[]>;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.formControl.setValidators([\r\n            control => {\r\n                if (!control.value || !control.value.length) {\r\n                    return {\r\n                        atLeastOne: { length: control.value.length },\r\n                    };\r\n                }\r\n                return null;\r\n            },\r\n        ]);\r\n\r\n        this.selection$ = this.formControl.valueChanges.pipe(\r\n            startWith(this.formControl.value),\r\n            switchMap(value => {\r\n                if (Array.isArray(value) && 0 < value.length) {\r\n                    return forkJoin(\r\n                        value.map(id =>\r\n                            this.dataService.product\r\n                                .getProductVariant(id)\r\n                                .mapSingle(data => data.productVariant),\r\n                        ),\r\n                    );\r\n                }\r\n                return of([]);\r\n            }),\r\n            map(variants => variants.filter(notNullOrUndefined)),\r\n        );\r\n    }\r\n\r\n    addProductVariant(product: ProductSelectorSearch.Items) {\r\n        const value = this.formControl.value as string[];\r\n        this.formControl.setValue([...new Set([...value, product.productVariantId])]);\r\n    }\r\n\r\n    removeProductVariant(id: string) {\r\n        const value = this.formControl.value as string[];\r\n        this.formControl.setValue(value.filter(_id => _id !== id));\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent } from '../../../common/component-registry-types';\r\nimport { RelationCustomFieldConfig } from '../../../common/generated-types';\r\n\r\n/**\r\n * @description\r\n * The default input component for `relation` type custom fields. Allows the selection\r\n * of a ProductVariant, Product, Customer or Asset. For other entity types, a custom\r\n * implementation will need to be defined. See {@link registerFormInputComponent}.\r\n *\r\n * @docsCategory custom-input-components\r\n * @docsPage default-inputs\r\n */\r\n@Component({\r\n    selector: 'vdr-relation-form-input',\r\n    templateUrl: './relation-form-input.component.html',\r\n    styleUrls: ['./relation-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'relation-form-input';\r\n    @Input() readonly: boolean;\r\n    formControl: FormControl;\r\n    config: RelationCustomFieldConfig;\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\n\r\n/**\r\n * @description\r\n * Uses the {@link RichTextEditorComponent} as in input for `text` type fields.\r\n *\r\n * @docsCategory custom-input-components\r\n * @docsPage default-inputs\r\n */\r\n@Component({\r\n    selector: 'vdr-rich-text-form-input',\r\n    templateUrl: './rich-text-form-input.component.html',\r\n    styleUrls: ['./rich-text-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RichTextFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'rich-text-form-input';\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    config: DefaultFormComponentConfig<'rich-text-form-input'>;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\n\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\nimport { CustomFieldConfigFragment } from '../../../common/generated-types';\n\n/**\n * @description\n * Uses a select input to allow the selection of a string value. Should be used with\n * `string` type fields with options.\n *\n * @docsCategory custom-input-components\n * @docsPage default-inputs\n */\n@Component({\n    selector: 'vdr-select-form-input',\n    templateUrl: './select-form-input.component.html',\n    styleUrls: ['./select-form-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectFormInputComponent implements FormInputComponent {\n    static readonly id: DefaultFormComponentId = 'select-form-input';\n    @Input() readonly: boolean;\n    formControl: FormControl;\n    config: DefaultFormComponentConfig<'select-form-input'> & CustomFieldConfigFragment;\n\n    get options() {\n        return this.config.ui?.options || this.config.options;\n    }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\n\r\n/**\r\n * @description\r\n * Uses a regular text form input. This is the default input for `string` and `localeString` type fields.\r\n *\r\n * @docsCategory custom-input-components\r\n * @docsPage default-inputs\r\n */\r\n@Component({\r\n    selector: 'vdr-text-form-input',\r\n    templateUrl: './text-form-input.component.html',\r\n    styleUrls: ['./text-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TextFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'text-form-input';\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    config: DefaultFormComponentConfig<'text-form-input'>;\r\n\r\n    get prefix() {\r\n        return this.config.ui?.prefix || this.config.prefix;\r\n    }\r\n\r\n    get suffix() {\r\n        return this.config.ui?.suffix || this.config.suffix;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { DefaultFormComponentConfig, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\n\r\nimport { FormInputComponent, InputComponentConfig } from '../../../common/component-registry-types';\r\n\r\n/**\r\n * @description\r\n * Uses textarea form input. This is the default input for `text` type fields.\r\n *\r\n * @docsCategory custom-input-components\r\n * @docsPage default-inputs\r\n */\r\n@Component({\r\n    selector: 'vdr-textarea-form-input',\r\n    templateUrl: './textarea-form-input.component.html',\r\n    styleUrls: ['./textarea-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TextareaFormInputComponent implements FormInputComponent {\r\n    static readonly id: DefaultFormComponentId = 'textarea-form-input';\r\n    readonly: boolean;\r\n    formControl: FormControl;\r\n    config: DefaultFormComponentConfig<'textarea-form-input'>;\r\n\r\n    get spellcheck(): boolean {\r\n        return this.config.spellcheck === true;\r\n    }\r\n}\r\n","import { APP_INITIALIZER, FactoryProvider, Provider, Type } from '@angular/core';\r\n\r\nimport { FormInputComponent } from '../../common/component-registry-types';\r\nimport { ComponentRegistryService } from '../../providers/component-registry/component-registry.service';\r\nimport {\r\n    CustomFieldComponentService,\r\n    CustomFieldControl,\r\n    CustomFieldEntityName,\r\n} from '../../providers/custom-field-component/custom-field-component.service';\r\n\r\nimport { BooleanFormInputComponent } from './boolean-form-input/boolean-form-input.component';\r\nimport { JsonEditorFormInputComponent } from './code-editor-form-input/json-editor-form-input.component';\r\nimport { CurrencyFormInputComponent } from './currency-form-input/currency-form-input.component';\r\nimport { CustomerGroupFormInputComponent } from './customer-group-form-input/customer-group-form-input.component';\r\nimport { DateFormInputComponent } from './date-form-input/date-form-input.component';\r\nimport { FacetValueFormInputComponent } from './facet-value-form-input/facet-value-form-input.component';\r\nimport { NumberFormInputComponent } from './number-form-input/number-form-input.component';\r\nimport { PasswordFormInputComponent } from './password-form-input/password-form-input.component';\r\nimport { ProductSelectorFormInputComponent } from './product-selector-form-input/product-selector-form-input.component';\r\nimport { RelationFormInputComponent } from './relation-form-input/relation-form-input.component';\r\nimport { RichTextFormInputComponent } from './rich-text-form-input/rich-text-form-input.component';\r\nimport { SelectFormInputComponent } from './select-form-input/select-form-input.component';\r\nimport { TextFormInputComponent } from './text-form-input/text-form-input.component';\r\nimport { TextareaFormInputComponent } from './textarea-form-input/textarea-form-input.component';\r\n\r\nexport const defaultFormInputs = [\r\n    BooleanFormInputComponent,\r\n    CurrencyFormInputComponent,\r\n    DateFormInputComponent,\r\n    FacetValueFormInputComponent,\r\n    NumberFormInputComponent,\r\n    SelectFormInputComponent,\r\n    TextFormInputComponent,\r\n    ProductSelectorFormInputComponent,\r\n    CustomerGroupFormInputComponent,\r\n    PasswordFormInputComponent,\r\n    RelationFormInputComponent,\r\n    TextareaFormInputComponent,\r\n    RichTextFormInputComponent,\r\n    JsonEditorFormInputComponent,\r\n];\r\n\r\n/**\r\n * @description\r\n * Registers a custom FormInputComponent which can be used to control the argument inputs\r\n * of a {@link ConfigurableOperationDef} (e.g. CollectionFilter, ShippingMethod etc) or for\r\n * a custom field.\r\n *\r\n * @example\r\n * ```TypeScript\r\n * \\@NgModule({\r\n *   imports: [SharedModule],\r\n *   declarations: [MyCustomFieldControl],\r\n *   providers: [\r\n *       registerFormInputComponent('my-custom-input', MyCustomFieldControl),\r\n *   ],\r\n * })\r\n * export class MyUiExtensionModule {}\r\n * ```\r\n *\r\n * This input component can then be used in a custom field:\r\n *\r\n * @example\r\n * ```TypeScript\r\n * const config = {\r\n *   // ...\r\n *   customFields: {\r\n *     ProductVariant: [\r\n *       {\r\n *         name: 'rrp',\r\n *         type: 'int',\r\n *         ui: { component: 'my-custom-input' },\r\n *       },\r\n *     ]\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * or with an argument of a {@link ConfigurableOperationDef}:\r\n *\r\n * @example\r\n * ```TypeScript\r\n * args: {\r\n *   rrp: { type: 'int', ui: { component: 'my-custom-input' } },\r\n * }\r\n * ```\r\n *\r\n * @docsCategory custom-input-components\r\n */\r\nexport function registerFormInputComponent(id: string, component: Type<FormInputComponent>): FactoryProvider {\r\n    return {\r\n        provide: APP_INITIALIZER,\r\n        multi: true,\r\n        useFactory: (registry: ComponentRegistryService) => () => {\r\n            registry.registerInputComponent(id, component);\r\n        },\r\n        deps: [ComponentRegistryService],\r\n    };\r\n}\r\n\r\n/**\r\n * @description\r\n * **Deprecated** use `registerFormInputComponent()` in combination with the customField `ui` config instead.\r\n *\r\n * Registers a custom component to act as the form input control for the given custom field.\r\n * This should be used in the NgModule `providers` array of your ui extension module.\r\n *\r\n * @example\r\n * ```TypeScript\r\n * \\@NgModule({\r\n *   imports: [SharedModule],\r\n *   declarations: [MyCustomFieldControl],\r\n *   providers: [\r\n *       registerCustomFieldComponent('Product', 'someCustomField', MyCustomFieldControl),\r\n *   ],\r\n * })\r\n * export class MyUiExtensionModule {}\r\n * ```\r\n *\r\n * @deprecated use `registerFormInputComponent()` in combination with the customField `ui` config instead.\r\n *\r\n * @docsCategory custom-input-components\r\n */\r\nexport function registerCustomFieldComponent(\r\n    entity: CustomFieldEntityName,\r\n    fieldName: string,\r\n    component: Type<CustomFieldControl>,\r\n): FactoryProvider {\r\n    return {\r\n        provide: APP_INITIALIZER,\r\n        multi: true,\r\n        useFactory: (customFieldComponentService: CustomFieldComponentService) => () => {\r\n            customFieldComponentService.registerCustomFieldComponent(entity, fieldName, component);\r\n        },\r\n        deps: [CustomFieldComponentService],\r\n    };\r\n}\r\n\r\n/**\r\n * Registers the default form input components.\r\n */\r\nexport function registerDefaultFormInputs(): FactoryProvider[] {\r\n    return defaultFormInputs.map(cmp => registerFormInputComponent(cmp.id, cmp));\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    HostBinding,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    SimpleChanges,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { assertNever } from '@vendure/common/lib/shared-utils';\r\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\nimport { ActionBarLocationId } from '../../../common/component-registry-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport { ActionBarItem } from '../../../providers/nav-builder/nav-builder-types';\r\nimport { NavBuilderService } from '../../../providers/nav-builder/nav-builder.service';\r\nimport { NotificationService } from '../../../providers/notification/notification.service';\r\n\r\n@Component({\r\n    selector: 'vdr-action-bar-items',\r\n    templateUrl: './action-bar-items.component.html',\r\n    styleUrls: ['./action-bar-items.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ActionBarItemsComponent implements OnInit, OnChanges {\r\n    @HostBinding('attr.data-location-id')\r\n    @Input()\r\n    locationId: ActionBarLocationId;\r\n\r\n    items$: Observable<ActionBarItem[]>;\r\n    private locationId$ = new BehaviorSubject<string>('');\r\n\r\n    constructor(\r\n        private navBuilderService: NavBuilderService,\r\n        private route: ActivatedRoute,\r\n        private dataService: DataService,\r\n        private notificationService: NotificationService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.items$ = combineLatest(this.navBuilderService.actionBarConfig$, this.locationId$).pipe(\r\n            map(([items, locationId]) => items.filter(config => config.locationId === locationId)),\r\n        );\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if ('locationId' in changes) {\r\n            this.locationId$.next(changes['locationId'].currentValue);\r\n        }\r\n    }\r\n\r\n    handleClick(event: MouseEvent, item: ActionBarItem) {\r\n        if (typeof item.onClick === 'function') {\r\n            item.onClick(event, {\r\n                route: this.route,\r\n                dataService: this.dataService,\r\n                notificationService: this.notificationService,\r\n            });\r\n        }\r\n    }\r\n\r\n    getRouterLink(item: ActionBarItem): any[] | null {\r\n        return this.navBuilderService.getRouterLink(item, this.route);\r\n    }\r\n\r\n    getButtonStyles(item: ActionBarItem): string[] {\r\n        const styles = ['btn'];\r\n        if (item.buttonStyle && item.buttonStyle === 'link') {\r\n            styles.push('btn-link');\r\n            return styles;\r\n        }\r\n        styles.push(this.getButtonColorClass(item));\r\n        return styles;\r\n    }\r\n\r\n    private getButtonColorClass(item: ActionBarItem): string {\r\n        switch (item.buttonColor) {\r\n            case undefined:\r\n            case 'primary':\r\n                return item.buttonStyle === 'outline' ? 'btn-outline' : 'btn-primary';\r\n            case 'success':\r\n                return item.buttonStyle === 'outline' ? 'btn-success-outline' : 'btn-success';\r\n            case 'warning':\r\n                return item.buttonStyle === 'outline' ? 'btn-warning-outline' : 'btn-warning';\r\n            default:\r\n                assertNever(item.buttonColor);\r\n                return '';\r\n        }\r\n    }\r\n}\r\n","import { Component, ContentChild, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-ab-left',\r\n    template: `\r\n        <ng-content></ng-content>\r\n    `,\r\n})\r\nexport class ActionBarLeftComponent {\r\n    @Input() grow = false;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-ab-right',\r\n    template: `\r\n        <ng-content></ng-content>\r\n    `,\r\n})\r\nexport class ActionBarRightComponent {\r\n    @Input() grow = false;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-action-bar',\r\n    templateUrl: './action-bar.component.html',\r\n    styleUrls: ['./action-bar.component.scss'],\r\n})\r\nexport class ActionBarComponent {\r\n    @ContentChild(ActionBarLeftComponent) left: ActionBarLeftComponent;\r\n    @ContentChild(ActionBarRightComponent) right: ActionBarRightComponent;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { CustomFieldConfig, GetAvailableCountries } from '../../../common/generated-types';\r\n\r\n@Component({\r\n    selector: 'vdr-address-form',\r\n    templateUrl: './address-form.component.html',\r\n    styleUrls: ['./address-form.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddressFormComponent {\r\n    @Input() customFields: CustomFieldConfig;\r\n    @Input() formGroup: FormGroup;\r\n    @Input() availableCountries: GetAvailableCountries.Items[];\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n/**\r\n * A wrapper around an <input> element which adds a prefix and/or a suffix element.\r\n */\r\n@Component({\r\n    selector: 'vdr-affixed-input',\r\n    templateUrl: './affixed-input.component.html',\r\n    styleUrls: ['./affixed-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AffixedInputComponent {\r\n    @Input() prefix: string;\r\n    @Input() suffix: string;\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n/**\r\n * A form input control which displays a number input with a percentage sign suffix.\r\n */\r\n@Component({\r\n    selector: 'vdr-percentage-suffix-input',\r\n    styles: [\r\n        `\r\n            :host {\r\n                padding: 0;\r\n            }\r\n        `,\r\n    ],\r\n    template: `\r\n        <vdr-affixed-input suffix=\"%\">\r\n            <input\r\n                type=\"number\"\r\n                step=\"1\"\r\n                [value]=\"_value\"\r\n                [disabled]=\"disabled\"\r\n                [readonly]=\"readonly\"\r\n                (input)=\"onInput($event.target.value)\"\r\n                (focus)=\"onTouch()\"\r\n            />\r\n        </vdr-affixed-input>\r\n    `,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: PercentageSuffixInputComponent,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class PercentageSuffixInputComponent implements ControlValueAccessor, OnChanges {\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() value: number;\r\n    onChange: (val: any) => void;\r\n    onTouch: () => void;\r\n    _value: number;\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if ('value' in changes) {\r\n            this.writeValue(changes['value'].currentValue);\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouch = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    onInput(value: string | number) {\r\n        this.onChange(value);\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        const numericValue = +value;\r\n        if (!Number.isNaN(numericValue)) {\r\n            this._value = numericValue;\r\n        }\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    HostListener,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\n\r\nimport { ServerConfigService } from '../../../data/server-config';\r\n\r\n/**\r\n * A component for selecting files to upload as new Assets.\r\n */\r\n@Component({\r\n    selector: 'vdr-asset-file-input',\r\n    templateUrl: './asset-file-input.component.html',\r\n    styleUrls: ['./asset-file-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetFileInputComponent implements OnInit {\r\n    /**\r\n     * CSS selector of the DOM element which will be masked by the file\r\n     * drop zone. Defaults to `body`.\r\n     */\r\n    @Input() dropZoneTarget = 'body';\r\n    @Input() uploading = false;\r\n    @Output() selectFiles = new EventEmitter<File[]>();\r\n    dragging = false;\r\n    overDropZone = false;\r\n    dropZoneStyle = {\r\n        'width.px': 0,\r\n        'height.px': 0,\r\n        'top.px': 0,\r\n        'left.px': 0,\r\n    };\r\n    accept: string;\r\n\r\n    constructor(private serverConfig: ServerConfigService) {}\r\n\r\n    ngOnInit() {\r\n        this.accept = this.serverConfig.serverConfig.permittedAssetTypes.join(',');\r\n        this.fitDropZoneToTarget();\r\n    }\r\n\r\n    @HostListener('document:dragenter')\r\n    onDragEnter() {\r\n        this.dragging = true;\r\n        this.fitDropZoneToTarget();\r\n    }\r\n\r\n    // DragEvent is not supported in Safari, see https://github.com/vendure-ecommerce/vendure/pull/284\r\n    @HostListener('document:dragleave', ['$event'])\r\n    onDragLeave(event: any) {\r\n        if (!event.clientX && !event.clientY) {\r\n            this.dragging = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Preventing this event is required to make dropping work.\r\n     * See https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API#Define_a_drop_zone\r\n     */\r\n    onDragOver(event: any) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    // DragEvent is not supported in Safari, see https://github.com/vendure-ecommerce/vendure/pull/284\r\n    onDrop(event: any) {\r\n        event.preventDefault();\r\n        this.dragging = false;\r\n        this.overDropZone = false;\r\n        const files = Array.from<DataTransferItem>(event.dataTransfer ? event.dataTransfer.items : [])\r\n            .map(i => i.getAsFile())\r\n            .filter(notNullOrUndefined);\r\n        this.selectFiles.emit(files);\r\n    }\r\n\r\n    select(event: Event) {\r\n        const files = (event.target as HTMLInputElement).files;\r\n        if (files) {\r\n            this.selectFiles.emit(Array.from(files));\r\n        }\r\n    }\r\n\r\n    private fitDropZoneToTarget() {\r\n        const target = document.querySelector(this.dropZoneTarget) as HTMLElement;\r\n        if (target) {\r\n            const rect = target.getBoundingClientRect();\r\n            this.dropZoneStyle['width.px'] = rect.width;\r\n            this.dropZoneStyle['height.px'] = rect.height;\r\n            this.dropZoneStyle['top.px'] = rect.top;\r\n            this.dropZoneStyle['left.px'] = rect.left;\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { AssetFragment, GetAsset, GetAssetList, UpdateAssetInput } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport { Dialog } from '../../../providers/modal/modal.service';\r\n\r\ntype AssetLike = GetAssetList.Items | AssetFragment;\r\n\r\n@Component({\r\n    selector: 'vdr-asset-preview-dialog',\r\n    templateUrl: './asset-preview-dialog.component.html',\r\n    styleUrls: ['./asset-preview-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetPreviewDialogComponent implements Dialog<void>, OnInit {\r\n    constructor(private dataService: DataService) {}\r\n    asset: AssetLike;\r\n    assetChanges?: UpdateAssetInput;\r\n    resolveWith: (result?: void) => void;\r\n    assetWithTags$: Observable<GetAsset.Asset>;\r\n\r\n    ngOnInit() {\r\n        this.assetWithTags$ = of(this.asset).pipe(\r\n            mergeMap(asset => {\r\n                if (this.hasTags(asset)) {\r\n                    return of(asset);\r\n                } else {\r\n                    // tslint:disable-next-line:no-non-null-assertion\r\n                    return this.dataService.product.getAsset(asset.id).mapSingle(data => data.asset!);\r\n                }\r\n            }),\r\n        );\r\n    }\r\n\r\n    private hasTags(asset: AssetLike): asset is GetAssetList.Items {\r\n        return asset.hasOwnProperty('tags');\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\n\r\nimport { Asset, GetAssetList } from '../../../common/generated-types';\r\nimport { ModalService } from '../../../providers/modal/modal.service';\r\nimport { AssetPreviewDialogComponent } from '../asset-preview-dialog/asset-preview-dialog.component';\r\n\r\nexport type AssetLike = GetAssetList.Items;\r\n\r\n@Component({\r\n    selector: 'vdr-asset-gallery',\r\n    templateUrl: './asset-gallery.component.html',\r\n    styleUrls: ['./asset-gallery.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetGalleryComponent implements OnChanges {\r\n    @Input() assets: AssetLike[];\r\n    /**\r\n     * If true, allows multiple assets to be selected by ctrl+clicking.\r\n     */\r\n    @Input() multiSelect = false;\r\n    @Input() canDelete = false;\r\n    @Output() selectionChange = new EventEmitter<AssetLike[]>();\r\n    @Output() deleteAssets = new EventEmitter<AssetLike[]>();\r\n\r\n    selection: AssetLike[] = [];\r\n\r\n    constructor(private modalService: ModalService) {}\r\n\r\n    ngOnChanges() {\r\n        if (this.assets) {\r\n            for (const asset of this.selection) {\r\n                // Update and selected assets with any changes\r\n                const match = this.assets.find(a => a.id === asset.id);\r\n                if (match) {\r\n                    Object.assign(asset, match);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleSelection(asset: AssetLike, event?: MouseEvent) {\r\n        const index = this.selection.findIndex(a => a.id === asset.id);\r\n        if (this.multiSelect && event?.shiftKey && 1 <= this.selection.length) {\r\n            const lastSelection = this.selection[this.selection.length - 1];\r\n            const lastSelectionIndex = this.assets.findIndex(a => a.id === lastSelection.id);\r\n            const currentIndex = this.assets.findIndex(a => a.id === asset.id);\r\n            const start = currentIndex < lastSelectionIndex ? currentIndex : lastSelectionIndex;\r\n            const end = currentIndex > lastSelectionIndex ? currentIndex + 1 : lastSelectionIndex;\r\n            this.selection.push(\r\n                ...this.assets.slice(start, end).filter(a => !this.selection.find(s => s.id === a.id)),\r\n            );\r\n        } else if (index === -1) {\r\n            if (this.multiSelect && (event?.ctrlKey || event?.shiftKey)) {\r\n                this.selection.push(asset);\r\n            } else {\r\n                this.selection = [asset];\r\n            }\r\n        } else {\r\n            if (this.multiSelect && event?.ctrlKey) {\r\n                this.selection.splice(index, 1);\r\n            } else if (1 < this.selection.length) {\r\n                this.selection = [asset];\r\n            } else {\r\n                this.selection.splice(index, 1);\r\n            }\r\n        }\r\n        // Make the selection mutable\r\n        this.selection = this.selection.map(x => ({ ...x }));\r\n        this.selectionChange.emit(this.selection);\r\n    }\r\n\r\n    selectMultiple(assets: AssetLike[]) {\r\n        this.selection = assets;\r\n        this.selectionChange.emit(this.selection);\r\n    }\r\n\r\n    isSelected(asset: AssetLike): boolean {\r\n        return !!this.selection.find(a => a.id === asset.id);\r\n    }\r\n\r\n    lastSelected(): AssetLike {\r\n        return this.selection[this.selection.length - 1];\r\n    }\r\n\r\n    previewAsset(asset: AssetLike) {\r\n        this.modalService\r\n            .fromComponent(AssetPreviewDialogComponent, {\r\n                size: 'xl',\r\n                closable: true,\r\n                locals: { asset },\r\n            })\r\n            .subscribe();\r\n    }\r\n\r\n    entityInfoClick(event: MouseEvent) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, delay, finalize, map, take as rxjsTake, takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport {\r\n    Asset,\r\n    CreateAssets,\r\n    GetAssetList,\r\n    LogicalOperator,\r\n    SortOrder,\r\n    TagFragment,\r\n} from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport { QueryResult } from '../../../data/query-result';\r\nimport { Dialog } from '../../../providers/modal/modal.service';\r\nimport { NotificationService } from '../../../providers/notification/notification.service';\r\nimport { AssetGalleryComponent } from '../asset-gallery/asset-gallery.component';\r\nimport { AssetSearchInputComponent } from '../asset-search-input/asset-search-input.component';\r\n\r\n/**\r\n * @description\r\n * A dialog which allows the creation and selection of assets.\r\n *\r\n * @example\r\n * ```TypeScript\r\n * selectAssets() {\r\n *   this.modalService\r\n *     .fromComponent(AssetPickerDialogComponent, {\r\n *         size: 'xl',\r\n *     })\r\n *     .subscribe(result => {\r\n *         if (result && result.length) {\r\n *             // ...\r\n *         }\r\n *     });\r\n * }\r\n * ```\r\n *\r\n * @docsCategory components\r\n */\r\n@Component({\r\n    selector: 'vdr-asset-picker-dialog',\r\n    templateUrl: './asset-picker-dialog.component.html',\r\n    styleUrls: ['./asset-picker-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetPickerDialogComponent implements OnInit, AfterViewInit, OnDestroy, Dialog<Asset[]> {\r\n    assets$: Observable<GetAssetList.Items[]>;\r\n    allTags$: Observable<TagFragment[]>;\r\n    paginationConfig: PaginationInstance = {\r\n        currentPage: 1,\r\n        itemsPerPage: 25,\r\n        totalItems: 1,\r\n    };\r\n    @ViewChild('assetSearchInputComponent')\r\n    private assetSearchInputComponent: AssetSearchInputComponent;\r\n    @ViewChild('assetGalleryComponent')\r\n    private assetGalleryComponent: AssetGalleryComponent;\r\n\r\n    multiSelect = true;\r\n    initialTags: string[] = [];\r\n\r\n    resolveWith: (result?: Asset[]) => void;\r\n    selection: Asset[] = [];\r\n    searchTerm$ = new BehaviorSubject<string | undefined>(undefined);\r\n    filterByTags$ = new BehaviorSubject<TagFragment[] | undefined>(undefined);\r\n    uploading = false;\r\n    private listQuery: QueryResult<GetAssetList.Query, GetAssetList.Variables>;\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(private dataService: DataService, private notificationService: NotificationService) {}\r\n\r\n    ngOnInit() {\r\n        this.listQuery = this.dataService.product.getAssetList(this.paginationConfig.itemsPerPage, 0);\r\n        this.allTags$ = this.dataService.product.getTagList().mapSingle(data => data.tags.items);\r\n        this.assets$ = this.listQuery.stream$.pipe(\r\n            tap(result => (this.paginationConfig.totalItems = result.assets.totalItems)),\r\n            map(result => result.assets.items),\r\n        );\r\n        this.searchTerm$.pipe(debounceTime(250), takeUntil(this.destroy$)).subscribe(() => {\r\n            this.fetchPage(this.paginationConfig.currentPage, this.paginationConfig.itemsPerPage);\r\n        });\r\n        this.filterByTags$.pipe(debounceTime(100), takeUntil(this.destroy$)).subscribe(() => {\r\n            this.fetchPage(this.paginationConfig.currentPage, this.paginationConfig.itemsPerPage);\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (0 < this.initialTags.length) {\r\n            this.allTags$\r\n                .pipe(\r\n                    rxjsTake(1),\r\n                    map(allTags => allTags.filter(tag => this.initialTags.includes(tag.value))),\r\n                    tap(tags => this.filterByTags$.next(tags)),\r\n                    delay(1),\r\n                )\r\n                .subscribe(tags => this.assetSearchInputComponent.setTags(tags));\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    pageChange(page: number) {\r\n        this.paginationConfig.currentPage = page;\r\n        this.fetchPage(this.paginationConfig.currentPage, this.paginationConfig.itemsPerPage);\r\n    }\r\n\r\n    itemsPerPageChange(itemsPerPage: number) {\r\n        this.paginationConfig.itemsPerPage = itemsPerPage;\r\n        this.fetchPage(this.paginationConfig.currentPage, this.paginationConfig.itemsPerPage);\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    select() {\r\n        this.resolveWith(this.selection);\r\n    }\r\n\r\n    createAssets(files: File[]) {\r\n        if (files.length) {\r\n            this.uploading = true;\r\n            this.dataService.product\r\n                .createAssets(files)\r\n                .pipe(finalize(() => (this.uploading = false)))\r\n                .subscribe(res => {\r\n                    this.fetchPage(this.paginationConfig.currentPage, this.paginationConfig.itemsPerPage);\r\n                    this.notificationService.success(_('asset.notify-create-assets-success'), {\r\n                        count: files.length,\r\n                    });\r\n                    const assets = res.createAssets.filter(\r\n                        a => a.__typename === 'Asset',\r\n                    ) as CreateAssets.AssetInlineFragment[];\r\n                    this.assetGalleryComponent.selectMultiple(assets);\r\n                });\r\n        }\r\n    }\r\n\r\n    private fetchPage(currentPage: number, itemsPerPage: number) {\r\n        const take = +itemsPerPage;\r\n        const skip = (currentPage - 1) * +itemsPerPage;\r\n        const searchTerm = this.searchTerm$.value;\r\n        const tags = this.filterByTags$.value?.map(t => t.value);\r\n        this.listQuery.ref.refetch({\r\n            options: {\r\n                skip,\r\n                take,\r\n                filter: {\r\n                    name: {\r\n                        contains: searchTerm,\r\n                    },\r\n                },\r\n                sort: {\r\n                    createdAt: SortOrder.DESC,\r\n                },\r\n                tags,\r\n                tagsOperator: LogicalOperator.AND,\r\n            },\r\n        });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { AssetLike } from '../asset-gallery/asset-gallery.component';\r\n\r\n@Component({\r\n    selector: 'vdr-asset-preview-links',\r\n    templateUrl: './asset-preview-links.component.html',\r\n    styleUrls: ['./asset-preview-links.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetPreviewLinksComponent {\r\n    @Input() asset: AssetLike;\r\n    sizes = ['tiny', 'thumb', 'small', 'medium', 'large', 'full'];\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { forkJoin, Observable } from 'rxjs';\r\n\r\nimport { GetTagList } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport { Dialog } from '../../../providers/modal/modal.service';\r\n\r\n@Component({\r\n    selector: 'vdr-manage-tags-dialog',\r\n    templateUrl: './manage-tags-dialog.component.html',\r\n    styleUrls: ['./manage-tags-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ManageTagsDialogComponent implements Dialog<boolean>, OnInit {\r\n    resolveWith: (result: boolean | undefined) => void;\r\n    allTags$: Observable<GetTagList.Items[]>;\r\n    toDelete: string[] = [];\r\n    toUpdate: Array<{ id: string; value: string }> = [];\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.allTags$ = this.dataService.product.getTagList().mapStream(data => data.tags.items);\r\n    }\r\n\r\n    toggleDelete(id: string) {\r\n        const marked = this.markedAsDeleted(id);\r\n        if (marked) {\r\n            this.toDelete = this.toDelete.filter(_id => _id !== id);\r\n        } else {\r\n            this.toDelete.push(id);\r\n        }\r\n    }\r\n\r\n    markedAsDeleted(id: string): boolean {\r\n        return this.toDelete.includes(id);\r\n    }\r\n\r\n    updateTagValue(id: string, value: string) {\r\n        const exists = this.toUpdate.find(i => i.id === id);\r\n        if (exists) {\r\n            exists.value = value;\r\n        } else {\r\n            this.toUpdate.push({ id, value });\r\n        }\r\n    }\r\n\r\n    saveChanges() {\r\n        const operations: Array<Observable<any>> = [];\r\n        for (const id of this.toDelete) {\r\n            operations.push(this.dataService.product.deleteTag(id));\r\n        }\r\n        for (const item of this.toUpdate) {\r\n            if (!this.toDelete.includes(item.id)) {\r\n                operations.push(this.dataService.product.updateTag(item));\r\n            }\r\n        }\r\n        return forkJoin(operations).subscribe(() => this.resolveWith(true));\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { CustomFieldConfig, GetAsset, GetAssetList, UpdateAssetInput } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport { ModalService } from '../../../providers/modal/modal.service';\r\nimport { NotificationService } from '../../../providers/notification/notification.service';\r\nimport { Point } from '../focal-point-control/focal-point-control.component';\r\nimport { ManageTagsDialogComponent } from '../manage-tags-dialog/manage-tags-dialog.component';\r\n\r\nexport type PreviewPreset = 'tiny' | 'thumb' | 'small' | 'medium' | 'large' | '';\r\ntype AssetLike = GetAssetList.Items | GetAsset.Asset;\r\n\r\n@Component({\r\n    selector: 'vdr-asset-preview',\r\n    templateUrl: './asset-preview.component.html',\r\n    styleUrls: ['./asset-preview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetPreviewComponent implements OnInit, OnDestroy {\r\n    @Input() asset: AssetLike;\r\n    @Input() editable = false;\r\n    @Input() customFields: CustomFieldConfig[] = [];\r\n    @Input() customFieldsForm: FormGroup | undefined;\r\n    @Output() assetChange = new EventEmitter<Omit<UpdateAssetInput, 'focalPoint'>>();\r\n    @Output() editClick = new EventEmitter();\r\n\r\n    form: FormGroup;\r\n\r\n    size: PreviewPreset = 'medium';\r\n    width = 0;\r\n    height = 0;\r\n    centered = true;\r\n    settingFocalPoint = false;\r\n    lastFocalPoint?: Point;\r\n    @ViewChild('imageElement', { static: true }) private imageElementRef: ElementRef<HTMLImageElement>;\r\n    @ViewChild('previewDiv', { static: true }) private previewDivRef: ElementRef<HTMLDivElement>;\r\n    private subscription: Subscription;\r\n    private sizePriorToSettingFocalPoint: PreviewPreset;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private dataService: DataService,\r\n        private notificationService: NotificationService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        private modalService: ModalService,\r\n    ) {}\r\n\r\n    get fpx(): number | null {\r\n        return this.asset.focalPoint ? this.asset.focalPoint.x : null;\r\n    }\r\n\r\n    get fpy(): number | null {\r\n        return this.asset.focalPoint ? this.asset.focalPoint.y : null;\r\n    }\r\n\r\n    ngOnInit() {\r\n        const { focalPoint } = this.asset;\r\n        this.form = this.formBuilder.group({\r\n            name: [this.asset.name],\r\n            tags: [this.asset.tags?.map(t => t.value)],\r\n        });\r\n        this.subscription = this.form.valueChanges.subscribe(value => {\r\n            this.assetChange.emit({\r\n                id: this.asset.id,\r\n                name: value.name,\r\n                tags: value.tags,\r\n            });\r\n        });\r\n\r\n        this.subscription.add(\r\n            fromEvent(window, 'resize')\r\n                .pipe(debounceTime(50))\r\n                .subscribe(() => {\r\n                    this.updateDimensions();\r\n                    this.changeDetector.markForCheck();\r\n                }),\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    getSourceFileName(): string {\r\n        const parts = this.asset.source.split('/');\r\n        return parts[parts.length - 1];\r\n    }\r\n\r\n    onImageLoad() {\r\n        this.updateDimensions();\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    updateDimensions() {\r\n        const img = this.imageElementRef.nativeElement;\r\n        const container = this.previewDivRef.nativeElement;\r\n        const imgWidth = img.naturalWidth;\r\n        const imgHeight = img.naturalHeight;\r\n        const containerWidth = container.offsetWidth;\r\n        const containerHeight = container.offsetHeight;\r\n\r\n        const constrainToContainer = this.settingFocalPoint;\r\n        if (constrainToContainer) {\r\n            const controlsMarginPx = 48 * 2;\r\n            const availableHeight = containerHeight - controlsMarginPx;\r\n            const availableWidth = containerWidth;\r\n            const hRatio = imgHeight / availableHeight;\r\n            const wRatio = imgWidth / availableWidth;\r\n\r\n            const imageExceedsAvailableDimensions = 1 < hRatio || 1 < wRatio;\r\n            if (imageExceedsAvailableDimensions) {\r\n                const factor = hRatio < wRatio ? wRatio : hRatio;\r\n                this.width = Math.round(imgWidth / factor);\r\n                this.height = Math.round(imgHeight / factor);\r\n                this.centered = true;\r\n                return;\r\n            }\r\n        }\r\n        this.width = imgWidth;\r\n        this.height = imgHeight;\r\n        this.centered = imgWidth <= containerWidth && imgHeight <= containerHeight;\r\n    }\r\n\r\n    setFocalPointStart() {\r\n        this.sizePriorToSettingFocalPoint = this.size;\r\n        this.size = 'medium';\r\n        this.settingFocalPoint = true;\r\n        this.lastFocalPoint = this.asset.focalPoint || { x: 0.5, y: 0.5 };\r\n        this.updateDimensions();\r\n    }\r\n\r\n    removeFocalPoint() {\r\n        this.dataService.product\r\n            .updateAsset({\r\n                id: this.asset.id,\r\n                focalPoint: null,\r\n            })\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('asset.update-focal-point-success'));\r\n                    this.asset = { ...this.asset, focalPoint: null };\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                () => this.notificationService.error(_('asset.update-focal-point-error')),\r\n            );\r\n    }\r\n\r\n    onFocalPointChange(point: Point) {\r\n        this.lastFocalPoint = point;\r\n    }\r\n\r\n    setFocalPointCancel() {\r\n        this.settingFocalPoint = false;\r\n        this.lastFocalPoint = undefined;\r\n        this.size = this.sizePriorToSettingFocalPoint;\r\n    }\r\n\r\n    setFocalPointEnd() {\r\n        this.settingFocalPoint = false;\r\n        this.size = this.sizePriorToSettingFocalPoint;\r\n        if (this.lastFocalPoint) {\r\n            const { x, y } = this.lastFocalPoint;\r\n            this.lastFocalPoint = undefined;\r\n            this.dataService.product\r\n                .updateAsset({\r\n                    id: this.asset.id,\r\n                    focalPoint: { x, y },\r\n                })\r\n                .subscribe(\r\n                    () => {\r\n                        this.notificationService.success(_('asset.update-focal-point-success'));\r\n                        this.asset = { ...this.asset, focalPoint: { x, y } };\r\n                        this.changeDetector.markForCheck();\r\n                    },\r\n                    () => this.notificationService.error(_('asset.update-focal-point-error')),\r\n                );\r\n        }\r\n    }\r\n\r\n    manageTags() {\r\n        this.modalService\r\n            .fromComponent(ManageTagsDialogComponent, {\r\n                size: 'sm',\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.notificationService.success(_('common.notify-updated-tags-success'));\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { NgOption, SelectionModel } from '@ng-select/ng-select';\n\n/**\n * A custom SelectionModel for the NgSelect component which only allows a single\n * search term at a time.\n */\nexport class SingleSearchSelectionModel implements SelectionModel {\n    private _selected: NgOption[] = [];\n\n    get value(): NgOption[] {\n        return this._selected;\n    }\n\n    select(item: NgOption, multiple: boolean, groupAsModel: boolean) {\n        item.selected = true;\n        if (groupAsModel || !item.children) {\n            if ((item.value as any).label) {\n                const isSearchTerm = (i: any) => !!i.value.label;\n                const searchTerms = this._selected.filter(isSearchTerm);\n                if (searchTerms.length > 0) {\n                    // there is already a search term, so replace it with this new one.\n                    this._selected = this._selected.filter(i => !isSearchTerm(i)).concat(item);\n                } else {\n                    this._selected.push(item);\n                }\n            } else {\n                this._selected.push(item);\n            }\n        }\n    }\n\n    unselect(item: NgOption, multiple: boolean) {\n        this._selected = this._selected.filter(x => x !== item);\n        item.selected = false;\n    }\n\n    clear(keepDisabled: boolean) {\n        this._selected = keepDisabled ? this._selected.filter(x => x.disabled) : [];\n    }\n\n    private _setChildrenSelectedState(children: NgOption[], selected: boolean) {\n        children.forEach(x => (x.selected = selected));\n    }\n\n    private _removeChildren(parent: NgOption) {\n        this._selected = this._selected.filter(x => x.parent !== parent);\n    }\n\n    private _removeParent(parent: NgOption) {\n        this._selected = this._selected.filter(x => x !== parent);\n    }\n}\n\nexport function SingleSearchSelectionModelFactory() {\n    return new SingleSearchSelectionModel();\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { NgSelectComponent, SELECTION_MODEL_FACTORY } from '@ng-select/ng-select';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\n\r\nimport { SearchProducts, TagFragment } from '../../../common/generated-types';\r\nimport { SingleSearchSelectionModelFactory } from '../../../common/single-search-selection-model';\r\n\r\n@Component({\r\n    selector: 'vdr-asset-search-input',\r\n    templateUrl: './asset-search-input.component.html',\r\n    styleUrls: ['./asset-search-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{ provide: SELECTION_MODEL_FACTORY, useValue: SingleSearchSelectionModelFactory }],\r\n})\r\nexport class AssetSearchInputComponent {\r\n    @Input() tags: TagFragment[];\r\n    @Output() searchTermChange = new EventEmitter<string>();\r\n    @Output() tagsChange = new EventEmitter<TagFragment[]>();\r\n    @ViewChild('selectComponent', { static: true }) private selectComponent: NgSelectComponent;\r\n    private lastTerm = '';\r\n    private lastTagIds: string[] = [];\r\n\r\n    setSearchTerm(term: string | null) {\r\n        if (term) {\r\n            this.selectComponent.select({ label: term, value: { label: term } });\r\n        } else {\r\n            const currentTerm = this.selectComponent.selectedItems.find(i => !this.isTag(i.value));\r\n            if (currentTerm) {\r\n                this.selectComponent.unselect(currentTerm);\r\n            }\r\n        }\r\n    }\r\n\r\n    setTags(tags: TagFragment[]) {\r\n        const items = this.selectComponent.items;\r\n\r\n        this.selectComponent.selectedItems.forEach(item => {\r\n            if (this.isTag(item.value) && !tags.map(t => t.id).includes(item.id)) {\r\n                this.selectComponent.unselect(item);\r\n            }\r\n        });\r\n\r\n        tags.map(tag => {\r\n            return items?.find(item => this.isTag(item) && item.id === tag.id);\r\n        })\r\n            .filter(notNullOrUndefined)\r\n            .forEach(item => {\r\n                const isSelected = this.selectComponent.selectedItems.find(i => {\r\n                    const val = i.value;\r\n                    if (this.isTag(val)) {\r\n                        return val.id === item.id;\r\n                    }\r\n                    return false;\r\n                });\r\n                if (!isSelected) {\r\n                    this.selectComponent.select({ label: '', value: item });\r\n                }\r\n            });\r\n    }\r\n\r\n    filterTagResults = (term: string, item: SearchProducts.FacetValues | { label: string }) => {\r\n        if (!this.isTag(item)) {\r\n            return false;\r\n        }\r\n        return item.value.toLowerCase().startsWith(term.toLowerCase());\r\n    };\r\n\r\n    onSelectChange(selectedItems: Array<TagFragment | { label: string }>) {\r\n        if (!Array.isArray(selectedItems)) {\r\n            selectedItems = [selectedItems];\r\n        }\r\n\r\n        const searchTermItems = selectedItems.filter(item => !this.isTag(item));\r\n        if (1 < searchTermItems.length) {\r\n            for (let i = 0; i < searchTermItems.length - 1; i++) {\r\n                // this.selectComponent.unselect(searchTermItems[i] as any);\r\n            }\r\n        }\r\n\r\n        const searchTermItem = searchTermItems[searchTermItems.length - 1] as { label: string } | undefined;\r\n\r\n        const searchTerm = searchTermItem ? searchTermItem.label : '';\r\n\r\n        const tags = selectedItems.filter(this.isTag);\r\n\r\n        if (searchTerm !== this.lastTerm) {\r\n            this.searchTermChange.emit(searchTerm);\r\n            this.lastTerm = searchTerm;\r\n        }\r\n        if (this.lastTagIds.join(',') !== tags.map(t => t.id).join(',')) {\r\n            this.tagsChange.emit(tags);\r\n            this.lastTagIds = tags.map(t => t.id);\r\n        }\r\n    }\r\n\r\n    isSearchHeaderSelected(): boolean {\r\n        return this.selectComponent.itemsList.markedIndex === -1;\r\n    }\r\n\r\n    addTagFn(item: any) {\r\n        return { label: item };\r\n    }\r\n\r\n    private isTag = (input: unknown): input is TagFragment => {\r\n        return typeof input === 'object' && !!input && input.hasOwnProperty('value');\r\n    };\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { Channel, CurrentUserChannel } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n@Component({\r\n    selector: 'vdr-channel-assignment-control',\r\n    templateUrl: './channel-assignment-control.component.html',\r\n    styleUrls: ['./channel-assignment-control.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: ChannelAssignmentControlComponent,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class ChannelAssignmentControlComponent implements OnInit, ControlValueAccessor {\r\n    @Input() multiple = true;\r\n    @Input() includeDefaultChannel = true;\r\n    @Input() disableChannelIds: string[] = [];\r\n\r\n    channels$: Observable<CurrentUserChannel[]>;\r\n    value: CurrentUserChannel[] = [];\r\n    disabled = false;\r\n    private onChange: (value: any) => void;\r\n    private onTouched: () => void;\r\n    private channels: CurrentUserChannel[] | undefined;\r\n    private lastIncomingValue: any;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.channels$ = this.dataService.client.userStatus().single$.pipe(\r\n            map(({ userStatus }) =>\r\n                userStatus.channels.filter(c =>\r\n                    this.includeDefaultChannel ? true : c.code !== DEFAULT_CHANNEL_CODE,\r\n                ),\r\n            ),\r\n            tap(channels => {\r\n                if (!this.channels) {\r\n                    this.channels = channels;\r\n                    this.mapIncomingValueToChannels(this.lastIncomingValue);\r\n                } else {\r\n                    this.channels = channels;\r\n                }\r\n            }),\r\n        );\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    writeValue(obj: unknown): void {\r\n        this.lastIncomingValue = obj;\r\n        this.mapIncomingValueToChannels(obj);\r\n    }\r\n\r\n    focussed() {\r\n        if (this.onTouched) {\r\n            this.onTouched();\r\n        }\r\n    }\r\n\r\n    channelIsDisabled(id: string) {\r\n        return this.disableChannelIds.includes(id);\r\n    }\r\n\r\n    valueChanged(value: CurrentUserChannel[] | CurrentUserChannel | undefined) {\r\n        if (Array.isArray(value)) {\r\n            this.onChange(value.map(c => c.id));\r\n        } else {\r\n            this.onChange([value ? value.id : undefined]);\r\n        }\r\n    }\r\n\r\n    compareFn(c1: Channel | string, c2: Channel | string): boolean {\r\n        const c1id = typeof c1 === 'string' ? c1 : c1.id;\r\n        const c2id = typeof c2 === 'string' ? c2 : c2.id;\r\n        return c1id === c2id;\r\n    }\r\n\r\n    private mapIncomingValueToChannels(value: unknown) {\r\n        if (Array.isArray(value)) {\r\n            if (typeof value[0] === 'string') {\r\n                this.value = value\r\n                    .map(id => this.channels?.find(c => c.id === id))\r\n                    .filter(notNullOrUndefined);\r\n            } else {\r\n                this.value = value;\r\n            }\r\n        } else {\r\n            if (typeof value === 'string') {\r\n                const channel = this.channels?.find(c => c.id === value);\r\n                if (channel) {\r\n                    this.value = [channel];\r\n                }\r\n            } else if (value && (value as any).id) {\r\n                this.value = [value as any];\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\n\r\n@Component({\r\n    selector: 'vdr-channel-badge',\r\n    templateUrl: './channel-badge.component.html',\r\n    styleUrls: ['./channel-badge.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChannelBadgeComponent {\r\n    @Input() channelCode: string;\r\n    get isDefaultChannel(): boolean {\r\n        return this.channelCode === DEFAULT_CHANNEL_CODE;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n/**\r\n * @description\r\n * A chip component for displaying a label with an optional action icon.\r\n *\r\n * @example\r\n * ```HTML\r\n * <vdr-chip [colorFrom]=\"item.value\"\r\n *           icon=\"close\"\r\n *           (iconClick)=\"clear(item)\">\r\n * {{ item.value }}</vdr-chip>\r\n * ```\r\n * @docsCategory components\r\n */\r\n@Component({\r\n    selector: 'vdr-chip',\r\n    templateUrl: './chip.component.html',\r\n    styleUrls: ['./chip.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChipComponent {\r\n    /**\r\n     * @description\r\n     * The icon should be the name of one of the available Clarity icons: https://clarity.design/foundation/icons/shapes/\r\n     *\r\n     */\r\n    @Input() icon: string;\r\n    @Input() invert = false;\r\n    /**\r\n     * @description\r\n     * If set, the chip will have an auto-generated background\r\n     * color based on the string value passed in.\r\n     */\r\n    @Input() colorFrom = '';\r\n    /**\r\n     * @description\r\n     * The color of the chip can also be one of the standard status colors.\r\n     */\r\n    @Input() colorType: 'error' | 'success' | 'warning';\r\n    @Output() iconClick = new EventEmitter<MouseEvent>();\r\n}\r\n","import { ConfigArgType, CustomFieldType } from '@vendure/common/lib/shared-types';\r\nimport { assertNever } from '@vendure/common/lib/shared-utils';\r\n\r\nimport {\r\n    ConfigArgDefinition,\r\n    ConfigurableOperation,\r\n    ConfigurableOperationDefinition,\r\n    ConfigurableOperationInput,\r\n} from '../generated-types';\r\n\r\n/**\r\n * ConfigArg values are always stored as strings. If they are not primitives, then\r\n * they are JSON-encoded. This function unwraps them back into their original\r\n * data type.\r\n */\r\nexport function getConfigArgValue(value: any) {\r\n    try {\r\n        return value ? JSON.parse(value) : undefined;\r\n    } catch (e) {\r\n        return value;\r\n    }\r\n}\r\n\r\nexport function encodeConfigArgValue(value: any): string {\r\n    return Array.isArray(value) ? JSON.stringify(value) : (value ?? '').toString();\r\n}\r\n\r\n/**\r\n * Creates an empty ConfigurableOperation object based on the definition.\r\n */\r\nexport function configurableDefinitionToInstance(\r\n    def: ConfigurableOperationDefinition,\r\n): ConfigurableOperation {\r\n    return {\r\n        ...def,\r\n        args: def.args.map(arg => {\r\n            return {\r\n                ...arg,\r\n                value: getDefaultConfigArgValue(arg),\r\n            };\r\n        }),\r\n    } as ConfigurableOperation;\r\n}\r\n\r\n/**\r\n * Converts an object of the type:\r\n * ```\r\n * {\r\n *     code: 'my-operation',\r\n *     args: {\r\n *         someProperty: 'foo'\r\n *     }\r\n * }\r\n * ```\r\n * to the format defined by the ConfigurableOperationInput GraphQL input type:\r\n * ```\r\n * {\r\n *     code: 'my-operation',\r\n *     args: [\r\n *         { name: 'someProperty', value: 'foo' }\r\n *     ]\r\n * }\r\n * ```\r\n */\r\nexport function toConfigurableOperationInput(\r\n    operation: ConfigurableOperation,\r\n    formValueOperations: any,\r\n): ConfigurableOperationInput {\r\n    return {\r\n        code: operation.code,\r\n        arguments: Object.values<any>(formValueOperations.args || {}).map((value, j) => ({\r\n            name: operation.args[j].name,\r\n            value: value.hasOwnProperty('value')\r\n                ? encodeConfigArgValue((value as any).value)\r\n                : encodeConfigArgValue(value),\r\n        })),\r\n    };\r\n}\r\n\r\nexport function configurableOperationValueIsValid(\r\n    def?: ConfigurableOperationDefinition,\r\n    value?: { code: string; args: { [key: string]: string } },\r\n) {\r\n    if (!def || !value) {\r\n        return false;\r\n    }\r\n    if (def.code !== value.code) {\r\n        return false;\r\n    }\r\n    for (const argDef of def.args) {\r\n        const argVal = value.args[argDef.name];\r\n        if (argDef.required && (argVal == null || argVal === '' || argVal === '0')) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * Returns a default value based on the type of the config arg.\r\n */\r\nexport function getDefaultConfigArgValue(arg: ConfigArgDefinition): any {\r\n    return arg.list ? [] : arg.defaultValue ?? null;\r\n}\r\n","import { ConfigurableOperationDefinition } from '../generated-types';\r\n\r\n/**\r\n * Interpolates the description of an ConfigurableOperation with the given values.\r\n */\r\nexport function interpolateDescription(\r\n    operation: ConfigurableOperationDefinition,\r\n    values: { [name: string]: any },\r\n): string {\r\n    if (!operation) {\r\n        return '';\r\n    }\r\n    const templateString = operation.description;\r\n    const interpolated = templateString.replace(/{\\s*([a-zA-Z0-9]+)\\s*}/gi, (substring, argName: string) => {\r\n        const normalizedArgName = argName.toLowerCase();\r\n        const value = values[normalizedArgName];\r\n        if (value == null) {\r\n            return '_';\r\n        }\r\n        let formatted = value;\r\n        const argDef = operation.args.find(arg => arg.name === normalizedArgName);\r\n        if (argDef && argDef.type === 'int' && argDef.ui && argDef.ui.component === 'currency-form-input') {\r\n            formatted = value / 100;\r\n        }\r\n        if (argDef && argDef.type === 'datetime' && value instanceof Date) {\r\n            formatted = value.toLocaleDateString();\r\n        }\r\n        return formatted;\r\n    });\r\n    return interpolated;\r\n}\r\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    Validators,\n} from '@angular/forms';\nimport { ConfigArgType } from '@vendure/common/lib/shared-types';\nimport { assertNever } from '@vendure/common/lib/shared-utils';\nimport { Subscription } from 'rxjs';\n\nimport { InputComponentConfig } from '../../../common/component-registry-types';\nimport {\n    ConfigArg,\n    ConfigArgDefinition,\n    ConfigurableOperation,\n    ConfigurableOperationDefinition,\n} from '../../../common/generated-types';\nimport { getDefaultConfigArgValue } from '../../../common/utilities/configurable-operation-utils';\nimport { interpolateDescription } from '../../../common/utilities/interpolate-description';\n\n/**\n * A form input which renders a card with the internal form fields of the given ConfigurableOperation.\n */\n@Component({\n    selector: 'vdr-configurable-input',\n    templateUrl: './configurable-input.component.html',\n    styleUrls: ['./configurable-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: ConfigurableInputComponent,\n            multi: true,\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => ConfigurableInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ConfigurableInputComponent implements OnChanges, OnDestroy, ControlValueAccessor, Validator {\n    @Input() operation?: ConfigurableOperation;\n    @Input() operationDefinition?: ConfigurableOperationDefinition;\n    @Input() readonly = false;\n    @Input() removable = true;\n    @Output() remove = new EventEmitter<ConfigurableOperation>();\n    argValues: { [name: string]: any } = {};\n    onChange: (val: any) => void;\n    onTouch: () => void;\n    form = new FormGroup({});\n    private subscription: Subscription;\n\n    interpolateDescription(): string {\n        if (this.operationDefinition) {\n            return interpolateDescription(this.operationDefinition, this.form.value);\n        } else {\n            return '';\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if ('operation' in changes || 'operationDefinition' in changes) {\n            this.createForm();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    registerOnChange(fn: any) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouch = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        if (isDisabled) {\n            this.form.disable();\n        } else {\n            this.form.enable();\n        }\n    }\n\n    writeValue(value: any): void {\n        if (value) {\n            this.form.patchValue(value);\n        }\n    }\n\n    trackByName(index: number, arg: ConfigArg): string {\n        return arg.name;\n    }\n\n    getArgDef(arg: ConfigArg): ConfigArgDefinition | undefined {\n        return this.operationDefinition?.args.find(a => a.name === arg.name);\n    }\n\n    private createForm() {\n        if (!this.operation) {\n            return;\n        }\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        this.form = new FormGroup({});\n        (this.form as any).__id = Math.random().toString(36).substr(10);\n\n        if (this.operation.args) {\n            for (const arg of this.operationDefinition?.args || []) {\n                let value: any = this.operation.args.find(a => a.name === arg.name)?.value;\n                if (value === undefined) {\n                    value = getDefaultConfigArgValue(arg);\n                }\n                const validators = arg.list ? undefined : arg.required ? Validators.required : undefined;\n                this.form.addControl(arg.name, new FormControl(value, validators));\n            }\n        }\n\n        this.subscription = this.form.valueChanges.subscribe(value => {\n            if (this.onChange) {\n                this.onChange({\n                    code: this.operation && this.operation.code,\n                    args: value,\n                });\n            }\n            if (this.onTouch) {\n                this.onTouch();\n            }\n        });\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null {\n        if (this.form.invalid) {\n            return {\n                required: true,\n            };\n        }\n        return null;\n    }\n}\n","import {\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    SimpleChanges,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n/**\r\n * @description\r\n * A form input control which displays currency in decimal format, whilst working\r\n * with the integer cent value in the background.\r\n *\r\n * @example\r\n * ```HTML\r\n * <vdr-currency-input\r\n *     [(ngModel)]=\"entityPrice\"\r\n *     [currencyCode]=\"currencyCode\"\r\n * ></vdr-currency-input>\r\n * ```\r\n *\r\n * @docsCategory components\r\n */\r\n@Component({\r\n    selector: 'vdr-currency-input',\r\n    templateUrl: './currency-input.component.html',\r\n    styleUrls: ['./currency-input.component.scss'],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: CurrencyInputComponent,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class CurrencyInputComponent implements ControlValueAccessor, OnInit, OnChanges, OnDestroy {\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() value: number;\r\n    @Input() currencyCode = '';\r\n    @Output() valueChange = new EventEmitter();\r\n    prefix$: Observable<string>;\r\n    suffix$: Observable<string>;\r\n    hasFractionPart = true;\r\n    onChange: (val: any) => void;\r\n    onTouch: () => void;\r\n    _inputValue: string;\r\n    private currencyCode$ = new BehaviorSubject<string>('');\r\n    private subscription: Subscription;\r\n\r\n    constructor(private dataService: DataService, private changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n    ngOnInit() {\r\n        const languageCode$ = this.dataService.client.uiState().mapStream(data => data.uiState.language);\r\n        const shouldPrefix$ = combineLatest(languageCode$, this.currencyCode$).pipe(\r\n            map(([languageCode, currencyCode]) => {\r\n                if (!currencyCode) {\r\n                    return '';\r\n                }\r\n                const locale = languageCode.replace(/_/g, '-');\r\n                const parts = (\r\n                    new Intl.NumberFormat(locale, {\r\n                        style: 'currency',\r\n                        currency: currencyCode,\r\n                        currencyDisplay: 'symbol',\r\n                    }) as any\r\n                ).formatToParts();\r\n                const NaNString = parts.find(p => p.type === 'nan')?.value ?? 'NaN';\r\n                const localised = new Intl.NumberFormat(locale, {\r\n                    style: 'currency',\r\n                    currency: currencyCode,\r\n                    currencyDisplay: 'symbol',\r\n                }).format(undefined as any);\r\n                return localised.indexOf(NaNString) > 0;\r\n            }),\r\n        );\r\n        this.prefix$ = shouldPrefix$.pipe(map(shouldPrefix => (shouldPrefix ? this.currencyCode : '')));\r\n        this.suffix$ = shouldPrefix$.pipe(map(shouldPrefix => (shouldPrefix ? '' : this.currencyCode)));\r\n\r\n        this.subscription = combineLatest(languageCode$, this.currencyCode$).subscribe(\r\n            ([languageCode, currencyCode]) => {\r\n                if (!currencyCode) {\r\n                    return '';\r\n                }\r\n                const locale = languageCode.replace(/_/g, '-');\r\n                const parts = (\r\n                    new Intl.NumberFormat(locale, {\r\n                        style: 'currency',\r\n                        currency: currencyCode,\r\n                        currencyDisplay: 'symbol',\r\n                    }) as any\r\n                ).formatToParts(123.45);\r\n                this.hasFractionPart = !!parts.find(p => p.type === 'fraction');\r\n                this._inputValue = this.toNumericString(this._inputValue);\r\n            },\r\n        );\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if ('value' in changes) {\r\n            this.writeValue(changes['value'].currentValue);\r\n        }\r\n        if ('currencyCode' in changes) {\r\n            this.currencyCode$.next(this.currencyCode);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouch = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    onInput(value: string) {\r\n        const integerValue = Math.round(+value * 100);\r\n        if (typeof this.onChange === 'function') {\r\n            this.onChange(integerValue);\r\n        }\r\n        this.valueChange.emit(integerValue);\r\n        const delta = Math.abs(Number(this._inputValue) - Number(value));\r\n        if (0.009 < delta && delta < 0.011) {\r\n            this._inputValue = this.toNumericString(value);\r\n        } else {\r\n            this._inputValue = value;\r\n        }\r\n    }\r\n\r\n    onFocus() {\r\n        if (typeof this.onTouch === 'function') {\r\n            this.onTouch();\r\n        }\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        const numericValue = +value;\r\n        if (!Number.isNaN(numericValue)) {\r\n            this._inputValue = this.toNumericString(Math.floor(value) / 100);\r\n        }\r\n    }\r\n\r\n    private toNumericString(value: number | string): string {\r\n        return this.hasFractionPart ? Number(value).toFixed(2) : Number(value).toFixed(0);\r\n    }\r\n}\r\n","import { APP_INITIALIZER, Injectable, Provider } from '@angular/core';\r\n\r\nimport { CustomDetailComponentConfig } from './custom-detail-component-types';\r\n\r\n/**\r\n * @description\r\n * Registers a {@link CustomDetailComponent} to be placed in a given location. This allows you\r\n * to embed any type of custom Angular component in the entity detail pages of the Admin UI.\r\n *\r\n * @docsCategory custom-detail-components\r\n */\r\nexport function registerCustomDetailComponent(config: CustomDetailComponentConfig): Provider {\r\n    return {\r\n        provide: APP_INITIALIZER,\r\n        multi: true,\r\n        useFactory: (customDetailComponentService: CustomDetailComponentService) => () => {\r\n            customDetailComponentService.registerCustomDetailComponent(config);\r\n        },\r\n        deps: [CustomDetailComponentService],\r\n    };\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CustomDetailComponentService {\r\n    private customDetailComponents = new Map<string, CustomDetailComponentConfig[]>();\r\n\r\n    registerCustomDetailComponent(config: CustomDetailComponentConfig) {\r\n        if (this.customDetailComponents.has(config.locationId)) {\r\n            this.customDetailComponents.get(config.locationId)?.push(config);\r\n        } else {\r\n            this.customDetailComponents.set(config.locationId, [config]);\r\n        }\r\n    }\r\n\r\n    getCustomDetailComponentsFor(locationId: string): CustomDetailComponentConfig[] {\r\n        return this.customDetailComponents.get(locationId) ?? [];\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    ComponentRef,\r\n    Injector,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { CustomDetailComponentLocationId } from '../../../common/component-registry-types';\r\nimport { CustomDetailComponent } from '../../../providers/custom-detail-component/custom-detail-component-types';\r\nimport { CustomDetailComponentService } from '../../../providers/custom-detail-component/custom-detail-component.service';\r\n\r\n@Component({\r\n    selector: 'vdr-custom-detail-component-host',\r\n    templateUrl: './custom-detail-component-host.component.html',\r\n    styleUrls: ['./custom-detail-component-host.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CustomDetailComponentHostComponent implements OnInit, OnDestroy {\r\n    @Input() locationId: CustomDetailComponentLocationId;\r\n    @Input() entity$: Observable<any>;\r\n    @Input() detailForm: FormGroup;\r\n\r\n    private componentRefs: Array<ComponentRef<CustomDetailComponent>> = [];\r\n\r\n    constructor(\r\n        private viewContainerRef: ViewContainerRef,\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private customDetailComponentService: CustomDetailComponentService,\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        const customComponents = this.customDetailComponentService.getCustomDetailComponentsFor(\r\n            this.locationId,\r\n        );\r\n\r\n        for (const config of customComponents) {\r\n            const factory = this.componentFactoryResolver.resolveComponentFactory(config.component);\r\n            const componentRef = this.viewContainerRef.createComponent(factory);\r\n            componentRef.instance.entity$ = this.entity$;\r\n            componentRef.instance.detailForm = this.detailForm;\r\n            this.componentRefs.push(componentRef);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        for (const ref of this.componentRefs) {\r\n            ref.destroy();\r\n        }\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    ComponentFactory,\r\n    Input,\r\n    OnInit,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { InputComponentConfig } from '../../../common/component-registry-types';\r\nimport { CustomFieldConfig, CustomFieldsFragment } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport {\r\n    CustomFieldComponentService,\r\n    CustomFieldControl,\r\n    CustomFieldEntityName,\r\n} from '../../../providers/custom-field-component/custom-field-component.service';\r\n\r\n/**\r\n * This component renders the appropriate type of form input control based\r\n * on the \"type\" property of the provided CustomFieldConfig.\r\n */\r\n@Component({\r\n    selector: 'vdr-custom-field-control',\r\n    templateUrl: './custom-field-control.component.html',\r\n    styleUrls: ['./custom-field-control.component.scss'],\r\n})\r\nexport class CustomFieldControlComponent {\r\n    @Input() entityName: CustomFieldEntityName;\r\n    @Input('customFieldsFormGroup') formGroup: FormGroup;\r\n    @Input() customField: CustomFieldsFragment;\r\n    @Input() compact = false;\r\n    @Input() showLabel = true;\r\n    @Input() readonly = false;\r\n    hasCustomControl = false;\r\n    @ViewChild('customComponentPlaceholder', { read: ViewContainerRef })\r\n    private customComponentPlaceholder: ViewContainerRef;\r\n    private customComponentFactory: ComponentFactory<CustomFieldControl> | undefined;\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private customFieldComponentService: CustomFieldComponentService,\r\n    ) {}\r\n\r\n    getFieldDefinition(): CustomFieldConfig & { ui?: InputComponentConfig } {\r\n        const config: CustomFieldsFragment & { ui?: InputComponentConfig } = {\r\n            ...this.customField,\r\n        };\r\n        const id = this.customFieldComponentService.customFieldComponentExists(\r\n            this.entityName,\r\n            this.customField.name,\r\n        );\r\n        if (id) {\r\n            config.ui = { component: id };\r\n        }\r\n        switch (config.__typename) {\r\n            case 'IntCustomFieldConfig':\r\n                return {\r\n                    ...config,\r\n                    min: config.intMin,\r\n                    max: config.intMax,\r\n                    step: config.intStep,\r\n                };\r\n            case 'FloatCustomFieldConfig':\r\n                return {\r\n                    ...config,\r\n                    min: config.floatMin,\r\n                    max: config.floatMax,\r\n                    step: config.floatStep,\r\n                };\r\n            case 'DateTimeCustomFieldConfig':\r\n                return {\r\n                    ...config,\r\n                    min: config.datetimeMin,\r\n                    max: config.datetimeMax,\r\n                    step: config.datetimeStep,\r\n                };\r\n            default:\r\n                return {\r\n                    ...config,\r\n                };\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { Customer } from '../../../common/generated-types';\r\n\r\n@Component({\r\n    selector: 'vdr-customer-label',\r\n    templateUrl: './customer-label.component.html',\r\n    styleUrls: ['./customer-label.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CustomerLabelComponent {\r\n    @Input() customer: Customer.Fragment;\r\n}\r\n","import { Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-dt-column',\r\n    template: `\r\n        <ng-template><ng-content></ng-content></ng-template>\r\n    `,\r\n})\r\nexport class DataTableColumnComponent {\r\n    /**\r\n     * When set to true, this column will expand to use avaiable width\r\n     */\r\n    @Input() expand = false;\r\n    @ViewChild(TemplateRef, { static: true }) template: TemplateRef<any>;\r\n}\r\n","import {\r\n    AfterContentInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ContentChild,\r\n    ContentChildren,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    QueryList,\r\n    TemplateRef,\r\n} from '@angular/core';\r\nimport { PaginationService } from 'ngx-pagination';\r\n\r\nimport { DataTableColumnComponent } from './data-table-column.component';\r\n\r\n/**\r\n * @description\r\n * A table for displaying PaginatedList results. It is designed to be used inside components which\r\n * extend the {@link BaseListComponent} class.\r\n *\r\n * @example\r\n * ```HTML\r\n * <vdr-data-table\r\n *   [items]=\"items$ | async\"\r\n *   [itemsPerPage]=\"itemsPerPage$ | async\"\r\n *   [totalItems]=\"totalItems$ | async\"\r\n *   [currentPage]=\"currentPage$ | async\"\r\n *   (pageChange)=\"setPageNumber($event)\"\r\n *   (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n * >\r\n *   <!-- The header columns are defined first -->\r\n *   <vdr-dt-column>{{ 'common.name' | translate }}</vdr-dt-column>\r\n *   <vdr-dt-column></vdr-dt-column>\r\n *   <vdr-dt-column></vdr-dt-column>\r\n *\r\n *   <!-- Then we define how a row is rendered -->\r\n *   <ng-template let-taxRate=\"item\">\r\n *     <td class=\"left align-middle\">{{ taxRate.name }}</td>\r\n *     <td class=\"left align-middle\">{{ taxRate.category.name }}</td>\r\n *     <td class=\"left align-middle\">{{ taxRate.zone.name }}</td>\r\n *     <td class=\"left align-middle\">{{ taxRate.value }}%</td>\r\n *     <td class=\"right align-middle\">\r\n *       <vdr-table-row-action\r\n *         iconShape=\"edit\"\r\n *         [label]=\"'common.edit' | translate\"\r\n *         [linkTo]=\"['./', taxRate.id]\"\r\n *       ></vdr-table-row-action>\r\n *     </td>\r\n *     <td class=\"right align-middle\">\r\n *       <vdr-dropdown>\r\n *         <button type=\"button\" class=\"btn btn-link btn-sm\" vdrDropdownTrigger>\r\n *           {{ 'common.actions' | translate }}\r\n *           <clr-icon shape=\"caret down\"></clr-icon>\r\n *         </button>\r\n *         <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n *           <button\r\n *               type=\"button\"\r\n *               class=\"delete-button\"\r\n *               (click)=\"deleteTaxRate(taxRate)\"\r\n *               [disabled]=\"!(['DeleteSettings', 'DeleteTaxRate'] | hasPermission)\"\r\n *               vdrDropdownItem\r\n *           >\r\n *               <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n *               {{ 'common.delete' | translate }}\r\n *           </button>\r\n *         </vdr-dropdown-menu>\r\n *       </vdr-dropdown>\r\n *     </td>\r\n *   </ng-template>\r\n * </vdr-data-table>\r\n * ```\r\n *\r\n * @docsCategory components\r\n */\r\n@Component({\r\n    selector: 'vdr-data-table',\r\n    templateUrl: 'data-table.component.html',\r\n    styleUrls: ['data-table.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [PaginationService],\r\n})\r\nexport class DataTableComponent<T> implements AfterContentInit {\r\n    @Input() items: T[];\r\n    @Input() itemsPerPage: number;\r\n    @Input() currentPage: number;\r\n    @Input() totalItems: number;\r\n    @Input() allSelected: boolean;\r\n    @Input() isRowSelectedFn: (item: T) => boolean;\r\n    @Input() emptyStateLabel: string;\r\n    @Output() allSelectChange = new EventEmitter<void>();\r\n    @Output() rowSelectChange = new EventEmitter<T>();\r\n    @Output() pageChange = new EventEmitter<number>();\r\n    @Output() itemsPerPageChange = new EventEmitter<number>();\r\n    @ContentChildren(DataTableColumnComponent) columns: QueryList<DataTableColumnComponent>;\r\n    @ContentChildren(TemplateRef) templateRefs: QueryList<TemplateRef<any>>;\r\n    rowTemplate: TemplateRef<any>;\r\n\r\n    ngAfterContentInit(): void {\r\n        this.rowTemplate = this.templateRefs.last;\r\n    }\r\n\r\n    trackByFn(index: number, item: any) {\r\n        if ((item as any).id != null) {\r\n            return (item as any).id;\r\n        } else {\r\n            return index;\r\n        }\r\n    }\r\n}\r\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\n\r\nimport { DayOfWeek } from './types';\r\n\r\nexport const dayOfWeekIndex: { [day in DayOfWeek]: number } = {\r\n    sun: 0,\r\n    mon: 1,\r\n    tue: 2,\r\n    wed: 3,\r\n    thu: 4,\r\n    fri: 5,\r\n    sat: 6,\r\n};\r\n\r\nexport const weekDayNames = [\r\n    _('datetime.weekday-su'),\r\n    _('datetime.weekday-mo'),\r\n    _('datetime.weekday-tu'),\r\n    _('datetime.weekday-we'),\r\n    _('datetime.weekday-th'),\r\n    _('datetime.weekday-fr'),\r\n    _('datetime.weekday-sa'),\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport dayjs from 'dayjs';\r\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { dayOfWeekIndex } from './constants';\r\nimport { CalendarView, DayCell, DayOfWeek } from './types';\r\n\r\n@Injectable()\r\nexport class DatetimePickerService {\r\n    calendarView$: Observable<CalendarView>;\r\n    selected$: Observable<Date | null>;\r\n    viewing$: Observable<Date>;\r\n    private selectedDatetime$ = new BehaviorSubject<dayjs.Dayjs | null>(null);\r\n    private viewingDatetime$ = new BehaviorSubject<dayjs.Dayjs>(dayjs());\r\n    private weekStartDayIndex: number;\r\n    private min: dayjs.Dayjs | null = null;\r\n    private max: dayjs.Dayjs | null = null;\r\n    private jumping = false;\r\n\r\n    constructor() {\r\n        this.selected$ = this.selectedDatetime$.pipe(map(value => value && value.toDate()));\r\n        this.viewing$ = this.viewingDatetime$.pipe(map(value => value.toDate()));\r\n        this.weekStartDayIndex = dayOfWeekIndex['mon'];\r\n        this.calendarView$ = combineLatest(this.viewingDatetime$, this.selectedDatetime$).pipe(\r\n            map(([viewing, selected]) => this.generateCalendarView(viewing, selected)),\r\n        );\r\n    }\r\n\r\n    setWeekStartingDay(weekStartDay: DayOfWeek) {\r\n        this.weekStartDayIndex = dayOfWeekIndex[weekStartDay];\r\n    }\r\n\r\n    setMin(min?: string | null) {\r\n        if (typeof min === 'string') {\r\n            this.min = dayjs(min);\r\n        }\r\n    }\r\n\r\n    setMax(max?: string | null) {\r\n        if (typeof max === 'string') {\r\n            this.max = dayjs(max);\r\n        }\r\n    }\r\n\r\n    selectDatetime(date: Date | string | dayjs.Dayjs | null) {\r\n        let viewingValue: dayjs.Dayjs;\r\n        let selectedValue: dayjs.Dayjs | null = null;\r\n        if (date == null || date === '') {\r\n            viewingValue = dayjs();\r\n        } else {\r\n            viewingValue = dayjs(date);\r\n            selectedValue = dayjs(date);\r\n        }\r\n\r\n        this.selectedDatetime$.next(selectedValue);\r\n        this.viewingDatetime$.next(viewingValue);\r\n    }\r\n\r\n    selectHour(hourOfDay: number) {\r\n        const current = this.selectedDatetime$.value || dayjs();\r\n        const next = current.hour(hourOfDay);\r\n        this.selectedDatetime$.next(next);\r\n        this.viewingDatetime$.next(next);\r\n    }\r\n\r\n    selectMinute(minutePastHour: number) {\r\n        const current = this.selectedDatetime$.value || dayjs();\r\n        const next = current.minute(minutePastHour);\r\n        this.selectedDatetime$.next(next);\r\n        this.viewingDatetime$.next(next);\r\n    }\r\n\r\n    viewNextMonth() {\r\n        this.jumping = false;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.add(1, 'month'));\r\n    }\r\n\r\n    viewPrevMonth() {\r\n        this.jumping = false;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.subtract(1, 'month'));\r\n    }\r\n\r\n    viewToday() {\r\n        this.jumping = false;\r\n        this.viewingDatetime$.next(dayjs());\r\n    }\r\n\r\n    viewJumpDown() {\r\n        this.jumping = true;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.add(1, 'week'));\r\n    }\r\n\r\n    viewJumpUp() {\r\n        this.jumping = true;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.subtract(1, 'week'));\r\n    }\r\n\r\n    viewJumpRight() {\r\n        this.jumping = true;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.add(1, 'day'));\r\n    }\r\n\r\n    viewJumpLeft() {\r\n        this.jumping = true;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.subtract(1, 'day'));\r\n    }\r\n\r\n    selectToday() {\r\n        this.jumping = false;\r\n        this.selectDatetime(dayjs());\r\n    }\r\n\r\n    selectViewed() {\r\n        this.jumping = false;\r\n        this.selectDatetime(this.viewingDatetime$.value);\r\n    }\r\n\r\n    viewMonth(month: number) {\r\n        this.jumping = false;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.month(month - 1));\r\n    }\r\n\r\n    viewYear(year: number) {\r\n        this.jumping = false;\r\n        const current = this.viewingDatetime$.value;\r\n        this.viewingDatetime$.next(current.year(year));\r\n    }\r\n\r\n    private generateCalendarView(viewing: dayjs.Dayjs, selected: dayjs.Dayjs | null): CalendarView {\r\n        if (!viewing.isValid() || (selected && !selected.isValid())) {\r\n            return [];\r\n        }\r\n        const start = viewing.startOf('month');\r\n        const end = viewing.endOf('month');\r\n        const today = dayjs();\r\n        const daysInMonth = viewing.daysInMonth();\r\n        const selectedDayOfMonth = selected && selected.get('date');\r\n\r\n        const startDayOfWeek = start.day();\r\n        const startIndex = (7 + (startDayOfWeek - this.weekStartDayIndex)) % 7;\r\n\r\n        const calendarView: CalendarView = [];\r\n        let week: DayCell[] = [];\r\n\r\n        // Add the days at the tail of the previous month\r\n        if (0 < startIndex) {\r\n            const prevMonth = viewing.subtract(1, 'month');\r\n            const daysInPrevMonth = prevMonth.daysInMonth();\r\n            const prevIsCurrentMonth = prevMonth.isSame(today, 'month');\r\n            for (let i = daysInPrevMonth - startIndex + 1; i <= daysInPrevMonth; i++) {\r\n                const thisDay = viewing.subtract(1, 'month').date(i);\r\n                week.push({\r\n                    dayOfMonth: i,\r\n                    selected: false,\r\n                    inCurrentMonth: false,\r\n                    isToday: prevIsCurrentMonth && today.get('date') === i,\r\n                    isViewing: false,\r\n                    disabled: !this.isInBounds(thisDay),\r\n                    select: () => {\r\n                        this.selectDatetime(thisDay);\r\n                    },\r\n                });\r\n            }\r\n        }\r\n\r\n        // Add this month's days\r\n        const isCurrentMonth = viewing.isSame(today, 'month');\r\n        for (let i = 1; i <= daysInMonth; i++) {\r\n            if ((i + startIndex - 1) % 7 === 0) {\r\n                calendarView.push(week);\r\n                week = [];\r\n            }\r\n            const thisDay = start.add(i - 1, 'day');\r\n            const isViewingThisMonth =\r\n                !!selected && selected.isSame(viewing, 'month') && selected.isSame(viewing, 'year');\r\n            week.push({\r\n                dayOfMonth: i,\r\n                selected: i === selectedDayOfMonth && isViewingThisMonth,\r\n                inCurrentMonth: true,\r\n                isToday: isCurrentMonth && today.get('date') === i,\r\n                isViewing: this.jumping && viewing.date() === i,\r\n                disabled: !this.isInBounds(thisDay),\r\n                select: () => {\r\n                    this.selectDatetime(thisDay);\r\n                },\r\n            });\r\n        }\r\n\r\n        // Add the days at the start of the next month\r\n        const emptyCellsEnd = 7 - ((startIndex + daysInMonth) % 7);\r\n        if (emptyCellsEnd !== 7) {\r\n            const nextMonth = viewing.add(1, 'month');\r\n            const nextIsCurrentMonth = nextMonth.isSame(today, 'month');\r\n\r\n            for (let i = 1; i <= emptyCellsEnd; i++) {\r\n                const thisDay = end.add(i, 'day');\r\n                week.push({\r\n                    dayOfMonth: i,\r\n                    selected: false,\r\n                    inCurrentMonth: false,\r\n                    isToday: nextIsCurrentMonth && today.get('date') === i,\r\n                    isViewing: false,\r\n                    disabled: !this.isInBounds(thisDay),\r\n                    select: () => {\r\n                        this.selectDatetime(thisDay);\r\n                    },\r\n                });\r\n            }\r\n        }\r\n        calendarView.push(week);\r\n        return calendarView;\r\n    }\r\n\r\n    private isInBounds(date: dayjs.Dayjs): boolean {\r\n        if (this.min && this.min.isAfter(date)) {\r\n            return false;\r\n        }\r\n        if (this.max && this.max.isBefore(date)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { DropdownComponent } from '../dropdown/dropdown.component';\r\n\r\nimport { dayOfWeekIndex, weekDayNames } from './constants';\r\nimport { DatetimePickerService } from './datetime-picker.service';\r\nimport { CalendarView, DayCell, DayOfWeek } from './types';\r\n\r\nexport type CurrentView = {\r\n    date: Date;\r\n    month: number;\r\n    year: number;\r\n};\r\n\r\n/**\r\n * @description\r\n * A form input for selecting datetime values.\r\n *\r\n * @example\r\n * ```HTML\r\n * <vdr-datetime-picker [(ngModel)]=\"startDate\"></vdr-datetime-picker>\r\n * ```\r\n *\r\n * @docsCategory components\r\n */\r\n@Component({\r\n    selector: 'vdr-datetime-picker',\r\n    templateUrl: './datetime-picker.component.html',\r\n    styleUrls: ['./datetime-picker.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        DatetimePickerService,\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: DatetimePickerComponent,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class DatetimePickerComponent implements ControlValueAccessor, AfterViewInit, OnInit, OnDestroy {\r\n    /**\r\n     * @description\r\n     * The range above and below the current year which is selectable from\r\n     * the year select control. If a min or max value is set, these will\r\n     * override the yearRange.\r\n     */\r\n    @Input() yearRange;\r\n    /**\r\n     * @description\r\n     * The day that the week should start with in the calendar view.\r\n     */\r\n    @Input() weekStartDay: DayOfWeek = 'mon';\r\n    /**\r\n     * @description\r\n     * The granularity of the minutes time picker\r\n     */\r\n    @Input() timeGranularityInterval = 5;\r\n    /**\r\n     * @description\r\n     * The minimum date as an ISO string\r\n     */\r\n    @Input() min: string | null = null;\r\n    /**\r\n     * @description\r\n     * The maximum date as an ISO string\r\n     */\r\n    @Input() max: string | null = null;\r\n    /**\r\n     * @description\r\n     * Sets the readonly state\r\n     */\r\n    @Input() readonly = false;\r\n\r\n    @ViewChild('dropdownComponent', { static: true }) dropdownComponent: DropdownComponent;\r\n    @ViewChild('datetimeInput', { static: true }) datetimeInput: ElementRef<HTMLInputElement>;\r\n    @ViewChild('calendarTable') calendarTable: ElementRef<HTMLTableElement>;\r\n\r\n    disabled = false;\r\n    calendarView$: Observable<CalendarView>;\r\n    current$: Observable<CurrentView>;\r\n    selected$: Observable<Date | null>;\r\n    selectedHours$: Observable<number | null>;\r\n    selectedMinutes$: Observable<number | null>;\r\n    years: number[];\r\n    weekdays: string[] = [];\r\n    hours: number[];\r\n    minutes: number[];\r\n    private onChange: (val: any) => void;\r\n    private onTouch: () => void;\r\n    private subscription: Subscription;\r\n\r\n    constructor(\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n        private datetimePickerService: DatetimePickerService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.datetimePickerService.setWeekStartingDay(this.weekStartDay);\r\n        this.datetimePickerService.setMin(this.min);\r\n        this.datetimePickerService.setMax(this.max);\r\n        this.populateYearsSelection();\r\n        this.populateWeekdays();\r\n        this.populateHours();\r\n        this.populateMinutes();\r\n        this.calendarView$ = this.datetimePickerService.calendarView$;\r\n        this.current$ = this.datetimePickerService.viewing$.pipe(\r\n            map(date => ({\r\n                date,\r\n                month: date.getMonth() + 1,\r\n                year: date.getFullYear(),\r\n            })),\r\n        );\r\n        this.selected$ = this.datetimePickerService.selected$;\r\n        this.selectedHours$ = this.selected$.pipe(map(date => date && date.getHours()));\r\n        this.selectedMinutes$ = this.selected$.pipe(map(date => date && date.getMinutes()));\r\n        this.subscription = this.datetimePickerService.selected$.subscribe(val => {\r\n            if (this.onChange) {\r\n                this.onChange(val == null ? val : val.toISOString());\r\n            }\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dropdownComponent.onOpenChange(isOpen => {\r\n            if (isOpen) {\r\n                this.calendarTable.nativeElement.focus();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouch = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    writeValue(value: string | null) {\r\n        this.datetimePickerService.selectDatetime(value);\r\n    }\r\n\r\n    prevMonth() {\r\n        this.datetimePickerService.viewPrevMonth();\r\n    }\r\n\r\n    nextMonth() {\r\n        this.datetimePickerService.viewNextMonth();\r\n    }\r\n\r\n    selectToday() {\r\n        this.datetimePickerService.selectToday();\r\n    }\r\n\r\n    setYear(event: Event) {\r\n        const target = event.target as HTMLSelectElement;\r\n        this.datetimePickerService.viewYear(parseInt(target.value, 10));\r\n    }\r\n\r\n    setMonth(event: Event) {\r\n        const target = event.target as HTMLSelectElement;\r\n        this.datetimePickerService.viewMonth(parseInt(target.value, 10));\r\n    }\r\n\r\n    selectDay(day: DayCell) {\r\n        if (day.disabled) {\r\n            return;\r\n        }\r\n        day.select();\r\n    }\r\n\r\n    clearValue() {\r\n        this.datetimePickerService.selectDatetime(null);\r\n    }\r\n\r\n    handleCalendarKeydown(event: KeyboardEvent) {\r\n        switch (event.key) {\r\n            case 'ArrowDown':\r\n                return this.datetimePickerService.viewJumpDown();\r\n            case 'ArrowUp':\r\n                return this.datetimePickerService.viewJumpUp();\r\n            case 'ArrowRight':\r\n                return this.datetimePickerService.viewJumpRight();\r\n            case 'ArrowLeft':\r\n                return this.datetimePickerService.viewJumpLeft();\r\n            case 'Enter':\r\n                return this.datetimePickerService.selectViewed();\r\n        }\r\n    }\r\n\r\n    setHour(event: Event) {\r\n        const target = event.target as HTMLSelectElement;\r\n        this.datetimePickerService.selectHour(parseInt(target.value, 10));\r\n    }\r\n\r\n    setMinute(event: Event) {\r\n        const target = event.target as HTMLSelectElement;\r\n        this.datetimePickerService.selectMinute(parseInt(target.value, 10));\r\n    }\r\n\r\n    closeDatepicker() {\r\n        this.dropdownComponent.toggleOpen();\r\n        this.datetimeInput.nativeElement.focus();\r\n    }\r\n\r\n    private populateYearsSelection() {\r\n        const yearRange = this.yearRange ?? 10;\r\n        const currentYear = new Date().getFullYear();\r\n        const min = (this.min && new Date(this.min).getFullYear()) || currentYear - yearRange;\r\n        const max = (this.max && new Date(this.max).getFullYear()) || currentYear + yearRange;\r\n        const spread = max - min + 1;\r\n        this.years = Array.from({ length: spread }).map((_, i) => min + i);\r\n    }\r\n\r\n    private populateWeekdays() {\r\n        const weekStartDayIndex = dayOfWeekIndex[this.weekStartDay];\r\n        for (let i = 0; i < 7; i++) {\r\n            this.weekdays.push(weekDayNames[(i + weekStartDayIndex + 0) % 7]);\r\n        }\r\n    }\r\n\r\n    private populateHours() {\r\n        this.hours = Array.from({ length: 24 }).map((_, i) => i);\r\n    }\r\n\r\n    private populateMinutes() {\r\n        const minutes: number[] = [];\r\n        for (let i = 0; i < 60; i += this.timeGranularityInterval) {\r\n            minutes.push(i);\r\n        }\r\n        this.minutes = minutes;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, Input } from '@angular/core';\r\n\r\n/**\r\n * @description\r\n * Used for building dropdown menus.\r\n *\r\n * @example\r\n * ```HTML\r\n * <vdr-dropdown>\r\n *   <button class=\"btn btn-outline\" vdrDropdownTrigger>\r\n *       <clr-icon shape=\"plus\"></clr-icon>\r\n *       Select type\r\n *   </button>\r\n *   <vdr-dropdown-menu vdrPosition=\"bottom-left\">\r\n *     <button\r\n *       *ngFor=\"let typeName of allTypes\"\r\n *       type=\"button\"\r\n *       vdrDropdownItem\r\n *       (click)=\"selectType(typeName)\"\r\n *     >\r\n *       typeName\r\n *     </button>\r\n *   </vdr-dropdown-menu>\r\n * </vdr-dropdown>\r\n * ```\r\n * @docsCategory components\r\n */\r\n@Component({\r\n    selector: 'vdr-dropdown',\r\n    templateUrl: './dropdown.component.html',\r\n    styleUrls: ['./dropdown.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DropdownComponent {\r\n    private isOpen = false;\r\n    private onOpenChangeCallbacks: Array<(isOpen: boolean) => void> = [];\r\n    public trigger: ElementRef;\r\n    @Input() manualToggle = false;\r\n\r\n    onClick() {\r\n        if (!this.manualToggle) {\r\n            this.toggleOpen();\r\n        }\r\n    }\r\n\r\n    toggleOpen() {\r\n        this.isOpen = !this.isOpen;\r\n        this.onOpenChangeCallbacks.forEach(fn => fn(this.isOpen));\r\n    }\r\n\r\n    onOpenChange(callback: (isOpen: boolean) => void) {\r\n        this.onOpenChangeCallbacks.push(callback);\r\n    }\r\n\r\n    setTriggerElement(elementRef: ElementRef) {\r\n        this.trigger = elementRef;\r\n    }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\nimport { DropdownComponent } from './dropdown.component';\r\n\r\n@Directive({\r\n    selector: '[vdrDropdownItem]',\r\n    // tslint:disable-next-line\r\n    host: { '[class.dropdown-item]': 'true' },\r\n})\r\nexport class DropdownItemDirective {\r\n    constructor(private dropdown: DropdownComponent) {}\r\n\r\n    @HostListener('click', ['$event'])\r\n    onDropdownItemClick(event: any): void {\r\n        this.dropdown.onClick();\r\n    }\r\n}\r\n","import {\n    ConnectedPosition,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayRef,\n    PositionStrategy,\n    VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ElementRef,\n    Input,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DropdownTriggerDirective } from './dropdown-trigger.directive';\nimport { DropdownComponent } from './dropdown.component';\n\nexport type DropdownPosition = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\n/**\n * A dropdown menu modelled on the Clarity Dropdown component (https://v1.clarity.design/dropdowns).\n *\n * This was created because the Clarity implementation (at this time) does not handle edge detection. Instead\n * we make use of the Angular CDK's Overlay module to manage the positioning.\n *\n * The API of this component (and its related Components & Directives) are based on the Clarity version,\n * albeit only a subset which is currently used in this application.\n */\n@Component({\n    selector: 'vdr-dropdown-menu',\n    template: `\n        <ng-template #menu>\n            <div class=\"dropdown open\">\n                <div class=\"dropdown-menu\">\n                    <div class=\"dropdown-content-wrapper\">\n                        <ng-content></ng-content>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styleUrls: ['./dropdown-menu.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DropdownMenuComponent implements AfterViewInit, OnInit, OnDestroy {\n    @Input('vdrPosition') private position: DropdownPosition = 'bottom-left';\n    @ViewChild('menu', { static: true }) private menuTemplate: TemplateRef<any>;\n    private menuPortal: TemplatePortal<any>;\n    private overlayRef: OverlayRef;\n    private backdropClickSub: Subscription;\n\n    constructor(\n        private overlay: Overlay,\n        private viewContainerRef: ViewContainerRef,\n        private dropdown: DropdownComponent,\n    ) {}\n\n    ngOnInit(): void {\n        this.dropdown.onOpenChange(isOpen => {\n            if (isOpen) {\n                this.overlayRef.attach(this.menuPortal);\n            } else {\n                this.overlayRef.detach();\n            }\n        });\n    }\n\n    ngAfterViewInit() {\n        this.overlayRef = this.overlay.create({\n            hasBackdrop: true,\n            backdropClass: 'clear-backdrop',\n            positionStrategy: this.getPositionStrategy(),\n            maxHeight: '70vh',\n        });\n        this.menuPortal = new TemplatePortal(this.menuTemplate, this.viewContainerRef);\n        this.backdropClickSub = this.overlayRef.backdropClick().subscribe(() => {\n            this.dropdown.toggleOpen();\n        });\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        if (this.backdropClickSub) {\n            this.backdropClickSub.unsubscribe();\n        }\n    }\n\n    private getPositionStrategy(): PositionStrategy {\n        const position: { [K in DropdownPosition]: ConnectedPosition } = {\n            ['top-left']: {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n            ['top-right']: {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom',\n            },\n            ['bottom-left']: {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            ['bottom-right']: {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top',\n            },\n        };\n\n        const pos = position[this.position];\n\n        return this.overlay\n            .position()\n            .flexibleConnectedTo(this.dropdown.trigger)\n            .withPositions([pos, this.invertPosition(pos)])\n            .withViewportMargin(12)\n            .withPush(true);\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(pos: ConnectedPosition): ConnectedPosition {\n        const inverted = { ...pos };\n        inverted.originY = pos.originY === 'top' ? 'bottom' : 'top';\n        inverted.overlayY = pos.overlayY === 'top' ? 'bottom' : 'top';\n\n        return inverted;\n    }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\nimport { DropdownComponent } from './dropdown.component';\r\n\r\n@Directive({\r\n    selector: '[vdrDropdownTrigger]',\r\n})\r\nexport class DropdownTriggerDirective {\r\n    constructor(private dropdown: DropdownComponent, private elementRef: ElementRef) {\r\n        dropdown.setTriggerElement(this.elementRef);\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onDropdownTriggerClick(event: any): void {\r\n        this.dropdown.toggleOpen();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\nimport { Dialog } from '../../../providers/modal/modal.service';\r\n\r\n@Component({\r\n    selector: 'vdr-edit-note-dialog',\r\n    templateUrl: './edit-note-dialog.component.html',\r\n    styleUrls: ['./edit-note-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class EditNoteDialogComponent implements Dialog<{ note: string; isPrivate?: boolean }> {\r\n    displayPrivacyControls = true;\r\n    noteIsPrivate = true;\r\n    note = '';\r\n    resolveWith: (result?: { note: string; isPrivate?: boolean }) => void;\r\n\r\n    confirm() {\r\n        this.resolveWith({\r\n            note: this.note,\r\n            isPrivate: this.noteIsPrivate,\r\n        });\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-empty-placeholder',\r\n    templateUrl: './empty-placeholder.component.html',\r\n    styleUrls: ['./empty-placeholder.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class EmptyPlaceholderComponent {\r\n    @Input() emptyStateLabel: string;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-entity-info',\r\n    templateUrl: './entity-info.component.html',\r\n    styleUrls: ['./entity-info.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class EntityInfoComponent {\r\n    @Input() small = false;\r\n    @Input() entity: { id: string; createdAt?: string; updatedAt?: string };\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { ActiveRouteData, ExtensionMessage, MessageResponse } from '@vendure/common/lib/extension-host-types';\r\nimport { assertNever } from '@vendure/common/lib/shared-utils';\r\nimport { parse } from 'graphql';\r\nimport { merge, Observer, Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\nimport { DataService } from '../../../data/providers/data.service';\r\nimport { NotificationService } from '../../../providers/notification/notification.service';\r\n\r\n@Injectable()\r\nexport class ExtensionHostService implements OnDestroy {\r\n    private extensionWindow: Window;\r\n    private routeSnapshot: ActivatedRouteSnapshot;\r\n    private cancellationMessage$ = new Subject<string>();\r\n    private destroyMessage$ = new Subject<void>();\r\n\r\n    constructor(private dataService: DataService, private notificationService: NotificationService) {}\r\n\r\n    init(extensionWindow: Window, routeSnapshot: ActivatedRouteSnapshot) {\r\n        this.extensionWindow = extensionWindow;\r\n        this.routeSnapshot = routeSnapshot;\r\n        window.addEventListener('message', this.handleMessage);\r\n    }\r\n\r\n    destroy() {\r\n        window.removeEventListener('message', this.handleMessage);\r\n        this.destroyMessage$.next();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    private handleMessage = (message: MessageEvent<ExtensionMessage>) => {\r\n        const { data, origin } = message;\r\n        if (this.isExtensionMessage(data)) {\r\n            const cancellation$ = this.cancellationMessage$.pipe(\r\n                filter(requestId => requestId === data.requestId),\r\n            );\r\n            const end$ = merge(cancellation$, this.destroyMessage$);\r\n            switch (data.type) {\r\n                case 'cancellation': {\r\n                    this.cancellationMessage$.next(data.requestId);\r\n                    break;\r\n                }\r\n                case 'destroy': {\r\n                    this.destroyMessage$.next();\r\n                    break;\r\n                }\r\n                case 'active-route': {\r\n                    const routeData: ActiveRouteData = {\r\n                        url: window.location.href,\r\n                        origin: window.location.origin,\r\n                        pathname: window.location.pathname,\r\n                        params: this.routeSnapshot.params,\r\n                        queryParams: this.routeSnapshot.queryParams,\r\n                        fragment: this.routeSnapshot.fragment,\r\n                    };\r\n                    this.sendMessage(\r\n                        { data: routeData, error: false, complete: false, requestId: data.requestId },\r\n                        origin,\r\n                    );\r\n                    this.sendMessage(\r\n                        { data: null, error: false, complete: true, requestId: data.requestId },\r\n                        origin,\r\n                    );\r\n                    break;\r\n                }\r\n                case 'graphql-query': {\r\n                    const { document, variables, fetchPolicy } = data.data;\r\n                    this.dataService\r\n                        .query(parse(document), variables, fetchPolicy)\r\n                        .stream$.pipe(takeUntil(end$))\r\n                        .subscribe(this.createObserver(data.requestId, origin));\r\n                    break;\r\n                }\r\n                case 'graphql-mutation': {\r\n                    const { document, variables } = data.data;\r\n                    this.dataService\r\n                        .mutate(parse(document), variables)\r\n                        .pipe(takeUntil(end$))\r\n                        .subscribe(this.createObserver(data.requestId, origin));\r\n                    break;\r\n                }\r\n                case 'notification': {\r\n                    this.notificationService.notify(data.data);\r\n                    break;\r\n                }\r\n                default:\r\n                    assertNever(data);\r\n            }\r\n        }\r\n    };\r\n\r\n    private createObserver(requestId: string, origin: string): Observer<any> {\r\n        return {\r\n            next: data => this.sendMessage({ data, error: false, complete: false, requestId }, origin),\r\n            error: err => this.sendMessage({ data: err, error: true, complete: false, requestId }, origin),\r\n            complete: () => this.sendMessage({ data: null, error: false, complete: true, requestId }, origin),\r\n        };\r\n    }\r\n\r\n    private sendMessage(response: MessageResponse, origin: string) {\r\n        this.extensionWindow.postMessage(response, origin);\r\n    }\r\n\r\n    private isExtensionMessage(input: any): input is ExtensionMessage {\r\n        return (\r\n            input.hasOwnProperty('type') && input.hasOwnProperty('data') && input.hasOwnProperty('requestId')\r\n        );\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { ExtensionHostConfig } from './extension-host-config';\r\nimport { ExtensionHostService } from './extension-host.service';\r\n\r\n/**\r\n * This component uses an iframe to embed an external url into the Admin UI, and uses the PostMessage\r\n * protocol to allow cross-frame communication between the two frames.\r\n */\r\n@Component({\r\n    selector: 'vdr-extension-host',\r\n    templateUrl: './extension-host.component.html',\r\n    styleUrls: ['./extension-host.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    providers: [ExtensionHostService],\r\n})\r\nexport class ExtensionHostComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    extensionUrl: SafeResourceUrl;\r\n    openInIframe = true;\r\n    extensionWindowIsOpen = false;\r\n    private config: ExtensionHostConfig;\r\n    private extensionWindow?: Window;\r\n    @ViewChild('extensionFrame') private extensionFrame: ElementRef<HTMLIFrameElement>;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private sanitizer: DomSanitizer,\r\n        private extensionHostService: ExtensionHostService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        const { data } = this.route.snapshot;\r\n        if (!this.isExtensionHostConfig(data.extensionHostConfig)) {\r\n            throw new Error(\r\n                `Expected an ExtensionHostConfig object, got ${JSON.stringify(data.extensionHostConfig)}`,\r\n            );\r\n        }\r\n        this.config = data.extensionHostConfig;\r\n        this.openInIframe = !this.config.openInNewTab;\r\n        this.extensionUrl = this.sanitizer.bypassSecurityTrustResourceUrl(\r\n            this.config.extensionUrl || 'about:blank',\r\n        );\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.openInIframe) {\r\n            const extensionWindow = this.extensionFrame.nativeElement.contentWindow;\r\n            if (extensionWindow) {\r\n                this.extensionHostService.init(extensionWindow, this.route.snapshot);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.extensionWindow) {\r\n            this.extensionWindow.close();\r\n        }\r\n    }\r\n\r\n    launchExtensionWindow() {\r\n        const extensionWindow = window.open(this.config.extensionUrl);\r\n        if (!extensionWindow) {\r\n            return;\r\n        }\r\n        this.extensionHostService.init(extensionWindow, this.route.snapshot);\r\n        this.extensionWindowIsOpen = true;\r\n        this.extensionWindow = extensionWindow;\r\n\r\n        let timer: number;\r\n        function pollWindowState(extwindow: Window, onClosed: () => void) {\r\n            if (extwindow.closed) {\r\n                window.clearTimeout(timer);\r\n                onClosed();\r\n            } else {\r\n                timer = window.setTimeout(() => pollWindowState(extwindow, onClosed), 250);\r\n            }\r\n        }\r\n\r\n        pollWindowState(extensionWindow, () => {\r\n            this.extensionWindowIsOpen = false;\r\n            this.extensionHostService.destroy();\r\n        });\r\n    }\r\n\r\n    private isExtensionHostConfig(input: any): input is ExtensionHostConfig {\r\n        return input.hasOwnProperty('extensionUrl');\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { FacetValue } from '../../../common/generated-types';\r\n\r\n@Component({\r\n    selector: 'vdr-facet-value-chip',\r\n    templateUrl: './facet-value-chip.component.html',\r\n    styleUrls: ['./facet-value-chip.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FacetValueChipComponent {\r\n    @Input() facetValue: FacetValue.Fragment;\r\n    @Input() removable = true;\r\n    @Input() displayFacetName = true;\r\n    @Output() remove = new EventEmitter<void>();\r\n}\r\n","import { FacetValue, FacetWithValues } from '../generated-types';\r\n\r\nexport function flattenFacetValues(facetsWithValues: FacetWithValues.Fragment[]): FacetValue.Fragment[] {\r\n    return facetsWithValues.reduce(\r\n        (flattened, facet) => flattened.concat(facet.values),\r\n        [] as FacetValue.Fragment[],\r\n    );\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { NgSelectComponent } from '@ng-select/ng-select';\r\n\r\nimport { FacetValue, FacetWithValues } from '../../../common/generated-types';\r\nimport { flattenFacetValues } from '../../../common/utilities/flatten-facet-values';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\nexport type FacetValueSeletorItem = {\r\n    name: string;\r\n    facetName: string;\r\n    id: string;\r\n    value: FacetValue.Fragment;\r\n};\r\n\r\n/**\r\n * @description\r\n * A form control for selecting facet values.\r\n *\r\n * @example\r\n * ```HTML\r\n * <vdr-facet-value-selector\r\n *   [facets]=\"facets\"\r\n *   (selectedValuesChange)=\"selectedValues = $event\"\r\n * ></vdr-facet-value-selector>\r\n * ```\r\n * The `facets` input should be provided from the parent component\r\n * like this:\r\n *\r\n * @example\r\n * ```TypeScript\r\n * this.facets = this.dataService\r\n *   .facet.getAllFacets()\r\n *   .mapSingle(data => data.facets.items);\r\n * ```\r\n * @docsCategory components\r\n */\r\n@Component({\r\n    selector: 'vdr-facet-value-selector',\r\n    templateUrl: './facet-value-selector.component.html',\r\n    styleUrls: ['./facet-value-selector.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: FacetValueSelectorComponent,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class FacetValueSelectorComponent implements OnInit, ControlValueAccessor {\r\n    @Output() selectedValuesChange = new EventEmitter<FacetValue.Fragment[]>();\r\n    @Input() facets: FacetWithValues.Fragment[];\r\n    @Input() readonly = false;\r\n\r\n    @ViewChild(NgSelectComponent) private ngSelect: NgSelectComponent;\r\n\r\n    facetValues: FacetValueSeletorItem[] = [];\r\n    onChangeFn: (val: any) => void;\r\n    onTouchFn: () => void;\r\n    disabled = false;\r\n    value: string[];\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.facetValues = flattenFacetValues(this.facets).map(this.toSelectorItem);\r\n    }\r\n\r\n    onChange(selected: FacetValueSeletorItem[]) {\r\n        if (this.readonly) {\r\n            return;\r\n        }\r\n        this.selectedValuesChange.emit(selected.map(s => s.value));\r\n        if (this.onChangeFn) {\r\n            this.onChangeFn(JSON.stringify(selected.map(s => s.id)));\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChangeFn = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouchFn = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    focus() {\r\n        this.ngSelect.focus();\r\n    }\r\n\r\n    writeValue(obj: string | FacetValue.Fragment[] | Array<string | number> | null): void {\r\n        if (typeof obj === 'string') {\r\n            try {\r\n                const facetIds = JSON.parse(obj) as string[];\r\n                this.value = facetIds;\r\n            } catch (err) {\r\n                // TODO: log error\r\n                throw err;\r\n            }\r\n        } else if (Array.isArray(obj)) {\r\n            const isIdArray = (input: unknown[]): input is Array<string | number> =>\r\n                input.every(i => typeof i === 'number' || typeof i === 'string');\r\n            if (isIdArray(obj)) {\r\n                this.value = obj.map(fv => fv.toString());\r\n            } else {\r\n                this.value = obj.map(fv => fv.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    private toSelectorItem = (facetValue: FacetValue.Fragment): FacetValueSeletorItem => {\r\n        return {\r\n            name: facetValue.name,\r\n            facetName: facetValue.facet.name,\r\n            id: facetValue.id,\r\n            value: facetValue,\r\n        };\r\n    };\r\n}\r\n","import { CdkDragEnd } from '@angular/cdk/drag-drop';\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Input,\r\n    Output,\r\n    ViewChild,\r\n} from '@angular/core';\r\n\r\nexport type Point = { x: number; y: number };\r\n\r\n@Component({\r\n    selector: 'vdr-focal-point-control',\r\n    templateUrl: './focal-point-control.component.html',\r\n    styleUrls: ['./focal-point-control.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FocalPointControlComponent {\r\n    @Input() visible = false;\r\n    @Input() editable = false;\r\n    @HostBinding('style.width.px')\r\n    @Input()\r\n    width: number;\r\n    @HostBinding('style.height.px')\r\n    @Input()\r\n    height: number;\r\n    @Input() fpx = 0.5;\r\n    @Input() fpy = 0.5;\r\n    @Output() focalPointChange = new EventEmitter<Point>();\r\n\r\n    @ViewChild('frame', { static: true }) frame: ElementRef<HTMLDivElement>;\r\n    @ViewChild('dot', { static: true }) dot: ElementRef<HTMLDivElement>;\r\n\r\n    get initialPosition(): Point {\r\n        return this.focalPointToOffset(this.fpx == null ? 0.5 : this.fpx, this.fpy == null ? 0.5 : this.fpy);\r\n    }\r\n\r\n    onDragEnded(event: CdkDragEnd) {\r\n        const { x, y } = this.getCurrentFocalPoint();\r\n        this.fpx = x;\r\n        this.fpy = y;\r\n        this.focalPointChange.emit({ x, y });\r\n    }\r\n\r\n    private getCurrentFocalPoint(): Point {\r\n        const { left: dotLeft, top: dotTop, width, height } = this.dot.nativeElement.getBoundingClientRect();\r\n        const { left: frameLeft, top: frameTop } = this.frame.nativeElement.getBoundingClientRect();\r\n        const xInPx = dotLeft - frameLeft + width / 2;\r\n        const yInPx = dotTop - frameTop + height / 2;\r\n        return {\r\n            x: xInPx / this.width,\r\n            y: yInPx / this.height,\r\n        };\r\n    }\r\n\r\n    private focalPointToOffset(x: number, y: number): Point {\r\n        const { width, height } = this.dot.nativeElement.getBoundingClientRect();\r\n        return {\r\n            x: x * this.width - width / 2,\r\n            y: y * this.height - height / 2,\r\n        };\r\n    }\r\n}\r\n","import { Directive, ElementRef, Optional } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\ntype InputElement = HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\r\n\r\n// tslint:disable:directive-selector\r\n@Directive({ selector: 'input, textarea, select' })\r\nexport class FormFieldControlDirective {\r\n    constructor(\r\n        private elementRef: ElementRef<InputElement>,\r\n        @Optional() public formControlName: NgControl,\r\n    ) {}\r\n\r\n    get valid(): boolean {\r\n        return !!this.formControlName && !!this.formControlName.valid;\r\n    }\r\n\r\n    get touched(): boolean {\r\n        return !!this.formControlName && !!this.formControlName.touched;\r\n    }\r\n\r\n    setReadOnly(value: boolean) {\r\n        const input = this.elementRef.nativeElement;\r\n        if (isSelectElement(input)) {\r\n            input.disabled = value;\r\n        } else {\r\n            input.readOnly = value;\r\n        }\r\n    }\r\n}\r\n\r\nfunction isSelectElement(value: InputElement): value is HTMLSelectElement {\r\n    return value.hasOwnProperty('selectedIndex');\r\n}\r\n","import {\r\n    AfterContentInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ContentChild,\r\n    Input,\r\n    OnInit,\r\n} from '@angular/core';\r\n\r\nimport { FormFieldControlDirective } from './form-field-control.directive';\r\n\r\n/**\r\n * A form field wrapper which handles the correct layout and validation error display for\r\n * a form control.\r\n */\r\n@Component({\r\n    selector: 'vdr-form-field',\r\n    templateUrl: './form-field.component.html',\r\n    styleUrls: ['./form-field.component.scss'],\r\n})\r\nexport class FormFieldComponent implements OnInit {\r\n    @Input() label: string;\r\n    @Input() for: string;\r\n    @Input() tooltip: string;\r\n    /**\r\n     * A map of error message codes (required, pattern etc.) to messages to display\r\n     * when those errors are present.\r\n     */\r\n    @Input() errors: { [key: string]: string } = {};\r\n    /**\r\n     * If set to true, the input will be initially set to \"readOnly\", and an \"edit\" button\r\n     * will be displayed which allows the field to be edited.\r\n     */\r\n    @Input() readOnlyToggle = false;\r\n    @ContentChild(FormFieldControlDirective, { static: true }) formFieldControl: FormFieldControlDirective;\r\n    isReadOnly = false;\r\n\r\n    ngOnInit() {\r\n        if (this.readOnlyToggle) {\r\n            this.isReadOnly = true;\r\n            this.setReadOnly(true);\r\n        }\r\n        this.isReadOnly = this.readOnlyToggle;\r\n    }\r\n\r\n    setReadOnly(value: boolean) {\r\n        this.formFieldControl.setReadOnly(value);\r\n        this.isReadOnly = value;\r\n    }\r\n\r\n    getErrorMessage(): string | undefined {\r\n        if (!this.formFieldControl || !this.formFieldControl.formControlName) {\r\n            return;\r\n        }\r\n        const errors = this.formFieldControl.formControlName.errors;\r\n        if (errors) {\r\n            for (const errorKey of Object.keys(errors)) {\r\n                if (this.errors[errorKey]) {\r\n                    return this.errors[errorKey];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n/**\r\n * Like the {@link FormFieldComponent} but for content which is not a form control. Used\r\n * to keep a consistent layout with other form fields in the form.\r\n */\r\n@Component({\r\n    selector: 'vdr-form-item',\r\n    templateUrl: './form-item.component.html',\r\n    styleUrls: ['./form-item.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FormItemComponent {\r\n    @Input() label: string;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { AddressFragment, OrderAddress } from '../../../common/generated-types';\r\n\r\n@Component({\r\n    selector: 'vdr-formatted-address',\r\n    templateUrl: './formatted-address.component.html',\r\n    styleUrls: ['./formatted-address.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FormattedAddressComponent {\r\n    @Input() address: AddressFragment | OrderAddress;\r\n\r\n    getCountryName(): string {\r\n        if (this.isAddressFragment(this.address)) {\r\n            return this.address.country.name;\r\n        } else {\r\n            return this.address.country || '';\r\n        }\r\n    }\r\n\r\n    getCustomFields(): Array<{ key: string; value: any }> {\r\n        const customFields = (this.address as any).customFields;\r\n        if (customFields) {\r\n            return Object.entries(customFields)\r\n                .filter(([key]) => key !== '__typename')\r\n                .map(([key, value]) => ({ key, value: (value as any)?.toString() ?? '-' }));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    private isAddressFragment(input: AddressFragment | OrderAddress): input is AddressFragment {\r\n        return typeof input.country !== 'string';\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'vdr-help-tooltip',\n    templateUrl: './help-tooltip.component.html',\n    styleUrls: ['./help-tooltip.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HelpTooltipComponent {\n    @Input() content: string;\n    @Input() position: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left' | 'right' | 'left';\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-history-entry-detail',\r\n    templateUrl: './history-entry-detail.component.html',\r\n    styleUrls: ['./history-entry-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HistoryEntryDetailComponent {}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n/**\r\n * A control for setting the number of items per page in a paginated list.\r\n */\r\n@Component({\r\n    selector: 'vdr-items-per-page-controls',\r\n    templateUrl: './items-per-page-controls.component.html',\r\n    styleUrls: ['./items-per-page-controls.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ItemsPerPageControlsComponent {\r\n    @Input() itemsPerPage = 10;\r\n    @Output() itemsPerPageChange = new EventEmitter<number>();\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-labeled-data',\r\n    templateUrl: './labeled-data.component.html',\r\n    styleUrls: ['./labeled-data.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LabeledDataComponent {\r\n    @Input() label: string;\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { LanguageCode } from '../../../common/generated-types';\r\n\r\n@Component({\r\n    selector: 'vdr-language-selector',\r\n    templateUrl: './language-selector.component.html',\r\n    styleUrls: ['./language-selector.component.scss'],\r\n})\r\nexport class LanguageSelectorComponent {\r\n    @Input() currentLanguageCode: LanguageCode;\r\n    @Input() availableLanguageCodes: LanguageCode[];\r\n    @Input() disabled = false;\r\n    @Output() languageCodeChange = new EventEmitter<LanguageCode>();\r\n}\r\n","import { Directive, OnInit, TemplateRef } from '@angular/core';\r\n\r\nimport { ModalDialogComponent } from './modal-dialog.component';\r\n\r\n/**\r\n * A helper directive used to correctly embed the modal buttons in the {@link ModalDialogComponent}.\r\n */\r\n@Directive({ selector: '[vdrDialogButtons]' })\r\nexport class DialogButtonsDirective implements OnInit {\r\n    constructor(private modal: ModalDialogComponent<any>, private templateRef: TemplateRef<any>) {}\r\n\r\n    ngOnInit() {\r\n        // setTimeout due to https://github.com/angular/angular/issues/15634\r\n        setTimeout(() => this.modal.registerButtonsTemplate(this.templateRef));\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ComponentFactoryResolver,\r\n    EventEmitter,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n    Type,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\n\r\n/**\r\n * A helper component used to embed a component instance into the {@link ModalDialogComponent}\r\n */\r\n@Component({\r\n    selector: 'vdr-dialog-component-outlet',\r\n    template: ``,\r\n})\r\nexport class DialogComponentOutletComponent implements OnInit {\r\n    @Input() component: Type<any>;\r\n    @Output() create = new EventEmitter<any>();\r\n\r\n    constructor(\r\n        private viewContainerRef: ViewContainerRef,\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        const factory = this.componentFactoryResolver.resolveComponentFactory(this.component);\r\n        const componentRef = this.viewContainerRef.createComponent(factory);\r\n        this.create.emit(componentRef.instance);\r\n    }\r\n}\r\n","import { Directive, OnInit, TemplateRef } from '@angular/core';\r\n\r\nimport { ModalDialogComponent } from './modal-dialog.component';\r\n\r\n/**\r\n * A helper directive used to correctly embed the modal title in the {@link ModalDialogComponent}.\r\n */\r\n@Directive({ selector: '[vdrDialogTitle]' })\r\nexport class DialogTitleDirective implements OnInit {\r\n    constructor(private modal: ModalDialogComponent<any>, private templateRef: TemplateRef<any>) {}\r\n\r\n    ngOnInit() {\r\n        // setTimeout due to https://github.com/angular/angular/issues/15634\r\n        setTimeout(() => this.modal.registerTitleTemplate(this.templateRef));\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Optional,\r\n    SkipSelf,\r\n} from '@angular/core';\r\n\r\n/**\r\n * @description\r\n * This component displays a plain JavaScript object as an expandable tree.\r\n *\r\n * @example\r\n * ```HTML\r\n * <vdr-object-tree [value]=\"payment.metadata\"></vdr-object-tree>\r\n * ```\r\n *\r\n * @docsCategory components\r\n */\r\n@Component({\r\n    selector: 'vdr-object-tree',\r\n    templateUrl: './object-tree.component.html',\r\n    styleUrls: ['./object-tree.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ObjectTreeComponent implements OnChanges {\r\n    @Input() value: { [key: string]: any } | string;\r\n    @Input() isArrayItem = false;\r\n    depth: number;\r\n    expanded: boolean;\r\n    valueIsArray: boolean;\r\n    entries: Array<{ key: string; value: any }>;\r\n    constructor(@Optional() @SkipSelf() parent: ObjectTreeComponent) {\r\n        if (parent) {\r\n            this.depth = parent.depth + 1;\r\n        } else {\r\n            this.depth = 0;\r\n        }\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.entries = this.getEntries(this.value);\r\n        this.expanded = this.depth === 0 || this.isArrayItem;\r\n        this.valueIsArray = Object.keys(this.value).every(v => Number.isInteger(+v));\r\n    }\r\n\r\n    isObject(value: any): boolean {\r\n        return typeof value === 'object' && value !== null;\r\n    }\r\n\r\n    private getEntries(inputValue: { [key: string]: any } | string): Array<{ key: string; value: any }> {\r\n        if (!this.isObject(inputValue)) {\r\n            return [{ key: '', value: inputValue }];\r\n        }\r\n        return Object.entries(inputValue).map(([key, value]) => ({ key, value }));\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n/**\r\n * @description\r\n * Displays the state of an order in a colored chip.\r\n *\r\n * @example\r\n * ```HTML\r\n * <vdr-order-state-label [state]=\"order.state\"></vdr-order-state-label>\r\n * ```\r\n * @docsCategory components\r\n */\r\n@Component({\r\n    selector: 'vdr-order-state-label',\r\n    templateUrl: './order-state-label.component.html',\r\n    styleUrls: ['./order-state-label.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderStateLabelComponent {\r\n    @Input() state: string;\r\n\r\n    get chipColorType() {\r\n        switch (this.state) {\r\n            case 'AddingItems':\r\n            case 'ArrangingPayment':\r\n                return '';\r\n            case 'Delivered':\r\n                return 'success';\r\n            case 'Cancelled':\r\n                return 'error';\r\n            case 'PaymentAuthorized':\r\n            case 'PaymentSettled':\r\n            case 'PartiallyDelivered':\r\n            case 'PartiallyShipped':\r\n            case 'Shipped':\r\n            default:\r\n                return 'warning';\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-pagination-controls',\r\n    templateUrl: './pagination-controls.component.html',\r\n    styleUrls: ['./pagination-controls.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaginationControlsComponent {\r\n    @Input() id?: number;\r\n    @Input() currentPage: number;\r\n    @Input() itemsPerPage: number;\r\n    @Input() totalItems: number;\r\n    @Output() pageChange = new EventEmitter<number>();\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { NgSelectComponent } from '@ng-select/ng-select';\r\nimport { concat, merge, Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, mapTo, switchMap, tap, throttleTime } from 'rxjs/operators';\r\n\r\nimport { ProductSelectorSearch } from '../../../common/generated-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n/**\r\n * @description\r\n * A component for selecting product variants via an autocomplete-style select input.\r\n *\r\n * @example\r\n * ```HTML\r\n * <vdr-product-selector\r\n *   (productSelected)=\"selectResult($event)\"></vdr-product-selector>\r\n * ```\r\n *\r\n * @docsCategory components\r\n */\r\n@Component({\r\n    selector: 'vdr-product-selector',\r\n    templateUrl: './product-selector.component.html',\r\n    styleUrls: ['./product-selector.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductSelectorComponent implements OnInit {\r\n    searchInput$ = new Subject<string>();\r\n    searchLoading = false;\r\n    searchResults$: Observable<ProductSelectorSearch.Items[]>;\r\n    @Output() productSelected = new EventEmitter<ProductSelectorSearch.Items>();\r\n\r\n    @ViewChild('autoComplete', { static: true })\r\n    private ngSelect: NgSelectComponent;\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.initSearchResults();\r\n    }\r\n\r\n    private initSearchResults() {\r\n        const searchItems$ = this.searchInput$.pipe(\r\n            debounceTime(200),\r\n            distinctUntilChanged(),\r\n            tap(() => (this.searchLoading = true)),\r\n            switchMap(term => {\r\n                if (!term) {\r\n                    return of([]);\r\n                }\r\n                return this.dataService.product\r\n                    .productSelectorSearch(term, 10)\r\n                    .mapSingle(result => result.search.items);\r\n            }),\r\n            tap(() => (this.searchLoading = false)),\r\n        );\r\n\r\n        const clear$ = this.productSelected.pipe(mapTo([]));\r\n        this.searchResults$ = concat(of([]), merge(searchItems$, clear$));\r\n    }\r\n\r\n    selectResult(product?: ProductSelectorSearch.Items) {\r\n        if (product) {\r\n            this.productSelected.emit(product);\r\n            this.ngSelect.clearModel();\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { Dialog } from '../../../../providers/modal/modal.service';\r\n\r\nexport interface ExternalImageAttrs {\r\n    src: string;\r\n    title: string;\r\n    alt: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-external-image-dialog',\r\n    templateUrl: './external-image-dialog.component.html',\r\n    styleUrls: ['./external-image-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ExternalImageDialogComponent implements OnInit, Dialog<ExternalImageAttrs> {\r\n    form: FormGroup;\r\n\r\n    resolveWith: (result?: ExternalImageAttrs) => void;\r\n    previewLoaded = false;\r\n    existing?: ExternalImageAttrs;\r\n\r\n    ngOnInit(): void {\r\n        this.form = new FormGroup({\r\n            src: new FormControl(this.existing ? this.existing.src : '', Validators.required),\r\n            title: new FormControl(this.existing ? this.existing.title : ''),\r\n            alt: new FormControl(this.existing ? this.existing.alt : ''),\r\n        });\r\n    }\r\n\r\n    select() {\r\n        this.resolveWith(this.form.value);\r\n    }\r\n\r\n    onImageLoad(event: Event) {\r\n        this.previewLoaded = true;\r\n    }\r\n\r\n    onImageError(event: Event) {\r\n        this.previewLoaded = false;\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { Dialog } from '../../../../providers/modal/modal.service';\r\n\r\nexport interface LinkAttrs {\r\n    href: string;\r\n    title: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-link-dialog',\r\n    templateUrl: './link-dialog.component.html',\r\n    styleUrls: ['./link-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LinkDialogComponent implements OnInit, Dialog<LinkAttrs> {\r\n    form: FormGroup;\r\n\r\n    resolveWith: (result?: LinkAttrs) => void;\r\n    existing?: LinkAttrs;\r\n\r\n    ngOnInit(): void {\r\n        this.form = new FormGroup({\r\n            href: new FormControl(this.existing ? this.existing.href : '', Validators.required),\r\n            title: new FormControl(this.existing ? this.existing.title : ''),\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        this.resolveWith({\r\n            title: '',\r\n            href: '',\r\n        });\r\n    }\r\n\r\n    select() {\r\n        this.resolveWith(this.form.value);\r\n    }\r\n}\r\n","import {\r\n    ellipsis,\r\n    emDash,\r\n    inputRules,\r\n    smartQuotes,\r\n    textblockTypeInputRule,\r\n    wrappingInputRule,\r\n} from 'prosemirror-inputrules';\r\nimport { NodeType, Schema } from 'prosemirror-model';\r\nimport { Plugin } from 'prosemirror-state';\r\n\r\n// : (NodeType) → InputRule\r\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\r\n// at the start of a textblock into a blockquote.\r\nexport function blockQuoteRule(nodeType) {\r\n    return wrappingInputRule(/^\\s*>\\s$/, nodeType);\r\n}\r\n\r\n// : (NodeType) → InputRule\r\n// Given a list node type, returns an input rule that turns a number\r\n// followed by a dot at the start of a textblock into an ordered list.\r\nexport function orderedListRule(nodeType) {\r\n    return wrappingInputRule(\r\n        /^(\\d+)\\.\\s$/,\r\n        nodeType,\r\n        match => ({ order: +match[1] }),\r\n        (match, node) => node.childCount + node.attrs.order === +match[1],\r\n    );\r\n}\r\n\r\n// : (NodeType) → InputRule\r\n// Given a list node type, returns an input rule that turns a bullet\r\n// (dash, plush, or asterisk) at the start of a textblock into a\r\n// bullet list.\r\nexport function bulletListRule(nodeType) {\r\n    return wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType);\r\n}\r\n\r\n// : (NodeType) → InputRule\r\n// Given a code block node type, returns an input rule that turns a\r\n// textblock starting with three backticks into a code block.\r\nexport function codeBlockRule(nodeType) {\r\n    return textblockTypeInputRule(/^```$/, nodeType);\r\n}\r\n\r\n// : (NodeType, number) → InputRule\r\n// Given a node type and a maximum level, creates an input rule that\r\n// turns up to that number of `#` characters followed by a space at\r\n// the start of a textblock into a heading whose level corresponds to\r\n// the number of `#` signs.\r\nexport function headingRule(nodeType, maxLevel) {\r\n    return textblockTypeInputRule(new RegExp('^(#{1,' + maxLevel + '})\\\\s$'), nodeType, match => ({\r\n        level: match[1].length,\r\n    }));\r\n}\r\n\r\n// : (Schema) → Plugin\r\n// A set of input rules for creating the basic block quotes, lists,\r\n// code blocks, and heading.\r\nexport function buildInputRules(schema: Schema): Plugin {\r\n    const rules = smartQuotes.concat(ellipsis, emDash);\r\n    let type: NodeType;\r\n    // tslint:disable:no-conditional-assignment\r\n    if ((type = schema.nodes.blockquote)) {\r\n        rules.push(blockQuoteRule(type));\r\n    }\r\n    if ((type = schema.nodes.ordered_list)) {\r\n        rules.push(orderedListRule(type));\r\n    }\r\n    if ((type = schema.nodes.bullet_list)) {\r\n        rules.push(bulletListRule(type));\r\n    }\r\n    if ((type = schema.nodes.code_block)) {\r\n        rules.push(codeBlockRule(type));\r\n    }\r\n    if ((type = schema.nodes.heading)) {\r\n        rules.push(headingRule(type, 6));\r\n    }\r\n    return inputRules({ rules });\r\n}\r\n","import {\r\n    chainCommands,\r\n    exitCode,\r\n    joinDown,\r\n    joinUp,\r\n    lift,\r\n    selectParentNode,\r\n    setBlockType,\r\n    toggleMark,\r\n    wrapIn,\r\n} from 'prosemirror-commands';\r\nimport { redo, undo } from 'prosemirror-history';\r\nimport { undoInputRule } from 'prosemirror-inputrules';\r\nimport { MarkType, NodeType, Schema } from 'prosemirror-model';\r\nimport { liftListItem, sinkListItem, splitListItem, wrapInList } from 'prosemirror-schema-list';\r\n\r\nimport { Keymap } from './types';\r\n\r\nconst mac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false;\r\n\r\n// :: (Schema, ?Object) → Object\r\n// Inspect the given schema looking for marks and nodes from the\r\n// basic schema, and if found, add key bindings related to them.\r\n// This will add:\r\n//\r\n// * **Mod-b** for toggling [strong](#schema-basic.StrongMark)\r\n// * **Mod-i** for toggling [emphasis](#schema-basic.EmMark)\r\n// * **Mod-`** for toggling [code font](#schema-basic.CodeMark)\r\n// * **Ctrl-Shift-0** for making the current textblock a paragraph\r\n// * **Ctrl-Shift-1** to **Ctrl-Shift-Digit6** for making the current\r\n//   textblock a heading of the corresponding level\r\n// * **Ctrl-Shift-Backslash** to make the current textblock a code block\r\n// * **Ctrl-Shift-8** to wrap the selection in an ordered list\r\n// * **Ctrl-Shift-9** to wrap the selection in a bullet list\r\n// * **Ctrl->** to wrap the selection in a block quote\r\n// * **Enter** to split a non-empty textblock in a list item while at\r\n//   the same time splitting the list item\r\n// * **Mod-Enter** to insert a hard break\r\n// * **Mod-_** to insert a horizontal rule\r\n// * **Backspace** to undo an input rule\r\n// * **Alt-ArrowUp** to `joinUp`\r\n// * **Alt-ArrowDown** to `joinDown`\r\n// * **Mod-BracketLeft** to `lift`\r\n// * **Escape** to `selectParentNode`\r\n//\r\n// You can suppress or map these bindings by passing a `mapKeys`\r\n// argument, which maps key names (say `\"Mod-B\"` to either `false`, to\r\n// remove the binding, or a new key name string.\r\nexport function buildKeymap(schema: Schema, mapKeys?: Keymap) {\r\n    const keys = {};\r\n    let type: MarkType | NodeType;\r\n    function bind(key: string, cmd: (...args: any[]) => boolean) {\r\n        if (mapKeys) {\r\n            const mapped = mapKeys[key];\r\n            if (mapped === false) {\r\n                return;\r\n            }\r\n            if (mapped) {\r\n                key = mapped;\r\n            }\r\n        }\r\n        keys[key] = cmd;\r\n    }\r\n\r\n    bind('Mod-z', undo);\r\n    bind('Shift-Mod-z', redo);\r\n    bind('Backspace', undoInputRule);\r\n    if (!mac) {\r\n        bind('Mod-y', redo);\r\n    }\r\n\r\n    bind('Alt-ArrowUp', joinUp);\r\n    bind('Alt-ArrowDown', joinDown);\r\n    bind('Mod-BracketLeft', lift);\r\n    bind('Escape', selectParentNode);\r\n\r\n    // tslint:disable:no-conditional-assignment\r\n    if ((type = schema.marks.strong)) {\r\n        bind('Mod-b', toggleMark(type));\r\n        bind('Mod-B', toggleMark(type));\r\n    }\r\n    if ((type = schema.marks.em)) {\r\n        bind('Mod-i', toggleMark(type));\r\n        bind('Mod-I', toggleMark(type));\r\n    }\r\n    if ((type = schema.marks.code)) {\r\n        bind('Mod-`', toggleMark(type));\r\n    }\r\n\r\n    if ((type = schema.nodes.bullet_list)) {\r\n        bind('Shift-Ctrl-8', wrapInList(type));\r\n    }\r\n    if ((type = schema.nodes.ordered_list)) {\r\n        bind('Shift-Ctrl-9', wrapInList(type));\r\n    }\r\n    if ((type = schema.nodes.blockquote)) {\r\n        bind('Ctrl->', wrapIn(type));\r\n    }\r\n    if ((type = schema.nodes.hard_break)) {\r\n        const br = type;\r\n        const cmd = chainCommands(exitCode, (state, dispatch) => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            dispatch!(state.tr.replaceSelectionWith(br.create()).scrollIntoView());\r\n            return true;\r\n        });\r\n        bind('Mod-Enter', cmd);\r\n        bind('Shift-Enter', cmd);\r\n        if (mac) {\r\n            bind('Ctrl-Enter', cmd);\r\n        }\r\n    }\r\n    if ((type = schema.nodes.list_item)) {\r\n        bind('Enter', splitListItem(type));\r\n        bind('Mod-[', liftListItem(type));\r\n        bind('Mod-]', sinkListItem(type));\r\n    }\r\n    if ((type = schema.nodes.paragraph)) {\r\n        bind('Shift-Ctrl-0', setBlockType(type));\r\n    }\r\n    if ((type = schema.nodes.code_block)) {\r\n        bind('Shift-Ctrl-\\\\', setBlockType(type));\r\n    }\r\n    if ((type = schema.nodes.heading)) {\r\n        for (let i = 1; i <= 6; i++) {\r\n            bind('Shift-Ctrl-' + i, setBlockType(type, { level: i }));\r\n        }\r\n    }\r\n    if ((type = schema.nodes.horizontal_rule)) {\r\n        const hr = type;\r\n        bind('Mod-_', (state, dispatch) => {\r\n            dispatch(state.tr.replaceSelectionWith(hr.create()).scrollIntoView());\r\n            return true;\r\n        });\r\n    }\r\n\r\n    return keys;\r\n}\r\n","import { NodeType } from 'prosemirror-model';\r\nimport { EditorState } from 'prosemirror-state';\r\n\r\nexport function markActive(state, type) {\r\n    const { from, $from, to, empty } = state.selection;\r\n    if (empty) {\r\n        return type.isInSet(state.storedMarks || $from.marks());\r\n    } else {\r\n        return state.doc.rangeHasMark(from, to, type);\r\n    }\r\n}\r\n\r\nexport function canInsert(state: EditorState, nodeType: NodeType): boolean {\r\n    const $from = state.selection.$from;\r\n    for (let d = $from.depth; d >= 0; d--) {\r\n        const index = $from.index(d);\r\n        if ($from.node(d).canReplaceWith(index, index, nodeType)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n","import { MenuItem } from 'prosemirror-menu';\r\nimport { NodeType } from 'prosemirror-model';\r\nimport { EditorState, NodeSelection } from 'prosemirror-state';\r\nimport { EditorView } from 'prosemirror-view';\r\n\r\nimport { ModalService } from '../../../../../providers/modal/modal.service';\r\nimport {\r\n    ExternalImageAttrs,\r\n    ExternalImageDialogComponent,\r\n} from '../../external-image-dialog/external-image-dialog.component';\r\n\r\nimport { canInsert } from './menu-common';\r\n\r\nexport function insertImageItem(nodeType: NodeType, modalService: ModalService) {\r\n    return new MenuItem({\r\n        title: 'Insert image',\r\n        label: 'Image',\r\n        class: '',\r\n        css: '',\r\n        enable(state: EditorState) {\r\n            return canInsert(state, nodeType);\r\n        },\r\n        run(state: EditorState, _, view: EditorView) {\r\n            let attrs: ExternalImageAttrs | undefined;\r\n            if (state.selection instanceof NodeSelection && state.selection.node.type === nodeType) {\r\n                attrs = state.selection.node.attrs as ExternalImageAttrs;\r\n            }\r\n            modalService\r\n                .fromComponent(ExternalImageDialogComponent, {\r\n                    closable: true,\r\n                    locals: {\r\n                        existing: attrs,\r\n                    },\r\n                })\r\n                .subscribe(result => {\r\n                    if (result) {\r\n                        // tslint:disable-next-line:no-non-null-assertion\r\n                        view.dispatch(view.state.tr.replaceSelectionWith(nodeType.createAndFill(result)!));\r\n                    }\r\n                    view.focus();\r\n                });\r\n        },\r\n    });\r\n}\r\n","import { toggleMark } from 'prosemirror-commands';\r\nimport { icons, MenuItem } from 'prosemirror-menu';\r\nimport { MarkType } from 'prosemirror-model';\r\nimport { EditorState, TextSelection } from 'prosemirror-state';\r\n\r\nimport { ModalService } from '../../../../../providers/modal/modal.service';\r\nimport { LinkAttrs, LinkDialogComponent } from '../../link-dialog/link-dialog.component';\r\n\r\nimport { markActive } from './menu-common';\r\n\r\nfunction selectionIsWithinLink(state: EditorState, anchor: number, head: number): boolean {\r\n    const { doc } = state;\r\n    const headLink = doc\r\n        .resolve(head)\r\n        .marks()\r\n        .find(m => m.type.name === 'link');\r\n    const anchorLink = doc\r\n        .resolve(anchor)\r\n        .marks()\r\n        .find(m => m.type.name === 'link');\r\n    if (headLink && anchorLink && headLink.eq(anchorLink)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function linkItem(linkMark: MarkType, modalService: ModalService) {\r\n    return new MenuItem({\r\n        title: 'Add or remove link',\r\n        icon: icons.link,\r\n        class: '',\r\n        css: '',\r\n        active(state) {\r\n            return markActive(state, linkMark);\r\n        },\r\n        enable(state) {\r\n            const { selection } = state;\r\n            return !selection.empty || selectionIsWithinLink(state, selection.anchor, selection.head);\r\n        },\r\n        run(state: EditorState, dispatch, view) {\r\n            let attrs: LinkAttrs | undefined;\r\n            const { selection, doc } = state;\r\n            if (\r\n                selection instanceof TextSelection &&\r\n                selectionIsWithinLink(state, selection.anchor + 1, selection.head - 1)\r\n            ) {\r\n                const mark = doc\r\n                    .resolve(selection.anchor + 1)\r\n                    .marks()\r\n                    .find(m => m.type.name === 'link');\r\n                if (mark) {\r\n                    attrs = mark.attrs as LinkAttrs;\r\n                }\r\n            }\r\n            modalService\r\n                .fromComponent(LinkDialogComponent, {\r\n                    closable: true,\r\n                    locals: {\r\n                        existing: attrs,\r\n                    },\r\n                })\r\n                .subscribe(result => {\r\n                    let tr = state.tr;\r\n                    if (result) {\r\n                        const { $from, $to } = selection.ranges[0];\r\n                        tr = tr.removeMark($from.pos, $to.pos, linkMark);\r\n                        if (result.href !== '') {\r\n                            tr = tr.addMark($from.pos, $to.pos, linkMark.create(result));\r\n                        }\r\n                    }\r\n                    dispatch(tr.scrollIntoView());\r\n                    view.focus();\r\n                });\r\n            return true;\r\n        },\r\n    });\r\n}\r\n","import { toggleMark } from 'prosemirror-commands';\r\nimport {\r\n    blockTypeItem,\r\n    Dropdown,\r\n    DropdownSubmenu,\r\n    icons,\r\n    joinUpItem,\r\n    liftItem,\r\n    MenuItem,\r\n    redoItem,\r\n    selectParentNodeItem,\r\n    undoItem,\r\n    wrapItem,\r\n} from 'prosemirror-menu';\r\nimport { MarkType, NodeType, Schema } from 'prosemirror-model';\r\nimport { wrapInList } from 'prosemirror-schema-list';\r\nimport { EditorState } from 'prosemirror-state';\r\n\r\nimport { ModalService } from '../../../../../providers/modal/modal.service';\r\n\r\nimport { insertImageItem } from './images';\r\nimport { linkItem } from './links';\r\nimport { canInsert, markActive } from './menu-common';\r\n\r\n// Helpers to create specific types of items\r\n\r\nfunction cmdItem(cmd: (...args: any[]) => void, options: Record<string, any>) {\r\n    const passedOptions = {\r\n        label: options.title,\r\n        run: cmd,\r\n    };\r\n    // tslint:disable-next-line:forin\r\n    for (const prop in options) {\r\n        passedOptions[prop] = options[prop];\r\n    }\r\n    if ((!options.enable || options.enable === true) && !options.select) {\r\n        passedOptions[options.enable ? 'enable' : 'select'] = state => cmd(state);\r\n    }\r\n\r\n    return new MenuItem(passedOptions as any);\r\n}\r\n\r\nfunction markItem(markType, options) {\r\n    const passedOptions = {\r\n        active(state) {\r\n            return markActive(state, markType);\r\n        },\r\n        enable: true,\r\n    };\r\n    // tslint:disable-next-line:forin\r\n    for (const prop in options) {\r\n        passedOptions[prop] = options[prop];\r\n    }\r\n    return cmdItem(toggleMark(markType), passedOptions);\r\n}\r\n\r\nfunction wrapListItem(nodeType, options) {\r\n    return cmdItem(wrapInList(nodeType, options.attrs), options);\r\n}\r\n\r\n// :: (Schema) → Object\r\n// Given a schema, look for default mark and node types in it and\r\n// return an object with relevant menu items relating to those marks:\r\n//\r\n// **`toggleStrong`**`: MenuItem`\r\n//   : A menu item to toggle the [strong mark](#schema-basic.StrongMark).\r\n//\r\n// **`toggleEm`**`: MenuItem`\r\n//   : A menu item to toggle the [emphasis mark](#schema-basic.EmMark).\r\n//\r\n// **`toggleCode`**`: MenuItem`\r\n//   : A menu item to toggle the [code font mark](#schema-basic.CodeMark).\r\n//\r\n// **`toggleLink`**`: MenuItem`\r\n//   : A menu item to toggle the [link mark](#schema-basic.LinkMark).\r\n//\r\n// **`insertImage`**`: MenuItem`\r\n//   : A menu item to insert an [image](#schema-basic.Image).\r\n//\r\n// **`wrapBulletList`**`: MenuItem`\r\n//   : A menu item to wrap the selection in a [bullet list](#schema-list.BulletList).\r\n//\r\n// **`wrapOrderedList`**`: MenuItem`\r\n//   : A menu item to wrap the selection in an [ordered list](#schema-list.OrderedList).\r\n//\r\n// **`wrapBlockQuote`**`: MenuItem`\r\n//   : A menu item to wrap the selection in a [block quote](#schema-basic.BlockQuote).\r\n//\r\n// **`makeParagraph`**`: MenuItem`\r\n//   : A menu item to set the current textblock to be a normal\r\n//     [paragraph](#schema-basic.Paragraph).\r\n//\r\n// **`makeCodeBlock`**`: MenuItem`\r\n//   : A menu item to set the current textblock to be a\r\n//     [code block](#schema-basic.CodeBlock).\r\n//\r\n// **`makeHead[N]`**`: MenuItem`\r\n//   : Where _N_ is 1 to 6. Menu items to set the current textblock to\r\n//     be a [heading](#schema-basic.Heading) of level _N_.\r\n//\r\n// **`insertHorizontalRule`**`: MenuItem`\r\n//   : A menu item to insert a horizontal rule.\r\n//\r\n// The return value also contains some prefabricated menu elements and\r\n// menus, that you can use instead of composing your own menu from\r\n// scratch:\r\n//\r\n// **`insertMenu`**`: Dropdown`\r\n//   : A dropdown containing the `insertImage` and\r\n//     `insertHorizontalRule` items.\r\n//\r\n// **`typeMenu`**`: Dropdown`\r\n//   : A dropdown containing the items for making the current\r\n//     textblock a paragraph, code block, or heading.\r\n//\r\n// **`fullMenu`**`: [[MenuElement]]`\r\n//   : An array of arrays of menu elements for use as the full menu\r\n//     for, for example the [menu bar](https://github.com/prosemirror/prosemirror-menu#user-content-menubar).\r\nexport function buildMenuItems(schema: Schema, modalService: ModalService) {\r\n    const r: Record<string, any> = {};\r\n    let type: MarkType | NodeType;\r\n    // tslint:disable:no-conditional-assignment\r\n    if ((type = schema.marks.strong)) {\r\n        r.toggleStrong = markItem(type, { title: 'Toggle strong style', icon: icons.strong });\r\n    }\r\n    if ((type = schema.marks.em)) {\r\n        r.toggleEm = markItem(type, { title: 'Toggle emphasis', icon: icons.em });\r\n    }\r\n    if ((type = schema.marks.code)) {\r\n        r.toggleCode = markItem(type, { title: 'Toggle code font', icon: icons.code });\r\n    }\r\n    if ((type = schema.marks.link)) {\r\n        r.toggleLink = linkItem(type, modalService);\r\n    }\r\n\r\n    if ((type = schema.nodes.image)) {\r\n        r.insertImage = insertImageItem(type, modalService);\r\n    }\r\n    if ((type = schema.nodes.bullet_list)) {\r\n        r.wrapBulletList = wrapListItem(type, {\r\n            title: 'Wrap in bullet list',\r\n            icon: icons.bulletList,\r\n        });\r\n    }\r\n    if ((type = schema.nodes.ordered_list)) {\r\n        r.wrapOrderedList = wrapListItem(type, {\r\n            title: 'Wrap in ordered list',\r\n            icon: icons.orderedList,\r\n        });\r\n    }\r\n    if ((type = schema.nodes.blockquote)) {\r\n        r.wrapBlockQuote = wrapItem(type, {\r\n            title: 'Wrap in block quote',\r\n            icon: icons.blockquote,\r\n        });\r\n    }\r\n    if ((type = schema.nodes.paragraph)) {\r\n        r.makeParagraph = blockTypeItem(type, {\r\n            title: 'Change to paragraph',\r\n            label: 'Plain',\r\n        });\r\n    }\r\n    if ((type = schema.nodes.code_block)) {\r\n        r.makeCodeBlock = blockTypeItem(type, {\r\n            title: 'Change to code block',\r\n            label: 'Code',\r\n        });\r\n    }\r\n    if ((type = schema.nodes.heading)) {\r\n        for (let i = 1; i <= 10; i++) {\r\n            r['makeHead' + i] = blockTypeItem(type, {\r\n                title: 'Change to heading ' + i,\r\n                label: 'Level ' + i,\r\n                attrs: { level: i },\r\n            });\r\n        }\r\n    }\r\n    if ((type = schema.nodes.horizontal_rule)) {\r\n        const hr = type;\r\n        r.insertHorizontalRule = new MenuItem({\r\n            title: 'Insert horizontal rule',\r\n            label: 'Horizontal rule',\r\n            class: '',\r\n            css: '',\r\n            enable(state) {\r\n                return canInsert(state, hr);\r\n            },\r\n            run(state: EditorState, dispatch) {\r\n                dispatch(state.tr.replaceSelectionWith(hr.create()));\r\n            },\r\n        });\r\n    }\r\n\r\n    const cut = <T>(arr: T[]): T[] => arr.filter(x => x);\r\n    r.insertMenu = new Dropdown(cut([r.insertImage, r.insertHorizontalRule]), { label: 'Insert' });\r\n    r.typeMenu = new Dropdown(\r\n        cut([\r\n            r.makeParagraph,\r\n            r.makeCodeBlock,\r\n            r.makeHead1 &&\r\n                new DropdownSubmenu(\r\n                    cut([r.makeHead1, r.makeHead2, r.makeHead3, r.makeHead4, r.makeHead5, r.makeHead6]),\r\n                    { label: 'Heading' },\r\n                ),\r\n        ]),\r\n        { label: 'Type...' },\r\n    );\r\n\r\n    const inlineMenu = cut([r.toggleStrong, r.toggleEm, r.toggleLink]);\r\n    r.inlineMenu = [inlineMenu];\r\n    r.blockMenu = [\r\n        cut([\r\n            r.wrapBulletList,\r\n            r.wrapOrderedList,\r\n            r.wrapBlockQuote,\r\n            joinUpItem,\r\n            liftItem,\r\n            selectParentNodeItem,\r\n        ]),\r\n    ];\r\n    r.fullMenu = [inlineMenu].concat([[r.insertMenu, r.typeMenu]], [[undoItem, redoItem]], r.blockMenu);\r\n\r\n    return r;\r\n}\r\n","import { MarkType, ResolvedPos } from 'prosemirror-model';\r\n\r\n/**\r\n * Retrieve the start and end position of a mark\r\n * \"Borrowed\" from [tiptap](https://github.com/scrumpy/tiptap)\r\n */\r\nexport const getMarkRange = (\r\n    pmPosition: ResolvedPos | null = null,\r\n    type: MarkType | null | undefined = null,\r\n): { from: number; to: number } | false => {\r\n    if (!pmPosition || !type) {\r\n        return false;\r\n    }\r\n\r\n    const start = pmPosition.parent.childAfter(pmPosition.parentOffset);\r\n\r\n    if (!start.node) {\r\n        return false;\r\n    }\r\n\r\n    const mark = start.node.marks.find(({ type: markType }) => markType === type);\r\n    if (!mark) {\r\n        return false;\r\n    }\r\n\r\n    let startIndex = pmPosition.index();\r\n    let startPos = pmPosition.start() + start.offset;\r\n    while (startIndex > 0 && mark.isInSet(pmPosition.parent.child(startIndex - 1).marks)) {\r\n        startIndex -= 1;\r\n        startPos -= pmPosition.parent.child(startIndex).nodeSize;\r\n    }\r\n\r\n    const endPos = startPos + start.node.nodeSize;\r\n\r\n    return { from: startPos, to: endPos };\r\n};\r\n","import { Plugin, TextSelection } from 'prosemirror-state';\r\n\r\nimport { getMarkRange } from '../utils';\r\n\r\n/**\r\n * Causes the entire link to be selected when clicked.\r\n */\r\nexport const linkSelectPlugin = new Plugin({\r\n    props: {\r\n        handleClick(view, pos) {\r\n            const { doc, tr, schema } = view.state;\r\n            const range = getMarkRange(doc.resolve(pos), schema.marks.link);\r\n            if (!range) {\r\n                return false;\r\n            }\r\n\r\n            const $start = doc.resolve(range.from);\r\n            const $end = doc.resolve(range.to);\r\n            const transaction = tr.setSelection(new TextSelection($start, $end));\r\n\r\n            view.dispatch(transaction);\r\n            return true;\r\n        },\r\n    },\r\n});\r\n","import { Injectable } from '@angular/core';\r\nimport { baseKeymap } from 'prosemirror-commands';\r\nimport { dropCursor } from 'prosemirror-dropcursor';\r\nimport { gapCursor } from 'prosemirror-gapcursor';\r\nimport { history } from 'prosemirror-history';\r\nimport { keymap } from 'prosemirror-keymap';\r\nimport { menuBar } from 'prosemirror-menu';\r\nimport { DOMParser, DOMSerializer, Schema } from 'prosemirror-model';\r\nimport { schema } from 'prosemirror-schema-basic';\r\nimport { addListNodes } from 'prosemirror-schema-list';\r\nimport { EditorState, Plugin } from 'prosemirror-state';\r\nimport { EditorView } from 'prosemirror-view';\r\n\r\nimport { ModalService } from '../../../../providers/modal/modal.service';\r\n\r\nimport { buildInputRules } from './inputrules';\r\nimport { buildKeymap } from './keymap';\r\nimport { buildMenuItems } from './menu/menu';\r\nimport { linkSelectPlugin } from './plugins/link-select-plugin';\r\nimport { SetupOptions } from './types';\r\n\r\nexport interface CreateEditorViewOptions {\r\n    onTextInput: (content: string) => void;\r\n    element: HTMLElement;\r\n    isReadOnly: () => boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class ProsemirrorService {\r\n    editorView: EditorView;\r\n\r\n    // Mix the nodes from prosemirror-schema-list into the basic schema to\r\n    // create a schema with list support.\r\n    private mySchema = new Schema({\r\n        nodes: addListNodes(schema.spec.nodes, 'paragraph block*', 'block'),\r\n        marks: schema.spec.marks,\r\n    });\r\n    private enabled = true;\r\n\r\n    constructor(private modalService: ModalService) {}\r\n\r\n    createEditorView(options: CreateEditorViewOptions) {\r\n        this.editorView = new EditorView<Schema>(options.element, {\r\n            state: this.getStateFromText(''),\r\n            dispatchTransaction: tr => {\r\n                if (!this.enabled) {\r\n                    return;\r\n                }\r\n                this.editorView.updateState(this.editorView.state.apply(tr));\r\n                if (tr.docChanged) {\r\n                    const content = this.getTextFromState(this.editorView.state);\r\n                    options.onTextInput(content);\r\n                }\r\n            },\r\n            editable: () => options.isReadOnly(),\r\n        });\r\n    }\r\n\r\n    update(text: string) {\r\n        if (this.editorView) {\r\n            const state = this.getStateFromText(text);\r\n            if (document.body.contains(this.editorView.dom)) {\r\n                this.editorView.updateState(state);\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this.editorView) {\r\n            this.editorView.destroy();\r\n        }\r\n    }\r\n\r\n    setEnabled(enabled: boolean) {\r\n        if (this.editorView) {\r\n            this.enabled = enabled;\r\n            // Updating the state causes ProseMirror to check the\r\n            // `editable()` function from the contructor config object\r\n            // newly.\r\n            this.editorView.updateState(this.editorView.state);\r\n        }\r\n    }\r\n\r\n    private getStateFromText(text: string | null | undefined): EditorState {\r\n        const div = document.createElement('div');\r\n        div.innerHTML = text ?? '';\r\n        return EditorState.create({\r\n            doc: DOMParser.fromSchema(this.mySchema).parse(div),\r\n            plugins: this.configurePlugins({ schema: this.mySchema, floatingMenu: false }),\r\n        });\r\n    }\r\n\r\n    private getTextFromState(state: EditorState): string {\r\n        const div = document.createElement('div');\r\n        const fragment = DOMSerializer.fromSchema(this.mySchema).serializeFragment(state.doc.content);\r\n\r\n        div.appendChild(fragment);\r\n\r\n        return div.innerHTML;\r\n    }\r\n\r\n    private configurePlugins(options: SetupOptions) {\r\n        const plugins = [\r\n            buildInputRules(options.schema),\r\n            keymap(buildKeymap(options.schema, options.mapKeys)),\r\n            keymap(baseKeymap),\r\n            dropCursor(),\r\n            gapCursor(),\r\n            linkSelectPlugin,\r\n        ];\r\n        if (options.menuBar !== false) {\r\n            plugins.push(\r\n                menuBar({\r\n                    floating: options.floatingMenu !== false,\r\n                    content:\r\n                        options.menuContent || buildMenuItems(options.schema, this.modalService).fullMenu,\r\n                }),\r\n            );\r\n        }\r\n        if (options.history !== false) {\r\n            plugins.push(history());\r\n        }\r\n\r\n        return plugins.concat(\r\n            new Plugin({\r\n                props: {\r\n                    attributes: { class: 'vdr-prosemirror' },\r\n                },\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    HostBinding,\r\n    Input,\r\n    OnDestroy,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { ProsemirrorService } from './prosemirror/prosemirror.service';\r\n\r\n/**\r\n * @description\r\n * A rich text (HTML) editor based on Prosemirror (https://prosemirror.net/)\r\n *\r\n * @example\r\n * ```HTML\r\n * <vdr-rich-text-editor\r\n *     [(ngModel)]=\"description\"\r\n *     label=\"Description\"\r\n * ></vdr-rich-text-editor>\r\n * ```\r\n *\r\n * @docsCategory components\r\n */\r\n@Component({\r\n    selector: 'vdr-rich-text-editor',\r\n    templateUrl: './rich-text-editor.component.html',\r\n    styleUrls: ['./rich-text-editor.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: RichTextEditorComponent,\r\n            multi: true,\r\n        },\r\n        ProsemirrorService,\r\n    ],\r\n})\r\nexport class RichTextEditorComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\r\n    @Input() label: string;\r\n    @Input() set readonly(value: any) {\r\n        this._readonly = !!value;\r\n        this.prosemirrorService.setEnabled(!this._readonly);\r\n    }\r\n    @HostBinding('class.readonly')\r\n    _readonly = false;\r\n\r\n    onChange: (val: any) => void;\r\n    onTouch: () => void;\r\n    private value: string;\r\n\r\n    @ViewChild('editor', { static: true }) private editorEl: ElementRef<HTMLDivElement>;\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef, private prosemirrorService: ProsemirrorService) {}\r\n\r\n    ngAfterViewInit() {\r\n        this.prosemirrorService.createEditorView({\r\n            element: this.editorEl.nativeElement,\r\n            onTextInput: content => {\r\n                this.onChange(content);\r\n                this.changeDetector.markForCheck();\r\n            },\r\n            isReadOnly: () => !this._readonly,\r\n        });\r\n        if (this.value) {\r\n            this.prosemirrorService.update(this.value);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.prosemirrorService.destroy();\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouch = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.prosemirrorService.setEnabled(!isDisabled);\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        this.value = value;\r\n        if (this.prosemirrorService) {\r\n            this.prosemirrorService.update(value);\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n/**\n * A simple, stateless toggle button for indicating selection.\n */\n@Component({\n    selector: 'vdr-select-toggle',\n    templateUrl: './select-toggle.component.html',\n    styleUrls: ['./select-toggle.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectToggleComponent {\n    @Input() size: 'small' | 'large' = 'large';\n    @Input() selected = false;\n    @Input() disabled = false;\n    @Input() label: string | undefined;\n    @Output() selectedChange = new EventEmitter<boolean>();\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-status-badge',\r\n    templateUrl: './status-badge.component.html',\r\n    styleUrls: ['./status-badge.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class StatusBadgeComponent {\r\n    @Input() type: 'info' | 'success' | 'warning' | 'error' = 'info';\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormGroup } from '@angular/forms';\r\n\r\nimport { CustomFieldConfig } from '../../../common/generated-types';\r\nimport { CustomFieldEntityName } from '../../../providers/custom-field-component/custom-field-component.service';\r\n\r\nexport type GroupedCustomFields = Array<{ tabName: string; customFields: CustomFieldConfig[] }>;\r\n\r\n@Component({\r\n    selector: 'vdr-tabbed-custom-fields',\r\n    templateUrl: './tabbed-custom-fields.component.html',\r\n    styleUrls: ['./tabbed-custom-fields.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TabbedCustomFieldsComponent implements OnInit {\r\n    @Input() entityName: CustomFieldEntityName;\r\n    @Input() customFields: CustomFieldConfig[];\r\n    @Input() customFieldsFormGroup: AbstractControl;\r\n    @Input() readonly = false;\r\n    @Input() compact = false;\r\n    @Input() showLabel = true;\r\n    readonly defaultTabName = '__default_tab__';\r\n    tabbedCustomFields: GroupedCustomFields;\r\n\r\n    ngOnInit(): void {\r\n        this.tabbedCustomFields = this.groupByTabs(this.customFields);\r\n    }\r\n\r\n    customFieldIsSet(name: string): boolean {\r\n        return !!this.customFieldsFormGroup?.get(name);\r\n    }\r\n\r\n    private groupByTabs(customFieldConfigs: CustomFieldConfig[]): GroupedCustomFields {\r\n        const tabMap = new Map<string, CustomFieldConfig[]>();\r\n        for (const field of customFieldConfigs) {\r\n            const tabName = field.ui?.tab ?? this.defaultTabName;\r\n            if (tabMap.has(tabName)) {\r\n                tabMap.get(tabName)?.push(field);\r\n            } else {\r\n                tabMap.set(tabName, [field]);\r\n            }\r\n        }\r\n        return Array.from(tabMap.entries())\r\n            .sort((a, b) => (a[0] === this.defaultTabName ? -1 : 1))\r\n            .map(([tabName, customFields]) => ({ tabName, customFields }));\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n/**\r\n * A button link to be used as actions in rows of a table.\r\n */\r\n@Component({\r\n    selector: 'vdr-table-row-action',\r\n    templateUrl: './table-row-action.component.html',\r\n    styleUrls: ['./table-row-action.component.scss'],\r\n})\r\nexport class TableRowActionComponent {\r\n    @Input() linkTo: any[];\r\n    @Input() label: string;\r\n    @Input() iconShape: string;\r\n    @Input() disabled = false;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n@Component({\r\n    selector: 'vdr-tag-selector',\r\n    templateUrl: './tag-selector.component.html',\r\n    styleUrls: ['./tag-selector.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: TagSelectorComponent,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class TagSelectorComponent implements OnInit, ControlValueAccessor {\r\n    @Input() placeholder: string | undefined;\r\n    allTags$: Observable<string[]>;\r\n    onChange: (val: any) => void;\r\n    onTouch: () => void;\r\n    _value: string[];\r\n    disabled: boolean;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.allTags$ = this.dataService.product\r\n            .getTagList()\r\n            .mapStream(data => data.tags.items.map(i => i.value));\r\n    }\r\n\r\n    addTagFn(val: string) {\r\n        return val;\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouch = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    writeValue(obj: unknown): void {\r\n        if (Array.isArray(obj)) {\r\n            this._value = obj;\r\n        }\r\n    }\r\n\r\n    valueChanged(event: string[]) {\r\n        this.onChange(event);\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Input,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\n\r\nexport type TimelineDisplayType = 'success' | 'error' | 'warning' | 'default' | 'muted';\r\n\r\n@Component({\r\n    selector: 'vdr-timeline-entry',\r\n    templateUrl: './timeline-entry.component.html',\r\n    styleUrls: ['./timeline-entry.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TimelineEntryComponent {\r\n    @Input() displayType: TimelineDisplayType;\r\n    @Input() createdAt: string;\r\n    @Input() name: string;\r\n    @Input() featured: boolean;\r\n    @Input() iconShape?: string | [string, string];\r\n    @Input() isLast?: boolean;\r\n    @HostBinding('class.collapsed')\r\n    @Input()\r\n    collapsed = false;\r\n    @Output() expandClick = new EventEmitter();\r\n\r\n    get timelineTitle(): string {\r\n        return this.collapsed ? _('common.expand-entries') : _('common.collapse-entries');\r\n    }\r\n\r\n    getIconShape() {\r\n        if (this.iconShape) {\r\n            return typeof this.iconShape === 'string' ? this.iconShape : this.iconShape[0];\r\n        }\r\n    }\r\n\r\n    getIconClass() {\r\n        if (this.iconShape) {\r\n            return typeof this.iconShape === 'string' ? '' : this.iconShape[1];\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'vdr-title-input',\r\n    templateUrl: './title-input.component.html',\r\n    styleUrls: ['./title-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TitleInputComponent {\r\n    @HostBinding('class.readonly')\r\n    @Input()\r\n    readonly = false;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, isDevMode, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UIExtensionLocationId } from '../../../common/component-registry-types';\r\nimport { DataService } from '../../../data/providers/data.service';\r\n\r\n@Component({\r\n    selector: 'vdr-ui-extension-point',\r\n    templateUrl: './ui-extension-point.component.html',\r\n    styleUrls: ['./ui-extension-point.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UiExtensionPointComponent implements OnInit {\r\n    @Input() locationId: UIExtensionLocationId;\r\n    @Input() topPx: number;\r\n    @Input() leftPx: number;\r\n    @Input() api: 'actionBar' | 'navMenu' | 'detailComponent';\r\n    display$: Observable<boolean>;\r\n    readonly isDevMode = isDevMode();\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.display$ = this.dataService.client\r\n            .uiState()\r\n            .mapStream(({ uiState }) => uiState.displayUiExtensionPoints);\r\n    }\r\n}\r\n","import { Directive, Input, Optional } from '@angular/core';\nimport { FormControl, FormControlDirective, FormControlName } from '@angular/forms';\n\n/**\n * Allows declarative binding to the \"disabled\" property of a reactive form\n * control.\n */\n@Directive({\n    selector: '[vdrDisabled]',\n})\nexport class DisabledDirective {\n    @Input('vdrDisabled') set disabled(val: boolean) {\n        const formControl = this.formControlName?.control ?? this.formControl?.form;\n        if (!formControl) {\n            return;\n        }\n        if (!!val === false) {\n            formControl.enable({ emitEvent: false });\n        } else {\n            formControl.disable({ emitEvent: false });\n        }\n    }\n\n    constructor(\n        @Optional() private formControlName: FormControlName,\n        @Optional() private formControl: FormControlDirective,\n    ) {}\n}\n","import { Directive, EmbeddedViewRef, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n/**\r\n * A base class for implementing custom *ngIf-style structural directives based on custom conditions.\r\n *\r\n * @dynamic\r\n */\r\n@Directive()\r\nexport class IfDirectiveBase<Args extends any[]> implements OnInit, OnDestroy {\r\n    protected updateArgs$ = new BehaviorSubject<Args>([] as any);\r\n    private readonly _thenTemplateRef: TemplateRef<any> | null = null;\r\n    private _elseTemplateRef: TemplateRef<any> | null = null;\r\n    private _thenViewRef: EmbeddedViewRef<any> | null = null;\r\n    private _elseViewRef: EmbeddedViewRef<any> | null = null;\r\n    private subscription: Subscription;\r\n\r\n    constructor(\r\n        private _viewContainer: ViewContainerRef,\r\n        templateRef: TemplateRef<any>,\r\n        private updateViewFn: (...args: Args) => Observable<boolean>,\r\n    ) {\r\n        this._thenTemplateRef = templateRef;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subscription = this.updateArgs$\r\n            .pipe(switchMap(args => this.updateViewFn(...args)))\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.showThen();\r\n                } else {\r\n                    this.showElse();\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    protected setElseTemplate(templateRef: TemplateRef<any> | null) {\r\n        this.assertTemplate('vdrIfPermissionsElse', templateRef);\r\n        this._elseTemplateRef = templateRef;\r\n        this._elseViewRef = null; // clear previous view if any.\r\n    }\r\n\r\n    private showThen() {\r\n        if (!this._thenViewRef) {\r\n            this._viewContainer.clear();\r\n            this._elseViewRef = null;\r\n            if (this._thenTemplateRef) {\r\n                this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef);\r\n            }\r\n        }\r\n    }\r\n\r\n    private showElse() {\r\n        if (!this._elseViewRef) {\r\n            this._viewContainer.clear();\r\n            this._thenViewRef = null;\r\n            if (this._elseTemplateRef) {\r\n                this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef);\r\n            }\r\n        }\r\n    }\r\n\r\n    private assertTemplate(property: string, templateRef: TemplateRef<any> | null): void {\r\n        const isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);\r\n        if (!isTemplateRefOrNull) {\r\n            throw new Error(`${property} must be a TemplateRef, but received '${templateRef}'.`);\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { UserStatus } from '../../common/generated-types';\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { IfDirectiveBase } from './if-directive-base';\r\n\r\n@Directive({\r\n    selector: '[vdrIfDefaultChannelActive]',\r\n})\r\nexport class IfDefaultChannelActiveDirective extends IfDirectiveBase<[]> {\r\n    constructor(\r\n        _viewContainer: ViewContainerRef,\r\n        templateRef: TemplateRef<any>,\r\n        private dataService: DataService,\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n    ) {\r\n        super(_viewContainer, templateRef, () => {\r\n            return this.dataService.client\r\n                .userStatus()\r\n                .mapStream(({ userStatus }) => this.defaultChannelIsActive(userStatus))\r\n                .pipe(tap(() => this.changeDetectorRef.markForCheck()));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A template to show if the current user does not have the specified permission.\r\n     */\r\n    @Input()\r\n    set vdrIfMultichannelElse(templateRef: TemplateRef<any> | null) {\r\n        this.setElseTemplate(templateRef);\r\n    }\r\n\r\n    private defaultChannelIsActive(userStatus: UserStatus): boolean {\r\n        const defaultChannel = userStatus.channels.find(c => c.code === DEFAULT_CHANNEL_CODE);\r\n\r\n        return !!(defaultChannel && userStatus.activeChannelId === defaultChannel.id);\r\n    }\r\n}\r\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { IfDirectiveBase } from './if-directive-base';\r\n\r\n/**\r\n * @description\r\n * Structural directive that displays the given element if the Vendure instance has multiple channels\r\n * configured.\r\n *\r\n * @example\r\n * ```html\r\n * <div *vdrIfMultichannel class=\"channel-selector\">\r\n *   <!-- ... -->\r\n * </ng-container>\r\n * ```\r\n *\r\n * @docsCategory directives\r\n */\r\n@Directive({\r\n    selector: '[vdrIfMultichannel]',\r\n})\r\nexport class IfMultichannelDirective extends IfDirectiveBase<[]> {\r\n    constructor(\r\n        _viewContainer: ViewContainerRef,\r\n        templateRef: TemplateRef<any>,\r\n        private dataService: DataService,\r\n    ) {\r\n        super(_viewContainer, templateRef, () => {\r\n            return this.dataService.client\r\n                .userStatus()\r\n                .mapStream(({ userStatus }) => 1 < userStatus.channels.length);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A template to show if the current user does not have the specified permission.\r\n     */\r\n    @Input()\r\n    set vdrIfMultichannelElse(templateRef: TemplateRef<any> | null) {\r\n        this.setElseTemplate(templateRef);\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectorRef,\r\n    Directive,\r\n    EmbeddedViewRef,\r\n    Input,\r\n    TemplateRef,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { Permission } from '../../common/generated-types';\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { IfDirectiveBase } from './if-directive-base';\r\n\r\n/**\r\n * @description\r\n * Conditionally shows/hides templates based on the current active user having the specified permission.\r\n * Based on the ngIf source. Also support \"else\" templates:\r\n *\r\n * @example\r\n * ```html\r\n * <button *vdrIfPermissions=\"'DeleteCatalog'; else unauthorized\">Delete Product</button>\r\n * <ng-template #unauthorized>Not allowed!</ng-template>\r\n * ```\r\n *\r\n * The permission can be a single string, or an array. If an array is passed, then _all_ of the permissions\r\n * must match (logical AND)\r\n *\r\n * @docsCategory directives\r\n */\r\n@Directive({\r\n    selector: '[vdrIfPermissions]',\r\n})\r\nexport class IfPermissionsDirective extends IfDirectiveBase<Array<Permission[] | null>> {\r\n    private permissionToCheck: string[] | null = ['__initial_value__'];\r\n\r\n    constructor(\r\n        _viewContainer: ViewContainerRef,\r\n        templateRef: TemplateRef<any>,\r\n        private dataService: DataService,\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n    ) {\r\n        super(_viewContainer, templateRef, permissions => {\r\n            if (permissions == null) {\r\n                return of(true);\r\n            } else if (!permissions) {\r\n                return of(false);\r\n            }\r\n            return this.dataService.client\r\n                .userStatus()\r\n                .mapStream(({ userStatus }) => {\r\n                    for (const permission of permissions) {\r\n                        if (userStatus.permissions.includes(permission)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                })\r\n                .pipe(tap(() => this.changeDetectorRef.markForCheck()));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * The permission to check to determine whether to show the template.\r\n     */\r\n    @Input()\r\n    set vdrIfPermissions(permission: string | string[] | null) {\r\n        this.permissionToCheck =\r\n            (permission && (Array.isArray(permission) ? permission : [permission])) || null;\r\n        this.updateArgs$.next([this.permissionToCheck as Permission[]]);\r\n    }\r\n\r\n    /**\r\n     * A template to show if the current user does not have the specified permission.\r\n     */\r\n    @Input()\r\n    set vdrIfPermissionsElse(templateRef: TemplateRef<any> | null) {\r\n        this.setElseTemplate(templateRef);\r\n        this.updateArgs$.next([this.permissionToCheck as Permission[]]);\r\n    }\r\n}\r\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ComponentFactory,\r\n    ComponentFactoryResolver,\r\n    ComponentRef,\r\n    Injector,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    QueryList,\r\n    SimpleChanges,\r\n    Type,\r\n    ViewChild,\r\n    ViewChildren,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, FormArray, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { StringCustomFieldConfig } from '@vendure/common/lib/generated-types';\r\nimport { ConfigArgType, CustomFieldType, DefaultFormComponentId } from '@vendure/common/lib/shared-types';\r\nimport { assertNever } from '@vendure/common/lib/shared-utils';\r\nimport { simpleDeepClone } from '@vendure/common/lib/simple-deep-clone';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { switchMap, take, takeUntil } from 'rxjs/operators';\r\n\r\nimport { FormInputComponent } from '../../../common/component-registry-types';\r\nimport { ConfigArgDefinition, CustomFieldConfig } from '../../../common/generated-types';\r\nimport { getConfigArgValue } from '../../../common/utilities/configurable-operation-utils';\r\nimport { ComponentRegistryService } from '../../../providers/component-registry/component-registry.service';\r\n\r\ntype InputListItem = {\r\n    id: number;\r\n    componentRef?: ComponentRef<FormInputComponent>;\r\n    control: FormControl;\r\n};\r\n\r\n/**\r\n * A host component which delegates to an instance or list of FormInputComponent components.\r\n */\r\n@Component({\r\n    selector: 'vdr-dynamic-form-input',\r\n    templateUrl: './dynamic-form-input.component.html',\r\n    styleUrls: ['./dynamic-form-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: DynamicFormInputComponent,\r\n            multi: true,\r\n        },\r\n    ],\r\n})\r\nexport class DynamicFormInputComponent\r\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, ControlValueAccessor\r\n{\r\n    @Input() def: ConfigArgDefinition | CustomFieldConfig;\r\n    @Input() readonly: boolean;\r\n    @Input() control: FormControl;\r\n    @ViewChild('single', { read: ViewContainerRef }) singleViewContainer: ViewContainerRef;\r\n    @ViewChildren('listItem', { read: ViewContainerRef }) listItemContainers: QueryList<ViewContainerRef>;\r\n    renderAsList = false;\r\n    listItems: InputListItem[] = [];\r\n    private singleComponentRef: ComponentRef<FormInputComponent>;\r\n    private listId = 1;\r\n    private listFormArray = new FormArray([]);\r\n    private componentType: Type<FormInputComponent>;\r\n    private onChange: (val: any) => void;\r\n    private onTouch: () => void;\r\n    private renderList$ = new Subject();\r\n    private destroy$ = new Subject();\r\n\r\n    constructor(\r\n        private componentRegistryService: ComponentRegistryService,\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n        private injector: Injector,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        const componentId = this.getInputComponentConfig(this.def).component;\r\n        const componentType = this.componentRegistryService.getInputComponent(componentId);\r\n        if (componentType) {\r\n            this.componentType = componentType;\r\n        } else {\r\n            // tslint:disable-next-line:no-console\r\n            console.error(\r\n                `No form input component registered with the id \"${componentId}\". Using the default input instead.`,\r\n            );\r\n            const defaultComponentType = this.componentRegistryService.getInputComponent(\r\n                this.getInputComponentConfig({ ...this.def, ui: undefined } as any).component,\r\n            );\r\n            if (defaultComponentType) {\r\n                this.componentType = defaultComponentType;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.componentType) {\r\n            const factory = this.componentFactoryResolver.resolveComponentFactory(this.componentType);\r\n\r\n            // create a temp instance to check the value of `isListInput`\r\n            const cmpRef = factory.create(this.injector);\r\n            const isListInputComponent = cmpRef.instance.isListInput ?? false;\r\n            cmpRef.destroy();\r\n\r\n            if (this.def.list === false && isListInputComponent) {\r\n                throw new Error(\r\n                    `The ${this.componentType.name} component is a list input, but the definition for ${this.def.name} does not expect a list`,\r\n                );\r\n            }\r\n            this.renderAsList = this.def.list && !isListInputComponent;\r\n            if (!this.renderAsList) {\r\n                this.singleComponentRef = this.renderInputComponent(\r\n                    factory,\r\n                    this.singleViewContainer,\r\n                    this.control,\r\n                );\r\n            } else {\r\n                let formArraySub: Subscription | undefined;\r\n                const renderListInputs = (viewContainerRefs: QueryList<ViewContainerRef>) => {\r\n                    if (viewContainerRefs.length) {\r\n                        if (formArraySub) {\r\n                            formArraySub.unsubscribe();\r\n                        }\r\n                        this.listFormArray = new FormArray([]);\r\n                        this.listItems.forEach(i => i.componentRef?.destroy());\r\n                        viewContainerRefs.forEach((ref, i) => {\r\n                            const listItem = this.listItems?.[i];\r\n                            if (listItem) {\r\n                                this.listFormArray.push(listItem.control);\r\n                                listItem.componentRef = this.renderInputComponent(\r\n                                    factory,\r\n                                    ref,\r\n                                    listItem.control,\r\n                                );\r\n                            }\r\n                        });\r\n\r\n                        formArraySub = this.listFormArray.valueChanges\r\n                            .pipe(takeUntil(this.destroy$))\r\n                            .subscribe(val => {\r\n                                this.control.markAsTouched();\r\n                                this.control.markAsDirty();\r\n                                this.onChange(val);\r\n                                this.control.patchValue(val, { emitEvent: false });\r\n                            });\r\n                        setTimeout(() => this.changeDetectorRef.markForCheck());\r\n                    }\r\n                };\r\n\r\n                // initial render\r\n                this.listItemContainers.changes\r\n                    .pipe(take(1))\r\n                    .subscribe(val => renderListInputs(this.listItemContainers));\r\n\r\n                // render on changes to the list\r\n                this.renderList$\r\n                    .pipe(\r\n                        switchMap(() => this.listItemContainers.changes.pipe(take(1))),\r\n                        takeUntil(this.destroy$),\r\n                    )\r\n                    .subscribe(() => {\r\n                        renderListInputs(this.listItemContainers);\r\n                    });\r\n            }\r\n        }\r\n        setTimeout(() => this.changeDetectorRef.markForCheck());\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (this.listItems) {\r\n            for (const item of this.listItems) {\r\n                if (item.componentRef) {\r\n                    this.updateBindings(changes, item.componentRef);\r\n                }\r\n            }\r\n        }\r\n        if (this.singleComponentRef) {\r\n            this.updateBindings(changes, this.singleComponentRef);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    private updateBindings(changes: SimpleChanges, componentRef: ComponentRef<FormInputComponent>) {\r\n        if ('def' in changes) {\r\n            componentRef.instance.config = simpleDeepClone(this.def);\r\n        }\r\n        if ('readonly' in changes) {\r\n            componentRef.instance.readonly = this.readonly;\r\n        }\r\n        componentRef.injector.get(ChangeDetectorRef).markForCheck();\r\n    }\r\n\r\n    trackById(index: number, item: { id: number }) {\r\n        return item.id;\r\n    }\r\n\r\n    addListItem() {\r\n        if (!this.listItems) {\r\n            this.listItems = [];\r\n        }\r\n        this.listItems.push({\r\n            id: this.listId++,\r\n            control: new FormControl((this.def as ConfigArgDefinition).defaultValue ?? null),\r\n        });\r\n        this.renderList$.next();\r\n    }\r\n\r\n    moveListItem(event: CdkDragDrop<InputListItem>) {\r\n        if (this.listItems) {\r\n            moveItemInArray(this.listItems, event.previousIndex, event.currentIndex);\r\n            this.listFormArray.removeAt(event.previousIndex);\r\n            this.listFormArray.insert(event.currentIndex, event.item.data.control);\r\n            this.renderList$.next();\r\n        }\r\n    }\r\n\r\n    removeListItem(item: InputListItem) {\r\n        if (this.listItems) {\r\n            const index = this.listItems.findIndex(i => i === item);\r\n            item.componentRef?.destroy();\r\n            this.listFormArray.removeAt(index);\r\n            this.listItems = this.listItems.filter(i => i !== item);\r\n            this.renderList$.next();\r\n        }\r\n    }\r\n\r\n    private renderInputComponent(\r\n        factory: ComponentFactory<FormInputComponent>,\r\n        viewContainerRef: ViewContainerRef,\r\n        formControl: FormControl,\r\n    ) {\r\n        const componentRef = viewContainerRef.createComponent(factory);\r\n        const { instance } = componentRef;\r\n        instance.config = simpleDeepClone(this.def);\r\n        instance.formControl = formControl;\r\n        instance.readonly = this.readonly;\r\n        componentRef.injector.get(ChangeDetectorRef).markForCheck();\r\n        return componentRef;\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouch = fn;\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (Array.isArray(obj)) {\r\n            if (obj.length === this.listItems.length) {\r\n                obj.forEach((value, index) => {\r\n                    const control = this.listItems[index]?.control;\r\n                    control.patchValue(getConfigArgValue(value), { emitEvent: false });\r\n                });\r\n            } else {\r\n                this.listItems = obj.map(\r\n                    value =>\r\n                        ({\r\n                            id: this.listId++,\r\n                            control: new FormControl(getConfigArgValue(value)),\r\n                        } as InputListItem),\r\n                );\r\n                this.renderList$.next();\r\n            }\r\n        } else {\r\n            this.listItems = [];\r\n            this.renderList$.next();\r\n        }\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    private getInputComponentConfig(argDef: ConfigArgDefinition | CustomFieldConfig): {\r\n        component: DefaultFormComponentId;\r\n    } {\r\n        if (this.hasUiConfig(argDef) && argDef.ui.component) {\r\n            return argDef.ui;\r\n        }\r\n        const type = argDef?.type as ConfigArgType | CustomFieldType;\r\n        switch (type) {\r\n            case 'string':\r\n            case 'localeString': {\r\n                const hasOptions =\r\n                    !!(this.isConfigArgDef(argDef) && argDef.ui?.options) ||\r\n                    !!(argDef as StringCustomFieldConfig).options;\r\n                if (hasOptions) {\r\n                    return { component: 'select-form-input' };\r\n                } else {\r\n                    return { component: 'text-form-input' };\r\n                }\r\n            }\r\n            case 'text': {\r\n                return { component: 'textarea-form-input' };\r\n            }\r\n            case 'int':\r\n            case 'float':\r\n                return { component: 'number-form-input' };\r\n            case 'boolean':\r\n                return { component: 'boolean-form-input' };\r\n            case 'datetime':\r\n                return { component: 'date-form-input' };\r\n            case 'ID':\r\n                return { component: 'text-form-input' };\r\n            case 'relation':\r\n                return { component: 'relation-form-input' };\r\n            default:\r\n                assertNever(type);\r\n        }\r\n    }\r\n\r\n    private isConfigArgDef(def: ConfigArgDefinition | CustomFieldConfig): def is ConfigArgDefinition {\r\n        return (def as ConfigArgDefinition)?.__typename === 'ConfigArgDefinition';\r\n    }\r\n\r\n    private hasUiConfig(def: unknown): def is { ui: { component: string } } {\r\n        return typeof def === 'object' && typeof (def as any)?.ui?.component === 'string';\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable, of } from 'rxjs';\r\nimport { distinctUntilChanged, map, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport { GetAsset, RelationCustomFieldConfig } from '../../../../common/generated-types';\r\nimport { DataService } from '../../../../data/providers/data.service';\r\nimport { ModalService } from '../../../../providers/modal/modal.service';\r\nimport { AssetPickerDialogComponent } from '../../../components/asset-picker-dialog/asset-picker-dialog.component';\r\nimport { AssetPreviewDialogComponent } from '../../../components/asset-preview-dialog/asset-preview-dialog.component';\r\n\r\n@Component({\r\n    selector: 'vdr-relation-asset-input',\r\n    templateUrl: './relation-asset-input.component.html',\r\n    styleUrls: ['./relation-asset-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationAssetInputComponent implements OnInit {\r\n    @Input() readonly: boolean;\r\n    @Input() parentFormControl: FormControl;\r\n    @Input() config: RelationCustomFieldConfig;\r\n    asset$: Observable<GetAsset.Asset | undefined>;\r\n\r\n    constructor(private modalService: ModalService, private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.asset$ = this.parentFormControl.valueChanges.pipe(\r\n            startWith(this.parentFormControl.value),\r\n            map(asset => asset?.id),\r\n            distinctUntilChanged(),\r\n            switchMap(id => {\r\n                if (id) {\r\n                    return this.dataService.product.getAsset(id).mapStream(data => data.asset || undefined);\r\n                } else {\r\n                    return of(undefined);\r\n                }\r\n            }),\r\n        );\r\n    }\r\n\r\n    selectAsset() {\r\n        this.modalService\r\n            .fromComponent(AssetPickerDialogComponent, {\r\n                size: 'xl',\r\n                locals: {\r\n                    multiSelect: false,\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result && result.length) {\r\n                    this.parentFormControl.setValue(result[0]);\r\n                    this.parentFormControl.markAsDirty();\r\n                }\r\n            });\r\n    }\r\n\r\n    remove() {\r\n        this.parentFormControl.setValue(null);\r\n        this.parentFormControl.markAsDirty();\r\n    }\r\n\r\n    previewAsset(asset: GetAsset.Asset) {\r\n        this.modalService\r\n            .fromComponent(AssetPreviewDialogComponent, {\r\n                size: 'xl',\r\n                closable: true,\r\n                locals: { asset },\r\n            })\r\n            .subscribe();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, TemplateRef } from '@angular/core';\r\n\r\nimport { Dialog } from '../../../../providers/modal/modal.service';\r\n\r\n@Component({\r\n    selector: 'vdr-relation-selector-dialog',\r\n    templateUrl: './relation-selector-dialog.component.html',\r\n    styleUrls: ['./relation-selector-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationSelectorDialogComponent implements Dialog<string[]> {\r\n    resolveWith: (result?: string[]) => void;\r\n    title: string;\r\n    selectorTemplate: TemplateRef<any>;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport {\r\n    CustomerFragment,\r\n    GetCustomerList,\r\n    GetProductList,\r\n    GetProductSimple,\r\n    RelationCustomFieldConfig,\r\n} from '../../../../common/generated-types';\r\nimport { DataService } from '../../../../data/providers/data.service';\r\nimport { ModalService } from '../../../../providers/modal/modal.service';\r\nimport { RelationSelectorDialogComponent } from '../relation-selector-dialog/relation-selector-dialog.component';\r\n\r\n@Component({\r\n    selector: 'vdr-relation-customer-input',\r\n    templateUrl: './relation-customer-input.component.html',\r\n    styleUrls: ['./relation-customer-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationCustomerInputComponent implements OnInit {\r\n    @Input() readonly: boolean;\r\n    @Input() parentFormControl: FormControl;\r\n    @Input() config: RelationCustomFieldConfig;\r\n\r\n    @ViewChild('selector') template: TemplateRef<any>;\r\n\r\n    searchControl = new FormControl('');\r\n    searchTerm$ = new Subject<string>();\r\n    results$: Observable<GetCustomerList.Items[]>;\r\n\r\n    get customer(): CustomerFragment | undefined {\r\n        return this.parentFormControl.value;\r\n    }\r\n\r\n    constructor(private modalService: ModalService, private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.results$ = this.searchTerm$.pipe(\r\n            debounceTime(200),\r\n            switchMap(term => {\r\n                return this.dataService.customer\r\n                    .getCustomerList(10, 0, term)\r\n                    .mapSingle(data => data.customers.items);\r\n            }),\r\n        );\r\n    }\r\n\r\n    selectCustomer() {\r\n        this.modalService\r\n            .fromComponent(RelationSelectorDialogComponent, {\r\n                size: 'md',\r\n                closable: true,\r\n                locals: {\r\n                    title: _('customer.select-customer'),\r\n                    selectorTemplate: this.template,\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.parentFormControl.setValue(result);\r\n                    this.parentFormControl.markAsDirty();\r\n                }\r\n            });\r\n    }\r\n\r\n    remove() {\r\n        this.parentFormControl.setValue(null);\r\n        this.parentFormControl.markAsDirty();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\n\r\nimport { RelationCustomFieldConfig } from '../../../../common/generated-types';\r\nimport { ModalService } from '../../../../providers/modal/modal.service';\r\nimport { RelationSelectorDialogComponent } from '../relation-selector-dialog/relation-selector-dialog.component';\r\n\r\n@Component({\r\n    selector: 'vdr-relation-generic-input',\r\n    templateUrl: './relation-generic-input.component.html',\r\n    styleUrls: ['./relation-generic-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationGenericInputComponent {\r\n    @Input() readonly: boolean;\r\n    @Input() parentFormControl: FormControl;\r\n    @Input() config: RelationCustomFieldConfig;\r\n    relationId: string;\r\n\r\n    @ViewChild('selector') template: TemplateRef<any>;\r\n\r\n    constructor(private modalService: ModalService) {}\r\n\r\n    selectRelationId() {\r\n        this.modalService\r\n            .fromComponent(RelationSelectorDialogComponent, {\r\n                size: 'md',\r\n                closable: true,\r\n                locals: {\r\n                    title: _('common.select-relation-id'),\r\n                    selectorTemplate: this.template,\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.parentFormControl.setValue({ id: result });\r\n                    this.parentFormControl.markAsDirty();\r\n                }\r\n            });\r\n    }\r\n\r\n    remove() {\r\n        this.parentFormControl.setValue(null);\r\n        this.parentFormControl.markAsDirty();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport {\r\n    GetProductVariant,\r\n    GetProductVariantList,\r\n    GetProductVariantListSimple,\r\n    RelationCustomFieldConfig,\r\n} from '../../../../common/generated-types';\r\nimport { DataService } from '../../../../data/providers/data.service';\r\nimport { ModalService } from '../../../../providers/modal/modal.service';\r\nimport { RelationSelectorDialogComponent } from '../relation-selector-dialog/relation-selector-dialog.component';\r\n\r\n@Component({\r\n    selector: 'vdr-relation-product-variant-input',\r\n    templateUrl: './relation-product-variant-input.component.html',\r\n    styleUrls: ['./relation-product-variant-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationProductVariantInputComponent implements OnInit {\r\n    @Input() readonly: boolean;\r\n    @Input() parentFormControl: FormControl;\r\n    @Input() config: RelationCustomFieldConfig;\r\n\r\n    @ViewChild('selector') template: TemplateRef<any>;\r\n\r\n    searchControl = new FormControl('');\r\n    searchTerm$ = new Subject<string>();\r\n    results$: Observable<GetProductVariantListSimple.Items[]>;\r\n    productVariant$: Observable<GetProductVariant.ProductVariant | undefined>;\r\n\r\n    constructor(private modalService: ModalService, private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.productVariant$ = this.parentFormControl.valueChanges.pipe(\r\n            startWith(this.parentFormControl.value),\r\n            map(variant => variant?.id),\r\n            distinctUntilChanged(),\r\n            switchMap(id => {\r\n                if (id) {\r\n                    return this.dataService.product\r\n                        .getProductVariant(id)\r\n                        .mapStream(data => data.productVariant || undefined);\r\n                } else {\r\n                    return of(undefined);\r\n                }\r\n            }),\r\n        );\r\n\r\n        this.results$ = this.searchTerm$.pipe(\r\n            debounceTime(200),\r\n            switchMap(term => {\r\n                return this.dataService.product\r\n                    .getProductVariantsSimple({\r\n                        ...(term\r\n                            ? {\r\n                                  filter: {\r\n                                      name: {\r\n                                          contains: term,\r\n                                      },\r\n                                  },\r\n                              }\r\n                            : {}),\r\n                        take: 10,\r\n                    })\r\n                    .mapSingle(data => data.productVariants.items);\r\n            }),\r\n        );\r\n    }\r\n\r\n    selectProductVariant() {\r\n        this.modalService\r\n            .fromComponent(RelationSelectorDialogComponent, {\r\n                size: 'md',\r\n                closable: true,\r\n                locals: {\r\n                    title: _('catalog.select-product-variant'),\r\n                    selectorTemplate: this.template,\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.parentFormControl.setValue(result);\r\n                    this.parentFormControl.markAsDirty();\r\n                }\r\n            });\r\n    }\r\n\r\n    remove() {\r\n        this.parentFormControl.setValue(null);\r\n        this.parentFormControl.markAsDirty();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map, startWith, switchMap } from 'rxjs/operators';\r\n\r\nimport {\r\n    GetProductList,\r\n    GetProductSimple,\r\n    RelationCustomFieldConfig,\r\n} from '../../../../common/generated-types';\r\nimport { DataService } from '../../../../data/providers/data.service';\r\nimport { ModalService } from '../../../../providers/modal/modal.service';\r\nimport { RelationSelectorDialogComponent } from '../relation-selector-dialog/relation-selector-dialog.component';\r\n\r\n@Component({\r\n    selector: 'vdr-relation-product-input',\r\n    templateUrl: './relation-product-input.component.html',\r\n    styleUrls: ['./relation-product-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationProductInputComponent implements OnInit {\r\n    @Input() readonly: boolean;\r\n    @Input() parentFormControl: FormControl;\r\n    @Input() config: RelationCustomFieldConfig;\r\n\r\n    @ViewChild('selector') template: TemplateRef<any>;\r\n\r\n    searchControl = new FormControl('');\r\n    searchTerm$ = new Subject<string>();\r\n    results$: Observable<GetProductList.Items[]>;\r\n    product$: Observable<GetProductSimple.Product | undefined>;\r\n\r\n    constructor(private modalService: ModalService, private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.product$ = this.parentFormControl.valueChanges.pipe(\r\n            startWith(this.parentFormControl.value),\r\n            map(product => product?.id),\r\n            distinctUntilChanged(),\r\n            switchMap(id => {\r\n                if (id) {\r\n                    return this.dataService.product\r\n                        .getProductSimple(id)\r\n                        .mapStream(data => data.product || undefined);\r\n                } else {\r\n                    return of(undefined);\r\n                }\r\n            }),\r\n        );\r\n\r\n        this.results$ = this.searchTerm$.pipe(\r\n            debounceTime(200),\r\n            switchMap(term => {\r\n                return this.dataService.product\r\n                    .getProducts({\r\n                        ...(term\r\n                            ? {\r\n                                  filter: {\r\n                                      name: {\r\n                                          contains: term,\r\n                                      },\r\n                                  },\r\n                              }\r\n                            : {}),\r\n                        take: 10,\r\n                    })\r\n                    .mapSingle(data => data.products.items);\r\n            }),\r\n        );\r\n    }\r\n\r\n    selectProduct() {\r\n        this.modalService\r\n            .fromComponent(RelationSelectorDialogComponent, {\r\n                size: 'md',\r\n                closable: true,\r\n                locals: {\r\n                    title: _('catalog.select-product'),\r\n                    selectorTemplate: this.template,\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.parentFormControl.setValue(result);\r\n                    this.parentFormControl.markAsDirty();\r\n                }\r\n            });\r\n    }\r\n\r\n    remove() {\r\n        this.parentFormControl.setValue(null);\r\n        this.parentFormControl.markAsDirty();\r\n    }\r\n}\r\n","import { EventEmitter } from '@angular/core';\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ContentChild,\r\n    Directive,\r\n    Input,\r\n    Output,\r\n    TemplateRef,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[vdrRelationCardPreview]',\r\n})\r\nexport class RelationCardPreviewDirective {}\r\n@Directive({\r\n    selector: '[vdrRelationCardDetail]',\r\n})\r\nexport class RelationCardDetailDirective {}\r\n\r\n@Component({\r\n    selector: 'vdr-relation-card',\r\n    templateUrl: './relation-card.component.html',\r\n    styleUrls: ['./relation-card.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RelationCardComponent {\r\n    @Input() entity: any;\r\n    @Input() placeholderIcon: string;\r\n    @Input() selectLabel: string;\r\n    @Input() readonly: boolean;\r\n    @Input() removable = true;\r\n    @Output() select = new EventEmitter();\r\n    @Output() remove = new EventEmitter();\r\n    @ContentChild(RelationCardPreviewDirective, { read: TemplateRef })\r\n    previewTemplate: TemplateRef<any>;\r\n    @ContentChild(RelationCardDetailDirective, { read: TemplateRef })\r\n    detailTemplate: TemplateRef<any>;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { AssetFragment } from '../../common/generated-types';\r\n\r\n/**\r\n * @description\r\n * Given an Asset object (an object with `preview` and optionally `focalPoint` properties), this pipe\r\n * returns a string with query parameters designed to work with the image resize capabilities of the\r\n * AssetServerPlugin.\r\n *\r\n * @example\r\n * ```HTML\r\n * <img [src]=\"asset | assetPreview:'tiny'\" />\r\n * <img [src]=\"asset | assetPreview:150\" />\r\n * ```\r\n *\r\n * @docsCategory pipes\r\n */\r\n@Pipe({\r\n    name: 'assetPreview',\r\n})\r\nexport class AssetPreviewPipe implements PipeTransform {\r\n    transform(asset?: AssetFragment, preset: string | number = 'thumb'): string {\r\n        if (!asset) {\r\n            return '';\r\n        }\r\n        if (asset.preview == null || typeof asset.preview !== 'string') {\r\n            throw new Error(`Expected an Asset, got ${JSON.stringify(asset)}`);\r\n        }\r\n        const fp = asset.focalPoint ? `&fpx=${asset.focalPoint.x}&fpy=${asset.focalPoint.y}` : '';\r\n        if (Number.isNaN(Number(preset))) {\r\n            return `${asset.preview}?preset=${preset}${fp}`;\r\n        } else {\r\n            return `${asset.preview}?w=${preset}&h=${preset}${fp}`;\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\n\r\n@Pipe({\r\n    name: 'channelCodeToLabel',\r\n})\r\nexport class ChannelLabelPipe implements PipeTransform {\r\n    transform(value: any, ...args: any[]): any {\r\n        if (value === DEFAULT_CHANNEL_CODE) {\r\n            return _('common.default-channel');\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n","import { OnDestroy, Pipe, PipeTransform } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { CustomFieldConfig, LanguageCode, StringFieldOption } from '../../common/generated-types';\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\n/**\r\n * Displays a localized label for a CustomField or StringFieldOption, falling back to the\r\n * name/value if none are defined.\r\n */\r\n@Pipe({\r\n    name: 'customFieldLabel',\r\n    pure: false,\r\n})\r\nexport class CustomFieldLabelPipe implements PipeTransform, OnDestroy {\r\n    private readonly subscription: Subscription;\r\n    private uiLanguageCode: LanguageCode;\r\n\r\n    constructor(private dataService: DataService) {\r\n        this.subscription = dataService.client.uiState().stream$.subscribe(val => {\r\n            this.uiLanguageCode = val.uiState.language;\r\n        });\r\n    }\r\n\r\n    transform(value: CustomFieldConfig | StringFieldOption): string {\r\n        if (!value) {\r\n            return value;\r\n        }\r\n        const { label } = value;\r\n        const name = this.isCustomFieldConfig(value) ? value.name : value.value;\r\n        if (label) {\r\n            const match = label.find(l => l.languageCode === this.uiLanguageCode);\r\n            return match ? match.value : label[0].value;\r\n        } else {\r\n            return name;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private isCustomFieldConfig(input: any): input is CustomFieldConfig {\r\n        return input.hasOwnProperty('name');\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\n\r\nimport { I18nService } from '../../providers/i18n/i18n.service';\r\n\r\n/**\r\n * @description\r\n * Displays a number of milliseconds in a more human-readable format,\r\n * e.g. \"12ms\", \"33s\", \"2:03m\"\r\n *\r\n * @example\r\n * ```TypeScript\r\n * {{ timeInMs | duration }}\r\n * ```\r\n *\r\n * @docsCategory pipes\r\n */\r\n@Pipe({\r\n    name: 'duration',\r\n})\r\nexport class DurationPipe implements PipeTransform {\r\n    constructor(private i18nService: I18nService) {}\r\n\r\n    transform(value: number): string {\r\n        if (value < 1000) {\r\n            return this.i18nService.translate(_('datetime.duration-milliseconds'), { ms: value });\r\n        } else if (value < 1000 * 60) {\r\n            const seconds1dp = +(value / 1000).toFixed(1);\r\n            return this.i18nService.translate(_('datetime.duration-seconds'), { s: seconds1dp });\r\n        } else {\r\n            const minutes = Math.floor(value / (1000 * 60));\r\n            const seconds = Math.round((value % (1000 * 60)) / 1000)\r\n                .toString()\r\n                .padStart(2, '0');\r\n            return this.i18nService.translate(_('datetime.duration-minutes:seconds'), {\r\n                m: minutes,\r\n                s: seconds,\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * @description\r\n * Formats a number into a human-readable file size string.\r\n *\r\n * @example\r\n * ```TypeScript\r\n * {{ fileSizeInBytes | filesize }}\r\n * ```\r\n *\r\n * @docsCategory pipes\r\n */\r\n@Pipe({ name: 'filesize' })\r\nexport class FileSizePipe implements PipeTransform {\r\n    transform(value: number, useSiUnits: boolean = true): any {\r\n        if (typeof value !== 'number' && typeof value !== 'string') {\r\n            return value;\r\n        }\r\n        return humanFileSize(value, useSiUnits === true);\r\n    }\r\n}\r\n\r\n/**\r\n * Convert a number into a human-readable file size string.\r\n * Adapted from http://stackoverflow.com/a/14919494/772859\r\n */\r\nfunction humanFileSize(bytes: number, si: boolean): string {\r\n    const thresh = si ? 1000 : 1024;\r\n    if (Math.abs(bytes) < thresh) {\r\n        return bytes + ' B';\r\n    }\r\n    const units = si\r\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\r\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\r\n    let u = -1;\r\n    do {\r\n        bytes /= thresh;\r\n        ++u;\r\n    } while (Math.abs(bytes) >= thresh && u < units.length - 1);\r\n\r\n    return bytes.toFixed(1) + ' ' + units[u];\r\n}\r\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\n/**\r\n * @description\r\n * A pipe which checks the provided permission against all the permissions of the current user.\r\n * Returns `true` if the current user has that permission.\r\n *\r\n * @example\r\n * ```HTML\r\n * <button [disabled]=\"!('UpdateCatalog' | hasPermission)\">Save Changes</button>\r\n * ```\r\n * @docsCategory pipes\r\n */\r\n@Pipe({\r\n    name: 'hasPermission',\r\n    pure: false,\r\n})\r\nexport class HasPermissionPipe implements PipeTransform, OnDestroy {\r\n    private hasPermission = false;\r\n    private currentPermissions$: Observable<string[]>;\r\n    private lastPermissions: string | null = null;\r\n    private subscription: Subscription;\r\n\r\n    constructor(private dataService: DataService, private changeDetectorRef: ChangeDetectorRef) {\r\n        this.currentPermissions$ = this.dataService.client\r\n            .userStatus()\r\n            .mapStream(data => data.userStatus.permissions);\r\n    }\r\n\r\n    transform(input: string | string[]): any {\r\n        const requiredPermissions = Array.isArray(input) ? input : [input];\r\n        const requiredPermissionsString = requiredPermissions.join(',');\r\n        if (this.lastPermissions !== requiredPermissionsString) {\r\n            this.lastPermissions = requiredPermissionsString;\r\n            this.hasPermission = false;\r\n            this.dispose();\r\n            this.subscription = this.currentPermissions$.subscribe(permissions => {\r\n                this.hasPermission = this.checkPermissions(permissions, requiredPermissions);\r\n                this.changeDetectorRef.markForCheck();\r\n            });\r\n        }\r\n\r\n        return this.hasPermission;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.dispose();\r\n    }\r\n\r\n    private checkPermissions(userPermissions: string[], requiredPermissions: string[]): boolean {\r\n        for (const perm of requiredPermissions) {\r\n            if (userPermissions.includes(perm)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private dispose() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Injectable, OnDestroy, PipeTransform } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\n/**\r\n * Used by locale-aware pipes to handle the task of getting the active languageCode\r\n * of the UI and cleaning up.\r\n */\r\n@Injectable()\r\nexport abstract class LocaleBasePipe implements OnDestroy, PipeTransform {\r\n    protected locale: string;\r\n    private readonly subscription: Subscription;\r\n\r\n    protected constructor(dataService?: DataService, changeDetectorRef?: ChangeDetectorRef) {\r\n        if (dataService && changeDetectorRef) {\r\n            this.subscription = dataService.client\r\n                .uiState()\r\n                .mapStream(data => data.uiState)\r\n                .subscribe(({ language, locale }) => {\r\n                    this.locale = language.replace(/_/g, '-');\r\n                    if (locale) {\r\n                        this.locale += `-${locale}`;\r\n                    }\r\n                    changeDetectorRef.markForCheck();\r\n                });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the active locale after attempting to ensure that the locale string\r\n     * is valid for the Intl API.\r\n     */\r\n    protected getActiveLocale(localeOverride?: unknown): string {\r\n        const locale = typeof localeOverride === 'string' ? localeOverride : this.locale ?? 'en';\r\n        const hyphenated = locale?.replace(/_/g, '-');\r\n\r\n        // Check for a double-region string, containing 2 region codes like\r\n        // pt-BR-BR, which is invalid. In this case, the second region is used\r\n        // and the first region discarded. This would only ever be an issue for\r\n        // those languages where the translation file itself encodes the region,\r\n        // as in pt_BR & pt_PT.\r\n        const matches = hyphenated?.match(/^([a-zA-Z_-]+)(-[A-Z][A-Z])(-[A-Z][A-z])$/);\r\n        if (matches?.length) {\r\n            const overriddenLocale = matches[1] + matches[3];\r\n            return overriddenLocale;\r\n        } else {\r\n            return hyphenated;\r\n        }\r\n    }\r\n\r\n    abstract transform(value: any, ...args): any;\r\n}\r\n","import { ChangeDetectorRef, Optional, Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { LocaleBasePipe } from './locale-base.pipe';\r\n\r\n/**\r\n * @description\r\n * Displays a human-readable name for a given ISO 4217 currency code.\r\n *\r\n * @example\r\n * ```HTML\r\n * {{ order.currencyCode | localeCurrencyName }}\r\n * ```\r\n *\r\n * @docsCategory pipes\r\n */\r\n@Pipe({\r\n    name: 'localeCurrencyName',\r\n    pure: false,\r\n})\r\nexport class LocaleCurrencyNamePipe extends LocaleBasePipe implements PipeTransform {\r\n    constructor(@Optional() dataService?: DataService, @Optional() changeDetectorRef?: ChangeDetectorRef) {\r\n        super(dataService, changeDetectorRef);\r\n    }\r\n    transform(value: any, display: 'full' | 'symbol' | 'name' = 'full', locale?: unknown): any {\r\n        if (value == null || value === '') {\r\n            return '';\r\n        }\r\n        if (typeof value !== 'string') {\r\n            return `Invalid currencyCode \"${value as any}\"`;\r\n        }\r\n        let name = '';\r\n        let symbol = '';\r\n        const activeLocale = this.getActiveLocale(locale);\r\n\r\n        // Awaiting TS types for this API: https://github.com/microsoft/TypeScript/pull/44022/files\r\n        const DisplayNames = (Intl as any).DisplayNames;\r\n\r\n        if (display === 'full' || display === 'name') {\r\n            name = new DisplayNames([activeLocale], {\r\n                type: 'currency',\r\n            }).of(value);\r\n        }\r\n        if (display === 'full' || display === 'symbol') {\r\n            const parts = (\r\n                new Intl.NumberFormat(activeLocale, {\r\n                    style: 'currency',\r\n                    currency: value,\r\n                    currencyDisplay: 'symbol',\r\n                }) as any\r\n            ).formatToParts();\r\n\r\n            symbol = parts.find(p => p.type === 'currency')?.value || value;\r\n        }\r\n        return display === 'full' ? `${name} (${symbol})` : display === 'name' ? name : symbol;\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Optional, Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { LocaleBasePipe } from './locale-base.pipe';\r\n\r\n/**\r\n * @description\r\n * Formats a Vendure monetary value (in cents) into the correct format for the configured currency and display\r\n * locale.\r\n *\r\n * @example\r\n * ```HTML\r\n * {{ variant.priceWithTax | localeCurrency }}\r\n * ```\r\n *\r\n * @docsCategory pipes\r\n */\r\n@Pipe({\r\n    name: 'localeCurrency',\r\n    pure: false,\r\n})\r\nexport class LocaleCurrencyPipe extends LocaleBasePipe implements PipeTransform {\r\n    constructor(@Optional() dataService?: DataService, @Optional() changeDetectorRef?: ChangeDetectorRef) {\r\n        super(dataService, changeDetectorRef);\r\n    }\r\n\r\n    transform(value: unknown, ...args: unknown[]): string | unknown {\r\n        const [currencyCode, locale] = args;\r\n        if (typeof value === 'number' && typeof currencyCode === 'string') {\r\n            const activeLocale = this.getActiveLocale(locale);\r\n            const majorUnits = value / 100;\r\n            return new Intl.NumberFormat(activeLocale, { style: 'currency', currency: currencyCode }).format(\r\n                majorUnits,\r\n            );\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Optional, Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { LocaleBasePipe } from './locale-base.pipe';\r\n\r\n/**\r\n * @description\r\n * A replacement of the Angular DatePipe which makes use of the Intl API\r\n * to format dates according to the selected UI language.\r\n *\r\n * @example\r\n * ```HTML\r\n * {{ order.orderPlacedAt | localeDate }}\r\n * ```\r\n *\r\n * @docsCategory pipes\r\n */\r\n@Pipe({\r\n    name: 'localeDate',\r\n    pure: false,\r\n})\r\nexport class LocaleDatePipe extends LocaleBasePipe implements PipeTransform {\r\n    constructor(@Optional() dataService?: DataService, @Optional() changeDetectorRef?: ChangeDetectorRef) {\r\n        super(dataService, changeDetectorRef);\r\n    }\r\n    transform(value: unknown, ...args: unknown[]): unknown {\r\n        const [format, locale] = args;\r\n        if (this.locale || typeof locale === 'string') {\r\n            const activeLocale = this.getActiveLocale(locale);\r\n            const date =\r\n                value instanceof Date ? value : typeof value === 'string' ? new Date(value) : undefined;\r\n            if (date) {\r\n                const options = this.getOptionsForFormat(typeof format === 'string' ? format : 'medium');\r\n                return new Intl.DateTimeFormat(activeLocale, options).format(date);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getOptionsForFormat(dateFormat: string): Intl.DateTimeFormatOptions | undefined {\r\n        switch (dateFormat) {\r\n            case 'medium':\r\n                return {\r\n                    month: 'short',\r\n                    year: 'numeric',\r\n                    day: 'numeric',\r\n                    hour: 'numeric',\r\n                    minute: 'numeric',\r\n                    second: 'numeric',\r\n                    hour12: true,\r\n                };\r\n            case 'mediumTime':\r\n                return {\r\n                    hour: 'numeric',\r\n                    minute: 'numeric',\r\n                    second: 'numeric',\r\n                    hour12: true,\r\n                };\r\n            case 'longDate':\r\n                return {\r\n                    year: 'numeric',\r\n                    month: 'long',\r\n                    day: 'numeric',\r\n                };\r\n            case 'short':\r\n                return {\r\n                    day: 'numeric',\r\n                    month: 'numeric',\r\n                    year: '2-digit',\r\n                    hour: 'numeric',\r\n                    minute: 'numeric',\r\n                    hour12: true,\r\n                };\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Optional, Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { LocaleBasePipe } from './locale-base.pipe';\r\n\r\n/**\r\n * @description\r\n * Displays a human-readable name for a given ISO 639-1 language code.\r\n *\r\n * @example\r\n * ```HTML\r\n * {{ 'zh_Hant' | localeLanguageName }}\r\n * ```\r\n *\r\n * @docsCategory pipes\r\n */\r\n@Pipe({\r\n    name: 'localeLanguageName',\r\n    pure: false,\r\n})\r\nexport class LocaleLanguageNamePipe extends LocaleBasePipe implements PipeTransform {\r\n    constructor(@Optional() dataService?: DataService, @Optional() changeDetectorRef?: ChangeDetectorRef) {\r\n        super(dataService, changeDetectorRef);\r\n    }\r\n    transform(value: any, locale?: unknown): string {\r\n        if (value == null || value === '') {\r\n            return '';\r\n        }\r\n        if (typeof value !== 'string') {\r\n            return `Invalid language code \"${value as any}\"`;\r\n        }\r\n        const activeLocale = this.getActiveLocale(locale);\r\n\r\n        // Awaiting TS types for this API: https://github.com/microsoft/TypeScript/pull/44022/files\r\n        const DisplayNames = (Intl as any).DisplayNames;\r\n\r\n        try {\r\n            return new DisplayNames([activeLocale.replace('_', '-')], { type: 'language' }).of(\r\n                value.replace('_', '-'),\r\n            );\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Optional, Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DataService } from '../../data/providers/data.service';\r\n\r\nimport { LocaleBasePipe } from './locale-base.pipe';\r\n\r\n/**\r\n * @description\r\n * Displays a human-readable name for a given region.\r\n *\r\n * @example\r\n * ```HTML\r\n * {{ 'GB' | localeRegionName }}\r\n * ```\r\n *\r\n * @docsCategory pipes\r\n */\r\n@Pipe({\r\n    name: 'localeRegionName',\r\n    pure: false,\r\n})\r\nexport class LocaleRegionNamePipe extends LocaleBasePipe implements PipeTransform {\r\n    constructor(@Optional() dataService?: DataService, @Optional() changeDetectorRef?: ChangeDetectorRef) {\r\n        super(dataService, changeDetectorRef);\r\n    }\r\n    transform(value: any, locale?: unknown): string {\r\n        if (value == null || value === '') {\r\n            return '';\r\n        }\r\n        if (typeof value !== 'string') {\r\n            return `Invalid region code \"${value as any}\"`;\r\n        }\r\n        const activeLocale = this.getActiveLocale(locale);\r\n\r\n        // Awaiting TS types for this API: https://github.com/microsoft/TypeScript/pull/44022/files\r\n        const DisplayNames = (Intl as any).DisplayNames;\r\n\r\n        try {\r\n            return new DisplayNames([activeLocale.replace('_', '-')], { type: 'region' }).of(\r\n                value.replace('_', '-'),\r\n            );\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * Formats a string into sentence case (first letter of first word uppercase).\r\n */\r\n@Pipe({ name: 'sentenceCase' })\r\nexport class SentenceCasePipe implements PipeTransform {\r\n    transform(value: any): any {\r\n        if (typeof value === 'string') {\r\n            let lower: string;\r\n            if (isCamelCase(value)) {\r\n                lower = value.replace(/([a-z])([A-Z])/g, '$1 $2').toLowerCase();\r\n            } else {\r\n                lower = value.toLowerCase();\r\n            }\r\n            return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n\r\nfunction isCamelCase(value: string): boolean {\r\n    return /^[a-zA-Z]+[A-Z][a-zA-Z]+$/.test(value);\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * A pipe for sorting elements of an array. Should be used with caution due to the\r\n * potential for perf degredation. Ideally should only be used on small arrays (< 10s of items)\r\n * and in components using OnPush change detection.\r\n */\r\n@Pipe({\r\n    name: 'sort',\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n    transform<T>(value: T[] | readonly T[], orderByProp?: keyof T) {\r\n        return value.slice().sort((a, b) => {\r\n            const aProp = orderByProp ? a[orderByProp] : a;\r\n            const bProp = orderByProp ? b[orderByProp] : b;\r\n            if (aProp === bProp) {\r\n                return 0;\r\n            }\r\n            if (aProp == null) {\r\n                return 1;\r\n            }\r\n            if (bProp == null) {\r\n                return -1;\r\n            }\r\n            return aProp > bProp ? 1 : -1;\r\n        });\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\n\r\n@Pipe({\r\n    name: 'stateI18nToken',\r\n})\r\nexport class StateI18nTokenPipe implements PipeTransform {\r\n    private readonly stateI18nTokens = {\r\n        Created: _('state.created'),\r\n        AddingItems: _('state.adding-items'),\r\n        ArrangingPayment: _('state.arranging-payment'),\r\n        PaymentAuthorized: _('state.payment-authorized'),\r\n        PaymentSettled: _('state.payment-settled'),\r\n        PartiallyShipped: _('state.partially-shipped'),\r\n        Shipped: _('state.shipped'),\r\n        PartiallyDelivered: _('state.partially-delivered'),\r\n        Authorized: _('state.authorized'),\r\n        Delivered: _('state.delivered'),\r\n        Cancelled: _('state.cancelled'),\r\n        Pending: _('state.pending'),\r\n        Settled: _('state.settled'),\r\n        Failed: _('state.failed'),\r\n        Error: _('state.error'),\r\n        Declined: _('state.declined'),\r\n        Modifying: _('state.modifying'),\r\n        ArrangingAdditionalPayment: _('state.arranging-additional-payment'),\r\n    };\r\n    transform<T extends unknown>(value: T): T {\r\n        if (typeof value === 'string' && value.length) {\r\n            const defaultStateToken = this.stateI18nTokens[value as any];\r\n            if (defaultStateToken) {\r\n                return defaultStateToken;\r\n            }\r\n            return ('state.' +\r\n                value\r\n                    .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n                    .replace(/ +/g, '-')\r\n                    .toLowerCase()) as any;\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","/**\r\n * For a given string, returns one of a pre-defined selection of colours.\r\n */\r\nexport function stringToColor(input: string): string {\r\n    if (!input || input === '') {\r\n        return 'var(--color-component-bg-100)';\r\n    }\r\n    const safeColors = [\r\n        '#10893E',\r\n        '#107C10',\r\n        '#7E735F',\r\n        '#2F5646',\r\n        '#498205',\r\n        '#847545',\r\n        '#744DA9',\r\n        '#018574',\r\n        '#486860',\r\n        '#525E54',\r\n        '#647C64',\r\n        '#567C73',\r\n        '#8764B8',\r\n        '#515C6B',\r\n        '#4A5459',\r\n        '#69797E',\r\n        '#0063B1',\r\n        '#0078D7',\r\n        '#2D7D9A',\r\n        '#7A7574',\r\n        '#767676',\r\n    ];\r\n    const value = input.split('').reduce((prev, curr, index) => {\r\n        return prev + Math.round(curr.charCodeAt(0) * Math.log(index + 2));\r\n    }, 0);\r\n    return safeColors[value % safeColors.length];\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { stringToColor } from '../../common/utilities/string-to-color';\r\n\r\n@Pipe({\r\n    name: 'stringToColor',\r\n    pure: true,\r\n})\r\nexport class StringToColorPipe implements PipeTransform {\r\n    transform(value: any): string {\r\n        return stringToColor(value);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport dayjs from 'dayjs';\r\n\r\nimport { I18nService } from '../../providers/i18n/i18n.service';\r\n\r\n/**\r\n * @description\r\n * Converts a date into the format \"3 minutes ago\", \"5 hours ago\" etc.\r\n *\r\n * @example\r\n * ```HTML\r\n * {{ order.orderPlacedAt | timeAgo }}\r\n * ```\r\n *\r\n * @docsCategory pipes\r\n */\r\n@Pipe({\r\n    name: 'timeAgo',\r\n    pure: false,\r\n})\r\nexport class TimeAgoPipe implements PipeTransform {\r\n    constructor(private i18nService: I18nService) {}\r\n\r\n    transform(value: string | Date, nowVal?: string | Date): string {\r\n        const then = dayjs(value);\r\n        const now = dayjs(nowVal || new Date());\r\n        const secondsDiff = now.diff(then, 'second');\r\n        const durations: Array<[number, string]> = [\r\n            [60, _('datetime.ago-seconds')],\r\n            [3600, _('datetime.ago-minutes')],\r\n            [86400, _('datetime.ago-hours')],\r\n            [31536000, _('datetime.ago-days')],\r\n            [Number.MAX_SAFE_INTEGER, _('datetime.ago-years')],\r\n        ];\r\n\r\n        let lastUpperBound = 1;\r\n        for (const [upperBound, translationToken] of durations) {\r\n            if (secondsDiff < upperBound) {\r\n                const count = Math.max(0, Math.floor(secondsDiff / lastUpperBound));\r\n                return this.i18nService.translate(translationToken, { count });\r\n            }\r\n            lastUpperBound = upperBound;\r\n        }\r\n        return then.format();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanDeactivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { DeactivateAware } from '../../../common/deactivate-aware';\r\nimport { ModalService } from '../../../providers/modal/modal.service';\r\n\r\n@Injectable()\r\nexport class CanDeactivateDetailGuard implements CanDeactivate<DeactivateAware> {\r\n    constructor(private modalService: ModalService, private router: Router) {}\r\n\r\n    canDeactivate(\r\n        component: DeactivateAware,\r\n        currentRoute: ActivatedRouteSnapshot,\r\n        currentState: RouterStateSnapshot,\r\n        nextState?: RouterStateSnapshot,\r\n    ): boolean | Observable<boolean> {\r\n        if (!component.canDeactivate()) {\r\n            return this.modalService\r\n                .dialog({\r\n                    title: _('common.confirm-navigation'),\r\n                    body: _('common.there-are-unsaved-changes'),\r\n                    buttons: [\r\n                        { type: 'danger', label: _('common.discard-changes'), returnValue: true },\r\n                        { type: 'primary', label: _('common.cancel-navigation'), returnValue: false },\r\n                    ],\r\n                })\r\n                .pipe(map(result => !!result));\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n","import { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ClarityModule } from '@clr/angular';\r\nimport '@clr/icons';\r\nimport '@clr/icons/shapes/all-shapes';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport '@webcomponents/custom-elements/custom-elements.min.js';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\nimport { ModalService } from '../providers/modal/modal.service';\r\n\r\nimport { ActionBarItemsComponent } from './components/action-bar-items/action-bar-items.component';\r\nimport {\r\n    ActionBarComponent,\r\n    ActionBarLeftComponent,\r\n    ActionBarRightComponent,\r\n} from './components/action-bar/action-bar.component';\r\nimport { AddressFormComponent } from './components/address-form/address-form.component';\r\nimport { AffixedInputComponent } from './components/affixed-input/affixed-input.component';\r\nimport { PercentageSuffixInputComponent } from './components/affixed-input/percentage-suffix-input.component';\r\nimport { AssetFileInputComponent } from './components/asset-file-input/asset-file-input.component';\r\nimport { AssetGalleryComponent } from './components/asset-gallery/asset-gallery.component';\r\nimport { AssetPickerDialogComponent } from './components/asset-picker-dialog/asset-picker-dialog.component';\r\nimport { AssetPreviewDialogComponent } from './components/asset-preview-dialog/asset-preview-dialog.component';\r\nimport { AssetPreviewLinksComponent } from './components/asset-preview-links/asset-preview-links.component';\r\nimport { AssetPreviewComponent } from './components/asset-preview/asset-preview.component';\r\nimport { AssetSearchInputComponent } from './components/asset-search-input/asset-search-input.component';\r\nimport { ChannelAssignmentControlComponent } from './components/channel-assignment-control/channel-assignment-control.component';\r\nimport { ChannelBadgeComponent } from './components/channel-badge/channel-badge.component';\r\nimport { ChipComponent } from './components/chip/chip.component';\r\nimport { ConfigurableInputComponent } from './components/configurable-input/configurable-input.component';\r\nimport { CurrencyInputComponent } from './components/currency-input/currency-input.component';\r\nimport { CustomDetailComponentHostComponent } from './components/custom-detail-component-host/custom-detail-component-host.component';\r\nimport { CustomFieldControlComponent } from './components/custom-field-control/custom-field-control.component';\r\nimport { CustomerLabelComponent } from './components/customer-label/customer-label.component';\r\nimport { DataTableColumnComponent } from './components/data-table/data-table-column.component';\r\nimport { DataTableComponent } from './components/data-table/data-table.component';\r\nimport { DatetimePickerComponent } from './components/datetime-picker/datetime-picker.component';\r\nimport { DropdownItemDirective } from './components/dropdown/dropdown-item.directive';\r\nimport { DropdownMenuComponent } from './components/dropdown/dropdown-menu.component';\r\nimport { DropdownTriggerDirective } from './components/dropdown/dropdown-trigger.directive';\r\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\r\nimport { EditNoteDialogComponent } from './components/edit-note-dialog/edit-note-dialog.component';\r\nimport { EmptyPlaceholderComponent } from './components/empty-placeholder/empty-placeholder.component';\r\nimport { EntityInfoComponent } from './components/entity-info/entity-info.component';\r\nimport { ExtensionHostComponent } from './components/extension-host/extension-host.component';\r\nimport { FacetValueChipComponent } from './components/facet-value-chip/facet-value-chip.component';\r\nimport { FacetValueSelectorComponent } from './components/facet-value-selector/facet-value-selector.component';\r\nimport { FocalPointControlComponent } from './components/focal-point-control/focal-point-control.component';\r\nimport { FormFieldControlDirective } from './components/form-field/form-field-control.directive';\r\nimport { FormFieldComponent } from './components/form-field/form-field.component';\r\nimport { FormItemComponent } from './components/form-item/form-item.component';\r\nimport { FormattedAddressComponent } from './components/formatted-address/formatted-address.component';\r\nimport { HelpTooltipComponent } from './components/help-tooltip/help-tooltip.component';\r\nimport { HistoryEntryDetailComponent } from './components/history-entry-detail/history-entry-detail.component';\r\nimport { ItemsPerPageControlsComponent } from './components/items-per-page-controls/items-per-page-controls.component';\r\nimport { LabeledDataComponent } from './components/labeled-data/labeled-data.component';\r\nimport { LanguageSelectorComponent } from './components/language-selector/language-selector.component';\r\nimport { ManageTagsDialogComponent } from './components/manage-tags-dialog/manage-tags-dialog.component';\r\nimport { DialogButtonsDirective } from './components/modal-dialog/dialog-buttons.directive';\r\nimport { DialogComponentOutletComponent } from './components/modal-dialog/dialog-component-outlet.component';\r\nimport { DialogTitleDirective } from './components/modal-dialog/dialog-title.directive';\r\nimport { ModalDialogComponent } from './components/modal-dialog/modal-dialog.component';\r\nimport { ObjectTreeComponent } from './components/object-tree/object-tree.component';\r\nimport { OrderStateLabelComponent } from './components/order-state-label/order-state-label.component';\r\nimport { PaginationControlsComponent } from './components/pagination-controls/pagination-controls.component';\r\nimport { ProductSelectorComponent } from './components/product-selector/product-selector.component';\r\nimport { ExternalImageDialogComponent } from './components/rich-text-editor/external-image-dialog/external-image-dialog.component';\r\nimport { LinkDialogComponent } from './components/rich-text-editor/link-dialog/link-dialog.component';\r\nimport { RichTextEditorComponent } from './components/rich-text-editor/rich-text-editor.component';\r\nimport { SelectToggleComponent } from './components/select-toggle/select-toggle.component';\r\nimport { SimpleDialogComponent } from './components/simple-dialog/simple-dialog.component';\r\nimport { StatusBadgeComponent } from './components/status-badge/status-badge.component';\r\nimport { TabbedCustomFieldsComponent } from './components/tabbed-custom-fields/tabbed-custom-fields.component';\r\nimport { TableRowActionComponent } from './components/table-row-action/table-row-action.component';\r\nimport { TagSelectorComponent } from './components/tag-selector/tag-selector.component';\r\nimport { TimelineEntryComponent } from './components/timeline-entry/timeline-entry.component';\r\nimport { TitleInputComponent } from './components/title-input/title-input.component';\r\nimport { UiExtensionPointComponent } from './components/ui-extension-point/ui-extension-point.component';\r\nimport { DisabledDirective } from './directives/disabled.directive';\r\nimport { IfDefaultChannelActiveDirective } from './directives/if-default-channel-active.directive';\r\nimport { IfMultichannelDirective } from './directives/if-multichannel.directive';\r\nimport { IfPermissionsDirective } from './directives/if-permissions.directive';\r\nimport { BooleanFormInputComponent } from './dynamic-form-inputs/boolean-form-input/boolean-form-input.component';\r\nimport { JsonEditorFormInputComponent } from './dynamic-form-inputs/code-editor-form-input/json-editor-form-input.component';\r\nimport { CurrencyFormInputComponent } from './dynamic-form-inputs/currency-form-input/currency-form-input.component';\r\nimport { CustomerGroupFormInputComponent } from './dynamic-form-inputs/customer-group-form-input/customer-group-form-input.component';\r\nimport { DateFormInputComponent } from './dynamic-form-inputs/date-form-input/date-form-input.component';\r\nimport { DynamicFormInputComponent } from './dynamic-form-inputs/dynamic-form-input/dynamic-form-input.component';\r\nimport { FacetValueFormInputComponent } from './dynamic-form-inputs/facet-value-form-input/facet-value-form-input.component';\r\nimport { NumberFormInputComponent } from './dynamic-form-inputs/number-form-input/number-form-input.component';\r\nimport { PasswordFormInputComponent } from './dynamic-form-inputs/password-form-input/password-form-input.component';\r\nimport { ProductSelectorFormInputComponent } from './dynamic-form-inputs/product-selector-form-input/product-selector-form-input.component';\r\nimport { RelationAssetInputComponent } from './dynamic-form-inputs/relation-form-input/asset/relation-asset-input.component';\r\nimport { RelationCustomerInputComponent } from './dynamic-form-inputs/relation-form-input/customer/relation-customer-input.component';\r\nimport { RelationGenericInputComponent } from './dynamic-form-inputs/relation-form-input/generic/relation-generic-input.component';\r\nimport { RelationProductVariantInputComponent } from './dynamic-form-inputs/relation-form-input/product-variant/relation-product-variant-input.component';\r\nimport { RelationProductInputComponent } from './dynamic-form-inputs/relation-form-input/product/relation-product-input.component';\r\nimport {\r\n    RelationCardComponent,\r\n    RelationCardDetailDirective,\r\n    RelationCardPreviewDirective,\r\n} from './dynamic-form-inputs/relation-form-input/relation-card/relation-card.component';\r\nimport { RelationFormInputComponent } from './dynamic-form-inputs/relation-form-input/relation-form-input.component';\r\nimport { RelationSelectorDialogComponent } from './dynamic-form-inputs/relation-form-input/relation-selector-dialog/relation-selector-dialog.component';\r\nimport { RichTextFormInputComponent } from './dynamic-form-inputs/rich-text-form-input/rich-text-form-input.component';\r\nimport { SelectFormInputComponent } from './dynamic-form-inputs/select-form-input/select-form-input.component';\r\nimport { TextFormInputComponent } from './dynamic-form-inputs/text-form-input/text-form-input.component';\r\nimport { TextareaFormInputComponent } from './dynamic-form-inputs/textarea-form-input/textarea-form-input.component';\r\nimport { AssetPreviewPipe } from './pipes/asset-preview.pipe';\r\nimport { ChannelLabelPipe } from './pipes/channel-label.pipe';\r\nimport { CustomFieldLabelPipe } from './pipes/custom-field-label.pipe';\r\nimport { DurationPipe } from './pipes/duration.pipe';\r\nimport { FileSizePipe } from './pipes/file-size.pipe';\r\nimport { HasPermissionPipe } from './pipes/has-permission.pipe';\r\nimport { LocaleCurrencyNamePipe } from './pipes/locale-currency-name.pipe';\r\nimport { LocaleCurrencyPipe } from './pipes/locale-currency.pipe';\r\nimport { LocaleDatePipe } from './pipes/locale-date.pipe';\r\nimport { LocaleLanguageNamePipe } from './pipes/locale-language-name.pipe';\r\nimport { LocaleRegionNamePipe } from './pipes/locale-region-name.pipe';\r\nimport { SentenceCasePipe } from './pipes/sentence-case.pipe';\r\nimport { SortPipe } from './pipes/sort.pipe';\r\nimport { StateI18nTokenPipe } from './pipes/state-i18n-token.pipe';\r\nimport { StringToColorPipe } from './pipes/string-to-color.pipe';\r\nimport { TimeAgoPipe } from './pipes/time-ago.pipe';\r\nimport { CanDeactivateDetailGuard } from './providers/routing/can-deactivate-detail-guard';\r\n\r\nconst IMPORTS = [\r\n    ClarityModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    NgSelectModule,\r\n    NgxPaginationModule,\r\n    TranslateModule,\r\n    OverlayModule,\r\n    DragDropModule,\r\n];\r\n\r\nconst DECLARATIONS = [\r\n    ActionBarComponent,\r\n    ActionBarLeftComponent,\r\n    ActionBarRightComponent,\r\n    AssetPreviewComponent,\r\n    AssetPreviewDialogComponent,\r\n    AssetSearchInputComponent,\r\n    ConfigurableInputComponent,\r\n    AffixedInputComponent,\r\n    ChipComponent,\r\n    CurrencyInputComponent,\r\n    LocaleCurrencyNamePipe,\r\n    CustomerLabelComponent,\r\n    CustomFieldControlComponent,\r\n    DataTableComponent,\r\n    DataTableColumnComponent,\r\n    FacetValueSelectorComponent,\r\n    ItemsPerPageControlsComponent,\r\n    PaginationControlsComponent,\r\n    TableRowActionComponent,\r\n    FacetValueChipComponent,\r\n    FileSizePipe,\r\n    FormFieldComponent,\r\n    FormFieldControlDirective,\r\n    FormItemComponent,\r\n    ModalDialogComponent,\r\n    PercentageSuffixInputComponent,\r\n    DialogComponentOutletComponent,\r\n    DialogButtonsDirective,\r\n    DialogTitleDirective,\r\n    SelectToggleComponent,\r\n    LanguageSelectorComponent,\r\n    RichTextEditorComponent,\r\n    SimpleDialogComponent,\r\n    TitleInputComponent,\r\n    SentenceCasePipe,\r\n    DropdownComponent,\r\n    DropdownMenuComponent,\r\n    SortPipe,\r\n    DropdownTriggerDirective,\r\n    DropdownItemDirective,\r\n    OrderStateLabelComponent,\r\n    FormattedAddressComponent,\r\n    LabeledDataComponent,\r\n    StringToColorPipe,\r\n    ObjectTreeComponent,\r\n    IfPermissionsDirective,\r\n    IfMultichannelDirective,\r\n    HasPermissionPipe,\r\n    ActionBarItemsComponent,\r\n    DisabledDirective,\r\n    AssetFileInputComponent,\r\n    AssetGalleryComponent,\r\n    AssetPickerDialogComponent,\r\n    EntityInfoComponent,\r\n    DatetimePickerComponent,\r\n    ChannelBadgeComponent,\r\n    ChannelAssignmentControlComponent,\r\n    ChannelLabelPipe,\r\n    IfDefaultChannelActiveDirective,\r\n    ExtensionHostComponent,\r\n    CustomFieldLabelPipe,\r\n    FocalPointControlComponent,\r\n    AssetPreviewPipe,\r\n    LinkDialogComponent,\r\n    ExternalImageDialogComponent,\r\n    TimeAgoPipe,\r\n    DurationPipe,\r\n    EmptyPlaceholderComponent,\r\n    TimelineEntryComponent,\r\n    HistoryEntryDetailComponent,\r\n    EditNoteDialogComponent,\r\n    ProductSelectorFormInputComponent,\r\n    StateI18nTokenPipe,\r\n    ProductSelectorComponent,\r\n    HelpTooltipComponent,\r\n    CustomerGroupFormInputComponent,\r\n    AddressFormComponent,\r\n    LocaleDatePipe,\r\n    LocaleCurrencyPipe,\r\n    LocaleLanguageNamePipe,\r\n    LocaleRegionNamePipe,\r\n    TagSelectorComponent,\r\n    ManageTagsDialogComponent,\r\n    RelationSelectorDialogComponent,\r\n    RelationCardComponent,\r\n    StatusBadgeComponent,\r\n    TabbedCustomFieldsComponent,\r\n    UiExtensionPointComponent,\r\n    CustomDetailComponentHostComponent,\r\n    AssetPreviewLinksComponent,\r\n];\r\n\r\nconst DYNAMIC_FORM_INPUTS = [\r\n    TextFormInputComponent,\r\n    PasswordFormInputComponent,\r\n    NumberFormInputComponent,\r\n    DateFormInputComponent,\r\n    CurrencyFormInputComponent,\r\n    BooleanFormInputComponent,\r\n    SelectFormInputComponent,\r\n    FacetValueFormInputComponent,\r\n    DynamicFormInputComponent,\r\n    RelationFormInputComponent,\r\n    RelationAssetInputComponent,\r\n    RelationProductInputComponent,\r\n    RelationProductVariantInputComponent,\r\n    RelationCustomerInputComponent,\r\n    RelationCardPreviewDirective,\r\n    RelationCardDetailDirective,\r\n    RelationSelectorDialogComponent,\r\n    RelationGenericInputComponent,\r\n    TextareaFormInputComponent,\r\n    RichTextFormInputComponent,\r\n    JsonEditorFormInputComponent,\r\n];\r\n\r\n@NgModule({\r\n    imports: [IMPORTS],\r\n    exports: [...IMPORTS, ...DECLARATIONS, ...DYNAMIC_FORM_INPUTS],\r\n    declarations: [...DECLARATIONS, ...DYNAMIC_FORM_INPUTS],\r\n    providers: [\r\n        // This needs to be shared, since lazy-loaded\r\n        // modules have their own entryComponents which\r\n        // are unknown to the CoreModule instance of ModalService.\r\n        // See https://github.com/angular/angular/issues/14324#issuecomment-305650763\r\n        ModalService,\r\n        CanDeactivateDetailGuard,\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class SharedModule {}\r\n","import { PlatformLocation } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslateCompiler, TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { MessageFormatConfig, MESSAGE_FORMAT_CONFIG } from 'ngx-translate-messageformat-compiler';\r\n\r\nimport { getAppConfig } from './app.config';\r\nimport { getDefaultUiLanguage } from './common/utilities/get-default-ui-language';\r\nimport { AppShellComponent } from './components/app-shell/app-shell.component';\r\nimport { BreadcrumbComponent } from './components/breadcrumb/breadcrumb.component';\r\nimport { ChannelSwitcherComponent } from './components/channel-switcher/channel-switcher.component';\r\nimport { MainNavComponent } from './components/main-nav/main-nav.component';\r\nimport { NotificationComponent } from './components/notification/notification.component';\r\nimport { OverlayHostComponent } from './components/overlay-host/overlay-host.component';\r\nimport { ThemeSwitcherComponent } from './components/theme-switcher/theme-switcher.component';\r\nimport { UiLanguageSwitcherDialogComponent } from './components/ui-language-switcher-dialog/ui-language-switcher-dialog.component';\r\nimport { UserMenuComponent } from './components/user-menu/user-menu.component';\r\nimport { DataModule } from './data/data.module';\r\nimport { CustomHttpTranslationLoader } from './providers/i18n/custom-http-loader';\r\nimport { InjectableTranslateMessageFormatCompiler } from './providers/i18n/custom-message-format-compiler';\r\nimport { I18nService } from './providers/i18n/i18n.service';\r\nimport { LocalStorageService } from './providers/local-storage/local-storage.service';\r\nimport { registerDefaultFormInputs } from './shared/dynamic-form-inputs/register-dynamic-input-components';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        DataModule,\r\n        SharedModule,\r\n        BrowserAnimationsModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient, PlatformLocation],\r\n            },\r\n            compiler: { provide: TranslateCompiler, useClass: InjectableTranslateMessageFormatCompiler },\r\n        }),\r\n    ],\r\n    providers: [\r\n        { provide: MESSAGE_FORMAT_CONFIG, useFactory: getLocales },\r\n        registerDefaultFormInputs(),\r\n        Title,\r\n    ],\r\n    exports: [SharedModule, OverlayHostComponent],\r\n    declarations: [\r\n        AppShellComponent,\r\n        UserMenuComponent,\r\n        MainNavComponent,\r\n        BreadcrumbComponent,\r\n        OverlayHostComponent,\r\n        NotificationComponent,\r\n        UiLanguageSwitcherDialogComponent,\r\n        ChannelSwitcherComponent,\r\n        ThemeSwitcherComponent,\r\n    ],\r\n})\r\nexport class CoreModule {\r\n    constructor(\r\n        private i18nService: I18nService,\r\n        private localStorageService: LocalStorageService,\r\n        private titleService: Title,\r\n    ) {\r\n        this.initUiLanguages();\r\n        this.initUiTitle();\r\n    }\r\n\r\n    private initUiLanguages() {\r\n        const defaultLanguage = getDefaultUiLanguage();\r\n        const lastLanguage = this.localStorageService.get('uiLanguageCode');\r\n        const availableLanguages = getAppConfig().availableLanguages;\r\n\r\n        if (!availableLanguages.includes(defaultLanguage)) {\r\n            throw new Error(\r\n                `The defaultLanguage \"${defaultLanguage}\" must be one of the availableLanguages [${availableLanguages\r\n                    .map(l => `\"${l}\"`)\r\n                    .join(', ')}]`,\r\n            );\r\n        }\r\n        const uiLanguage =\r\n            lastLanguage && availableLanguages.includes(lastLanguage) ? lastLanguage : defaultLanguage;\r\n        this.localStorageService.set('uiLanguageCode', uiLanguage);\r\n        this.i18nService.setLanguage(uiLanguage);\r\n        this.i18nService.setDefaultLanguage(defaultLanguage);\r\n        this.i18nService.setAvailableLanguages(availableLanguages || [defaultLanguage]);\r\n    }\r\n\r\n    private initUiTitle() {\r\n        const title = getAppConfig().brand || 'VendureAdmin';\r\n\r\n        this.titleService.setTitle(title);\r\n    }\r\n}\r\n\r\nexport function HttpLoaderFactory(http: HttpClient, location: PlatformLocation) {\r\n    // Dynamically get the baseHref, which is configured in the angular.json file\r\n    const baseHref = location.getBaseHrefFromDOM();\r\n    return new CustomHttpTranslationLoader(http, baseHref + 'i18n-messages/');\r\n}\r\n\r\n/**\r\n * Returns the locales defined in the vendure-ui-config.json, ensuring that the\r\n * default language is the first item in the array as per the messageformat\r\n * documentation:\r\n *\r\n * > The default locale will be the first entry of the array\r\n * https://messageformat.github.io/messageformat/MessageFormat\r\n */\r\nexport function getLocales(): MessageFormatConfig {\r\n    const locales = getAppConfig().availableLanguages;\r\n    const defaultLanguage = getDefaultUiLanguage();\r\n    const localesWithoutDefault = locales.filter(l => l !== defaultLanguage);\r\n    return {\r\n        locales: [defaultLanguage, ...localesWithoutDefault],\r\n    };\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './core.module';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\n@NgModule({\r\n    imports: [SharedModule, CoreModule],\r\n    declarations: [AppComponent],\r\n    exports: [AppComponent],\r\n})\r\nexport class AppComponentModule {}\r\n","import { AbstractControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { combineLatest, Observable, of, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, shareReplay, switchMap, takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport { DataService } from '../data/providers/data.service';\r\nimport { ServerConfigService } from '../data/server-config';\r\n\r\nimport { DeactivateAware } from './deactivate-aware';\r\nimport { CustomFieldConfig, CustomFields, LanguageCode } from './generated-types';\r\nimport { TranslationOf } from './utilities/find-translation';\r\nimport { getDefaultUiLanguage } from './utilities/get-default-ui-language';\r\n\r\n/**\r\n * @description\r\n * A base class for entity detail views. It should be used in conjunction with the\r\n * {@link BaseEntityResolver}.\r\n *\r\n * @example\r\n * ```TypeScript\r\n * \\@Component({\r\n *   selector: 'app-my-entity',\r\n *   templateUrl: './my-entity.component.html',\r\n *   styleUrls: ['./my-entity.component.scss'],\r\n *   changeDetection: ChangeDetectionStrategy.OnPush,\r\n * })\r\n * export class GlobalSettingsComponent extends BaseDetailComponent<MyEntity.Fragment> implements OnInit {\r\n *   detailForm: FormGroup;\r\n *\r\n *   constructor(\r\n *     router: Router,\r\n *     route: ActivatedRoute,\r\n *     serverConfigService: ServerConfigService,\r\n *     protected dataService: DataService,\r\n *     private formBuilder: FormBuilder,\r\n *   ) {\r\n *     super(route, router, serverConfigService, dataService);\r\n *     this.detailForm = this.formBuilder.group({\r\n *       name: [''],\r\n *     });\r\n *   }\r\n *\r\n *   protected setFormValues(entity: MyEntity.Fragment, languageCode: LanguageCode): void {\r\n *     this.detailForm.patchValue({\r\n *       name: entity.name,\r\n *     });\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * @docsCategory list-detail-views\r\n */\r\nexport abstract class BaseDetailComponent<Entity extends { id: string; updatedAt?: string }>\r\n    implements DeactivateAware\r\n{\r\n    entity$: Observable<Entity>;\r\n    availableLanguages$: Observable<LanguageCode[]>;\r\n    languageCode$: Observable<LanguageCode>;\r\n    isNew$: Observable<boolean>;\r\n    id: string;\r\n    abstract detailForm: FormGroup;\r\n    protected destroy$ = new Subject<void>();\r\n\r\n    protected constructor(\r\n        protected route: ActivatedRoute,\r\n        protected router: Router,\r\n        protected serverConfigService: ServerConfigService,\r\n        protected dataService: DataService,\r\n    ) {}\r\n\r\n    init() {\r\n        this.entity$ = this.route.data.pipe(\r\n            switchMap(data => (data.entity as Observable<Entity>).pipe(takeUntil(this.destroy$))),\r\n            tap(entity => (this.id = entity.id)),\r\n            shareReplay(1),\r\n        );\r\n        this.isNew$ = this.entity$.pipe(\r\n            map(entity => entity.id === ''),\r\n            shareReplay(1),\r\n        );\r\n        this.languageCode$ = this.route.paramMap.pipe(\r\n            map(paramMap => paramMap.get('lang')),\r\n            switchMap(lang => {\r\n                if (lang) {\r\n                    return of(lang as LanguageCode);\r\n                } else {\r\n                    return this.dataService.client.uiState().mapSingle(data => data.uiState.contentLanguage);\r\n                }\r\n            }),\r\n            distinctUntilChanged(),\r\n            shareReplay(1),\r\n        );\r\n\r\n        this.availableLanguages$ = this.serverConfigService.getAvailableLanguages();\r\n\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(([entity, languageCode]) => {\r\n                this.setFormValues(entity, languageCode);\r\n                this.detailForm.markAsPristine();\r\n            });\r\n    }\r\n\r\n    destroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    setLanguage(code: LanguageCode) {\r\n        this.setQueryParam('lang', code);\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n\r\n    canDeactivate(): boolean {\r\n        return this.detailForm && this.detailForm.pristine;\r\n    }\r\n\r\n    protected abstract setFormValues(entity: Entity, languageCode: LanguageCode): void;\r\n\r\n    protected setCustomFieldFormValues<T = Entity>(\r\n        customFields: CustomFieldConfig[],\r\n        formGroup: AbstractControl | null,\r\n        entity: T,\r\n        currentTranslation?: TranslationOf<T>,\r\n    ) {\r\n        for (const fieldDef of customFields) {\r\n            const key = fieldDef.name;\r\n            const value =\r\n                fieldDef.type === 'localeString'\r\n                    ? (currentTranslation as any)?.customFields?.[key]\r\n                    : (entity as any).customFields?.[key];\r\n            const control = formGroup?.get(key);\r\n            if (control) {\r\n                control.patchValue(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected getCustomFieldConfig(key: Exclude<keyof CustomFields, '__typename'>): CustomFieldConfig[] {\r\n        return this.serverConfigService.getCustomFieldsFor(key);\r\n    }\r\n\r\n    protected setQueryParam(key: string, value: any) {\r\n        this.router.navigate(\r\n            [\r\n                './',\r\n                {\r\n                    ...this.route.snapshot.params,\r\n                    [key]: value,\r\n                },\r\n            ],\r\n            {\r\n                relativeTo: this.route,\r\n                queryParamsHandling: 'merge',\r\n            },\r\n        );\r\n    }\r\n}\r\n","import {\r\n    ActivatedRouteSnapshot,\r\n    ActivationStart,\r\n    Resolve,\r\n    ResolveData,\r\n    Router,\r\n    RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Type } from '@vendure/common/lib/shared-types';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map, shareReplay, take, takeUntil } from 'rxjs/operators';\r\n\r\nexport interface EntityResolveData<R> extends ResolveData {\r\n    entity: Type<BaseEntityResolver<R>>;\r\n}\r\n\r\nexport function createResolveData<T extends BaseEntityResolver<R>, R>(\r\n    resolver: Type<T>,\r\n): EntityResolveData<R> {\r\n    return {\r\n        entity: resolver,\r\n    };\r\n}\r\n\r\n/**\r\n * @description\r\n * A base resolver for an entity detail route. Resolves to an observable of the given entity, or a \"blank\"\r\n * version if the route id equals \"create\". Should be used together with details views which extend the\r\n * {@link BaseDetailComponent}.\r\n *\r\n * @example\r\n * ```TypeScript\r\n * \\@Injectable({\r\n *   providedIn: 'root',\r\n * })\r\n * export class MyEntityResolver extends BaseEntityResolver<MyEntity.Fragment> {\r\n *   constructor(router: Router, dataService: DataService) {\r\n *     super(\r\n *       router,\r\n *       {\r\n *         __typename: 'MyEntity',\r\n *         id: '',\r\n *         createdAt: '',\r\n *         updatedAt: '',\r\n *         name: '',\r\n *       },\r\n *       id => dataService.query(GET_MY_ENTITY, { id }).mapStream(data => data.myEntity),\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * @docsCategory list-detail-views\r\n */\r\nexport class BaseEntityResolver<T> implements Resolve<Observable<T>> {\r\n    constructor(\r\n        protected router: Router,\r\n        private readonly emptyEntity: T,\r\n        private entityStream: (id: string) => Observable<T | null | undefined>,\r\n    ) {}\r\n\r\n    /** @internal */\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Observable<T>> {\r\n        const id = route.paramMap.get('id');\r\n\r\n        // Complete the entity stream upon navigating away\r\n        const navigateAway$ = this.router.events.pipe(filter(event => event instanceof ActivationStart));\r\n\r\n        if (id === 'create') {\r\n            return of(of(this.emptyEntity));\r\n        } else {\r\n            const stream = this.entityStream(id || '').pipe(\r\n                takeUntil(navigateAway$),\r\n                filter(notNullOrUndefined),\r\n                shareReplay(1),\r\n            );\r\n\r\n            return stream.pipe(\r\n                take(1),\r\n                map(() => stream),\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { Directive, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, QueryParamsHandling, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, shareReplay, takeUntil } from 'rxjs/operators';\r\n\r\nimport { QueryResult } from '../data/query-result';\r\n\r\nexport type ListQueryFn<R> = (take: number, skip: number, ...args: any[]) => QueryResult<R, any>;\r\nexport type MappingFn<T, R> = (result: R) => { items: T[]; totalItems: number };\r\nexport type OnPageChangeFn<V> = (skip: number, take: number) => V;\r\n\r\n/**\r\n * @description\r\n * This is a base class which implements the logic required to fetch and manipulate\r\n * a list of data from a query which returns a PaginatedList type.\r\n *\r\n * @example\r\n * ```TypeScript\r\n * \\@Component({\r\n *   selector: 'my-entity-list',\r\n *   templateUrl: './my-entity-list.component.html',\r\n *   styleUrls: ['./my-entity-list.component.scss'],\r\n *   changeDetection: ChangeDetectionStrategy.OnPush,\r\n * })\r\n * export class MyEntityListComponent extends BaseListComponent<GetMyEntityList.Query, GetMyEntityList.Items> {\r\n *   constructor(\r\n *     private dataService: DataService,\r\n *     router: Router,\r\n *     route: ActivatedRoute,\r\n *   ) {\r\n *     super(router, route);\r\n *     super.setQueryFn(\r\n *       (...args: any[]) => this.dataService.query<GetMyEntityList.Query>(GET_MY_ENTITY_LIST),\r\n *       data => data.myEntities,\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * The template for the component will typically use the {@link DataTableComponent} to display the results.\r\n *\r\n * @example\r\n * ```HTML\r\n * <vdr-action-bar>\r\n *   <vdr-ab-right>\r\n *     <a class=\"btn btn-primary\" [routerLink]=\"['./create']\" *vdrIfPermissions=\"['CreateSettings', 'CreateTaxRate']\">\r\n *       <clr-icon shape=\"plus\"></clr-icon>\r\n *       Create new my entity\r\n *     </a>\r\n *   </vdr-ab-right>\r\n * </vdr-action-bar>\r\n *\r\n * <vdr-data-table\r\n *   [items]=\"items$ | async\"\r\n *   [itemsPerPage]=\"itemsPerPage$ | async\"\r\n *   [totalItems]=\"totalItems$ | async\"\r\n *   [currentPage]=\"currentPage$ | async\"\r\n *   (pageChange)=\"setPageNumber($event)\"\r\n *   (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n * >\r\n *   <vdr-dt-column>{{ 'common.name' | translate }}</vdr-dt-column>\r\n *   <vdr-dt-column></vdr-dt-column>\r\n *   <ng-template let-myEntity=\"item\">\r\n *     <td class=\"left align-middle\">{{ myEntity.name }}</td>\r\n *     <td class=\"right align-middle\">\r\n *       <vdr-table-row-action\r\n *         iconShape=\"edit\"\r\n *         [label]=\"'common.edit' | translate\"\r\n *         [linkTo]=\"['./', myEntity.id]\"\r\n *       ></vdr-table-row-action>\r\n *     </td>\r\n *   </ng-template>\r\n * </vdr-data-table>\r\n * ```\r\n *\r\n * @docsCategory list-detail-views\r\n */\r\n@Directive()\r\n// tslint:disable-next-line:directive-class-suffix\r\nexport class BaseListComponent<ResultType, ItemType, VariableType = any> implements OnInit, OnDestroy {\r\n    result$: Observable<ResultType>;\r\n    items$: Observable<ItemType[]>;\r\n    totalItems$: Observable<number>;\r\n    itemsPerPage$: Observable<number>;\r\n    currentPage$: Observable<number>;\r\n    protected destroy$ = new Subject<void>();\r\n    private listQuery: QueryResult<ResultType, VariableType>;\r\n    private listQueryFn: ListQueryFn<ResultType>;\r\n    private mappingFn: MappingFn<ItemType, ResultType>;\r\n    private onPageChangeFn: OnPageChangeFn<VariableType> = (skip, take) =>\r\n        ({ options: { skip, take } } as any);\r\n    private refresh$ = new BehaviorSubject<undefined>(undefined);\r\n    private defaults: { take: number; skip: number } = { take: 10, skip: 0 };\r\n\r\n    constructor(protected router: Router, protected route: ActivatedRoute) {}\r\n\r\n    /**\r\n     * @description\r\n     * Sets the fetch function for the list being implemented.\r\n     */\r\n    setQueryFn(\r\n        listQueryFn: ListQueryFn<ResultType>,\r\n        mappingFn: MappingFn<ItemType, ResultType>,\r\n        onPageChangeFn?: OnPageChangeFn<VariableType>,\r\n        defaults?: { take: number; skip: number },\r\n    ) {\r\n        this.listQueryFn = listQueryFn;\r\n        this.mappingFn = mappingFn;\r\n        if (onPageChangeFn) {\r\n            this.onPageChangeFn = onPageChangeFn;\r\n        }\r\n        if (defaults) {\r\n            this.defaults = defaults;\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    ngOnInit() {\r\n        if (!this.listQueryFn) {\r\n            throw new Error(\r\n                `No listQueryFn has been defined. Please call super.setQueryFn() in the constructor.`,\r\n            );\r\n        }\r\n        this.listQuery = this.listQueryFn(this.defaults.take, this.defaults.skip);\r\n\r\n        const fetchPage = ([currentPage, itemsPerPage, _]: [number, number, undefined]) => {\r\n            const take = itemsPerPage;\r\n            const skip = (currentPage - 1) * itemsPerPage;\r\n            this.listQuery.ref.refetch(this.onPageChangeFn(skip, take));\r\n        };\r\n\r\n        this.result$ = this.listQuery.stream$.pipe(shareReplay(1));\r\n        this.items$ = this.result$.pipe(map(data => this.mappingFn(data).items));\r\n        this.totalItems$ = this.result$.pipe(map(data => this.mappingFn(data).totalItems));\r\n        this.currentPage$ = this.route.queryParamMap.pipe(\r\n            map(qpm => qpm.get('page')),\r\n            map(page => (!page ? 1 : +page)),\r\n            distinctUntilChanged(),\r\n        );\r\n        this.itemsPerPage$ = this.route.queryParamMap.pipe(\r\n            map(qpm => qpm.get('perPage')),\r\n            map(perPage => (!perPage ? this.defaults.take : +perPage)),\r\n            distinctUntilChanged(),\r\n        );\r\n\r\n        combineLatest(this.currentPage$, this.itemsPerPage$, this.refresh$)\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(fetchPage);\r\n    }\r\n\r\n    /** @internal */\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        this.listQuery.completed$.next();\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Sets the current page number in the url.\r\n     */\r\n    setPageNumber(page: number) {\r\n        this.setQueryParam('page', page, { replaceUrl: true });\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Sets the number of items per page in the url.\r\n     */\r\n    setItemsPerPage(perPage: number) {\r\n        this.setQueryParam('perPage', perPage, { replaceUrl: true });\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Re-fetch the current page of results.\r\n     */\r\n    refresh() {\r\n        this.refresh$.next(undefined);\r\n    }\r\n\r\n    protected setQueryParam(\r\n        hash: { [key: string]: any },\r\n        options?: { replaceUrl?: boolean; queryParamsHandling?: QueryParamsHandling },\r\n    );\r\n    protected setQueryParam(\r\n        key: string,\r\n        value: any,\r\n        options?: { replaceUrl?: boolean; queryParamsHandling?: QueryParamsHandling },\r\n    );\r\n    protected setQueryParam(\r\n        keyOrHash: string | { [key: string]: any },\r\n        valueOrOptions?: any,\r\n        maybeOptions?: { replaceUrl?: boolean; queryParamsHandling?: QueryParamsHandling },\r\n    ) {\r\n        const paramsObject = typeof keyOrHash === 'string' ? { [keyOrHash]: valueOrOptions } : keyOrHash;\r\n        const options = (typeof keyOrHash === 'string' ? maybeOptions : valueOrOptions) ?? {};\r\n        this.router.navigate(['./'], {\r\n            queryParams: typeof keyOrHash === 'string' ? { [keyOrHash]: valueOrOptions } : keyOrHash,\r\n            relativeTo: this.route,\r\n            queryParamsHandling: 'merge',\r\n            ...options,\r\n        });\r\n    }\r\n}\r\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { BreadcrumbValue } from '../components/breadcrumb/breadcrumb.component';\n\n/**\n * Creates an observable of breadcrumb links for use in the route config of a detail route.\n */\nexport function detailBreadcrumb<T>(options: {\n    entity: Observable<T>;\n    id: string;\n    breadcrumbKey: string;\n    getName: (entity: T) => string;\n    route: string;\n}): Observable<BreadcrumbValue> {\n    return options.entity.pipe(\n        map(entity => {\n            let label = '';\n            if (options.id === 'create') {\n                label = 'common.create';\n            } else {\n                label = `${options.getName(entity)}`;\n            }\n            return [\n                {\n                    label: options.breadcrumbKey,\n                    link: ['../', options.route],\n                },\n                {\n                    label,\n                    link: [options.route, options.id],\n                },\n            ];\n        }),\n    );\n}\n","import { LanguageCode } from '../generated-types';\r\n\r\nexport type Translation<T> = T & { languageCode: LanguageCode };\r\nexport type PossiblyTranslatable<T> = { translations?: Array<Translation<T>> | null };\r\nexport type TranslationOf<E> = E extends PossiblyTranslatable<infer U> ? U : undefined;\r\n\r\n/**\r\n * @description\r\n * Given a translatable entity, returns the translation in the specified LanguageCode if\r\n * one exists.\r\n */\r\nexport function findTranslation<E extends PossiblyTranslatable<any>>(\r\n    entity: E | undefined,\r\n    languageCode: LanguageCode,\r\n): TranslationOf<E> | undefined {\r\n    return (entity?.translations || []).find(t => t.languageCode === languageCode);\r\n}\r\n","import { CustomFieldsObject, CustomFieldType } from '@vendure/common/lib/shared-types';\nimport { assertNever } from '@vendure/common/lib/shared-utils';\n\nimport { CustomFieldConfig, LanguageCode } from '../generated-types';\n\nimport { findTranslation } from './find-translation';\n\nexport interface TranslatableUpdateOptions<T extends { translations: any[] } & MayHaveCustomFields> {\n    translatable: T;\n    updatedFields: { [key: string]: any };\n    languageCode: LanguageCode;\n    customFieldConfig?: CustomFieldConfig[];\n    defaultTranslation?: Partial<T['translations'][number]>;\n}\n\nexport type MayHaveCustomFields = {\n    customFields?: { [key: string]: any };\n};\n\n/**\n * When updating an entity which has translations, the value from the form will pertain to the current\n * languageCode. This function ensures that the \"translations\" array is correctly set based on the\n * existing languages and the updated values in the specified language.\n */\nexport function createUpdatedTranslatable<T extends { translations: any[] } & MayHaveCustomFields>(\n    options: TranslatableUpdateOptions<T>,\n): T {\n    const { translatable, updatedFields, languageCode, customFieldConfig, defaultTranslation } = options;\n    const currentTranslation =\n        findTranslation(translatable, languageCode) || defaultTranslation || ({} as any);\n    const index = translatable.translations.indexOf(currentTranslation);\n    const newTranslation = patchObject(currentTranslation, updatedFields);\n    const newCustomFields: CustomFieldsObject = {};\n    const newTranslatedCustomFields: CustomFieldsObject = {};\n    if (customFieldConfig && updatedFields.hasOwnProperty('customFields')) {\n        for (const field of customFieldConfig) {\n            const value = updatedFields.customFields[field.name];\n            if (field.type === 'localeString') {\n                newTranslatedCustomFields[field.name] = value;\n            } else {\n                newCustomFields[field.name] =\n                    value === '' ? getDefaultValue(field.type as CustomFieldType) : value;\n            }\n        }\n        newTranslation.customFields = newTranslatedCustomFields;\n    }\n    const newTranslatable = {\n        ...(patchObject(translatable, updatedFields) as any),\n        ...{ translations: translatable.translations.slice() },\n    };\n    if (customFieldConfig) {\n        newTranslatable.customFields = newCustomFields;\n    }\n    if (index !== -1) {\n        newTranslatable.translations.splice(index, 1, newTranslation);\n    } else {\n        newTranslatable.translations.push(newTranslation);\n    }\n    return newTranslatable;\n}\n\nfunction getDefaultValue(type: CustomFieldType): any {\n    switch (type) {\n        case 'localeString':\n        case 'string':\n        case 'text':\n            return '';\n        case 'boolean':\n            return false;\n        case 'float':\n        case 'int':\n            return 0;\n        case 'datetime':\n            return new Date();\n        case 'relation':\n            return null;\n        default:\n            assertNever(type);\n    }\n}\n\n/**\n * Returns a shallow clone of `obj` with any properties contained in `patch` overwriting\n * those of `obj`.\n */\nfunction patchObject<T extends { [key: string]: any }>(obj: T, patch: { [key: string]: any }): T {\n    const clone: any = Object.assign({}, obj);\n    Object.keys(clone).forEach(key => {\n        if (patch.hasOwnProperty(key)) {\n            clone[key] = patch[key];\n        }\n    });\n    return clone;\n}\n","// Auto-generated by the set-version.js script.\nexport const ADMIN_UI_VERSION = '1.5.0';\n","import { Injectable } from '@angular/core';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\n\nimport { Permission } from '../../common/generated-types';\n\nimport {\n    DashboardWidgetConfig,\n    DashboardWidgetWidth,\n    WidgetLayout,\n    WidgetLayoutDefinition,\n} from './dashboard-widget-types';\n\n/**\n * Responsible for registering dashboard widget components and querying for layouts.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class DashboardWidgetService {\n    private registry = new Map<string, DashboardWidgetConfig>();\n    private layoutDef: WidgetLayoutDefinition = [];\n\n    registerWidget(id: string, config: DashboardWidgetConfig) {\n        if (this.registry.has(id)) {\n            throw new Error(`A dashboard widget with the id \"${id}\" already exists`);\n        }\n\n        this.registry.set(id, config);\n    }\n\n    getAvailableIds(currentUserPermissions: Permission[]): string[] {\n        const hasAllPermissions = (requiredPerms: string[], userPerms: string[]): boolean => {\n            return requiredPerms.every(p => userPerms.includes(p));\n        };\n\n        return [...this.registry.entries()]\n            .filter(([id, config]) => {\n                return (\n                    !config.requiresPermissions ||\n                    hasAllPermissions(config.requiresPermissions, currentUserPermissions)\n                );\n            })\n            .map(([id]) => id);\n    }\n\n    getWidgetById(id: string) {\n        if (!this.registry.has(id)) {\n            throw new Error(`No widget was found with the id \"${id}\"`);\n        }\n        return this.registry.get(id);\n    }\n\n    setDefaultLayout(layout: WidgetLayoutDefinition) {\n        this.layoutDef = layout;\n    }\n\n    getDefaultLayout(): WidgetLayoutDefinition {\n        return this.layoutDef;\n    }\n\n    getWidgetLayout(layoutDef?: WidgetLayoutDefinition): WidgetLayout {\n        const intermediateLayout = (layoutDef || this.layoutDef)\n            .map(({ id, width }) => {\n                const config = this.registry.get(id);\n                if (!config) {\n                    return this.idNotFound(id);\n                }\n                return { id, config, width: this.getValidWidth(id, config, width) };\n            })\n            .filter(notNullOrUndefined);\n\n        return this.buildLayout(intermediateLayout);\n    }\n\n    private idNotFound(id: string): undefined {\n        // tslint:disable-next-line:no-console\n        console.error(\n            `No dashboard widget was found with the id \"${id}\"\\nAvailable ids: ${[...this.registry.keys()]\n                .map(_id => `\"${_id}\"`)\n                .join(', ')}`,\n        );\n        return;\n    }\n\n    private getValidWidth(\n        id: string,\n        config: DashboardWidgetConfig,\n        targetWidth: DashboardWidgetWidth,\n    ): DashboardWidgetWidth {\n        let adjustedWidth = targetWidth;\n        const supportedWidths = config.supportedWidths?.length\n            ? config.supportedWidths\n            : ([3, 4, 6, 8, 12] as DashboardWidgetWidth[]);\n        if (!supportedWidths.includes(targetWidth)) {\n            // Fall back to the largest supported width\n            const sortedWidths = supportedWidths.sort((a, b) => a - b);\n            const fallbackWidth = supportedWidths[sortedWidths.length - 1];\n            // tslint:disable-next-line:no-console\n            console.error(\n                `The \"${id}\" widget does not support the specified width (${targetWidth}).\\nSupported widths are: [${sortedWidths.join(\n                    ', ',\n                )}].\\nUsing (${fallbackWidth}) instead.`,\n            );\n            adjustedWidth = fallbackWidth;\n        }\n        return adjustedWidth;\n    }\n\n    private buildLayout(intermediateLayout: WidgetLayout[number]): WidgetLayout {\n        const layout: WidgetLayout = [];\n        let row: WidgetLayout[number] = [];\n        for (const { id, config, width } of intermediateLayout) {\n            const rowSize = row.reduce((size, c) => size + c.width, 0);\n            if (12 < rowSize + width) {\n                layout.push(row);\n                row = [];\n            }\n            row.push({ id, config, width });\n        }\n        layout.push(row);\n        return layout;\n    }\n}\n","import { APP_INITIALIZER, FactoryProvider } from '@angular/core';\n\nimport { DashboardWidgetConfig, WidgetLayoutDefinition } from './dashboard-widget-types';\nimport { DashboardWidgetService } from './dashboard-widget.service';\n\n/**\n * @description\n * Registers a dashboard widget. Once registered, the widget can be set as part of the default\n * (using {@link setDashboardWidgetLayout}).\n */\nexport function registerDashboardWidget(id: string, config: DashboardWidgetConfig): FactoryProvider {\n    return {\n        provide: APP_INITIALIZER,\n        multi: true,\n        useFactory: (dashboardWidgetService: DashboardWidgetService) => () => {\n            dashboardWidgetService.registerWidget(id, config);\n        },\n        deps: [DashboardWidgetService],\n    };\n}\n\n/**\n * @description\n * Sets the default widget layout for the Admin UI dashboard.\n */\nexport function setDashboardWidgetLayout(layoutDef: WidgetLayoutDefinition): FactoryProvider {\n    return {\n        provide: APP_INITIALIZER,\n        multi: true,\n        useFactory: (dashboardWidgetService: DashboardWidgetService) => () => {\n            dashboardWidgetService.setDefaultLayout(layoutDef);\n        },\n        deps: [DashboardWidgetService],\n    };\n}\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { getAppConfig } from '../../app.config';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n/**\r\n * This guard prevents unauthorized users from accessing any routes which require\r\n * authorization.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n    private readonly externalLoginUrl: string | undefined;\r\n\r\n    constructor(private router: Router, private authService: AuthService) {\r\n        this.externalLoginUrl = getAppConfig().loginUrl;\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot): Observable<boolean> {\r\n        return this.authService.checkAuthenticatedStatus().pipe(\r\n            tap(authenticated => {\r\n                if (!authenticated) {\r\n                    if (this.externalLoginUrl) {\r\n                        window.location.href = this.externalLoginUrl;\r\n                    } else {\r\n                        this.router.navigate(['/login']);\r\n                    }\r\n                }\r\n            }),\r\n        );\r\n    }\r\n}\r\n","export interface ExtensionHostOptions {\r\n    extensionUrl: string;\r\n    openInNewTab?: boolean;\r\n}\r\n\r\nexport class ExtensionHostConfig {\r\n    public extensionUrl: string;\r\n    public openInNewTab: boolean;\r\n    constructor(options: ExtensionHostOptions) {\r\n        this.extensionUrl = options.extensionUrl;\r\n        this.openInNewTab = options.openInNewTab != null ? options.openInNewTab : false;\r\n    }\r\n}\r\n","import { Route } from '@angular/router';\r\n\r\nimport { ExtensionHostConfig, ExtensionHostOptions } from './extension-host-config';\r\nimport { ExtensionHostComponent } from './extension-host.component';\r\n\r\nexport interface ExternalFrameOptions extends ExtensionHostOptions {\r\n    path: string;\r\n    breadcrumbLabel: string;\r\n}\r\n\r\n/**\r\n * This function is used to conveniently configure a UI extension route to\r\n * host an external URL from the Admin UI using the {@link ExtensionHostComponent}\r\n *\r\n * @example\r\n * ```TypeScript\r\n * \\@NgModule({\r\n *     imports: [\r\n *         RouterModule.forChild([\r\n *             hostExternalFrame({\r\n *                 path: '',\r\n *                 breadcrumbLabel: 'Vue.js App',\r\n *                 extensionUrl: './assets/vue-app/index.html',\r\n *                 openInNewTab: false,\r\n *             }),\r\n *         ]),\r\n *     ],\r\n * })\r\n export class VueUiExtensionModule {}\r\n * ```\r\n */\r\nexport function hostExternalFrame(options: ExternalFrameOptions): Route {\r\n    const pathMatch = options.path === '' ? 'full' : 'prefix';\r\n    return {\r\n        path: options.path,\r\n        pathMatch,\r\n        component: ExtensionHostComponent,\r\n        data: {\r\n            breadcrumb: [\r\n                {\r\n                    label: options.breadcrumbLabel,\r\n                    link: ['./'],\r\n                },\r\n            ],\r\n            extensionHostConfig: new ExtensionHostConfig(options),\r\n        },\r\n    };\r\n}\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function unicodePatternValidator(patternRe: RegExp): ValidatorFn {\r\n    const unicodeRe = patternRe.unicode ? patternRe : new RegExp(patternRe, 'u');\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n        const valid = unicodeRe.test(control.value);\r\n        return valid ? null : { pattern: { value: control.value } };\r\n    };\r\n}\r\n","// This file was generated by the build-public-api.ts script\nexport * from './app.component.module';\nexport * from './app.component';\nexport * from './app.config';\nexport * from './common/base-detail.component';\nexport * from './common/base-entity-resolver';\nexport * from './common/base-list.component';\nexport * from './common/component-registry-types';\nexport * from './common/deactivate-aware';\nexport * from './common/detail-breadcrumb';\nexport * from './common/generated-types';\nexport * from './common/introspection-result-wrapper';\nexport * from './common/introspection-result';\nexport * from './common/single-search-selection-model';\nexport * from './common/utilities/configurable-operation-utils';\nexport * from './common/utilities/create-updated-translatable';\nexport * from './common/utilities/find-translation';\nexport * from './common/utilities/flatten-facet-values';\nexport * from './common/utilities/get-default-ui-language';\nexport * from './common/utilities/interpolate-description';\nexport * from './common/utilities/string-to-color';\nexport * from './common/version';\nexport * from './components/app-shell/app-shell.component';\nexport * from './components/breadcrumb/breadcrumb.component';\nexport * from './components/channel-switcher/channel-switcher.component';\nexport * from './components/main-nav/main-nav.component';\nexport * from './components/notification/notification.component';\nexport * from './components/overlay-host/overlay-host.component';\nexport * from './components/theme-switcher/theme-switcher.component';\nexport * from './components/ui-language-switcher-dialog/ui-language-switcher-dialog.component';\nexport * from './components/user-menu/user-menu.component';\nexport * from './core.module';\nexport * from './data/check-jobs-link';\nexport * from './data/client-state/client-defaults';\nexport * from './data/client-state/client-resolvers';\nexport * from './data/data.module';\nexport * from './data/definitions/administrator-definitions';\nexport * from './data/definitions/auth-definitions';\nexport * from './data/definitions/client-definitions';\nexport * from './data/definitions/collection-definitions';\nexport * from './data/definitions/customer-definitions';\nexport * from './data/definitions/facet-definitions';\nexport * from './data/definitions/order-definitions';\nexport * from './data/definitions/product-definitions';\nexport * from './data/definitions/promotion-definitions';\nexport * from './data/definitions/settings-definitions';\nexport * from './data/definitions/shared-definitions';\nexport * from './data/definitions/shipping-definitions';\nexport * from './data/omit-typename-link';\nexport * from './data/providers/administrator-data.service';\nexport * from './data/providers/auth-data.service';\nexport * from './data/providers/base-data.service';\nexport * from './data/providers/client-data.service';\nexport * from './data/providers/collection-data.service';\nexport * from './data/providers/customer-data.service';\nexport * from './data/providers/data.service';\nexport * from './data/providers/facet-data.service';\nexport * from './data/providers/fetch-adapter';\nexport * from './data/providers/interceptor';\nexport * from './data/providers/order-data.service';\nexport * from './data/providers/product-data.service';\nexport * from './data/providers/promotion-data.service';\nexport * from './data/providers/settings-data.service';\nexport * from './data/providers/shipping-method-data.service';\nexport * from './data/query-result';\nexport * from './data/server-config';\nexport * from './data/utils/add-custom-fields';\nexport * from './data/utils/get-server-location';\nexport * from './data/utils/remove-readonly-custom-fields';\nexport * from './data/utils/transform-relation-custom-field-inputs';\nexport * from './providers/auth/auth.service';\nexport * from './providers/component-registry/component-registry.service';\nexport * from './providers/custom-detail-component/custom-detail-component-types';\nexport * from './providers/custom-detail-component/custom-detail-component.service';\nexport * from './providers/custom-field-component/custom-field-component.service';\nexport * from './providers/dashboard-widget/dashboard-widget-types';\nexport * from './providers/dashboard-widget/dashboard-widget.service';\nexport * from './providers/dashboard-widget/register-dashboard-widget';\nexport * from './providers/guard/auth.guard';\nexport * from './providers/health-check/health-check.service';\nexport * from './providers/i18n/custom-http-loader';\nexport * from './providers/i18n/custom-message-format-compiler';\nexport * from './providers/i18n/i18n.service';\nexport * from './providers/job-queue/job-queue.service';\nexport * from './providers/local-storage/local-storage.service';\nexport * from './providers/modal/modal.service';\nexport * from './providers/nav-builder/nav-builder-types';\nexport * from './providers/nav-builder/nav-builder.service';\nexport * from './providers/notification/notification.service';\nexport * from './providers/overlay-host/overlay-host.service';\nexport * from './shared/components/action-bar/action-bar.component';\nexport * from './shared/components/action-bar-items/action-bar-items.component';\nexport * from './shared/components/address-form/address-form.component';\nexport * from './shared/components/affixed-input/affixed-input.component';\nexport * from './shared/components/affixed-input/percentage-suffix-input.component';\nexport * from './shared/components/asset-file-input/asset-file-input.component';\nexport * from './shared/components/asset-gallery/asset-gallery.component';\nexport * from './shared/components/asset-picker-dialog/asset-picker-dialog.component';\nexport * from './shared/components/asset-preview/asset-preview.component';\nexport * from './shared/components/asset-preview-dialog/asset-preview-dialog.component';\nexport * from './shared/components/asset-preview-links/asset-preview-links.component';\nexport * from './shared/components/asset-search-input/asset-search-input.component';\nexport * from './shared/components/channel-assignment-control/channel-assignment-control.component';\nexport * from './shared/components/channel-badge/channel-badge.component';\nexport * from './shared/components/chip/chip.component';\nexport * from './shared/components/configurable-input/configurable-input.component';\nexport * from './shared/components/currency-input/currency-input.component';\nexport * from './shared/components/custom-detail-component-host/custom-detail-component-host.component';\nexport * from './shared/components/custom-field-control/custom-field-control.component';\nexport * from './shared/components/customer-label/customer-label.component';\nexport * from './shared/components/data-table/data-table-column.component';\nexport * from './shared/components/data-table/data-table.component';\nexport * from './shared/components/datetime-picker/constants';\nexport * from './shared/components/datetime-picker/datetime-picker.component';\nexport * from './shared/components/datetime-picker/datetime-picker.service';\nexport * from './shared/components/datetime-picker/types';\nexport * from './shared/components/dropdown/dropdown-item.directive';\nexport * from './shared/components/dropdown/dropdown-menu.component';\nexport * from './shared/components/dropdown/dropdown-trigger.directive';\nexport * from './shared/components/dropdown/dropdown.component';\nexport * from './shared/components/edit-note-dialog/edit-note-dialog.component';\nexport * from './shared/components/empty-placeholder/empty-placeholder.component';\nexport * from './shared/components/entity-info/entity-info.component';\nexport * from './shared/components/extension-host/extension-host-config';\nexport * from './shared/components/extension-host/extension-host.component';\nexport * from './shared/components/extension-host/extension-host.service';\nexport * from './shared/components/extension-host/host-external-frame';\nexport * from './shared/components/facet-value-chip/facet-value-chip.component';\nexport * from './shared/components/facet-value-selector/facet-value-selector.component';\nexport * from './shared/components/focal-point-control/focal-point-control.component';\nexport * from './shared/components/form-field/form-field-control.directive';\nexport * from './shared/components/form-field/form-field.component';\nexport * from './shared/components/form-item/form-item.component';\nexport * from './shared/components/formatted-address/formatted-address.component';\nexport * from './shared/components/help-tooltip/help-tooltip.component';\nexport * from './shared/components/history-entry-detail/history-entry-detail.component';\nexport * from './shared/components/items-per-page-controls/items-per-page-controls.component';\nexport * from './shared/components/labeled-data/labeled-data.component';\nexport * from './shared/components/language-selector/language-selector.component';\nexport * from './shared/components/manage-tags-dialog/manage-tags-dialog.component';\nexport * from './shared/components/modal-dialog/dialog-buttons.directive';\nexport * from './shared/components/modal-dialog/dialog-component-outlet.component';\nexport * from './shared/components/modal-dialog/dialog-title.directive';\nexport * from './shared/components/modal-dialog/modal-dialog.component';\nexport * from './shared/components/object-tree/object-tree.component';\nexport * from './shared/components/order-state-label/order-state-label.component';\nexport * from './shared/components/pagination-controls/pagination-controls.component';\nexport * from './shared/components/product-selector/product-selector.component';\nexport * from './shared/components/rich-text-editor/external-image-dialog/external-image-dialog.component';\nexport * from './shared/components/rich-text-editor/link-dialog/link-dialog.component';\nexport * from './shared/components/rich-text-editor/prosemirror/inputrules';\nexport * from './shared/components/rich-text-editor/prosemirror/keymap';\nexport * from './shared/components/rich-text-editor/prosemirror/menu/images';\nexport * from './shared/components/rich-text-editor/prosemirror/menu/links';\nexport * from './shared/components/rich-text-editor/prosemirror/menu/menu-common';\nexport * from './shared/components/rich-text-editor/prosemirror/menu/menu';\nexport * from './shared/components/rich-text-editor/prosemirror/plugins/link-select-plugin';\nexport * from './shared/components/rich-text-editor/prosemirror/prosemirror.service';\nexport * from './shared/components/rich-text-editor/prosemirror/types';\nexport * from './shared/components/rich-text-editor/prosemirror/utils';\nexport * from './shared/components/rich-text-editor/rich-text-editor.component';\nexport * from './shared/components/select-toggle/select-toggle.component';\nexport * from './shared/components/simple-dialog/simple-dialog.component';\nexport * from './shared/components/status-badge/status-badge.component';\nexport * from './shared/components/tabbed-custom-fields/tabbed-custom-fields.component';\nexport * from './shared/components/table-row-action/table-row-action.component';\nexport * from './shared/components/tag-selector/tag-selector.component';\nexport * from './shared/components/timeline-entry/timeline-entry.component';\nexport * from './shared/components/title-input/title-input.component';\nexport * from './shared/components/ui-extension-point/ui-extension-point.component';\nexport * from './shared/directives/disabled.directive';\nexport * from './shared/directives/if-default-channel-active.directive';\nexport * from './shared/directives/if-directive-base';\nexport * from './shared/directives/if-multichannel.directive';\nexport * from './shared/directives/if-permissions.directive';\nexport * from './shared/dynamic-form-inputs/boolean-form-input/boolean-form-input.component';\nexport * from './shared/dynamic-form-inputs/code-editor-form-input/json-editor-form-input.component';\nexport * from './shared/dynamic-form-inputs/currency-form-input/currency-form-input.component';\nexport * from './shared/dynamic-form-inputs/customer-group-form-input/customer-group-form-input.component';\nexport * from './shared/dynamic-form-inputs/date-form-input/date-form-input.component';\nexport * from './shared/dynamic-form-inputs/dynamic-form-input/dynamic-form-input.component';\nexport * from './shared/dynamic-form-inputs/facet-value-form-input/facet-value-form-input.component';\nexport * from './shared/dynamic-form-inputs/number-form-input/number-form-input.component';\nexport * from './shared/dynamic-form-inputs/password-form-input/password-form-input.component';\nexport * from './shared/dynamic-form-inputs/product-selector-form-input/product-selector-form-input.component';\nexport * from './shared/dynamic-form-inputs/register-dynamic-input-components';\nexport * from './shared/dynamic-form-inputs/relation-form-input/asset/relation-asset-input.component';\nexport * from './shared/dynamic-form-inputs/relation-form-input/customer/relation-customer-input.component';\nexport * from './shared/dynamic-form-inputs/relation-form-input/generic/relation-generic-input.component';\nexport * from './shared/dynamic-form-inputs/relation-form-input/product/relation-product-input.component';\nexport * from './shared/dynamic-form-inputs/relation-form-input/product-variant/relation-product-variant-input.component';\nexport * from './shared/dynamic-form-inputs/relation-form-input/relation-card/relation-card.component';\nexport * from './shared/dynamic-form-inputs/relation-form-input/relation-form-input.component';\nexport * from './shared/dynamic-form-inputs/relation-form-input/relation-selector-dialog/relation-selector-dialog.component';\nexport * from './shared/dynamic-form-inputs/rich-text-form-input/rich-text-form-input.component';\nexport * from './shared/dynamic-form-inputs/select-form-input/select-form-input.component';\nexport * from './shared/dynamic-form-inputs/text-form-input/text-form-input.component';\nexport * from './shared/dynamic-form-inputs/textarea-form-input/textarea-form-input.component';\nexport * from './shared/pipes/asset-preview.pipe';\nexport * from './shared/pipes/channel-label.pipe';\nexport * from './shared/pipes/custom-field-label.pipe';\nexport * from './shared/pipes/duration.pipe';\nexport * from './shared/pipes/file-size.pipe';\nexport * from './shared/pipes/has-permission.pipe';\nexport * from './shared/pipes/locale-base.pipe';\nexport * from './shared/pipes/locale-currency-name.pipe';\nexport * from './shared/pipes/locale-currency.pipe';\nexport * from './shared/pipes/locale-date.pipe';\nexport * from './shared/pipes/locale-language-name.pipe';\nexport * from './shared/pipes/locale-region-name.pipe';\nexport * from './shared/pipes/sentence-case.pipe';\nexport * from './shared/pipes/sort.pipe';\nexport * from './shared/pipes/state-i18n-token.pipe';\nexport * from './shared/pipes/string-to-color.pipe';\nexport * from './shared/pipes/time-ago.pipe';\nexport * from './shared/providers/routing/can-deactivate-detail-guard';\nexport * from './shared/shared.module';\nexport * from './validators/unicode-pattern.validator';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["hasCustomFields","observableCombineLatest","observableOf","_","introspectionResult","ApolloLink","rxjsTake"],"mappings":"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S,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,+BAAe,CAAA;;IAEf,+BAAe,CAAA;;IAEf,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,+BAAe,CAAA;;IAEf,+BAAe,CAAA;;IAEf,+BAAe,CAAA;;IAEf,+BAAe,CAAA;;IAEf,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,+BAAe,CAAA;;IAEf,+BAAe,CAAA;;IAEf,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,+BAAe,CAAA;;IAEf,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,+BAAe,CAAA;;IAEf,+BAAe,CAAA;;IAEf,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,+BAAe,CAAA;;IAEf,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,+BAAe,CAAA;;IAEf,+BAAe,CAAA;;IAEf,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,+BAAe,CAAA;;IAEf,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,+BAAe,CAAA;;IAEf,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,yBAAS,CAAA;;IAET,mCAAmB,CAAA;;IAEnB,mCAAm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"}