{"version":3,"file":"promotion-detail.component.d.ts","sources":["promotion-detail.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BaseDetailComponent, ConfigurableOperation, ConfigurableOperationDefinition, CustomFieldConfig, DataService, LanguageCode, NotificationService, Promotion, ServerConfigService } from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\nexport declare class PromotionDetailComponent extends BaseDetailComponent<Promotion.Fragment> implements OnInit, OnDestroy {\r\n    private changeDetector;\r\n    protected dataService: DataService;\r\n    private formBuilder;\r\n    private notificationService;\r\n    promotion$: Observable<Promotion.Fragment>;\r\n    detailForm: FormGroup;\r\n    customFields: CustomFieldConfig[];\r\n    conditions: ConfigurableOperation[];\r\n    actions: ConfigurableOperation[];\r\n    private allConditions;\r\n    private allActions;\r\n    constructor(router: Router, route: ActivatedRoute, serverConfigService: ServerConfigService, changeDetector: ChangeDetectorRef, dataService: DataService, formBuilder: FormBuilder, notificationService: NotificationService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    getAvailableConditions(): ConfigurableOperationDefinition[];\r\n    getConditionDefinition(condition: ConfigurableOperation): ConfigurableOperationDefinition | undefined;\r\n    getAvailableActions(): ConfigurableOperationDefinition[];\r\n    getActionDefinition(action: ConfigurableOperation): ConfigurableOperationDefinition | undefined;\r\n    saveButtonEnabled(): boolean;\r\n    addCondition(condition: ConfigurableOperation): void;\r\n    addAction(action: ConfigurableOperation): void;\r\n    removeCondition(condition: ConfigurableOperation): void;\r\n    removeAction(action: ConfigurableOperation): void;\r\n    formArrayOf(key: 'conditions' | 'actions'): FormArray;\r\n    create(): void;\r\n    save(): void;\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    protected setFormValues(entity: Promotion.Fragment, languageCode: LanguageCode): void;\r\n    /**\r\n     * Maps an array of conditions or actions to the input format expected by the GraphQL API.\r\n     */\r\n    private mapOperationsToInputs;\r\n    /**\r\n     * Adds a new condition or action to the promotion.\r\n     */\r\n    private addOperation;\r\n    private getDefaultArgValue;\r\n    /**\r\n     * Removes a condition or action from the promotion.\r\n     */\r\n    private removeOperation;\r\n}\r\n"]}