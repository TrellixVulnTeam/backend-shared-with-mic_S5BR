import { Component, ChangeDetectionStrategy, ChangeDetectorRef, ComponentFactoryResolver, Input, ViewChild, ViewContainerRef, NgModule } from '@angular/core';
import { DashboardWidgetService, LocalStorageService, DataService, SortOrder, CoreModule, SharedModule, ADMIN_UI_VERSION, getAppConfig, Permission } from '@vendure/admin-ui/core';
import { assertNever } from '@vendure/common/lib/shared-utils';
import { map, tap, distinctUntilChanged, shareReplay, switchMap } from 'rxjs/operators';
import { __awaiter } from 'tslib';
import { RouterModule } from '@angular/router';
import { marker } from '@biesbjerg/ngx-translate-extract-marker';
import dayjs from 'dayjs';
import { BehaviorSubject } from 'rxjs';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@vendure/admin-ui/core';
import * as ɵngcc2 from '@clr/angular';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/cdk/drag-drop';
import * as ɵngcc5 from '@ngx-translate/core';
import * as ɵngcc6 from '@angular/router';

function DashboardComponent_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 7);
    ɵngcc0.ɵɵlistener("click", function DashboardComponent_button_7_Template_button_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r4); const id_r2 = restoredCtx.$implicit; const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.addWidget(id_r2); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const id_r2 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", id_r2, " ");
} }
const _c0 = function (a0) { return { width: a0 }; };
function DashboardComponent_div_10_div_1_vdr_dashboard_widget_1_button_11_Template(rf, ctx) { if (rf & 1) {
    const _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 22);
    ɵngcc0.ɵɵlistener("click", function DashboardComponent_div_10_div_1_vdr_dashboard_widget_1_button_11_Template_button_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r14); const width_r11 = restoredCtx.$implicit; const widget_r8 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.setWidgetWidth(widget_r8, width_r11); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const width_r11 = ctx.$implicit;
    const widget_r8 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("disabled", width_r11 === widget_r8.width);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 2, "dashboard.widget-width", ɵngcc0.ɵɵpureFunction1(5, _c0, width_r11)), " ");
} }
function DashboardComponent_div_10_div_1_vdr_dashboard_widget_1_Template(rf, ctx) { if (rf & 1) {
    const _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "vdr-dashboard-widget", 12);
    ɵngcc0.ɵɵelementStart(1, "div", 13);
    ɵngcc0.ɵɵelementStart(2, "div", 14);
    ɵngcc0.ɵɵelement(3, "clr-icon", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "vdr-dropdown");
    ɵngcc0.ɵɵelementStart(5, "button", 16);
    ɵngcc0.ɵɵelement(6, "clr-icon", 17);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "vdr-dropdown-menu", 3);
    ɵngcc0.ɵɵelementStart(8, "h4", 18);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(11, DashboardComponent_div_10_div_1_vdr_dashboard_widget_1_button_11_Template, 3, 7, "button", 19);
    ɵngcc0.ɵɵelement(12, "div", 20);
    ɵngcc0.ɵɵelementStart(13, "button", 7);
    ɵngcc0.ɵɵlistener("click", function DashboardComponent_div_10_div_1_vdr_dashboard_widget_1_Template_button_click_13_listener() { ɵngcc0.ɵɵrestoreView(_r18); const widget_r8 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r16 = ɵngcc0.ɵɵnextContext(2); return ctx_r16.removeWidget(widget_r8); });
    ɵngcc0.ɵɵelement(14, "clr-icon", 21);
    ɵngcc0.ɵɵtext(15);
    ɵngcc0.ɵɵpipe(16, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const widget_r8 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("widgetConfig", widget_r8.config);
    ɵngcc0.ɵɵadvance(9);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(10, 4, "dashboard.widget-resize"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r9.getSupportedWidths(widget_r8.config));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(16, 6, "dashboard.remove-widget"), " ");
} }
function DashboardComponent_div_10_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵtemplate(1, DashboardComponent_div_10_div_1_vdr_dashboard_widget_1_Template, 17, 8, "vdr-dashboard-widget", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const widget_r8 = ctx.$implicit;
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r7.getClassForWidth(widget_r8.width))("cdkDragData", widget_r8);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("vdrIfPermissions", widget_r8.config.requiresPermissions || null);
} }
const _c1 = function (a0) { return { index: a0 }; };
function DashboardComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵlistener("cdkDropListDropped", function DashboardComponent_div_10_Template_div_cdkDropListDropped_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.drop($event); });
    ɵngcc0.ɵɵtemplate(1, DashboardComponent_div_10_div_1_Template, 2, 3, "div", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r5 = ctx.$implicit;
    const rowIndex_r6 = ctx.index;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("cdkDropListData", ɵngcc0.ɵɵpureFunction1(3, _c1, rowIndex_r6));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", row_r5)("ngForTrackBy", ctx_r1.trackRowItem);
} }
const _c2 = ["portal"];
function DashboardWidgetComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const title_r3 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, title_r3));
} }
function DashboardWidgetComponent_ng_template_7_Template(rf, ctx) { }
const _c3 = ["*"];
const _c4 = function (a1) { return ["/orders/", a1]; };
function LatestOrdersWidgetComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 1);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelement(2, "vdr-order-state-label", 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "td", 1);
    ɵngcc0.ɵɵelement(4, "vdr-customer-label", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "td", 1);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "td", 1);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵpipe(10, "timeAgo");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "td", 4);
    ɵngcc0.ɵɵelement(12, "vdr-table-row-action", 5);
    ɵngcc0.ɵɵpipe(13, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const order_r1 = ctx.item;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", order_r1.code, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("state", order_r1.state);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("customer", order_r1.customer);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(7, 7, order_r1.total, order_r1.currencyCode));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(10, 10, order_r1.orderPlacedAt));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(13, 12, "common.open"))("linkTo", ɵngcc0.ɵɵpureFunction1(14, _c4, order_r1.id));
} }
function OrderSummaryWidgetComponent_div_18_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelementStart(1, "button", 8);
    ɵngcc0.ɵɵlistener("click", function OrderSummaryWidgetComponent_div_18_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.selection$.next({ timeframe: "day", date: ctx_r3.today }); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "button", 8);
    ɵngcc0.ɵɵlistener("click", function OrderSummaryWidgetComponent_div_18_Template_button_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.selection$.next({ timeframe: "day", date: ctx_r5.yesterday }); });
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "button", 8);
    ɵngcc0.ɵɵlistener("click", function OrderSummaryWidgetComponent_div_18_Template_button_click_7_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.selection$.next({ timeframe: "week" }); });
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "button", 8);
    ɵngcc0.ɵɵlistener("click", function OrderSummaryWidgetComponent_div_18_Template_button_click_10_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.selection$.next({ timeframe: "month" }); });
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const selection_r2 = ctx.ngIf;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("btn-primary", selection_r2.date === ctx_r0.today);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 12, "dashboard.today"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("btn-primary", selection_r2.date === ctx_r0.yesterday);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 14, "dashboard.yesterday"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("btn-primary", selection_r2.timeframe === "week");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(9, 16, "dashboard.thisWeek"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("btn-primary", selection_r2.timeframe === "month");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(12, 18, "dashboard.thisMonth"), " ");
} }
function OrderSummaryWidgetComponent_div_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "localeDate");
    ɵngcc0.ɵɵpipe(3, "localeDate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const range_r8 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(2, 2, range_r8.start), " - ", ɵngcc0.ɵɵpipeBind1(3, 4, range_r8.end), " ");
} }
function WelcomeWidgetComponent_div_0_p_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", ctx_r2.hideVendureBranding ? "" : "Vendure", " ", ctx_r2.hideVersion ? "" : "Admin UI v" + ctx_r2.version, " ");
} }
function WelcomeWidgetComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "h4", 3);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelement(3, "br");
    ɵngcc0.ɵɵelementStart(4, "small", 4);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "timeAgo");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, WelcomeWidgetComponent_div_0_p_7_Template, 2, 2, "p", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const administrator_r1 = ctx.ngIf;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate2(" Welcome, ", administrator_r1.firstName, " ", administrator_r1.lastName, "");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1("Last login: ", ɵngcc0.ɵɵpipeBind1(6, 4, administrator_r1.user.lastLogin), "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.hideVendureBranding || !ctx_r0.hideVersion);
} }
class DashboardComponent {
    constructor(dashboardWidgetService, localStorageService, changedDetectorRef, dataService) {
        this.dashboardWidgetService = dashboardWidgetService;
        this.localStorageService = localStorageService;
        this.changedDetectorRef = changedDetectorRef;
        this.dataService = dataService;
        this.deletionMarker = '__delete__';
    }
    ngOnInit() {
        this.availableWidgetIds$ = this.dataService.client.userStatus().stream$.pipe(map(({ userStatus }) => userStatus.permissions), map(permissions => this.dashboardWidgetService.getAvailableIds(permissions)), tap(ids => (this.widgetLayout = this.initLayout(ids))));
    }
    getClassForWidth(width) {
        switch (width) {
            case 3:
                return `clr-col-12 clr-col-sm-6 clr-col-lg-3`;
            case 4:
                return `clr-col-12 clr-col-sm-6 clr-col-lg-4`;
            case 6:
                return `clr-col-12 clr-col-lg-6`;
            case 8:
                return `clr-col-12 clr-col-lg-8`;
            case 12:
                return `clr-col-12`;
            default:
                assertNever(width);
        }
    }
    getSupportedWidths(config) {
        return config.supportedWidths || [3, 4, 6, 8, 12];
    }
    setWidgetWidth(widget, width) {
        widget.width = width;
        this.recalculateLayout();
    }
    trackRow(index, row) {
        const id = row.map(item => `${item.id}:${item.width}`).join('|');
        return id;
    }
    trackRowItem(index, item) {
        return item.config;
    }
    addWidget(id) {
        var _a;
        const config = this.dashboardWidgetService.getWidgetById(id);
        if (config) {
            const width = this.getSupportedWidths(config)[0];
            const widget = {
                id,
                config,
                width,
            };
            let targetRow;
            if (this.widgetLayout && this.widgetLayout.length) {
                targetRow = this.widgetLayout[this.widgetLayout.length - 1];
            }
            else {
                targetRow = [];
                (_a = this.widgetLayout) === null || _a === void 0 ? void 0 : _a.push(targetRow);
            }
            targetRow.push(widget);
            this.recalculateLayout();
        }
    }
    removeWidget(widget) {
        widget.id = this.deletionMarker;
        this.recalculateLayout();
    }
    drop(event) {
        const { currentIndex, previousIndex, previousContainer, container } = event;
        if (previousIndex === currentIndex && previousContainer.data.index === container.data.index) {
            // Nothing changed
            return;
        }
        if (this.widgetLayout) {
            const previousLayoutRow = this.widgetLayout[previousContainer.data.index];
            const newLayoutRow = this.widgetLayout[container.data.index];
            previousLayoutRow.splice(previousIndex, 1);
            newLayoutRow.splice(currentIndex, 0, event.item.data);
            this.recalculateLayout();
        }
    }
    initLayout(availableIds) {
        const savedLayoutDef = this.localStorageService.get('dashboardWidgetLayout');
        let layoutDef;
        if (savedLayoutDef) {
            // validate all the IDs from the saved layout are still available
            layoutDef = savedLayoutDef.filter(item => availableIds.includes(item.id));
        }
        return this.dashboardWidgetService.getWidgetLayout(layoutDef);
    }
    recalculateLayout() {
        if (this.widgetLayout) {
            const flattened = this.widgetLayout
                .reduce((flat, row) => [...flat, ...row], [])
                .filter(item => item.id !== this.deletionMarker);
            const newLayoutDef = flattened.map(item => ({
                id: item.id,
                width: item.width,
            }));
            this.widgetLayout = this.dashboardWidgetService.getWidgetLayout(newLayoutDef);
            this.localStorageService.set('dashboardWidgetLayout', newLayoutDef);
            setTimeout(() => this.changedDetectorRef.markForCheck());
        }
    }
}
DashboardComponent.ɵfac = function DashboardComponent_Factory(t) { return new (t || DashboardComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DashboardWidgetService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalStorageService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DataService)); };
DashboardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DashboardComponent, selectors: [["vdr-dashboard"]], decls: 11, vars: 8, consts: [[1, "widget-header"], ["vdrDropdownTrigger", "", 1, "btn", "btn-secondary", "btn-sm"], ["shape", "plus"], ["vdrPosition", "bottom-right"], ["class", "button", "vdrDropdownItem", "", 3, "click", 4, "ngFor", "ngForOf"], ["cdkDropListGroup", ""], ["class", "clr-row dashboard-row", "cdkDropList", "", "cdkDropListOrientation", "horizontal", 3, "cdkDropListData", "cdkDropListDropped", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["vdrDropdownItem", "", 1, "button", 3, "click"], ["cdkDropList", "", "cdkDropListOrientation", "horizontal", 1, "clr-row", "dashboard-row", 3, "cdkDropListData", "cdkDropListDropped"], ["class", "dashboard-item", "cdkDrag", "", 3, "ngClass", "cdkDragData", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["cdkDrag", "", 1, "dashboard-item", 3, "ngClass", "cdkDragData"], [3, "widgetConfig", 4, "vdrIfPermissions"], [3, "widgetConfig"], [1, "flex"], ["cdkDragHandle", "", 1, "drag-handle"], ["shape", "drag-handle", "size", "24"], ["vdrDropdownTrigger", "", 1, "icon-button"], ["shape", "ellipsis-vertical"], [1, "dropdown-header"], ["class", "button", "vdrDropdownItem", "", 3, "disabled", "click", 4, "ngFor", "ngForOf"], ["role", "separator", 1, "dropdown-divider"], ["shape", "trash", 1, "is-danger"], ["vdrDropdownItem", "", 1, "button", 3, "disabled", "click"]], template: function DashboardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "vdr-dropdown");
        ɵngcc0.ɵɵelementStart(2, "button", 1);
        ɵngcc0.ɵɵelement(3, "clr-icon", 2);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "vdr-dropdown-menu", 3);
        ɵngcc0.ɵɵtemplate(7, DashboardComponent_button_7_Template, 2, 1, "button", 4);
        ɵngcc0.ɵɵpipe(8, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 5);
        ɵngcc0.ɵɵtemplate(10, DashboardComponent_div_10_Template, 2, 5, "div", 6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 4, "dashboard.add-widget"), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(8, 6, ctx.availableWidgetIds$));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.widgetLayout)("ngForTrackBy", ctx.trackRow);
    } }, directives: function () { return [ɵngcc1.DropdownComponent, ɵngcc1.DropdownTriggerDirective, ɵngcc2.ClrIconCustomTag, ɵngcc1.DropdownMenuComponent, ɵngcc3.NgForOf, ɵngcc4.CdkDropListGroup, ɵngcc2.ClrDatagridItemsTrackBy, ɵngcc1.DropdownItemDirective, ɵngcc4.CdkDropList, ɵngcc4.CdkDrag, ɵngcc3.NgClass, ɵngcc1.IfPermissionsDirective, DashboardWidgetComponent, ɵngcc4.CdkDragHandle]; }, pipes: function () { return [ɵngcc5.TranslatePipe, ɵngcc3.AsyncPipe]; }, styles: [".widget-header[_ngcontent-%COMP%]{display:flex;justify-content:flex-end}.placeholder[_ngcontent-%COMP%]{color:var(--color-grey-300);text-align:center}.placeholder[_ngcontent-%COMP%]   .version[_ngcontent-%COMP%]{font-size:3em;margin:24px;line-height:1em}.placeholder[_ngcontent-%COMP%]     .clr-i-outline{fill:var(--color-grey-200)}vdr-dashboard-widget[_ngcontent-%COMP%]{margin-bottom:24px}.cdk-drag-preview[_ngcontent-%COMP%]{box-sizing:border-box;border-radius:4px}.cdk-drag-placeholder[_ngcontent-%COMP%]{opacity:0}.cdk-drag-animating[_ngcontent-%COMP%]{transition:transform .25s cubic-bezier(0,0,.2,1)}.dashboard-row[_ngcontent-%COMP%]{padding:0;border-width:1;margin-bottom:6px;transition:padding .2s,margin .2s}.dashboard-row.cdk-drop-list-dragging[_ngcontent-%COMP%], .dashboard-row.cdk-drop-list-receiving[_ngcontent-%COMP%]{border:1px dashed var(--color-component-border-200);padding:6px}.dashboard-row.cdk-drop-list-dragging[_ngcontent-%COMP%]   .dashboard-item[_ngcontent-%COMP%]:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}"], changeDetection: 0 });
DashboardComponent.ctorParameters = () => [
    { type: DashboardWidgetService },
    { type: LocalStorageService },
    { type: ChangeDetectorRef },
    { type: DataService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DashboardComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-dashboard',
                template: "<div class=\"widget-header\">\r\n    <vdr-dropdown>\r\n        <button class=\"btn btn-secondary btn-sm\" vdrDropdownTrigger>\r\n            <clr-icon shape=\"plus\"></clr-icon>\r\n            {{ 'dashboard.add-widget' | translate }}\r\n        </button>\r\n        <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n            <button\r\n                class=\"button\"\r\n                vdrDropdownItem\r\n                *ngFor=\"let id of availableWidgetIds$ | async\"\r\n                (click)=\"addWidget(id)\"\r\n            >\r\n                {{ id }}\r\n            </button>\r\n        </vdr-dropdown-menu>\r\n    </vdr-dropdown>\r\n</div>\r\n<div cdkDropListGroup>\r\n    <div\r\n        class=\"clr-row dashboard-row\"\r\n        *ngFor=\"let row of widgetLayout; index as rowIndex; trackBy: trackRow\"\r\n        cdkDropList\r\n        (cdkDropListDropped)=\"drop($event)\"\r\n        cdkDropListOrientation=\"horizontal\"\r\n        [cdkDropListData]=\"{ index: rowIndex }\"\r\n    >\r\n        <div\r\n            *ngFor=\"let widget of row; trackBy: trackRowItem\"\r\n            class=\"dashboard-item\"\r\n            [ngClass]=\"getClassForWidth(widget.width)\"\r\n            cdkDrag\r\n            [cdkDragData]=\"widget\"\r\n        >\r\n            <vdr-dashboard-widget\r\n                *vdrIfPermissions=\"widget.config.requiresPermissions || null\"\r\n                [widgetConfig]=\"widget.config\"\r\n            >\r\n                <div class=\"flex\">\r\n                    <div class=\"drag-handle\" cdkDragHandle>\r\n                        <clr-icon shape=\"drag-handle\" size=\"24\"></clr-icon>\r\n                    </div>\r\n                    <vdr-dropdown>\r\n                        <button class=\"icon-button\" vdrDropdownTrigger>\r\n                            <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                            <h4 class=\"dropdown-header\">{{ 'dashboard.widget-resize' | translate }}</h4>\r\n                            <button\r\n                                class=\"button\"\r\n                                vdrDropdownItem\r\n                                [disabled]=\"width === widget.width\"\r\n                                *ngFor=\"let width of getSupportedWidths(widget.config)\"\r\n                                (click)=\"setWidgetWidth(widget, width)\"\r\n                            >\r\n                                {{ 'dashboard.widget-width' | translate: { width: width } }}\r\n                            </button>\r\n                            <div class=\"dropdown-divider\" role=\"separator\"></div>\r\n                            <button class=\"button\" vdrDropdownItem (click)=\"removeWidget(widget)\">\r\n                                <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                                {{ 'dashboard.remove-widget' | translate }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </div>\r\n            </vdr-dashboard-widget>\r\n        </div>\r\n    </div>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".widget-header{display:flex;justify-content:flex-end}.placeholder{color:var(--color-grey-300);text-align:center}.placeholder .version{font-size:3em;margin:24px;line-height:1em}.placeholder ::ng-deep .clr-i-outline{fill:var(--color-grey-200)}vdr-dashboard-widget{margin-bottom:24px}.cdk-drag-preview{box-sizing:border-box;border-radius:4px}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.dashboard-row{padding:0;border-width:1;margin-bottom:6px;transition:padding .2s,margin .2s}.dashboard-row.cdk-drop-list-dragging,.dashboard-row.cdk-drop-list-receiving{border:1px dashed var(--color-component-border-200);padding:6px}.dashboard-row.cdk-drop-list-dragging .dashboard-item:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}\n"]
            }]
    }], function () { return [{ type: ɵngcc1.DashboardWidgetService }, { type: ɵngcc1.LocalStorageService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.DataService }]; }, null); })();

class DashboardWidgetComponent {
    constructor(componentFactoryResolver) {
        this.componentFactoryResolver = componentFactoryResolver;
    }
    ngAfterViewInit() {
        this.loadWidget();
    }
    loadWidget() {
        return __awaiter(this, void 0, void 0, function* () {
            const loadComponentResult = this.widgetConfig.loadComponent();
            const componentType = loadComponentResult instanceof Promise ? yield loadComponentResult : loadComponentResult;
            this.componentRef = this.portal.createComponent(this.componentFactoryResolver.resolveComponentFactory(componentType));
            this.componentRef.changeDetectorRef.markForCheck();
        });
    }
    ngOnDestroy() {
        if (this.componentRef) {
            this.componentRef.destroy();
        }
    }
}
DashboardWidgetComponent.ɵfac = function DashboardWidgetComponent_Factory(t) { return new (t || DashboardWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver)); };
DashboardWidgetComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DashboardWidgetComponent, selectors: [["vdr-dashboard-widget"]], viewQuery: function DashboardWidgetComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c2, 5, ViewContainerRef);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.portal = _t.first);
    } }, inputs: { widgetConfig: "widgetConfig" }, ngContentSelectors: _c3, decls: 9, vars: 1, consts: [[1, "card"], [1, "card-header"], [1, "title"], [4, "ngIf"], [1, "controls"], [1, "card-block"], ["portal", ""]], template: function DashboardWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtemplate(3, DashboardWidgetComponent_ng_container_3_Template, 3, 3, "ng-container", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵprojection(5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 5);
        ɵngcc0.ɵɵtemplate(7, DashboardWidgetComponent_ng_template_7_Template, 0, 0, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.widgetConfig.title);
    } }, directives: [ɵngcc3.NgIf], pipes: [ɵngcc5.TranslatePipe], styles: ["[_nghost-%COMP%]{display:block}.card[_ngcontent-%COMP%]{margin-top:0;min-height:200px}.card-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between}"], changeDetection: 0 });
DashboardWidgetComponent.ctorParameters = () => [
    { type: ComponentFactoryResolver }
];
DashboardWidgetComponent.propDecorators = {
    widgetConfig: [{ type: Input }],
    portal: [{ type: ViewChild, args: ['portal', { read: ViewContainerRef },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DashboardWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-dashboard-widget',
                template: "<div class=\"card\">\r\n    <div class=\"card-header\">\r\n        <div class=\"title\">\r\n            <ng-container *ngIf=\"widgetConfig.title as title\">{{ title | translate }}</ng-container>\r\n        </div>\r\n        <div class=\"controls\">\r\n            <ng-content></ng-content>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-block\">\r\n        <ng-template #portal></ng-template>\r\n    </div>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{display:block}.card{margin-top:0;min-height:200px}.card-header{display:flex;justify-content:space-between}\n"]
            }]
    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }]; }, { widgetConfig: [{
            type: Input
        }], portal: [{
            type: ViewChild,
            args: ['portal', { read: ViewContainerRef }]
        }] }); })();

const dashboardRoutes = [
    {
        path: '',
        component: DashboardComponent,
        pathMatch: 'full',
    },
];

class LatestOrdersWidgetComponent {
    constructor(dataService) {
        this.dataService = dataService;
    }
    ngOnInit() {
        this.latestOrders$ = this.dataService.order
            .getOrders({
            take: 10,
            filter: {
                active: { eq: false },
                state: { notEq: 'Cancelled' },
            },
            sort: {
                orderPlacedAt: SortOrder.DESC,
            },
        })
            .refetchOnChannelChange()
            .mapStream(data => data.orders.items);
    }
}
LatestOrdersWidgetComponent.ɵfac = function LatestOrdersWidgetComponent_Factory(t) { return new (t || LatestOrdersWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DataService)); };
LatestOrdersWidgetComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LatestOrdersWidgetComponent, selectors: [["vdr-latest-orders-widget"]], decls: 3, vars: 3, consts: [[3, "items"], [1, "left", "align-middle"], [3, "state"], [3, "customer"], [1, "right", "align-middle"], ["iconShape", "shopping-cart", 3, "label", "linkTo"]], template: function LatestOrdersWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "vdr-data-table", 0);
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵtemplate(2, LatestOrdersWidgetComponent_ng_template_2_Template, 14, 16, "ng-template");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("items", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.latestOrders$));
    } }, directives: [ɵngcc1.DataTableComponent, ɵngcc1.OrderStateLabelComponent, ɵngcc1.CustomerLabelComponent, ɵngcc1.TableRowActionComponent], pipes: [ɵngcc3.AsyncPipe, ɵngcc1.LocaleCurrencyPipe, ɵngcc1.TimeAgoPipe, ɵngcc5.TranslatePipe], styles: ["vdr-data-table[_ngcontent-%COMP%]     table{margin-top:0}"], changeDetection: 0 });
LatestOrdersWidgetComponent.ctorParameters = () => [
    { type: DataService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LatestOrdersWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-latest-orders-widget',
                template: "<vdr-data-table [items]=\"latestOrders$ | async\">\r\n    <ng-template let-order=\"item\">\r\n        <td class=\"left align-middle\">\r\n            {{ order.code }}\r\n            <vdr-order-state-label [state]=\"order.state\"></vdr-order-state-label>\r\n        </td>\r\n        <td class=\"left align-middle\">\r\n            <vdr-customer-label [customer]=\"order.customer\"></vdr-customer-label>\r\n        </td>\r\n        <td class=\"left align-middle\">{{ order.total | localeCurrency: order.currencyCode }}</td>\r\n        <td class=\"left align-middle\">{{ order.orderPlacedAt | timeAgo }}</td>\r\n        <td class=\"right align-middle\">\r\n            <vdr-table-row-action\r\n                iconShape=\"shopping-cart\"\r\n                [label]=\"'common.open' | translate\"\r\n                [linkTo]=\"['/orders/', order.id]\"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: ["vdr-data-table ::ng-deep table{margin-top:0}\n"]
            }]
    }], function () { return [{ type: ɵngcc1.DataService }]; }, null); })();
class LatestOrdersWidgetModule {
}
LatestOrdersWidgetModule.ɵfac = function LatestOrdersWidgetModule_Factory(t) { return new (t || LatestOrdersWidgetModule)(); };
LatestOrdersWidgetModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LatestOrdersWidgetModule });
LatestOrdersWidgetModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CoreModule, SharedModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LatestOrdersWidgetModule, [{
        type: NgModule,
        args: [{
                imports: [CoreModule, SharedModule],
                declarations: [LatestOrdersWidgetComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LatestOrdersWidgetModule, { declarations: function () { return [LatestOrdersWidgetComponent]; }, imports: function () { return [CoreModule, SharedModule]; } }); })();

class OrderSummaryWidgetComponent {
    constructor(dataService) {
        this.dataService = dataService;
        this.today = new Date();
        this.yesterday = new Date(new Date().setDate(this.today.getDate() - 1));
        this.selection$ = new BehaviorSubject({
            timeframe: 'day',
            date: this.today,
        });
    }
    ngOnInit() {
        this.dateRange$ = this.selection$.pipe(distinctUntilChanged(), map(selection => {
            return {
                start: dayjs(selection.date).startOf(selection.timeframe).toDate(),
                end: dayjs(selection.date).endOf(selection.timeframe).toDate(),
            };
        }), shareReplay(1));
        const orderSummary$ = this.dateRange$.pipe(switchMap(({ start, end }) => {
            return this.dataService.order
                .getOrderSummary(start, end)
                .refetchOnChannelChange()
                .mapStream(data => data.orders);
        }), shareReplay(1));
        this.totalOrderCount$ = orderSummary$.pipe(map(res => res.totalItems));
        this.totalOrderValue$ = orderSummary$.pipe(map(res => res.items.reduce((total, order) => total + order.total, 0) / 100));
        this.currencyCode$ = this.dataService.settings
            .getActiveChannel()
            .refetchOnChannelChange()
            .mapStream(data => data.activeChannel.currencyCode || undefined);
    }
}
OrderSummaryWidgetComponent.ɵfac = function OrderSummaryWidgetComponent_Factory(t) { return new (t || OrderSummaryWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DataService)); };
OrderSummaryWidgetComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderSummaryWidgetComponent, selectors: [["vdr-order-summary-widget"]], decls: 22, vars: 23, consts: [[1, "stats"], [1, "stat"], [1, "stat-figure"], [1, "stat-label"], [1, "footer"], ["class", "btn-group btn-outline-primary btn-sm", 4, "ngIf"], ["class", "date-range p5", 4, "ngIf"], [1, "btn-group", "btn-outline-primary", "btn-sm"], [1, "btn", 3, "click"], [1, "date-range", "p5"]], template: function OrderSummaryWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 3);
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "div", 1);
        ɵngcc0.ɵɵelementStart(9, "div", 2);
        ɵngcc0.ɵɵtext(10);
        ɵngcc0.ɵɵpipe(11, "currency");
        ɵngcc0.ɵɵpipe(12, "async");
        ɵngcc0.ɵɵpipe(13, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "div", 3);
        ɵngcc0.ɵɵtext(15);
        ɵngcc0.ɵɵpipe(16, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "div", 4);
        ɵngcc0.ɵɵtemplate(18, OrderSummaryWidgetComponent_div_18_Template, 13, 20, "div", 5);
        ɵngcc0.ɵɵpipe(19, "async");
        ɵngcc0.ɵɵtemplate(20, OrderSummaryWidgetComponent_div_20_Template, 4, 6, "div", 6);
        ɵngcc0.ɵɵpipe(21, "async");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 6, ctx.totalOrderCount$));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 8, "dashboard.total-orders"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(11, 10, ɵngcc0.ɵɵpipeBind1(12, 13, ctx.totalOrderValue$), ɵngcc0.ɵɵpipeBind1(13, 15, ctx.currencyCode$) || undefined), " ");
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(16, 17, "dashboard.total-order-value"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(19, 19, ctx.selection$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(21, 21, ctx.dateRange$));
    } }, directives: [ɵngcc3.NgIf], pipes: [ɵngcc3.AsyncPipe, ɵngcc5.TranslatePipe, ɵngcc3.CurrencyPipe, ɵngcc1.LocaleDatePipe], styles: [".stats[_ngcontent-%COMP%]{display:flex;justify-content:space-evenly}.stat[_ngcontent-%COMP%]{text-align:center}.stat-figure[_ngcontent-%COMP%]{font-size:2rem;line-height:3rem}.stat-label[_ngcontent-%COMP%]{text-transform:uppercase}.date-range[_ngcontent-%COMP%]{margin-top:0}.footer[_ngcontent-%COMP%]{margin-top:24px;display:flex;flex-direction:column;justify-content:space-between}@media screen and (min-width: 768px){.footer[_ngcontent-%COMP%]{flex-direction:row}}"], changeDetection: 0 });
OrderSummaryWidgetComponent.ctorParameters = () => [
    { type: DataService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderSummaryWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-summary-widget',
                template: "<div class=\"stats\">\r\n    <div class=\"stat\">\r\n        <div class=\"stat-figure\">{{ totalOrderCount$ | async }}</div>\r\n        <div class=\"stat-label\">{{ 'dashboard.total-orders' | translate }}</div>\r\n    </div>\r\n    <div class=\"stat\">\r\n        <div class=\"stat-figure\">\r\n            {{ totalOrderValue$ | async | currency: (currencyCode$ | async) || undefined }}\r\n        </div>\r\n        <div class=\"stat-label\">{{ 'dashboard.total-order-value' | translate }}</div>\r\n    </div>\r\n</div>\r\n<div class=\"footer\">\r\n    <div class=\"btn-group btn-outline-primary btn-sm\" *ngIf=\"selection$ | async as selection\">\r\n        <button class=\"btn\" [class.btn-primary]=\"selection.date === today\" (click)=\"selection$.next({timeframe: 'day', date: today})\">\r\n            {{ 'dashboard.today' | translate }}\r\n        </button>\r\n        <button class=\"btn\" [class.btn-primary]=\"selection.date === yesterday\" (click)=\"selection$.next({timeframe: 'day', date: yesterday})\">\r\n            {{ 'dashboard.yesterday' | translate }}\r\n        </button>\r\n        <button class=\"btn\" [class.btn-primary]=\"selection.timeframe === 'week'\" (click)=\"selection$.next({timeframe: 'week'})\">\r\n            {{ 'dashboard.thisWeek' | translate }}\r\n        </button>\r\n        <button class=\"btn\" [class.btn-primary]=\"selection.timeframe === 'month'\" (click)=\"selection$.next({timeframe: 'month'})\">\r\n            {{ 'dashboard.thisMonth' | translate }}\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"date-range p5\" *ngIf=\"dateRange$ | async as range\">\r\n        {{ range.start | localeDate }} - {{ range.end | localeDate }}\r\n    </div>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".stats{display:flex;justify-content:space-evenly}.stat{text-align:center}.stat-figure{font-size:2rem;line-height:3rem}.stat-label{text-transform:uppercase}.date-range{margin-top:0}.footer{margin-top:24px;display:flex;flex-direction:column;justify-content:space-between}@media screen and (min-width: 768px){.footer{flex-direction:row}}\n"]
            }]
    }], function () { return [{ type: ɵngcc1.DataService }]; }, null); })();
class OrderSummaryWidgetModule {
}
OrderSummaryWidgetModule.ɵfac = function OrderSummaryWidgetModule_Factory(t) { return new (t || OrderSummaryWidgetModule)(); };
OrderSummaryWidgetModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: OrderSummaryWidgetModule });
OrderSummaryWidgetModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CoreModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderSummaryWidgetModule, [{
        type: NgModule,
        args: [{
                imports: [CoreModule],
                declarations: [OrderSummaryWidgetComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OrderSummaryWidgetModule, { declarations: function () { return [OrderSummaryWidgetComponent]; }, imports: function () { return [CoreModule]; } }); })();

class TestWidgetComponent {
}
TestWidgetComponent.ɵfac = function TestWidgetComponent_Factory(t) { return new (t || TestWidgetComponent)(); };
TestWidgetComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TestWidgetComponent, selectors: [["vdr-test-widget"]], decls: 2, vars: 0, template: function TestWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p");
        ɵngcc0.ɵɵtext(1, "This is a test widget!");
        ɵngcc0.ɵɵelementEnd();
    } }, styles: [""], changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TestWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-test-widget',
                template: "<p>This is a test widget!</p>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], null, null); })();
class TestWidgetModule {
}
TestWidgetModule.ɵfac = function TestWidgetModule_Factory(t) { return new (t || TestWidgetModule)(); };
TestWidgetModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TestWidgetModule });
TestWidgetModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TestWidgetModule, [{
        type: NgModule,
        args: [{
                declarations: [TestWidgetComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TestWidgetModule, { declarations: [TestWidgetComponent] }); })();

class WelcomeWidgetComponent {
    constructor(dataService) {
        this.dataService = dataService;
        this.version = ADMIN_UI_VERSION;
        this.brand = getAppConfig().brand;
        this.hideVendureBranding = getAppConfig().hideVendureBranding;
        this.hideVersion = getAppConfig().hideVersion;
    }
    ngOnInit() {
        this.administrator$ = this.dataService.administrator
            .getActiveAdministrator()
            .mapStream(data => data.activeAdministrator || null);
    }
}
WelcomeWidgetComponent.ɵfac = function WelcomeWidgetComponent_Factory(t) { return new (t || WelcomeWidgetComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DataService)); };
WelcomeWidgetComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WelcomeWidgetComponent, selectors: [["vdr-welcome-widget"]], decls: 4, vars: 3, consts: [[4, "ngIf"], [1, "placeholder"], ["shape", "line-chart", "size", "128"], [1, "h4"], [1, "p5"], ["class", "p5", 4, "ngIf"]], template: function WelcomeWidgetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, WelcomeWidgetComponent_div_0_Template, 8, 6, "div", 0);
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵelement(3, "clr-icon", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.administrator$));
    } }, directives: [ɵngcc3.NgIf, ɵngcc2.ClrIconCustomTag], pipes: [ɵngcc3.AsyncPipe, ɵngcc1.TimeAgoPipe], styles: ["[_nghost-%COMP%]{display:flex;justify-content:space-between}.placeholder[_ngcontent-%COMP%]{color:var(--color-grey-200)}"], changeDetection: 0 });
WelcomeWidgetComponent.ctorParameters = () => [
    { type: DataService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WelcomeWidgetComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-welcome-widget',
                template: "<div *ngIf=\"administrator$ | async as administrator\">\r\n    <h4 class=\"h4\">\r\n        Welcome, {{ administrator.firstName }} {{ administrator.lastName }}<br />\r\n        <small class=\"p5\">Last login: {{ administrator.user.lastLogin | timeAgo }}</small>\r\n    </h4>\r\n\r\n    <p class=\"p5\" *ngIf=\"!hideVendureBranding || !hideVersion\">\r\n        {{ hideVendureBranding ? '' : 'Vendure' }} {{ hideVersion ? '' : ('Admin UI v' + version) }}\r\n    </p>\r\n</div>\r\n<div class=\"placeholder\">\r\n    <clr-icon shape=\"line-chart\" size=\"128\"></clr-icon>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{display:flex;justify-content:space-between}.placeholder{color:var(--color-grey-200)}\n"]
            }]
    }], function () { return [{ type: ɵngcc1.DataService }]; }, null); })();
class WelcomeWidgetModule {
}
WelcomeWidgetModule.ɵfac = function WelcomeWidgetModule_Factory(t) { return new (t || WelcomeWidgetModule)(); };
WelcomeWidgetModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: WelcomeWidgetModule });
WelcomeWidgetModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CoreModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WelcomeWidgetModule, [{
        type: NgModule,
        args: [{
                imports: [CoreModule],
                declarations: [WelcomeWidgetComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WelcomeWidgetModule, { declarations: function () { return [WelcomeWidgetComponent]; }, imports: function () { return [CoreModule]; } }); })();

const DEFAULT_DASHBOARD_WIDGET_LAYOUT = [
    { id: 'welcome', width: 12 },
    { id: 'orderSummary', width: 6 },
    { id: 'latestOrders', width: 6 },
];
const ɵ0 = () => WelcomeWidgetComponent, ɵ1 = () => OrderSummaryWidgetComponent, ɵ2 = () => LatestOrdersWidgetComponent, ɵ3 = () => TestWidgetComponent;
const DEFAULT_WIDGETS = {
    welcome: {
        loadComponent: ɵ0,
    },
    orderSummary: {
        title: marker('dashboard.orders-summary'),
        loadComponent: ɵ1,
        requiresPermissions: [Permission.ReadOrder],
    },
    latestOrders: {
        title: marker('dashboard.latest-orders'),
        loadComponent: ɵ2,
        supportedWidths: [6, 8, 12],
        requiresPermissions: [Permission.ReadOrder],
    },
    testWidget: {
        title: 'Test Widget',
        loadComponent: ɵ3,
    },
};

class DashboardModule {
    constructor(dashboardWidgetService) {
        Object.entries(DEFAULT_WIDGETS).map(([id, config]) => dashboardWidgetService.registerWidget(id, config));
        if (dashboardWidgetService.getDefaultLayout().length === 0) {
            dashboardWidgetService.setDefaultLayout(DEFAULT_DASHBOARD_WIDGET_LAYOUT);
        }
    }
}
DashboardModule.ɵfac = function DashboardModule_Factory(t) { return new (t || DashboardModule)(ɵngcc0.ɵɵinject(ɵngcc1.DashboardWidgetService)); };
DashboardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DashboardModule });
DashboardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[SharedModule, RouterModule.forChild(dashboardRoutes)]] });
DashboardModule.ctorParameters = () => [
    { type: DashboardWidgetService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DashboardModule, [{
        type: NgModule,
        args: [{
                imports: [SharedModule, RouterModule.forChild(dashboardRoutes)],
                declarations: [DashboardComponent, DashboardWidgetComponent]
            }]
    }], function () { return [{ type: ɵngcc1.DashboardWidgetService }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DashboardModule, { declarations: function () { return [DashboardComponent, DashboardWidgetComponent]; }, imports: function () { return [SharedModule, ɵngcc6.RouterModule]; } }); })();

// This file was generated by the build-public-api.ts script

/**
 * Generated bundle index. Do not edit.
 */

export { DEFAULT_DASHBOARD_WIDGET_LAYOUT, DEFAULT_WIDGETS, DashboardComponent, DashboardModule, DashboardWidgetComponent, LatestOrdersWidgetComponent, LatestOrdersWidgetModule, OrderSummaryWidgetComponent, OrderSummaryWidgetModule, TestWidgetComponent, TestWidgetModule, WelcomeWidgetComponent, WelcomeWidgetModule, dashboardRoutes, ɵ0, ɵ1, ɵ2, ɵ3 };

//# sourceMappingURL=vendure-admin-ui-dashboard.js.map