{"version":3,"file":"vendure-admin-ui-catalog.js","sources":["../../src/lib/catalog/src/components/asset-detail/asset-detail.component.ts","../../src/lib/catalog/src/components/asset-list/asset-list.component.ts","../../src/lib/catalog/src/components/collection-detail/collection-detail.component.ts","../../src/lib/catalog/src/components/collection-list/collection-list.component.ts","../../src/lib/catalog/src/components/facet-detail/facet-detail.component.ts","../../src/lib/catalog/src/components/facet-list/facet-list.component.ts","../../src/lib/catalog/src/providers/product-detail/replace-last.ts","../../src/lib/catalog/src/providers/product-detail/product-detail.service.ts","../../src/lib/catalog/src/components/apply-facet-dialog/apply-facet-dialog.component.ts","../../src/lib/catalog/src/components/assign-products-to-channel-dialog/assign-products-to-channel-dialog.component.ts","../../src/lib/catalog/src/components/product-detail/product-detail.component.ts","../../src/lib/catalog/src/components/product-list/product-list.component.ts","../../src/lib/catalog/src/components/product-options-editor/product-options-editor.component.ts","../../src/lib/catalog/src/components/confirm-variant-deletion-dialog/confirm-variant-deletion-dialog.component.ts","../../src/lib/catalog/src/components/product-variants-editor/product-variants-editor.component.ts","../../src/lib/catalog/src/providers/routing/asset-resolver.ts","../../src/lib/catalog/src/providers/routing/collection-resolver.ts","../../src/lib/catalog/src/providers/routing/facet-resolver.ts","../../src/lib/catalog/src/providers/routing/product-resolver.ts","../../src/lib/catalog/src/providers/routing/product-variants-resolver.ts","../../src/lib/catalog/src/catalog.routes.ts","../../src/lib/catalog/src/components/assets/assets.component.ts","../../src/lib/catalog/src/components/collection-contents/collection-contents.component.ts","../../src/lib/catalog/src/components/collection-tree/array-to-tree.ts","../../src/lib/catalog/src/components/collection-tree/collection-tree.component.ts","../../src/lib/catalog/src/components/collection-tree/collection-tree-node.component.ts","../../src/lib/catalog/src/components/generate-product-variants/generate-product-variants.component.ts","../../src/lib/catalog/src/components/option-value-input/option-value-input.component.ts","../../src/lib/catalog/src/components/product-search-input/product-search-input.component.ts","../../src/lib/catalog/src/components/update-product-option-dialog/update-product-option-dialog.component.ts","../../src/lib/catalog/src/components/product-variants-list/product-variants-list.component.ts","../../src/lib/catalog/src/components/product-variants-table/product-variants-table.component.ts","../../src/lib/catalog/src/components/variant-price-detail/variant-price-detail.component.ts","../../src/lib/catalog/src/catalog.module.ts","../../src/lib/catalog/src/public_api.ts","../../src/lib/catalog/src/vendure-admin-ui-catalog.ts"],"names":["_","SortOrder"],"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","sourcesContent":["import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    Asset,\r\n    BaseDetailComponent,\r\n    CustomFieldConfig,\r\n    GetAsset,\r\n    LanguageCode,\r\n} from '@vendure/admin-ui/core';\r\nimport { DataService, NotificationService, ServerConfigService } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-asset-detail',\r\n    templateUrl: './asset-detail.component.html',\r\n    styleUrls: ['./asset-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetDetailComponent extends BaseDetailComponent<GetAsset.Asset> implements OnInit, OnDestroy {\r\n    detailForm = new FormGroup({});\r\n    customFields: CustomFieldConfig[];\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        serverConfigService: ServerConfigService,\r\n        private notificationService: NotificationService,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.customFields = this.getCustomFieldConfig('Asset');\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.detailForm = new FormGroup({\r\n            name: new FormControl(''),\r\n            tags: new FormControl([]),\r\n            customFields: this.formBuilder.group(\r\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n            ),\r\n        });\r\n        this.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    onAssetChange(event: { id: string; name: string; tags: string[] }) {\r\n        this.detailForm.get('name')?.setValue(event.name);\r\n        this.detailForm.get('tags')?.setValue(event.tags);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    save() {\r\n        this.dataService.product\r\n            .updateAsset({\r\n                id: this.id,\r\n                name: this.detailForm.value.name,\r\n                tags: this.detailForm.value.tags,\r\n                customFields: this.detailForm.value.customFields,\r\n            })\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-update-success'), { entity: 'Asset' });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Asset',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    protected setFormValues(entity: GetAsset.Asset, languageCode: LanguageCode): void {\r\n        this.detailForm.get('name')?.setValue(entity.name);\r\n        this.detailForm.get('tags')?.setValue(entity.tags);\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    Asset,\r\n    BaseListComponent,\r\n    DataService,\r\n    DeletionResult,\r\n    GetAssetList,\r\n    LogicalOperator,\r\n    ModalService,\r\n    NotificationService,\r\n    SortOrder,\r\n    TagFragment,\r\n} from '@vendure/admin-ui/core';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\nimport { BehaviorSubject, combineLatest, EMPTY, Observable } from 'rxjs';\r\nimport { debounceTime, finalize, map, switchMap, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-asset-list',\r\n    templateUrl: './asset-list.component.html',\r\n    styleUrls: ['./asset-list.component.scss'],\r\n})\r\nexport class AssetListComponent\r\n    extends BaseListComponent<GetAssetList.Query, GetAssetList.Items, GetAssetList.Variables>\r\n    implements OnInit {\r\n    searchTerm$ = new BehaviorSubject<string | undefined>(undefined);\r\n    filterByTags$ = new BehaviorSubject<TagFragment[] | undefined>(undefined);\r\n    uploading = false;\r\n    allTags$: Observable<TagFragment[]>;\r\n    paginationConfig$: Observable<PaginationInstance>;\r\n\r\n    constructor(\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n        private dataService: DataService,\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n    ) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => this.dataService.product.getAssetList(...args),\r\n            data => data.assets,\r\n            (skip, take) => {\r\n                const searchTerm = this.searchTerm$.value;\r\n                const tags = this.filterByTags$.value?.map(t => t.value);\r\n                return {\r\n                    options: {\r\n                        skip,\r\n                        take,\r\n                        ...(searchTerm\r\n                            ? {\r\n                                  filter: {\r\n                                      name: { contains: searchTerm },\r\n                                  },\r\n                              }\r\n                            : {}),\r\n                        sort: {\r\n                            createdAt: SortOrder.DESC,\r\n                        },\r\n                        tags,\r\n                        tagsOperator: LogicalOperator.AND,\r\n                    },\r\n                };\r\n            },\r\n            { take: 25, skip: 0 },\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.paginationConfig$ = combineLatest(this.itemsPerPage$, this.currentPage$, this.totalItems$).pipe(\r\n            map(([itemsPerPage, currentPage, totalItems]) => ({ itemsPerPage, currentPage, totalItems })),\r\n        );\r\n        this.searchTerm$.pipe(debounceTime(250), takeUntil(this.destroy$)).subscribe(() => this.refresh());\r\n\r\n        this.filterByTags$.pipe(takeUntil(this.destroy$)).subscribe(() => this.refresh());\r\n        this.allTags$ = this.dataService.product.getTagList().mapStream(data => data.tags.items);\r\n    }\r\n\r\n    filesSelected(files: File[]) {\r\n        if (files.length) {\r\n            this.uploading = true;\r\n            this.dataService.product\r\n                .createAssets(files)\r\n                .pipe(finalize(() => (this.uploading = false)))\r\n                .subscribe(({ createAssets }) => {\r\n                    let successCount = 0;\r\n                    for (const result of createAssets) {\r\n                        switch (result.__typename) {\r\n                            case 'Asset':\r\n                                successCount++;\r\n                                break;\r\n                            case 'MimeTypeError':\r\n                                this.notificationService.error(result.message);\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (0 < successCount) {\r\n                        super.refresh();\r\n                        this.notificationService.success(_('asset.notify-create-assets-success'), {\r\n                            count: successCount,\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    deleteAssets(assets: Asset[]) {\r\n        this.showModalAndDelete(assets.map(a => a.id))\r\n            .pipe(\r\n                switchMap(response => {\r\n                    if (response.result === DeletionResult.DELETED) {\r\n                        return [true];\r\n                    } else {\r\n                        return this.showModalAndDelete(\r\n                            assets.map(a => a.id),\r\n                            response.message || '',\r\n                        ).pipe(map(r => r.result === DeletionResult.DELETED));\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'Assets',\r\n                    });\r\n                    this.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'Assets',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    private showModalAndDelete(assetIds: string[], message?: string) {\r\n        return this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-assets'),\r\n                translationVars: {\r\n                    count: assetIds.length,\r\n                },\r\n                body: message,\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(res => (res ? this.dataService.product.deleteAssets(assetIds, !!message) : EMPTY)),\r\n                map(res => res.deleteAssets),\r\n            );\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    Asset,\r\n    BaseDetailComponent,\r\n    Collection,\r\n    ConfigurableOperation,\r\n    ConfigurableOperationDefinition,\r\n    ConfigurableOperationInput,\r\n    CreateCollectionInput,\r\n    createUpdatedTranslatable,\r\n    CustomFieldConfig,\r\n    DataService,\r\n    encodeConfigArgValue,\r\n    findTranslation,\r\n    getConfigArgValue,\r\n    LanguageCode,\r\n    ModalService,\r\n    NotificationService,\r\n    Permission,\r\n    ServerConfigService,\r\n    unicodePatternValidator,\r\n    UpdateCollectionInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { combineLatest } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nimport { CollectionContentsComponent } from '../collection-contents/collection-contents.component';\r\n\r\n@Component({\r\n    selector: 'vdr-collection-detail',\r\n    templateUrl: './collection-detail.component.html',\r\n    styleUrls: ['./collection-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CollectionDetailComponent\r\n    extends BaseDetailComponent<Collection.Fragment>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields: CustomFieldConfig[];\r\n    detailForm: FormGroup;\r\n    assetChanges: { assets?: Asset[]; featuredAsset?: Asset } = {};\r\n    filters: ConfigurableOperation[] = [];\r\n    allFilters: ConfigurableOperationDefinition[] = [];\r\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateCollection];\r\n    @ViewChild('collectionContents') contentsComponent: CollectionContentsComponent;\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.customFields = this.getCustomFieldConfig('Collection');\r\n        this.detailForm = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9_-]+$/)],\r\n            description: '',\r\n            visible: false,\r\n            filters: this.formBuilder.array([]),\r\n            customFields: this.formBuilder.group(\r\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n            ),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.collection.getCollectionFilters().single$.subscribe(res => {\r\n            this.allFilters = res.collectionFilters;\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    getFilterDefinition(filter: ConfigurableOperation): ConfigurableOperationDefinition | undefined {\r\n        return this.allFilters.find(f => f.code === filter.code);\r\n    }\r\n\r\n    assetsChanged(): boolean {\r\n        return !!Object.values(this.assetChanges).length;\r\n    }\r\n\r\n    /**\r\n     * If creating a new Collection, automatically generate the slug based on the collection name.\r\n     */\r\n    updateSlug(nameValue: string) {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1))\r\n            .subscribe(([entity, languageCode]) => {\r\n                const slugControl = this.detailForm.get(['slug']);\r\n                const currentTranslation = findTranslation(entity, languageCode);\r\n                const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\r\n                if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\r\n                    slugControl.setValue(normalizeString(`${nameValue}`, '-'));\r\n                }\r\n            });\r\n    }\r\n\r\n    addFilter(collectionFilter: ConfigurableOperation) {\r\n        const filtersArray = this.detailForm.get('filters') as FormArray;\r\n        const index = filtersArray.value.findIndex(o => o.code === collectionFilter.code);\r\n        if (index === -1) {\r\n            const argsHash = collectionFilter.args.reduce(\r\n                (output, arg) => ({\r\n                    ...output,\r\n                    [arg.name]: getConfigArgValue(arg.value),\r\n                }),\r\n                {},\r\n            );\r\n            filtersArray.push(\r\n                this.formBuilder.control({\r\n                    code: collectionFilter.code,\r\n                    args: argsHash,\r\n                }),\r\n            );\r\n            this.filters.push({\r\n                code: collectionFilter.code,\r\n                args: collectionFilter.args.map(a => ({ name: a.name, value: getConfigArgValue(a.value) })),\r\n            });\r\n        }\r\n    }\r\n\r\n    removeFilter(collectionFilter: ConfigurableOperation) {\r\n        const filtersArray = this.detailForm.get('filters') as FormArray;\r\n        const index = filtersArray.value.findIndex(o => o.code === collectionFilter.code);\r\n        if (index !== -1) {\r\n            filtersArray.removeAt(index);\r\n            this.filters.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([category, languageCode]) => {\r\n                    const input = this.getUpdatedCollection(\r\n                        category,\r\n                        this.detailForm,\r\n                        languageCode,\r\n                    ) as CreateCollectionInput;\r\n                    const parentId = this.route.snapshot.paramMap.get('parentId');\r\n                    if (parentId) {\r\n                        input.parentId = parentId;\r\n                    }\r\n                    return this.dataService.collection.createCollection(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-create-success'), {\r\n                        entity: 'Collection',\r\n                    });\r\n                    this.assetChanges = {};\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.router.navigate(['../', data.createCollection.id], { relativeTo: this.route });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-create-error'), {\r\n                        entity: 'Collection',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    save() {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([category, languageCode]) => {\r\n                    const input = this.getUpdatedCollection(\r\n                        category,\r\n                        this.detailForm,\r\n                        languageCode,\r\n                    ) as UpdateCollectionInput;\r\n                    return this.dataService.collection.updateCollection(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.assetChanges = {};\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Collection',\r\n                    });\r\n                    this.contentsComponent.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Collection',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    canDeactivate(): boolean {\r\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\r\n    }\r\n\r\n    /**\r\n     * Sets the values of the form on changes to the category or current language.\r\n     */\r\n    protected setFormValues(entity: Collection.Fragment, languageCode: LanguageCode) {\r\n        const currentTranslation = findTranslation(entity, languageCode);\r\n\r\n        this.detailForm.patchValue({\r\n            name: currentTranslation ? currentTranslation.name : '',\r\n            slug: currentTranslation ? currentTranslation.slug : '',\r\n            description: currentTranslation ? currentTranslation.description : '',\r\n            visible: !entity.isPrivate,\r\n        });\r\n\r\n        entity.filters.forEach(f => this.addFilter(f));\r\n\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get(['customFields']),\r\n                entity,\r\n                currentTranslation,\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Given a category and the value of the form, this method creates an updated copy of the category which\r\n     * can then be persisted to the API.\r\n     */\r\n    private getUpdatedCollection(\r\n        category: Collection.Fragment,\r\n        form: FormGroup,\r\n        languageCode: LanguageCode,\r\n    ): CreateCollectionInput | UpdateCollectionInput {\r\n        const updatedCategory = createUpdatedTranslatable({\r\n            translatable: category,\r\n            updatedFields: form.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: category.name || '',\r\n                slug: category.slug || '',\r\n                description: category.description || '',\r\n            },\r\n        });\r\n        return {\r\n            ...updatedCategory,\r\n            assetIds: this.assetChanges.assets?.map(a => a.id),\r\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\r\n            isPrivate: !form.value.visible,\r\n            filters: this.mapOperationsToInputs(this.filters, this.detailForm.value.filters),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Maps an array of conditions or actions to the input format expected by the GraphQL API.\r\n     */\r\n    private mapOperationsToInputs(\r\n        operations: ConfigurableOperation[],\r\n        formValueOperations: any,\r\n    ): ConfigurableOperationInput[] {\r\n        return operations.map((o, i) => {\r\n            return {\r\n                code: o.code,\r\n                arguments: Object.values(formValueOperations[i].args).map((value: any, j) => ({\r\n                    name: o.args[j].name,\r\n                    value: encodeConfigArgValue(value),\r\n                })),\r\n            };\r\n        });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    DataService,\r\n    GetCollectionList,\r\n    LanguageCode,\r\n    ModalService,\r\n    NotificationService,\r\n    QueryResult,\r\n    ServerConfigService,\r\n} from '@vendure/admin-ui/core';\r\nimport { combineLatest, EMPTY, Observable, Subject } from 'rxjs';\r\nimport {\r\n    debounceTime,\r\n    distinctUntilChanged,\r\n    map,\r\n    shareReplay,\r\n    switchMap,\r\n    take,\r\n    takeUntil,\r\n    tap,\r\n} from 'rxjs/operators';\r\n\r\nimport { RearrangeEvent } from '../collection-tree/collection-tree.component';\r\n\r\n@Component({\r\n    selector: 'vdr-collection-list',\r\n    templateUrl: './collection-list.component.html',\r\n    styleUrls: ['./collection-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CollectionListComponent implements OnInit, OnDestroy {\r\n    filterTermControl = new FormControl('');\r\n    activeCollectionId$: Observable<string | null>;\r\n    activeCollectionTitle$: Observable<string>;\r\n    items$: Observable<GetCollectionList.Items[]>;\r\n    availableLanguages$: Observable<LanguageCode[]>;\r\n    contentLanguage$: Observable<LanguageCode>;\r\n    expandAll = false;\r\n    private queryResult: QueryResult<any>;\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private serverConfigService: ServerConfigService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.queryResult = this.dataService.collection.getCollections(1000, 0).refetchOnChannelChange();\r\n        this.items$ = this.queryResult.mapStream(data => data.collections.items).pipe(shareReplay(1));\r\n        this.activeCollectionId$ = this.route.paramMap.pipe(\r\n            map(pm => pm.get('contents')),\r\n            distinctUntilChanged(),\r\n        );\r\n\r\n        this.activeCollectionTitle$ = combineLatest(this.activeCollectionId$, this.items$).pipe(\r\n            map(([id, collections]) => {\r\n                if (id) {\r\n                    const match = collections.find(c => c.id === id);\r\n                    return match ? match.name : '';\r\n                }\r\n                return '';\r\n            }),\r\n        );\r\n        this.availableLanguages$ = this.serverConfigService.getAvailableLanguages();\r\n        this.contentLanguage$ = this.dataService.client\r\n            .uiState()\r\n            .mapStream(({ uiState }) => uiState.contentLanguage)\r\n            .pipe(tap(() => this.refresh()));\r\n\r\n        this.filterTermControl.valueChanges\r\n            .pipe(debounceTime(250), takeUntil(this.destroy$))\r\n            .subscribe(() => this.refresh());\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.queryResult.completed$.next();\r\n        this.destroy$.next(undefined);\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    onRearrange(event: RearrangeEvent) {\r\n        this.dataService.collection.moveCollection([event]).subscribe({\r\n            next: () => {\r\n                this.notificationService.success(_('common.notify-saved-changes'));\r\n                this.refresh();\r\n            },\r\n            error: err => {\r\n                this.notificationService.error(_('common.notify-save-changes-error'));\r\n            },\r\n        });\r\n    }\r\n\r\n    deleteCollection(id: string) {\r\n        this.items$\r\n            .pipe(\r\n                take(1),\r\n                map(items => -1 < items.findIndex(i => i.parent && i.parent.id === id)),\r\n                switchMap(hasChildren => {\r\n                    return this.modalService.dialog({\r\n                        title: _('catalog.confirm-delete-collection'),\r\n                        body: hasChildren\r\n                            ? _('catalog.confirm-delete-collection-and-children-body')\r\n                            : undefined,\r\n                        buttons: [\r\n                            { type: 'secondary', label: _('common.cancel') },\r\n                            { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                        ],\r\n                    });\r\n                }),\r\n                switchMap(response => (response ? this.dataService.collection.deleteCollection(id) : EMPTY)),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'Collection',\r\n                    });\r\n                    this.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'Collection',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    closeContents() {\r\n        const params = { ...this.route.snapshot.params };\r\n        delete params.contents;\r\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\r\n    }\r\n\r\n    setLanguage(code: LanguageCode) {\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n\r\n    private refresh() {\r\n        this.queryResult.ref.refetch({\r\n            options: {\r\n                skip: 0,\r\n                take: 1000,\r\n                ...(this.filterTermControl.value\r\n                    ? {\r\n                          filter: {\r\n                              name: {\r\n                                  contains: this.filterTermControl.value,\r\n                              },\r\n                          },\r\n                      }\r\n                    : {}),\r\n            },\r\n        });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseDetailComponent,\r\n    CreateFacetInput,\r\n    CreateFacetValueInput,\r\n    createUpdatedTranslatable,\r\n    CustomFieldConfig,\r\n    DataService,\r\n    DeletionResult,\r\n    FacetWithValues,\r\n    findTranslation,\r\n    LanguageCode,\r\n    ModalService,\r\n    NotificationService,\r\n    Permission,\r\n    ServerConfigService,\r\n    UpdateFacetInput,\r\n    UpdateFacetValueInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { combineLatest, EMPTY, forkJoin, Observable } from 'rxjs';\r\nimport { map, mapTo, mergeMap, switchMap, take } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-facet-detail',\r\n    templateUrl: './facet-detail.component.html',\r\n    styleUrls: ['./facet-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FacetDetailComponent\r\n    extends BaseDetailComponent<FacetWithValues.Fragment>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields: CustomFieldConfig[];\r\n    customValueFields: CustomFieldConfig[];\r\n    detailForm: FormGroup;\r\n    values: Array<FacetWithValues.Values | { name: string; code: string }>;\r\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateFacet];\r\n\r\n    constructor(\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n        serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.customFields = this.getCustomFieldConfig('Facet');\r\n        this.customValueFields = this.getCustomFieldConfig('FacetValue');\r\n        this.detailForm = this.formBuilder.group({\r\n            facet: this.formBuilder.group({\r\n                code: ['', Validators.required],\r\n                name: '',\r\n                visible: true,\r\n                customFields: this.formBuilder.group(\r\n                    this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n                ),\r\n            }),\r\n            values: this.formBuilder.array([]),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    updateCode(currentCode: string, nameValue: string) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get(['facet', 'code']);\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n\r\n    updateValueCode(currentCode: string, nameValue: string, index: number) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get(['values', index, 'code']);\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n\r\n    customValueFieldIsSet(index: number, name: string): boolean {\r\n        return !!this.detailForm.get(['values', index, 'customFields', name]);\r\n    }\r\n\r\n    getValuesFormArray(): FormArray {\r\n        return this.detailForm.get('values') as FormArray;\r\n    }\r\n\r\n    addFacetValue() {\r\n        const valuesFormArray = this.detailForm.get('values') as FormArray | null;\r\n        if (valuesFormArray) {\r\n            const valueGroup = this.formBuilder.group({\r\n                id: '',\r\n                name: ['', Validators.required],\r\n                code: '',\r\n            });\r\n            const newValue: any = { name: '', code: '' };\r\n            if (this.customValueFields.length) {\r\n                const customValueFieldsGroup = new FormGroup({});\r\n                newValue.customFields = {};\r\n\r\n                for (const fieldDef of this.customValueFields) {\r\n                    const key = fieldDef.name;\r\n                    customValueFieldsGroup.addControl(key, new FormControl());\r\n                }\r\n\r\n                valueGroup.addControl('customFields', customValueFieldsGroup);\r\n            }\r\n            valuesFormArray.insert(valuesFormArray.length, valueGroup);\r\n            this.values.push(newValue);\r\n        }\r\n    }\r\n\r\n    create() {\r\n        const facetForm = this.detailForm.get('facet');\r\n        if (!facetForm || !facetForm.dirty) {\r\n            return;\r\n        }\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([facet, languageCode]) => {\r\n                    const newFacet = this.getUpdatedFacet(\r\n                        facet,\r\n                        facetForm as FormGroup,\r\n                        languageCode,\r\n                    ) as CreateFacetInput;\r\n                    return this.dataService.facet.createFacet(newFacet);\r\n                }),\r\n                switchMap(data => this.dataService.facet.getAllFacets().single$.pipe(mapTo(data))),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-create-success'), { entity: 'Facet' });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.router.navigate(['../', data.createFacet.id], { relativeTo: this.route });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-create-error'), {\r\n                        entity: 'Facet',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    save() {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([facet, languageCode]) => {\r\n                    const facetGroup = this.detailForm.get('facet');\r\n                    const updateOperations: Array<Observable<any>> = [];\r\n\r\n                    if (facetGroup && facetGroup.dirty) {\r\n                        const newFacet = this.getUpdatedFacet(\r\n                            facet,\r\n                            facetGroup as FormGroup,\r\n                            languageCode,\r\n                        ) as UpdateFacetInput;\r\n                        if (newFacet) {\r\n                            updateOperations.push(this.dataService.facet.updateFacet(newFacet));\r\n                        }\r\n                    }\r\n                    const valuesArray = this.detailForm.get('values');\r\n                    if (valuesArray && valuesArray.dirty) {\r\n                        const createdValues = this.getCreatedFacetValues(\r\n                            facet,\r\n                            valuesArray as FormArray,\r\n                            languageCode,\r\n                        );\r\n                        if (createdValues.length) {\r\n                            updateOperations.push(\r\n                                this.dataService.facet\r\n                                    .createFacetValues(createdValues)\r\n                                    .pipe(switchMap(() => this.dataService.facet.getFacet(this.id).single$)),\r\n                            );\r\n                        }\r\n                        const updatedValues = this.getUpdatedFacetValues(\r\n                            facet,\r\n                            valuesArray as FormArray,\r\n                            languageCode,\r\n                        );\r\n                        if (updatedValues.length) {\r\n                            updateOperations.push(this.dataService.facet.updateFacetValues(updatedValues));\r\n                        }\r\n                    }\r\n\r\n                    return forkJoin(updateOperations);\r\n                }),\r\n                switchMap(() => this.dataService.facet.getAllFacets().single$),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success(_('common.notify-update-success'), { entity: 'Facet' });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Facet',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    deleteFacetValue(facetValueId: string | undefined, index: number) {\r\n        if (!facetValueId) {\r\n            // deleting a newly-added (not persisted) FacetValue\r\n            const valuesFormArray = this.detailForm.get('values') as FormArray | null;\r\n            if (valuesFormArray) {\r\n                valuesFormArray.removeAt(index);\r\n            }\r\n            this.values.splice(index, 1);\r\n            return;\r\n        }\r\n        this.showModalAndDelete(facetValueId)\r\n            .pipe(\r\n                switchMap(response => {\r\n                    if (response.result === DeletionResult.DELETED) {\r\n                        return [true];\r\n                    } else {\r\n                        return this.showModalAndDelete(facetValueId, response.message || '').pipe(\r\n                            map(r => r.result === DeletionResult.DELETED),\r\n                        );\r\n                    }\r\n                }),\r\n                switchMap(deleted => (deleted ? this.dataService.facet.getFacet(this.id).single$ : [])),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'FacetValue',\r\n                    });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'FacetValue',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    private showModalAndDelete(facetValueId: string, message?: string) {\r\n        return this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-facet-value'),\r\n                body: message,\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(result =>\r\n                    result ? this.dataService.facet.deleteFacetValues([facetValueId], !!message) : EMPTY,\r\n                ),\r\n                map(result => result.deleteFacetValues[0]),\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Sets the values of the form on changes to the facet or current language.\r\n     */\r\n    protected setFormValues(facet: FacetWithValues.Fragment, languageCode: LanguageCode) {\r\n        const currentTranslation = findTranslation(facet, languageCode);\r\n\r\n        this.detailForm.patchValue({\r\n            facet: {\r\n                code: facet.code,\r\n                visible: !facet.isPrivate,\r\n                name: currentTranslation?.name ?? '',\r\n            },\r\n        });\r\n\r\n        if (this.customFields.length) {\r\n            const customFieldsGroup = this.detailForm.get(['facet', 'customFields']) as FormGroup;\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get(['facet', 'customFields']),\r\n                facet,\r\n                currentTranslation,\r\n            );\r\n        }\r\n\r\n        const currentValuesFormArray = this.detailForm.get('values') as FormArray;\r\n        this.values = [...facet.values];\r\n        facet.values.forEach((value, i) => {\r\n            const valueTranslation = findTranslation(value, languageCode);\r\n            const group = {\r\n                id: value.id,\r\n                code: value.code,\r\n                name: valueTranslation ? valueTranslation.name : '',\r\n            };\r\n            const valueControl = currentValuesFormArray.at(i);\r\n            if (valueControl) {\r\n                valueControl.get('id')?.setValue(group.id);\r\n                valueControl.get('code')?.setValue(group.code);\r\n                valueControl.get('name')?.setValue(group.name);\r\n            } else {\r\n                currentValuesFormArray.insert(i, this.formBuilder.group(group));\r\n            }\r\n            if (this.customValueFields.length) {\r\n                let customValueFieldsGroup = this.detailForm.get(['values', i, 'customFields']) as FormGroup;\r\n                if (!customValueFieldsGroup) {\r\n                    customValueFieldsGroup = new FormGroup({});\r\n                    (this.detailForm.get(['values', i]) as FormGroup).addControl(\r\n                        'customFields',\r\n                        customValueFieldsGroup,\r\n                    );\r\n                }\r\n\r\n                if (customValueFieldsGroup) {\r\n                    for (const fieldDef of this.customValueFields) {\r\n                        const key = fieldDef.name;\r\n                        const fieldValue =\r\n                            fieldDef.type === 'localeString'\r\n                                ? (valueTranslation as any).customFields[key]\r\n                                : (value as any).customFields[key];\r\n                        const control = customValueFieldsGroup.get(key);\r\n                        if (control) {\r\n                            control.setValue(fieldValue);\r\n                        } else {\r\n                            customValueFieldsGroup.addControl(key, new FormControl(fieldValue));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Given a facet and the value of the detailForm, this method creates an updated copy of the facet which\r\n     * can then be persisted to the API.\r\n     */\r\n    private getUpdatedFacet(\r\n        facet: FacetWithValues.Fragment,\r\n        facetFormGroup: FormGroup,\r\n        languageCode: LanguageCode,\r\n    ): CreateFacetInput | UpdateFacetInput {\r\n        const input = createUpdatedTranslatable({\r\n            translatable: facet,\r\n            updatedFields: facetFormGroup.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: facet.name || '',\r\n            },\r\n        });\r\n        input.isPrivate = !facetFormGroup.value.visible;\r\n        return input;\r\n    }\r\n\r\n    /**\r\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\r\n     * which can be persisted to the API via a createFacetValues mutation.\r\n     */\r\n    private getCreatedFacetValues(\r\n        facet: FacetWithValues.Fragment,\r\n        valuesFormArray: FormArray,\r\n        languageCode: LanguageCode,\r\n    ): CreateFacetValueInput[] {\r\n        return valuesFormArray.controls\r\n            .filter(c => !c.value.id)\r\n            .map(c => c.value)\r\n            .map(value =>\r\n                createUpdatedTranslatable({\r\n                    translatable: { ...value, translations: [] as any },\r\n                    updatedFields: value,\r\n                    customFieldConfig: this.customValueFields,\r\n                    languageCode,\r\n                    defaultTranslation: {\r\n                        languageCode,\r\n                        name: '',\r\n                    },\r\n                }),\r\n            )\r\n            .map(input => ({\r\n                facetId: facet.id,\r\n                ...input,\r\n            }));\r\n    }\r\n\r\n    /**\r\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\r\n     * which can be persisted to the API via an updateFacetValues mutation.\r\n     */\r\n    private getUpdatedFacetValues(\r\n        facet: FacetWithValues.Fragment,\r\n        valuesFormArray: FormArray,\r\n        languageCode: LanguageCode,\r\n    ): UpdateFacetValueInput[] {\r\n        const dirtyValues = facet.values.filter((v, i) => {\r\n            const formRow = valuesFormArray.get(i.toString());\r\n            return formRow && formRow.dirty && formRow.value.id;\r\n        });\r\n        const dirtyValueValues = valuesFormArray.controls\r\n            .filter(c => c.dirty && c.value.id)\r\n            .map(c => c.value);\r\n\r\n        if (dirtyValues.length !== dirtyValueValues.length) {\r\n            throw new Error(_(`error.facet-value-form-values-do-not-match`));\r\n        }\r\n        return dirtyValues\r\n            .map((value, i) => {\r\n                return createUpdatedTranslatable({\r\n                    translatable: value,\r\n                    updatedFields: dirtyValueValues[i],\r\n                    customFieldConfig: this.customValueFields,\r\n                    languageCode,\r\n                    defaultTranslation: {\r\n                        languageCode,\r\n                        name: '',\r\n                    },\r\n                });\r\n            })\r\n            .filter(notNullOrUndefined);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseListComponent,\r\n    DataService,\r\n    DeletionResult,\r\n    GetFacetList,\r\n    LanguageCode,\r\n    ModalService,\r\n    NotificationService,\r\n    ServerConfigService,\r\n} from '@vendure/admin-ui/core';\r\nimport { SortOrder } from '@vendure/common/lib/generated-shop-types';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { debounceTime, filter, map, switchMap, takeUntil, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-facet-list',\r\n    templateUrl: './facet-list.component.html',\r\n    styleUrls: ['./facet-list.component.scss'],\r\n})\r\nexport class FacetListComponent\r\n    extends BaseListComponent<GetFacetList.Query, GetFacetList.Items>\r\n    implements OnInit\r\n{\r\n    filterTermControl = new FormControl('');\r\n    availableLanguages$: Observable<LanguageCode[]>;\r\n    contentLanguage$: Observable<LanguageCode>;\r\n    readonly initialLimit = 3;\r\n    displayLimit: { [id: string]: number } = {};\r\n    constructor(\r\n        private dataService: DataService,\r\n        private modalService: ModalService,\r\n        private notificationService: NotificationService,\r\n        private serverConfigService: ServerConfigService,\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n    ) {\r\n        super(router, route);\r\n        super.setQueryFn(\r\n            (...args: any[]) => this.dataService.facet.getFacets(...args).refetchOnChannelChange(),\r\n            data => data.facets,\r\n            (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.filterTermControl.value,\r\n                        },\r\n                    },\r\n                    sort: {\r\n                        createdAt: SortOrder.DESC,\r\n                    },\r\n                },\r\n            }),\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.availableLanguages$ = this.serverConfigService.getAvailableLanguages();\r\n        this.contentLanguage$ = this.dataService.client\r\n            .uiState()\r\n            .mapStream(({ uiState }) => uiState.contentLanguage)\r\n            .pipe(tap(() => this.refresh()));\r\n        this.filterTermControl.valueChanges\r\n            .pipe(\r\n                filter(value => 2 <= value.length || value.length === 0),\r\n                debounceTime(250),\r\n                takeUntil(this.destroy$),\r\n            )\r\n            .subscribe(() => this.refresh());\r\n    }\r\n\r\n    toggleDisplayLimit(facet: GetFacetList.Items) {\r\n        if (this.displayLimit[facet.id] === facet.values.length) {\r\n            this.displayLimit[facet.id] = this.initialLimit;\r\n        } else {\r\n            this.displayLimit[facet.id] = facet.values.length;\r\n        }\r\n    }\r\n\r\n    deleteFacet(facetValueId: string) {\r\n        this.showModalAndDelete(facetValueId)\r\n            .pipe(\r\n                switchMap(response => {\r\n                    if (response.result === DeletionResult.DELETED) {\r\n                        return [true];\r\n                    } else {\r\n                        return this.showModalAndDelete(facetValueId, response.message || '').pipe(\r\n                            map(r => r.result === DeletionResult.DELETED),\r\n                        );\r\n                    }\r\n                }),\r\n                // Refresh the cached facets to reflect the changes\r\n                switchMap(() => this.dataService.facet.getAllFacets().single$),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'FacetValue',\r\n                    });\r\n                    this.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'FacetValue',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    setLanguage(code: LanguageCode) {\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n\r\n    private showModalAndDelete(facetId: string, message?: string) {\r\n        return this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-facet'),\r\n                body: message,\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(res => (res ? this.dataService.facet.deleteFacet(facetId, !!message) : EMPTY)),\r\n                map(res => res.deleteFacet),\r\n            );\r\n    }\r\n}\r\n","/**\r\n * @description\r\n * Like String.prototype.replace(), but replaces the last instance\r\n * rather than the first.\r\n */\r\nexport function replaceLast(target: string | undefined | null, search: string, replace: string): string {\r\n    if (!target) {\r\n        return '';\r\n    }\r\n    const lastIndex = target.lastIndexOf(search);\r\n    if (lastIndex === -1) {\r\n        return target;\r\n    }\r\n    const head = target.substr(0, lastIndex);\r\n    const tail = target.substr(lastIndex).replace(search, replace);\r\n    return head + tail;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    CreateProductInput,\r\n    CreateProductVariantInput,\r\n    DataService,\r\n    DeletionResult,\r\n    FacetWithValues,\r\n    findTranslation,\r\n    GetProductWithVariants,\r\n    LanguageCode,\r\n    UpdateProductInput,\r\n    UpdateProductMutation,\r\n    UpdateProductOptionInput,\r\n    UpdateProductVariantInput,\r\n    UpdateProductVariantsMutation,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { forkJoin, Observable, of, throwError } from 'rxjs';\r\nimport { map, mergeMap, shareReplay, switchMap } from 'rxjs/operators';\r\n\r\nimport { CreateProductVariantsConfig } from '../../components/generate-product-variants/generate-product-variants.component';\r\n\r\nimport { replaceLast } from './replace-last';\r\n\r\n/**\r\n * Handles the logic for making the API calls to perform CRUD operations on a Product and its related\r\n * entities. This logic was extracted out of the component because it became too large and hard to follow.\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ProductDetailService {\r\n    constructor(private dataService: DataService) {}\r\n\r\n    getFacets(): Observable<FacetWithValues.Fragment[]> {\r\n        return this.dataService.facet.getAllFacets().mapSingle(data => data.facets.items);\r\n    }\r\n\r\n    getTaxCategories() {\r\n        return this.dataService.settings\r\n            .getTaxCategories()\r\n            .mapSingle(data => data.taxCategories)\r\n            .pipe(shareReplay(1));\r\n    }\r\n\r\n    createProductWithVariants(\r\n        input: CreateProductInput,\r\n        createVariantsConfig: CreateProductVariantsConfig,\r\n        languageCode: LanguageCode,\r\n    ) {\r\n        const createProduct$ = this.dataService.product.createProduct(input);\r\n        const nonEmptyOptionGroups = createVariantsConfig.groups.filter(g => 0 < g.values.length);\r\n        const createOptionGroups$ = this.createProductOptionGroups(nonEmptyOptionGroups, languageCode);\r\n\r\n        return forkJoin(createProduct$, createOptionGroups$).pipe(\r\n            mergeMap(([{ createProduct }, optionGroups]) => {\r\n                const addOptionsToProduct$ = optionGroups.length\r\n                    ? forkJoin(\r\n                          optionGroups.map(optionGroup => {\r\n                              return this.dataService.product.addOptionGroupToProduct({\r\n                                  productId: createProduct.id,\r\n                                  optionGroupId: optionGroup.id,\r\n                              });\r\n                          }),\r\n                      )\r\n                    : of([]);\r\n                return addOptionsToProduct$.pipe(\r\n                    map(() => {\r\n                        return { createProduct, optionGroups };\r\n                    }),\r\n                );\r\n            }),\r\n            mergeMap(({ createProduct, optionGroups }) => {\r\n                const variants = createVariantsConfig.variants.map(v => {\r\n                    const optionIds = optionGroups.length\r\n                        ? v.optionValues.map((optionName, index) => {\r\n                              const option = optionGroups[index].options.find(o => o.name === optionName);\r\n                              if (!option) {\r\n                                  throw new Error(\r\n                                      `Could not find a matching ProductOption \"${optionName}\" when creating variant`,\r\n                                  );\r\n                              }\r\n                              return option.id;\r\n                          })\r\n                        : [];\r\n                    return {\r\n                        ...v,\r\n                        optionIds,\r\n                    };\r\n                });\r\n                const options = optionGroups.map(og => og.options).reduce((flat, o) => [...flat, ...o], []);\r\n                return this.createProductVariants(createProduct, variants, options, languageCode);\r\n            }),\r\n        );\r\n    }\r\n\r\n    createProductOptionGroups(groups: Array<{ name: string; values: string[] }>, languageCode: LanguageCode) {\r\n        return groups.length\r\n            ? forkJoin(\r\n                  groups.map(c => {\r\n                      return this.dataService.product\r\n                          .createProductOptionGroups({\r\n                              code: normalizeString(c.name, '-'),\r\n                              translations: [{ languageCode, name: c.name }],\r\n                              options: c.values.map(v => ({\r\n                                  code: normalizeString(v, '-'),\r\n                                  translations: [{ languageCode, name: v }],\r\n                              })),\r\n                          })\r\n                          .pipe(map(data => data.createProductOptionGroup));\r\n                  }),\r\n              )\r\n            : of([]);\r\n    }\r\n\r\n    createProductVariants(\r\n        product: { name: string; id: string },\r\n        variantData: Array<{ price: number; sku: string; stock: number; optionIds: string[] }>,\r\n        options: Array<{ id: string; name: string }>,\r\n        languageCode: LanguageCode,\r\n    ) {\r\n        const variants: CreateProductVariantInput[] = variantData.map(v => {\r\n            const name = options.length\r\n                ? `${product.name} ${v.optionIds\r\n                      .map(id => options.find(o => o.id === id))\r\n                      .filter(notNullOrUndefined)\r\n                      .map(o => o.name)\r\n                      .join(' ')}`\r\n                : product.name;\r\n            return {\r\n                productId: product.id,\r\n                price: v.price,\r\n                sku: v.sku,\r\n                stockOnHand: v.stock,\r\n                translations: [\r\n                    {\r\n                        languageCode,\r\n                        name,\r\n                    },\r\n                ],\r\n                optionIds: v.optionIds,\r\n            };\r\n        });\r\n        return this.dataService.product.createProductVariants(variants).pipe(\r\n            map(({ createProductVariants }) => ({\r\n                createProductVariants,\r\n                productId: product.id,\r\n            })),\r\n        );\r\n    }\r\n\r\n    updateProduct(updateOptions: {\r\n        product: GetProductWithVariants.Product;\r\n        languageCode: LanguageCode;\r\n        autoUpdate: boolean;\r\n        productInput?: UpdateProductInput;\r\n        variantsInput?: UpdateProductVariantInput[];\r\n    }) {\r\n        const { product, languageCode, autoUpdate, productInput, variantsInput } = updateOptions;\r\n        const updateOperations: Array<Observable<UpdateProductMutation | UpdateProductVariantsMutation>> = [];\r\n        const updateVariantsInput = variantsInput || [];\r\n\r\n        const variants$ = autoUpdate\r\n            ? this.dataService.product\r\n                  .getProductVariants({}, product.id)\r\n                  .mapSingle(({ productVariants }) => productVariants.items)\r\n            : of([]);\r\n\r\n        return variants$.pipe(\r\n            mergeMap(variants => {\r\n                if (productInput) {\r\n                    updateOperations.push(this.dataService.product.updateProduct(productInput));\r\n                    const productOldName = findTranslation(product, languageCode)?.name ?? '';\r\n                    const productNewName = findTranslation(productInput, languageCode)?.name;\r\n                    if (productNewName && productOldName !== productNewName && autoUpdate) {\r\n                        for (const variant of variants) {\r\n                            const currentVariantName = findTranslation(variant, languageCode)?.name || '';\r\n                            let variantInput: UpdateProductVariantInput;\r\n                            const existingVariantInput = updateVariantsInput.find(i => i.id === variant.id);\r\n                            if (existingVariantInput) {\r\n                                variantInput = existingVariantInput;\r\n                            } else {\r\n                                variantInput = {\r\n                                    id: variant.id,\r\n                                    translations: [{ languageCode, name: currentVariantName }],\r\n                                };\r\n                                updateVariantsInput.push(variantInput);\r\n                            }\r\n                            const variantTranslation = findTranslation(variantInput, languageCode);\r\n                            if (variantTranslation) {\r\n                                if (variantTranslation.name) {\r\n                                    variantTranslation.name = replaceLast(\r\n                                        variantTranslation.name,\r\n                                        productOldName,\r\n                                        productNewName,\r\n                                    );\r\n                                } else {\r\n                                    // The variant translation was falsy, which occurs\r\n                                    // when defining the product name for a new translation\r\n                                    // language that had not yet been defined.\r\n                                    variantTranslation.name = [\r\n                                        productNewName,\r\n                                        ...variant.options.map(o => o.name),\r\n                                    ].join(' ');\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (updateVariantsInput.length) {\r\n                    updateOperations.push(\r\n                        this.dataService.product.updateProductVariants(updateVariantsInput),\r\n                    );\r\n                }\r\n                return forkJoin(updateOperations);\r\n            }),\r\n        );\r\n    }\r\n\r\n    updateProductOption(\r\n        input: UpdateProductOptionInput & { autoUpdate: boolean },\r\n        product: GetProductWithVariants.Product,\r\n        languageCode: LanguageCode,\r\n    ) {\r\n        const variants$ = input.autoUpdate\r\n            ? this.dataService.product\r\n                  .getProductVariants({}, product.id)\r\n                  .mapSingle(({ productVariants }) => productVariants.items)\r\n            : of([]);\r\n\r\n        return variants$.pipe(\r\n            mergeMap(variants => {\r\n                let updateProductVariantNames$: Observable<any> = of([]);\r\n                if (input.autoUpdate) {\r\n                    // Update any ProductVariants' names which include the option name\r\n                    let oldOptionName: string | undefined;\r\n                    const newOptionName = findTranslation(input, languageCode)?.name;\r\n                    if (!newOptionName) {\r\n                        updateProductVariantNames$ = of([]);\r\n                    }\r\n                    const variantsToUpdate: UpdateProductVariantInput[] = [];\r\n                    for (const variant of variants) {\r\n                        if (variant.options.map(o => o.id).includes(input.id)) {\r\n                            if (!oldOptionName) {\r\n                                oldOptionName = findTranslation(\r\n                                    variant.options.find(o => o.id === input.id),\r\n                                    languageCode,\r\n                                )?.name;\r\n                            }\r\n                            const variantName = findTranslation(variant, languageCode)?.name || '';\r\n                            if (oldOptionName && newOptionName && variantName.includes(oldOptionName)) {\r\n                                variantsToUpdate.push({\r\n                                    id: variant.id,\r\n                                    translations: [\r\n                                        {\r\n                                            languageCode,\r\n                                            name: replaceLast(variantName, oldOptionName, newOptionName),\r\n                                        },\r\n                                    ],\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                    if (variantsToUpdate.length) {\r\n                        updateProductVariantNames$ =\r\n                            this.dataService.product.updateProductVariants(variantsToUpdate);\r\n                    }\r\n                }\r\n                return this.dataService.product\r\n                    .updateProductOption(input)\r\n                    .pipe(mergeMap(() => updateProductVariantNames$));\r\n            }),\r\n        );\r\n    }\r\n\r\n    deleteProductVariant(id: string, productId: string) {\r\n        return this.dataService.product.deleteProductVariant(id).pipe(\r\n            switchMap(result => {\r\n                if (result.deleteProductVariant.result === DeletionResult.DELETED) {\r\n                    return this.dataService.product.getProduct(productId).single$;\r\n                } else {\r\n                    return throwError(result.deleteProductVariant.message);\r\n                }\r\n            }),\r\n        );\r\n    }\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { Dialog, FacetValue, FacetValueSelectorComponent, FacetWithValues } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-apply-facet-dialog',\r\n    templateUrl: './apply-facet-dialog.component.html',\r\n    styleUrls: ['./apply-facet-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ApplyFacetDialogComponent implements Dialog<FacetValue[]>, AfterViewInit {\r\n    @ViewChild(FacetValueSelectorComponent) private selector: FacetValueSelectorComponent;\r\n    resolveWith: (result?: FacetValue[]) => void;\r\n    selectedValues: FacetValue[] = [];\r\n    // Provided by caller\r\n    facets: FacetWithValues.Fragment[];\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => this.selector.focus(), 0);\r\n    }\r\n\r\n    selectValues() {\r\n        this.resolveWith(this.selectedValues);\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { GetChannels, ProductVariantFragment } from '@vendure/admin-ui/core';\r\nimport { NotificationService } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\nimport { Dialog } from '@vendure/admin-ui/core';\r\nimport { combineLatest, from, Observable } from 'rxjs';\r\nimport { map, startWith, switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-assign-products-to-channel-dialog',\r\n    templateUrl: './assign-products-to-channel-dialog.component.html',\r\n    styleUrls: ['./assign-products-to-channel-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssignProductsToChannelDialogComponent implements OnInit, Dialog<any> {\r\n    selectedChannel: GetChannels.Channels | null | undefined;\r\n    currentChannel: GetChannels.Channels;\r\n    availableChannels: GetChannels.Channels[];\r\n    resolveWith: (result?: any) => void;\r\n    variantsPreview$: Observable<Array<{ id: string; name: string; price: number; pricePreview: number }>>;\r\n    priceFactorControl = new FormControl(1);\r\n    selectedChannelIdControl = new FormControl();\r\n\r\n    // assigned by ModalService.fromComponent() call\r\n    productIds: string[];\r\n    productVariantIds: string[] | undefined;\r\n    currentChannelIds: string[];\r\n\r\n    get isProductVariantMode(): boolean {\r\n        return this.productVariantIds != null;\r\n    }\r\n\r\n    constructor(private dataService: DataService, private notificationService: NotificationService) {}\r\n\r\n    ngOnInit() {\r\n        const activeChannelId$ = this.dataService.client\r\n            .userStatus()\r\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\r\n        const allChannels$ = this.dataService.settings.getChannels().mapSingle(data => data.channels);\r\n\r\n        combineLatest(activeChannelId$, allChannels$).subscribe(([activeChannelId, channels]) => {\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            this.currentChannel = channels.find(c => c.id === activeChannelId)!;\r\n            this.availableChannels = channels;\r\n        });\r\n\r\n        this.selectedChannelIdControl.valueChanges.subscribe(ids => {\r\n            this.selectChannel(ids);\r\n        });\r\n\r\n        this.variantsPreview$ = combineLatest(\r\n            from(this.getTopVariants(10)),\r\n            this.priceFactorControl.valueChanges.pipe(startWith(1)),\r\n        ).pipe(\r\n            map(([variants, factor]) => {\r\n                return variants.map(v => ({\r\n                    id: v.id,\r\n                    name: v.name,\r\n                    price: v.price,\r\n                    pricePreview: v.price * +factor,\r\n                }));\r\n            }),\r\n        );\r\n    }\r\n\r\n    selectChannel(channelIds: string[]) {\r\n        this.selectedChannel = this.availableChannels.find(c => c.id === channelIds[0]);\r\n    }\r\n\r\n    assign() {\r\n        const selectedChannel = this.selectedChannel;\r\n        if (selectedChannel) {\r\n            if (!this.isProductVariantMode) {\r\n                this.dataService.product\r\n                    .assignProductsToChannel({\r\n                        channelId: selectedChannel.id,\r\n                        productIds: this.productIds,\r\n                        priceFactor: +this.priceFactorControl.value,\r\n                    })\r\n                    .subscribe(() => {\r\n                        this.notificationService.success(_('catalog.assign-product-to-channel-success'), {\r\n                            channel: selectedChannel.code,\r\n                        });\r\n                        this.resolveWith(true);\r\n                    });\r\n            } else if (this.productVariantIds) {\r\n                this.dataService.product\r\n                    .assignVariantsToChannel({\r\n                        channelId: selectedChannel.id,\r\n                        productVariantIds: this.productVariantIds,\r\n                        priceFactor: +this.priceFactorControl.value,\r\n                    })\r\n                    .subscribe(() => {\r\n                        this.notificationService.success(_('catalog.assign-variant-to-channel-success'), {\r\n                            channel: selectedChannel.code,\r\n                        });\r\n                        this.resolveWith(true);\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    private async getTopVariants(take: number): Promise<ProductVariantFragment[]> {\r\n        const variants: ProductVariantFragment[] = [];\r\n\r\n        for (let i = 0; i < this.productIds.length && variants.length < take; i++) {\r\n            const productVariants = await this.dataService.product\r\n                .getProduct(this.productIds[i], { take: this.isProductVariantMode ? undefined : take })\r\n                .mapSingle(({ product }) => {\r\n                    const _variants = product ? product.variantList.items : [];\r\n                    return _variants.filter(v =>\r\n                        this.isProductVariantMode ? this.productVariantIds?.includes(v.id) : true,\r\n                    );\r\n                })\r\n                .toPromise();\r\n            variants.push(...(productVariants || []));\r\n        }\r\n        return variants.slice(0, take);\r\n    }\r\n}\r\n","import { Location } from '@angular/common';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    Asset,\r\n    BaseDetailComponent,\r\n    CreateProductInput,\r\n    createUpdatedTranslatable,\r\n    CustomFieldConfig,\r\n    DataService,\r\n    FacetWithValues,\r\n    findTranslation,\r\n    flattenFacetValues,\r\n    GetProductWithVariants,\r\n    GlobalFlag,\r\n    LanguageCode,\r\n    LogicalOperator,\r\n    ModalService,\r\n    NotificationService,\r\n    Permission,\r\n    ProductDetail,\r\n    ProductVariant,\r\n    ServerConfigService,\r\n    TaxCategory,\r\n    unicodePatternValidator,\r\n    UpdateProductInput,\r\n    UpdateProductMutation,\r\n    UpdateProductOptionInput,\r\n    UpdateProductVariantInput,\r\n    UpdateProductVariantsMutation,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { unique } from '@vendure/common/lib/unique';\r\nimport { BehaviorSubject, combineLatest, EMPTY, merge, Observable } from 'rxjs';\r\nimport {\r\n    debounceTime,\r\n    distinctUntilChanged,\r\n    map,\r\n    mergeMap,\r\n    shareReplay,\r\n    skip,\r\n    skipUntil,\r\n    startWith,\r\n    switchMap,\r\n    take,\r\n    takeUntil,\r\n    tap,\r\n    withLatestFrom,\r\n} from 'rxjs/operators';\r\n\r\nimport { ProductDetailService } from '../../providers/product-detail/product-detail.service';\r\nimport { ApplyFacetDialogComponent } from '../apply-facet-dialog/apply-facet-dialog.component';\r\nimport { AssignProductsToChannelDialogComponent } from '../assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\r\nimport { CreateProductVariantsConfig } from '../generate-product-variants/generate-product-variants.component';\r\nimport { VariantAssetChange } from '../product-variants-list/product-variants-list.component';\r\n\r\nexport type TabName = 'details' | 'variants';\r\n\r\nexport interface VariantFormValue {\r\n    id: string;\r\n    enabled: boolean;\r\n    sku: string;\r\n    name: string;\r\n    price: number;\r\n    priceWithTax: number;\r\n    taxCategoryId: string;\r\n    stockOnHand: number;\r\n    useGlobalOutOfStockThreshold: boolean;\r\n    outOfStockThreshold: number;\r\n    trackInventory: GlobalFlag;\r\n    facetValueIds: string[];\r\n    customFields?: any;\r\n}\r\n\r\nexport interface SelectedAssets {\r\n    assets?: Asset[];\r\n    featuredAsset?: Asset;\r\n}\r\n\r\nexport interface PaginationConfig {\r\n    totalItems: number;\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-product-detail',\r\n    templateUrl: './product-detail.component.html',\r\n    styleUrls: ['./product-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductDetailComponent\r\n    extends BaseDetailComponent<GetProductWithVariants.Product>\r\n    implements OnInit, OnDestroy\r\n{\r\n    activeTab$: Observable<TabName>;\r\n    product$: Observable<GetProductWithVariants.Product>;\r\n    variants$: Observable<ProductVariant.Fragment[]>;\r\n    taxCategories$: Observable<TaxCategory.Fragment[]>;\r\n    customFields: CustomFieldConfig[];\r\n    customVariantFields: CustomFieldConfig[];\r\n    customOptionGroupFields: CustomFieldConfig[];\r\n    customOptionFields: CustomFieldConfig[];\r\n    detailForm: FormGroup;\r\n    filterInput = new FormControl('');\r\n    assetChanges: SelectedAssets = {};\r\n    variantAssetChanges: { [variantId: string]: SelectedAssets } = {};\r\n    variantFacetValueChanges: { [variantId: string]: string[] } = {};\r\n    productChannels$: Observable<ProductDetail.Channels[]>;\r\n    facetValues$: Observable<ProductDetail.FacetValues[]>;\r\n    facets$: Observable<FacetWithValues.Fragment[]>;\r\n    totalItems$: Observable<number>;\r\n    currentPage$ = new BehaviorSubject(1);\r\n    itemsPerPage$ = new BehaviorSubject(10);\r\n    paginationConfig$: Observable<PaginationConfig>;\r\n    selectedVariantIds: string[] = [];\r\n    variantDisplayMode: 'card' | 'table' = 'card';\r\n    createVariantsConfig: CreateProductVariantsConfig = { groups: [], variants: [] };\r\n    channelPriceIncludesTax$: Observable<boolean>;\r\n    // Used to store all ProductVariants which have been loaded.\r\n    // It is needed when saving changes to variants.\r\n    private productVariantMap = new Map<string, ProductVariant.Fragment>();\r\n    public readonly updatePermissions = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n\r\n    constructor(\r\n        route: ActivatedRoute,\r\n        router: Router,\r\n        serverConfigService: ServerConfigService,\r\n        private productDetailService: ProductDetailService,\r\n        private formBuilder: FormBuilder,\r\n        private modalService: ModalService,\r\n        private notificationService: NotificationService,\r\n        protected dataService: DataService,\r\n        private location: Location,\r\n        private changeDetector: ChangeDetectorRef,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.customFields = this.getCustomFieldConfig('Product');\r\n        this.customVariantFields = this.getCustomFieldConfig('ProductVariant');\r\n        this.customOptionGroupFields = this.getCustomFieldConfig('ProductOptionGroup');\r\n        this.customOptionFields = this.getCustomFieldConfig('ProductOption');\r\n        this.detailForm = this.formBuilder.group({\r\n            product: this.formBuilder.group({\r\n                enabled: true,\r\n                name: ['', Validators.required],\r\n                autoUpdateVariantNames: true,\r\n                slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9_-]+$/)],\r\n                description: '',\r\n                facetValueIds: [[]],\r\n                customFields: this.formBuilder.group(\r\n                    this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n                ),\r\n            }),\r\n            variants: this.formBuilder.array([]),\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.product$ = this.entity$;\r\n        this.totalItems$ = this.product$.pipe(map(product => product.variantList.totalItems));\r\n        this.paginationConfig$ = combineLatest(this.totalItems$, this.itemsPerPage$, this.currentPage$).pipe(\r\n            map(([totalItems, itemsPerPage, currentPage]) => ({\r\n                totalItems,\r\n                itemsPerPage,\r\n                currentPage,\r\n            })),\r\n        );\r\n        const variants$ = this.product$.pipe(map(product => product.variantList.items));\r\n        const filterTerm$ = this.filterInput.valueChanges.pipe(\r\n            startWith(''),\r\n            debounceTime(200),\r\n            shareReplay(),\r\n        );\r\n        const initialVariants$ = this.product$.pipe(map(p => p.variantList.items));\r\n        const updatedVariants$ = combineLatest(filterTerm$, this.currentPage$, this.itemsPerPage$).pipe(\r\n            skipUntil(initialVariants$),\r\n            skip(1),\r\n            switchMap(([term, currentPage, itemsPerPage]) => {\r\n                return this.dataService.product\r\n                    .getProductVariants(\r\n                        {\r\n                            skip: (currentPage - 1) * itemsPerPage,\r\n                            take: itemsPerPage,\r\n                            ...(term\r\n                                ? { filter: { name: { contains: term }, sku: { contains: term } } }\r\n                                : {}),\r\n                            filterOperator: LogicalOperator.OR,\r\n                        },\r\n                        this.id,\r\n                    )\r\n                    .mapStream(({ productVariants }) => productVariants.items);\r\n            }),\r\n            shareReplay({ bufferSize: 1, refCount: true }),\r\n        );\r\n        this.variants$ = merge(initialVariants$, updatedVariants$).pipe(\r\n            tap(variants => {\r\n                for (const variant of variants) {\r\n                    this.productVariantMap.set(variant.id, variant);\r\n                }\r\n            }),\r\n        );\r\n        this.taxCategories$ = this.productDetailService.getTaxCategories().pipe(takeUntil(this.destroy$));\r\n        this.activeTab$ = this.route.paramMap.pipe(map(qpm => qpm.get('tab') as any));\r\n\r\n        combineLatest(updatedVariants$, this.languageCode$)\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(([variants, languageCode]) => {\r\n                this.buildVariantFormArray(variants, languageCode);\r\n            });\r\n\r\n        // FacetValues are provided initially by the nested array of the\r\n        // Product entity, but once a fetch to get all Facets is made (as when\r\n        // opening the FacetValue selector modal), then these additional values\r\n        // are concatenated onto the initial array.\r\n        this.facets$ = this.productDetailService.getFacets();\r\n        const productFacetValues$ = this.product$.pipe(map(product => product.facetValues));\r\n        const allFacetValues$ = this.facets$.pipe(map(flattenFacetValues));\r\n        const productGroup = this.getProductFormGroup();\r\n\r\n        const formFacetValueIdChanges$ = productGroup.valueChanges.pipe(\r\n            map(val => val.facetValueIds as string[]),\r\n            distinctUntilChanged(),\r\n        );\r\n        const formChangeFacetValues$ = combineLatest(\r\n            formFacetValueIdChanges$,\r\n            productFacetValues$,\r\n            allFacetValues$,\r\n        ).pipe(\r\n            map(([ids, productFacetValues, allFacetValues]) => {\r\n                const combined = [...productFacetValues, ...allFacetValues];\r\n                return ids.map(id => combined.find(fv => fv.id === id)).filter(notNullOrUndefined);\r\n            }),\r\n        );\r\n\r\n        this.facetValues$ = merge(productFacetValues$, formChangeFacetValues$);\r\n        this.productChannels$ = this.product$.pipe(map(p => p.channels));\r\n        this.channelPriceIncludesTax$ = this.dataService.settings\r\n            .getActiveChannel('cache-first')\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel.pricesIncludeTax)\r\n            .pipe(shareReplay(1));\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    navigateToTab(tabName: TabName) {\r\n        this.location.replaceState(\r\n            this.router\r\n                .createUrlTree(['./', { ...this.route.snapshot.params, tab: tabName }], {\r\n                    queryParamsHandling: 'merge',\r\n                    relativeTo: this.route,\r\n                })\r\n                .toString(),\r\n        );\r\n    }\r\n\r\n    isDefaultChannel(channelCode: string): boolean {\r\n        return channelCode === DEFAULT_CHANNEL_CODE;\r\n    }\r\n\r\n    setPage(page: number) {\r\n        this.currentPage$.next(page);\r\n    }\r\n\r\n    setItemsPerPage(value: string) {\r\n        this.itemsPerPage$.next(+value);\r\n        this.currentPage$.next(1);\r\n    }\r\n\r\n    assignToChannel() {\r\n        this.productChannels$\r\n            .pipe(\r\n                take(1),\r\n                switchMap(channels => {\r\n                    return this.modalService.fromComponent(AssignProductsToChannelDialogComponent, {\r\n                        size: 'lg',\r\n                        locals: {\r\n                            productIds: [this.id],\r\n                            currentChannelIds: channels.map(c => c.id),\r\n                        },\r\n                    });\r\n                }),\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    removeFromChannel(channelId: string) {\r\n        this.modalService\r\n            .dialog({\r\n                title: _('catalog.remove-product-from-channel'),\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('catalog.remove-from-channel'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response =>\r\n                    response\r\n                        ? this.dataService.product.removeProductsFromChannel({\r\n                              channelId,\r\n                              productIds: [this.id],\r\n                          })\r\n                        : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('catalog.notify-remove-product-from-channel-success'));\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('catalog.notify-remove-product-from-channel-error'));\r\n                },\r\n            );\r\n    }\r\n\r\n    assignVariantToChannel(variant: ProductVariant.Fragment) {\r\n        return this.modalService\r\n            .fromComponent(AssignProductsToChannelDialogComponent, {\r\n                size: 'lg',\r\n                locals: {\r\n                    productIds: [this.id],\r\n                    productVariantIds: [variant.id],\r\n                    currentChannelIds: variant.channels.map(c => c.id),\r\n                },\r\n            })\r\n            .subscribe();\r\n    }\r\n\r\n    removeVariantFromChannel({\r\n        channelId,\r\n        variant,\r\n    }: {\r\n        channelId: string;\r\n        variant: ProductVariant.Fragment;\r\n    }) {\r\n        this.modalService\r\n            .dialog({\r\n                title: _('catalog.remove-product-variant-from-channel'),\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('catalog.remove-from-channel'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response =>\r\n                    response\r\n                        ? this.dataService.product.removeVariantsFromChannel({\r\n                              channelId,\r\n                              productVariantIds: [variant.id],\r\n                          })\r\n                        : EMPTY,\r\n                ),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('catalog.notify-remove-variant-from-channel-success'));\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('catalog.notify-remove-variant-from-channel-error'));\r\n                },\r\n            );\r\n    }\r\n\r\n    assetsChanged(): boolean {\r\n        return !!Object.values(this.assetChanges).length;\r\n    }\r\n\r\n    variantAssetsChanged(): boolean {\r\n        return !!Object.keys(this.variantAssetChanges).length;\r\n    }\r\n\r\n    variantAssetChange(event: VariantAssetChange) {\r\n        this.variantAssetChanges[event.variantId] = event;\r\n    }\r\n\r\n    /**\r\n     * If creating a new product, automatically generate the slug based on the product name.\r\n     */\r\n    updateSlug(nameValue: string) {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1))\r\n            .subscribe(([entity, languageCode]) => {\r\n                const slugControl = this.detailForm.get(['product', 'slug']);\r\n                const currentTranslation = findTranslation(entity, languageCode);\r\n                const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\r\n                if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\r\n                    slugControl.setValue(normalizeString(`${nameValue}`, '-'));\r\n                }\r\n            });\r\n    }\r\n\r\n    selectProductFacetValue() {\r\n        this.displayFacetValueModal().subscribe(facetValueIds => {\r\n            if (facetValueIds) {\r\n                const productGroup = this.getProductFormGroup();\r\n                const currentFacetValueIds = productGroup.value.facetValueIds;\r\n                productGroup.patchValue({\r\n                    facetValueIds: unique([...currentFacetValueIds, ...facetValueIds]),\r\n                });\r\n                productGroup.markAsDirty();\r\n            }\r\n        });\r\n    }\r\n\r\n    updateProductOption(input: UpdateProductOptionInput & { autoUpdate: boolean }) {\r\n        combineLatest(this.product$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([product, languageCode]) =>\r\n                    this.productDetailService.updateProductOption(input, product, languageCode),\r\n                ),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'ProductOption',\r\n                    });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'ProductOption',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    removeProductFacetValue(facetValueId: string) {\r\n        const productGroup = this.getProductFormGroup();\r\n        const currentFacetValueIds = productGroup.value.facetValueIds;\r\n        productGroup.patchValue({\r\n            facetValueIds: currentFacetValueIds.filter(id => id !== facetValueId),\r\n        });\r\n        productGroup.markAsDirty();\r\n    }\r\n\r\n    /**\r\n     * Opens a dialog to select FacetValues to apply to the select ProductVariants.\r\n     */\r\n    selectVariantFacetValue(selectedVariantIds: string[]) {\r\n        this.displayFacetValueModal()\r\n            .pipe(withLatestFrom(this.variants$))\r\n            .subscribe(([facetValueIds, variants]) => {\r\n                if (facetValueIds) {\r\n                    for (const variantId of selectedVariantIds) {\r\n                        const index = variants.findIndex(v => v.id === variantId);\r\n                        const variant = variants[index];\r\n                        const existingFacetValueIds = variant ? variant.facetValues.map(fv => fv.id) : [];\r\n                        const variantFormGroup = (this.detailForm.get('variants') as FormArray).controls.find(\r\n                            c => c.value.id === variantId,\r\n                        );\r\n                        if (variantFormGroup) {\r\n                            const uniqueFacetValueIds = unique([...existingFacetValueIds, ...facetValueIds]);\r\n                            variantFormGroup.patchValue({\r\n                                facetValueIds: uniqueFacetValueIds,\r\n                            });\r\n                            variantFormGroup.markAsDirty();\r\n                            this.variantFacetValueChanges[variantId] = uniqueFacetValueIds;\r\n                        }\r\n                    }\r\n                    this.changeDetector.markForCheck();\r\n                }\r\n            });\r\n    }\r\n\r\n    variantsToCreateAreValid(): boolean {\r\n        return (\r\n            0 < this.createVariantsConfig.variants.length &&\r\n            this.createVariantsConfig.variants.every(v => {\r\n                return v.sku !== '';\r\n            })\r\n        );\r\n    }\r\n\r\n    private displayFacetValueModal(): Observable<string[] | undefined> {\r\n        return this.productDetailService.getFacets().pipe(\r\n            mergeMap(facets =>\r\n                this.modalService.fromComponent(ApplyFacetDialogComponent, {\r\n                    size: 'md',\r\n                    closable: true,\r\n                    locals: { facets },\r\n                }),\r\n            ),\r\n            map(facetValues => facetValues && facetValues.map(v => v.id)),\r\n        );\r\n    }\r\n\r\n    create() {\r\n        const productGroup = this.getProductFormGroup();\r\n        if (!productGroup.dirty) {\r\n            return;\r\n        }\r\n        combineLatest(this.product$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([product, languageCode]) => {\r\n                    const newProduct = this.getUpdatedProduct(\r\n                        product,\r\n                        productGroup as FormGroup,\r\n                        languageCode,\r\n                    ) as CreateProductInput;\r\n                    return this.productDetailService.createProductWithVariants(\r\n                        newProduct,\r\n                        this.createVariantsConfig,\r\n                        languageCode,\r\n                    );\r\n                }),\r\n            )\r\n            .subscribe(\r\n                ({ createProductVariants, productId }) => {\r\n                    this.notificationService.success(_('common.notify-create-success'), {\r\n                        entity: 'Product',\r\n                    });\r\n                    this.assetChanges = {};\r\n                    this.variantAssetChanges = {};\r\n                    this.detailForm.markAsPristine();\r\n                    this.router.navigate(['../', productId], { relativeTo: this.route });\r\n                },\r\n                err => {\r\n                    // tslint:disable-next-line:no-console\r\n                    console.error(err);\r\n                    this.notificationService.error(_('common.notify-create-error'), {\r\n                        entity: 'Product',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    save() {\r\n        combineLatest(this.product$, this.languageCode$, this.channelPriceIncludesTax$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([product, languageCode, priceIncludesTax]) => {\r\n                    const productGroup = this.getProductFormGroup();\r\n                    let productInput: UpdateProductInput | undefined;\r\n                    let variantsInput: UpdateProductVariantInput[] | undefined;\r\n\r\n                    if (productGroup.dirty || this.assetsChanged()) {\r\n                        productInput = this.getUpdatedProduct(\r\n                            product,\r\n                            productGroup as FormGroup,\r\n                            languageCode,\r\n                        ) as UpdateProductInput;\r\n                    }\r\n                    const variantsArray = this.detailForm.get('variants');\r\n                    if ((variantsArray && variantsArray.dirty) || this.variantAssetsChanged()) {\r\n                        variantsInput = this.getUpdatedProductVariants(\r\n                            product,\r\n                            variantsArray as FormArray,\r\n                            languageCode,\r\n                            priceIncludesTax,\r\n                        );\r\n                    }\r\n\r\n                    return this.productDetailService.updateProduct({\r\n                        product,\r\n                        languageCode,\r\n                        autoUpdate:\r\n                            this.detailForm.get(['product', 'autoUpdateVariantNames'])?.value ?? false,\r\n                        productInput,\r\n                        variantsInput,\r\n                    });\r\n                }),\r\n            )\r\n            .subscribe(\r\n                result => {\r\n                    this.updateSlugAfterSave(result);\r\n                    this.detailForm.markAsPristine();\r\n                    this.assetChanges = {};\r\n                    this.variantAssetChanges = {};\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Product',\r\n                    });\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Product',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    canDeactivate(): boolean {\r\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\r\n    }\r\n\r\n    /**\r\n     * Sets the values of the form on changes to the product or current language.\r\n     */\r\n    protected setFormValues(product: GetProductWithVariants.Product, languageCode: LanguageCode) {\r\n        const currentTranslation = findTranslation(product, languageCode);\r\n        this.detailForm.patchValue({\r\n            product: {\r\n                enabled: product.enabled,\r\n                name: currentTranslation ? currentTranslation.name : '',\r\n                slug: currentTranslation ? currentTranslation.slug : '',\r\n                description: currentTranslation ? currentTranslation.description : '',\r\n                facetValueIds: product.facetValues.map(fv => fv.id),\r\n            },\r\n        });\r\n\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get(['product', 'customFields']),\r\n                product,\r\n                currentTranslation,\r\n            );\r\n        }\r\n        this.buildVariantFormArray(product.variantList.items, languageCode);\r\n    }\r\n\r\n    private buildVariantFormArray(variants: ProductVariant.Fragment[], languageCode: LanguageCode) {\r\n        const variantsFormArray = this.detailForm.get('variants') as FormArray;\r\n        variants.forEach((variant, i) => {\r\n            const variantTranslation = findTranslation(variant, languageCode);\r\n            const pendingFacetValueChanges = this.variantFacetValueChanges[variant.id];\r\n            const facetValueIds = pendingFacetValueChanges\r\n                ? pendingFacetValueChanges\r\n                : variant.facetValues.map(fv => fv.id);\r\n            const group: VariantFormValue = {\r\n                id: variant.id,\r\n                enabled: variant.enabled,\r\n                sku: variant.sku,\r\n                name: variantTranslation ? variantTranslation.name : '',\r\n                price: variant.price,\r\n                priceWithTax: variant.priceWithTax,\r\n                taxCategoryId: variant.taxCategory.id,\r\n                stockOnHand: variant.stockOnHand,\r\n                useGlobalOutOfStockThreshold: variant.useGlobalOutOfStockThreshold,\r\n                outOfStockThreshold: variant.outOfStockThreshold,\r\n                trackInventory: variant.trackInventory,\r\n                facetValueIds,\r\n            };\r\n\r\n            let variantFormGroup = variantsFormArray.controls.find(c => c.value.id === variant.id) as\r\n                | FormGroup\r\n                | undefined;\r\n            if (variantFormGroup) {\r\n                if (variantFormGroup.pristine) {\r\n                    variantFormGroup.patchValue(group);\r\n                }\r\n            } else {\r\n                variantFormGroup = this.formBuilder.group({\r\n                    ...group,\r\n                    facetValueIds: this.formBuilder.control(facetValueIds),\r\n                });\r\n                variantsFormArray.insert(i, variantFormGroup);\r\n            }\r\n            if (this.customVariantFields.length) {\r\n                let customFieldsGroup = variantFormGroup.get(['customFields']) as FormGroup | undefined;\r\n\r\n                if (!customFieldsGroup) {\r\n                    customFieldsGroup = this.formBuilder.group(\r\n                        this.customVariantFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\r\n                    );\r\n                    variantFormGroup.addControl('customFields', customFieldsGroup);\r\n                }\r\n                this.setCustomFieldFormValues(\r\n                    this.customVariantFields,\r\n                    customFieldsGroup,\r\n                    variant,\r\n                    variantTranslation,\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\r\n     * can then be persisted to the API.\r\n     */\r\n    private getUpdatedProduct(\r\n        product: GetProductWithVariants.Product,\r\n        productFormGroup: FormGroup,\r\n        languageCode: LanguageCode,\r\n    ): UpdateProductInput | CreateProductInput {\r\n        const updatedProduct = createUpdatedTranslatable({\r\n            translatable: product,\r\n            updatedFields: productFormGroup.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: product.name || '',\r\n                slug: product.slug || '',\r\n                description: product.description || '',\r\n            },\r\n        });\r\n        return {\r\n            ...updatedProduct,\r\n            assetIds: this.assetChanges.assets?.map(a => a.id),\r\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\r\n            facetValueIds: productFormGroup.value.facetValueIds,\r\n        } as UpdateProductInput | CreateProductInput;\r\n    }\r\n\r\n    /**\r\n     * Given an array of product variants and the values from the detailForm, this method creates an new array\r\n     * which can be persisted to the API.\r\n     */\r\n    private getUpdatedProductVariants(\r\n        product: GetProductWithVariants.Product,\r\n        variantsFormArray: FormArray,\r\n        languageCode: LanguageCode,\r\n        priceIncludesTax: boolean,\r\n    ): UpdateProductVariantInput[] {\r\n        const dirtyFormControls = variantsFormArray.controls.filter(c => c.dirty);\r\n        const dirtyVariants = dirtyFormControls\r\n            .map(c => this.productVariantMap.get(c.value.id))\r\n            .filter(notNullOrUndefined);\r\n        const dirtyVariantValues = dirtyFormControls.map(c => c.value);\r\n\r\n        if (dirtyVariants.length !== dirtyVariantValues.length) {\r\n            throw new Error(_(`error.product-variant-form-values-do-not-match`));\r\n        }\r\n        return dirtyVariants\r\n            .map((variant, i) => {\r\n                const formValue: VariantFormValue = dirtyVariantValues.find(value => value.id === variant.id);\r\n                const result: UpdateProductVariantInput = createUpdatedTranslatable({\r\n                    translatable: variant,\r\n                    updatedFields: formValue,\r\n                    customFieldConfig: this.customVariantFields,\r\n                    languageCode,\r\n                    defaultTranslation: {\r\n                        languageCode,\r\n                        name: '',\r\n                    },\r\n                });\r\n                result.taxCategoryId = formValue.taxCategoryId;\r\n                result.facetValueIds = formValue.facetValueIds;\r\n                result.price = priceIncludesTax ? formValue.priceWithTax : formValue.price;\r\n                const assetChanges = this.variantAssetChanges[variant.id];\r\n                if (assetChanges) {\r\n                    result.featuredAssetId = assetChanges.featuredAsset?.id;\r\n                    result.assetIds = assetChanges.assets?.map(a => a.id);\r\n                }\r\n                return result;\r\n            })\r\n            .filter(notNullOrUndefined);\r\n    }\r\n\r\n    private getProductFormGroup(): FormGroup {\r\n        return this.detailForm.get('product') as FormGroup;\r\n    }\r\n\r\n    /**\r\n     * The server may alter the slug value in order to normalize and ensure uniqueness upon saving.\r\n     */\r\n    private updateSlugAfterSave(results: Array<UpdateProductMutation | UpdateProductVariantsMutation>) {\r\n        const firstResult = results[0];\r\n        const slugControl = this.detailForm.get(['product', 'slug']);\r\n\r\n        function isUpdateMutation(input: any): input is UpdateProductMutation {\r\n            return input.hasOwnProperty('updateProduct');\r\n        }\r\n\r\n        if (slugControl && isUpdateMutation(firstResult)) {\r\n            slugControl.setValue(firstResult.updateProduct.slug, { emitEvent: false });\r\n        }\r\n    }\r\n}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseListComponent,\r\n    DataService,\r\n    JobQueueService,\r\n    JobState,\r\n    LanguageCode,\r\n    LogicalOperator,\r\n    ModalService,\r\n    NotificationService,\r\n    SearchInput,\r\n    SearchProducts,\r\n    ServerConfigService,\r\n} from '@vendure/admin-ui/core';\r\nimport { EMPTY, Observable, of } from 'rxjs';\r\nimport {\r\n    delay,\r\n    distinctUntilChanged,\r\n    map,\r\n    shareReplay,\r\n    switchMap,\r\n    take,\r\n    takeUntil,\r\n    tap,\r\n    withLatestFrom,\r\n} from 'rxjs/operators';\r\n\r\nimport { ProductSearchInputComponent } from '../product-search-input/product-search-input.component';\r\n\r\n@Component({\r\n    selector: 'vdr-products-list',\r\n    templateUrl: './product-list.component.html',\r\n    styleUrls: ['./product-list.component.scss'],\r\n})\r\nexport class ProductListComponent\r\n    extends BaseListComponent<SearchProducts.Query, SearchProducts.Items, SearchProducts.Variables>\r\n    implements OnInit, AfterViewInit\r\n{\r\n    searchTerm = '';\r\n    facetValueIds: string[] = [];\r\n    groupByProduct = true;\r\n    selectedFacetValueIds$: Observable<string[]>;\r\n    facetValues$: Observable<SearchProducts.FacetValues[]>;\r\n    availableLanguages$: Observable<LanguageCode[]>;\r\n    contentLanguage$: Observable<LanguageCode>;\r\n    pendingSearchIndexUpdates = 0;\r\n\r\n    @ViewChild('productSearchInputComponent', { static: true })\r\n    private productSearchInput: ProductSearchInputComponent;\r\n    constructor(\r\n        private dataService: DataService,\r\n        private modalService: ModalService,\r\n        private notificationService: NotificationService,\r\n        private jobQueueService: JobQueueService,\r\n        private serverConfigService: ServerConfigService,\r\n        router: Router,\r\n        route: ActivatedRoute,\r\n    ) {\r\n        super(router, route);\r\n        this.route.queryParamMap\r\n            .pipe(\r\n                map(qpm => qpm.get('q')),\r\n                takeUntil(this.destroy$),\r\n            )\r\n            .subscribe(term => {\r\n                this.searchTerm = term || '';\r\n                if (this.productSearchInput) {\r\n                    this.productSearchInput.setSearchTerm(term);\r\n                }\r\n            });\r\n        this.selectedFacetValueIds$ = this.route.queryParamMap.pipe(map(qpm => qpm.getAll('fvids')));\r\n\r\n        this.selectedFacetValueIds$.pipe(takeUntil(this.destroy$)).subscribe(ids => {\r\n            this.facetValueIds = ids;\r\n            if (this.productSearchInput) {\r\n                this.productSearchInput.setFacetValues(ids);\r\n            }\r\n        });\r\n        super.setQueryFn(\r\n            (...args: any[]) =>\r\n                this.dataService.product.searchProducts(this.searchTerm, ...args).refetchOnChannelChange(),\r\n            data => data.search,\r\n            // tslint:disable-next-line:no-shadowed-variable\r\n            (skip, take) => ({\r\n                input: {\r\n                    skip,\r\n                    take,\r\n                    term: this.searchTerm,\r\n                    facetValueIds: this.facetValueIds,\r\n                    facetValueOperator: LogicalOperator.AND,\r\n                    groupByProduct: this.groupByProduct,\r\n                } as SearchInput,\r\n            }),\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n\r\n        this.facetValues$ = this.result$.pipe(map(data => data.search.facetValues));\r\n\r\n        this.facetValues$\r\n            .pipe(take(1), delay(100), withLatestFrom(this.selectedFacetValueIds$))\r\n            .subscribe(([__, ids]) => {\r\n                this.productSearchInput.setFacetValues(ids);\r\n            });\r\n        this.availableLanguages$ = this.serverConfigService.getAvailableLanguages();\r\n        this.contentLanguage$ = this.dataService.client\r\n            .uiState()\r\n            .mapStream(({ uiState }) => uiState.contentLanguage)\r\n            .pipe(tap(() => this.refresh()));\r\n\r\n        this.dataService.product\r\n            .getPendingSearchIndexUpdates()\r\n            .mapSingle(({ pendingSearchIndexUpdates }) => pendingSearchIndexUpdates)\r\n            .subscribe(value => (this.pendingSearchIndexUpdates = value));\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.productSearchInput && this.searchTerm) {\r\n            setTimeout(() => this.productSearchInput.setSearchTerm(this.searchTerm));\r\n        }\r\n    }\r\n\r\n    setSearchTerm(term: string) {\r\n        this.searchTerm = term;\r\n        this.setQueryParam({ q: term || null, page: 1 });\r\n        this.refresh();\r\n    }\r\n\r\n    setFacetValueIds(ids: string[]) {\r\n        this.facetValueIds = ids;\r\n        this.setQueryParam({ fvids: ids, page: 1 });\r\n        this.refresh();\r\n    }\r\n\r\n    rebuildSearchIndex() {\r\n        this.dataService.product.reindex().subscribe(({ reindex }) => {\r\n            this.notificationService.info(_('catalog.reindexing'));\r\n            this.jobQueueService.addJob(reindex.id, job => {\r\n                if (job.state === JobState.COMPLETED) {\r\n                    const time = new Intl.NumberFormat().format(job.duration || 0);\r\n                    this.notificationService.success(_('catalog.reindex-successful'), {\r\n                        count: job.result.indexedItemCount,\r\n                        time,\r\n                    });\r\n                    this.refresh();\r\n                } else {\r\n                    this.notificationService.error(_('catalog.reindex-error'));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    runPendingSearchIndexUpdates() {\r\n        this.dataService.product.runPendingSearchIndexUpdates().subscribe(value => {\r\n            this.notificationService.info(_('catalog.running-search-index-updates'), {\r\n                count: this.pendingSearchIndexUpdates,\r\n            });\r\n            this.pendingSearchIndexUpdates = 0;\r\n        });\r\n    }\r\n\r\n    deleteProduct(productId: string) {\r\n        this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-product'),\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response => (response ? this.dataService.product.deleteProduct(productId) : EMPTY)),\r\n                // Short delay to allow the product to be removed from the search index before\r\n                // refreshing.\r\n                delay(500),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'Product',\r\n                    });\r\n                    this.refresh();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'Product',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    setLanguage(code: LanguageCode) {\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BaseDetailComponent,\r\n    CreateFacetInput,\r\n    createUpdatedTranslatable,\r\n    CustomFieldConfig,\r\n    DataService,\r\n    FacetWithValues,\r\n    findTranslation,\r\n    GetProductVariantOptions,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    ProductOption,\r\n    ProductOptionGroup,\r\n    ServerConfigService,\r\n    UpdateFacetInput,\r\n    UpdateProductOptionGroupInput,\r\n    UpdateProductOptionInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { combineLatest, forkJoin, Observable } from 'rxjs';\r\nimport { map, mergeMap, take } from 'rxjs/operators';\r\n\r\nimport { ProductDetailService } from '../../providers/product-detail/product-detail.service';\r\n\r\n@Component({\r\n    selector: 'vdr-product-options-editor',\r\n    templateUrl: './product-options-editor.component.html',\r\n    styleUrls: ['./product-options-editor.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductOptionsEditorComponent\r\n    extends BaseDetailComponent<GetProductVariantOptions.Product>\r\n    implements OnInit\r\n{\r\n    detailForm: FormGroup;\r\n    optionGroups$: Observable<GetProductVariantOptions.OptionGroups[]>;\r\n    languageCode$: Observable<LanguageCode>;\r\n    availableLanguages$: Observable<LanguageCode[]>;\r\n    optionGroupCustomFields: CustomFieldConfig[];\r\n    optionCustomFields: CustomFieldConfig[];\r\n    autoUpdateVariantNames = true;\r\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n\r\n    constructor(\r\n        protected route: ActivatedRoute,\r\n        protected router: Router,\r\n        protected serverConfigService: ServerConfigService,\r\n        protected dataService: DataService,\r\n        private productDetailService: ProductDetailService,\r\n        private formBuilder: FormBuilder,\r\n        private changeDetector: ChangeDetectorRef,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.optionGroupCustomFields = this.getCustomFieldConfig('ProductOptionGroup');\r\n        this.optionCustomFields = this.getCustomFieldConfig('ProductOption');\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.optionGroups$ = this.route.snapshot.data.entity.pipe(\r\n            map((product: GetProductVariantOptions.Product) => product.optionGroups),\r\n        );\r\n        this.detailForm = new FormGroup({\r\n            optionGroups: new FormArray([]),\r\n        });\r\n        super.init();\r\n    }\r\n\r\n    getOptionGroups(): FormGroup[] {\r\n        const optionGroups = this.detailForm.get('optionGroups');\r\n        return (optionGroups as FormArray).controls as FormGroup[];\r\n    }\r\n\r\n    getOptions(optionGroup: FormGroup): FormGroup[] {\r\n        const options = optionGroup.get('options');\r\n        return (options as FormArray).controls as FormGroup[];\r\n    }\r\n\r\n    save() {\r\n        if (this.detailForm.invalid || this.detailForm.pristine) {\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-non-null-assertion\r\n        const $product = this.dataService.product.getProduct(this.id).mapSingle(data => data.product!);\r\n        combineLatest(this.entity$, this.languageCode$, $product)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([{ optionGroups }, languageCode, product]) => {\r\n                    const updateOperations: Array<Observable<any>> = [];\r\n                    for (const optionGroupForm of this.getOptionGroups()) {\r\n                        if (optionGroupForm.get('name')?.dirty || optionGroupForm.get('code')?.dirty) {\r\n                            const optionGroupEntity = optionGroups.find(\r\n                                og => og.id === optionGroupForm.value.id,\r\n                            );\r\n                            if (optionGroupEntity) {\r\n                                const input = this.getUpdatedOptionGroup(\r\n                                    optionGroupEntity,\r\n                                    optionGroupForm,\r\n                                    languageCode,\r\n                                );\r\n                                updateOperations.push(\r\n                                    this.dataService.product.updateProductOptionGroup(input),\r\n                                );\r\n                            }\r\n                        }\r\n\r\n                        for (const optionForm of this.getOptions(optionGroupForm)) {\r\n                            if (optionForm.get('name')?.dirty || optionForm.get('code')?.dirty) {\r\n                                const optionGroup = optionGroups\r\n                                    .find(og => og.id === optionGroupForm.value.id)\r\n                                    ?.options.find(o => o.id === optionForm.value.id);\r\n                                if (optionGroup) {\r\n                                    const input = this.getUpdatedOption(\r\n                                        optionGroup,\r\n                                        optionForm,\r\n                                        languageCode,\r\n                                    );\r\n                                    updateOperations.push(\r\n                                        this.productDetailService.updateProductOption(\r\n                                            { ...input, autoUpdate: this.autoUpdateVariantNames },\r\n                                            product,\r\n                                            languageCode,\r\n                                        ),\r\n                                    );\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return forkJoin(updateOperations);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'ProductOptionGroup',\r\n                    });\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'ProductOptionGroup',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    private getUpdatedOptionGroup(\r\n        optionGroup: ProductOptionGroup.Fragment,\r\n        optionGroupFormGroup: FormGroup,\r\n        languageCode: LanguageCode,\r\n    ): UpdateProductOptionGroupInput {\r\n        const input = createUpdatedTranslatable({\r\n            translatable: optionGroup,\r\n            updatedFields: optionGroupFormGroup.value,\r\n            customFieldConfig: this.optionGroupCustomFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: optionGroup.name || '',\r\n            },\r\n        });\r\n        return input;\r\n    }\r\n\r\n    private getUpdatedOption(\r\n        option: ProductOption.Fragment,\r\n        optionFormGroup: FormGroup,\r\n        languageCode: LanguageCode,\r\n    ): UpdateProductOptionInput {\r\n        const input = createUpdatedTranslatable({\r\n            translatable: option,\r\n            updatedFields: optionFormGroup.value,\r\n            customFieldConfig: this.optionGroupCustomFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: option.name || '',\r\n            },\r\n        });\r\n        return input;\r\n    }\r\n\r\n    protected setFormValues(entity: GetProductVariantOptions.Product, languageCode: LanguageCode): void {\r\n        const groupsFormArray = new FormArray([]);\r\n        for (const optionGroup of entity.optionGroups) {\r\n            const groupTranslation = findTranslation(optionGroup, languageCode);\r\n            const group = {\r\n                id: optionGroup.id,\r\n                createdAt: optionGroup.createdAt,\r\n                updatedAt: optionGroup.updatedAt,\r\n                code: optionGroup.code,\r\n                name: groupTranslation ? groupTranslation.name : '',\r\n            };\r\n            const optionsFormArray = new FormArray([]);\r\n\r\n            for (const option of optionGroup.options) {\r\n                const optionTranslation = findTranslation(option, languageCode);\r\n                const optionControl = this.formBuilder.group({\r\n                    id: option.id,\r\n                    createdAt: option.createdAt,\r\n                    updatedAt: option.updatedAt,\r\n                    code: option.code,\r\n                    name: optionTranslation ? optionTranslation.name : '',\r\n                });\r\n                optionsFormArray.push(optionControl);\r\n            }\r\n\r\n            const groupControl = this.formBuilder.group(group);\r\n            groupControl.addControl('options', optionsFormArray);\r\n            groupsFormArray.push(groupControl);\r\n        }\r\n        this.detailForm.setControl('optionGroups', groupsFormArray);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Dialog, GetProductVariantOptions } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-confirm-variant-deletion-dialog',\r\n    templateUrl: './confirm-variant-deletion-dialog.component.html',\r\n    styleUrls: ['./confirm-variant-deletion-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ConfirmVariantDeletionDialogComponent implements Dialog<boolean> {\r\n    resolveWith: (result?: boolean) => void;\r\n    variants: GetProductVariantOptions.Variants[] = [];\r\n\r\n    confirm() {\r\n        this.resolveWith(true);\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    CreateProductOptionGroup,\r\n    CreateProductOptionInput,\r\n    CurrencyCode,\r\n    DataService,\r\n    DeactivateAware,\r\n    getDefaultUiLanguage,\r\n    GetProductVariantOptions,\r\n    LanguageCode,\r\n    ModalService,\r\n    NotificationService,\r\n    ProductOptionGroupWithOptionsFragment,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { pick } from '@vendure/common/lib/pick';\r\nimport { generateAllCombinations, notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { unique } from '@vendure/common/lib/unique';\r\nimport { EMPTY, forkJoin, Observable, of } from 'rxjs';\r\nimport { filter, map, mergeMap, switchMap } from 'rxjs/operators';\r\n\r\nimport { ProductDetailService } from '../../providers/product-detail/product-detail.service';\r\nimport { ConfirmVariantDeletionDialogComponent } from '../confirm-variant-deletion-dialog/confirm-variant-deletion-dialog.component';\r\n\r\nexport class GeneratedVariant {\r\n    isDefault: boolean;\r\n    options: Array<{ name: string; id?: string }>;\r\n    productVariantId?: string;\r\n    enabled: boolean;\r\n    existing: boolean;\r\n    sku: string;\r\n    price: number;\r\n    stock: number;\r\n\r\n    constructor(config: Partial<GeneratedVariant>) {\r\n        for (const key of Object.keys(config)) {\r\n            this[key] = config[key];\r\n        }\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-product-variants-editor',\r\n    templateUrl: './product-variants-editor.component.html',\r\n    styleUrls: ['./product-variants-editor.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\nexport class ProductVariantsEditorComponent implements OnInit, DeactivateAware {\r\n    formValueChanged = false;\r\n    generatedVariants: GeneratedVariant[] = [];\r\n    optionGroups: Array<{\r\n        id?: string;\r\n        isNew: boolean;\r\n        name: string;\r\n        values: Array<{\r\n            id?: string;\r\n            name: string;\r\n            locked: boolean;\r\n        }>;\r\n    }>;\r\n    product: GetProductVariantOptions.Product;\r\n    currencyCode: CurrencyCode;\r\n    private languageCode: LanguageCode;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private dataService: DataService,\r\n        private productDetailService: ProductDetailService,\r\n        private notificationService: NotificationService,\r\n        private modalService: ModalService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.initOptionsAndVariants();\r\n        this.languageCode =\r\n            (this.route.snapshot.paramMap.get('lang') as LanguageCode) || getDefaultUiLanguage();\r\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\r\n            this.currencyCode = data.activeChannel.currencyCode;\r\n        });\r\n    }\r\n\r\n    onFormChanged(variantInfo: GeneratedVariant) {\r\n        this.formValueChanged = true;\r\n        variantInfo.enabled = true;\r\n    }\r\n\r\n    canDeactivate(): boolean {\r\n        return !this.formValueChanged;\r\n    }\r\n\r\n    getVariantsToAdd() {\r\n        return this.generatedVariants.filter(v => !v.existing && v.enabled);\r\n    }\r\n\r\n    getVariantName(variant: GeneratedVariant) {\r\n        return variant.options.length === 0\r\n            ? _('catalog.default-variant')\r\n            : variant.options.map(o => o.name).join(' ');\r\n    }\r\n\r\n    addOption() {\r\n        this.optionGroups.push({\r\n            isNew: true,\r\n            name: '',\r\n            values: [],\r\n        });\r\n    }\r\n\r\n    generateVariants() {\r\n        const groups = this.optionGroups.map(g => g.values);\r\n        const previousVariants = this.generatedVariants;\r\n        const generatedVariantFactory = (\r\n            isDefault: boolean,\r\n            options: GeneratedVariant['options'],\r\n            existingVariant?: GetProductVariantOptions.Variants,\r\n            prototypeVariant?: GetProductVariantOptions.Variants,\r\n        ): GeneratedVariant => {\r\n            const prototype = this.getVariantPrototype(options, previousVariants);\r\n            return new GeneratedVariant({\r\n                enabled: true,\r\n                existing: !!existingVariant,\r\n                productVariantId: existingVariant?.id,\r\n                isDefault,\r\n                options,\r\n                price: existingVariant?.price ?? prototypeVariant?.price ?? prototype.price,\r\n                sku: existingVariant?.sku ?? prototypeVariant?.sku ?? prototype.sku,\r\n                stock: existingVariant?.stockOnHand ?? prototypeVariant?.stockOnHand ?? prototype.stock,\r\n            });\r\n        };\r\n        this.generatedVariants = groups.length\r\n            ? generateAllCombinations(groups).map(options => {\r\n                  const existingVariant = this.product.variants.find(v =>\r\n                      this.optionsAreEqual(v.options, options),\r\n                  );\r\n                  const prototypeVariant = this.product.variants.find(v =>\r\n                      this.optionsAreSubset(v.options, options),\r\n                  );\r\n                  return generatedVariantFactory(false, options, existingVariant, prototypeVariant);\r\n              })\r\n            : [generatedVariantFactory(true, [], this.product.variants[0])];\r\n    }\r\n\r\n    /**\r\n     * Returns one of the existing variants to base the newly-generated variant's\r\n     * details off.\r\n     */\r\n    private getVariantPrototype(\r\n        options: GeneratedVariant['options'],\r\n        previousVariants: GeneratedVariant[],\r\n    ): Pick<GeneratedVariant, 'sku' | 'price' | 'stock'> {\r\n        const variantsWithSimilarOptions = previousVariants.filter(v =>\r\n            options.map(o => o.name).filter(name => v.options.map(o => o.name).includes(name)),\r\n        );\r\n        if (variantsWithSimilarOptions.length) {\r\n            return pick(previousVariants[0], ['sku', 'price', 'stock']);\r\n        }\r\n        return {\r\n            sku: '',\r\n            price: 0,\r\n            stock: 0,\r\n        };\r\n    }\r\n\r\n    deleteVariant(id: string) {\r\n        this.modalService\r\n            .dialog({\r\n                title: _('catalog.confirm-delete-product-variant'),\r\n                buttons: [\r\n                    { type: 'secondary', label: _('common.cancel') },\r\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n            .pipe(\r\n                switchMap(response =>\r\n                    response ? this.productDetailService.deleteProductVariant(id, this.product.id) : EMPTY,\r\n                ),\r\n                switchMap(() => this.reFetchProduct(null)),\r\n            )\r\n            .subscribe(\r\n                () => {\r\n                    this.notificationService.success(_('common.notify-delete-success'), {\r\n                        entity: 'ProductVariant',\r\n                    });\r\n                    this.initOptionsAndVariants();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-delete-error'), {\r\n                        entity: 'ProductVariant',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    save() {\r\n        const newOptionGroups = this.optionGroups\r\n            .filter(og => og.isNew)\r\n            .map(og => ({\r\n                name: og.name,\r\n                values: [],\r\n            }));\r\n\r\n        this.checkUniqueSkus()\r\n            .pipe(\r\n                mergeMap(() => this.confirmDeletionOfObsoleteVariants()),\r\n                mergeMap(() =>\r\n                    this.productDetailService.createProductOptionGroups(newOptionGroups, this.languageCode),\r\n                ),\r\n                mergeMap(createdOptionGroups => this.addOptionGroupsToProduct(createdOptionGroups)),\r\n                mergeMap(createdOptionGroups => this.addNewOptionsToGroups(createdOptionGroups)),\r\n                mergeMap(groupsIds => this.fetchOptionGroups(groupsIds)),\r\n                mergeMap(groups => this.createNewProductVariants(groups)),\r\n                mergeMap(res => this.deleteObsoleteVariants(res.createProductVariants)),\r\n                mergeMap(variants => this.reFetchProduct(variants)),\r\n            )\r\n            .subscribe({\r\n                next: variants => {\r\n                    this.formValueChanged = false;\r\n                    this.notificationService.success(_('catalog.created-new-variants-success'), {\r\n                        count: variants.length,\r\n                    });\r\n                    this.initOptionsAndVariants();\r\n                },\r\n            });\r\n    }\r\n\r\n    private checkUniqueSkus() {\r\n        const withDuplicateSkus = this.generatedVariants.filter((variant, index) => {\r\n            return this.generatedVariants.find(gv => gv.sku.trim() === variant.sku.trim() && gv !== variant);\r\n        });\r\n        if (withDuplicateSkus.length) {\r\n            return this.modalService\r\n                .dialog({\r\n                    title: _('catalog.duplicate-sku-warning'),\r\n                    body: unique(withDuplicateSkus.map(v => `${v.sku}`)).join(', '),\r\n                    buttons: [{ label: _('common.close'), returnValue: false, type: 'primary' }],\r\n                })\r\n                .pipe(mergeMap(res => EMPTY));\r\n        } else {\r\n            return of(true);\r\n        }\r\n    }\r\n\r\n    private confirmDeletionOfObsoleteVariants(): Observable<boolean> {\r\n        const obsoleteVariants = this.getObsoleteVariants();\r\n        if (obsoleteVariants.length) {\r\n            return this.modalService\r\n                .fromComponent(ConfirmVariantDeletionDialogComponent, {\r\n                    locals: {\r\n                        variants: obsoleteVariants,\r\n                    },\r\n                })\r\n                .pipe(\r\n                    mergeMap(res => {\r\n                        return res === true ? of(true) : EMPTY;\r\n                    }),\r\n                );\r\n        } else {\r\n            return of(true);\r\n        }\r\n    }\r\n\r\n    private getObsoleteVariants() {\r\n        return this.product.variants.filter(\r\n            variant => !this.generatedVariants.find(gv => gv.productVariantId === variant.id),\r\n        );\r\n    }\r\n\r\n    private hasOnlyDefaultVariant(product: GetProductVariantOptions.Product): boolean {\r\n        return product.variants.length === 1 && product.optionGroups.length === 0;\r\n    }\r\n\r\n    private addOptionGroupsToProduct(\r\n        createdOptionGroups: CreateProductOptionGroup.CreateProductOptionGroup[],\r\n    ): Observable<CreateProductOptionGroup.CreateProductOptionGroup[]> {\r\n        if (createdOptionGroups.length) {\r\n            return forkJoin(\r\n                createdOptionGroups.map(optionGroup => {\r\n                    return this.dataService.product.addOptionGroupToProduct({\r\n                        productId: this.product.id,\r\n                        optionGroupId: optionGroup.id,\r\n                    });\r\n                }),\r\n            ).pipe(map(() => createdOptionGroups));\r\n        } else {\r\n            return of([]);\r\n        }\r\n    }\r\n\r\n    private addNewOptionsToGroups(\r\n        createdOptionGroups: CreateProductOptionGroup.CreateProductOptionGroup[],\r\n    ): Observable<string[]> {\r\n        const newOptions: CreateProductOptionInput[] = this.optionGroups\r\n            .map(og => {\r\n                const createdGroup = createdOptionGroups.find(cog => cog.name === og.name);\r\n                const productOptionGroupId = createdGroup ? createdGroup.id : og.id;\r\n                if (!productOptionGroupId) {\r\n                    throw new Error('Could not get a productOptionGroupId');\r\n                }\r\n                return og.values\r\n                    .filter(v => !v.locked)\r\n                    .map(v => ({\r\n                        productOptionGroupId,\r\n                        code: normalizeString(v.name, '-'),\r\n                        translations: [{ name: v.name, languageCode: this.languageCode }],\r\n                    }));\r\n            })\r\n            .reduce((flat, options) => [...flat, ...options], []);\r\n\r\n        const allGroupIds = [\r\n            ...createdOptionGroups.map(g => g.id),\r\n            ...this.optionGroups.map(g => g.id).filter(notNullOrUndefined),\r\n        ];\r\n\r\n        if (newOptions.length) {\r\n            return forkJoin(newOptions.map(input => this.dataService.product.addOptionToGroup(input))).pipe(\r\n                map(() => allGroupIds),\r\n            );\r\n        } else {\r\n            return of(allGroupIds);\r\n        }\r\n    }\r\n\r\n    private fetchOptionGroups(groupsIds: string[]): Observable<ProductOptionGroupWithOptionsFragment[]> {\r\n        return forkJoin(\r\n            groupsIds.map(id =>\r\n                this.dataService.product\r\n                    .getProductOptionGroup(id)\r\n                    .mapSingle(data => data.productOptionGroup)\r\n                    .pipe(filter(notNullOrUndefined)),\r\n            ),\r\n        );\r\n    }\r\n\r\n    private createNewProductVariants(groups: ProductOptionGroupWithOptionsFragment[]) {\r\n        const options = groups\r\n            .filter(notNullOrUndefined)\r\n            .map(og => og.options)\r\n            .reduce((flat, o) => [...flat, ...o], []);\r\n        const variants = this.generatedVariants\r\n            .filter(v => v.enabled && !v.existing)\r\n            .map(v => ({\r\n                price: v.price,\r\n                sku: v.sku,\r\n                stock: v.stock,\r\n                optionIds: v.options\r\n                    .map(name => options.find(o => o.name === name.name))\r\n                    .filter(notNullOrUndefined)\r\n                    .map(o => o.id),\r\n            }));\r\n        return this.productDetailService.createProductVariants(\r\n            this.product,\r\n            variants,\r\n            options,\r\n            this.languageCode,\r\n        );\r\n    }\r\n\r\n    private deleteObsoleteVariants<T>(input: T): Observable<T> {\r\n        const obsoleteVariants = this.getObsoleteVariants();\r\n        if (obsoleteVariants.length) {\r\n            const deleteOperations = obsoleteVariants.map(v =>\r\n                this.dataService.product.deleteProductVariant(v.id).pipe(map(() => input)),\r\n            );\r\n            return forkJoin(...deleteOperations);\r\n        } else {\r\n            return of(input);\r\n        }\r\n    }\r\n\r\n    private reFetchProduct<T>(input: T): Observable<T> {\r\n        // Re-fetch the Product to force an update to the view.\r\n        const id = this.route.snapshot.paramMap.get('id');\r\n        if (id) {\r\n            return this.dataService.product.getProduct(id).single$.pipe(map(() => input));\r\n        } else {\r\n            return of(input);\r\n        }\r\n    }\r\n\r\n    initOptionsAndVariants() {\r\n        this.dataService.product\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            .getProductVariantsOptions(this.route.snapshot.paramMap.get('id')!)\r\n            // tslint:disable-next-line:no-non-null-assertion\r\n            .mapSingle(({ product }) => product!)\r\n            .subscribe(p => {\r\n                this.product = p;\r\n                this.optionGroups = p.optionGroups.map(og => {\r\n                    return {\r\n                        id: og.id,\r\n                        isNew: false,\r\n                        name: og.name,\r\n                        values: og.options.map(o => ({\r\n                            id: o.id,\r\n                            name: o.name,\r\n                            locked: true,\r\n                        })),\r\n                    };\r\n                });\r\n                this.generateVariants();\r\n            });\r\n    }\r\n\r\n    private optionsAreEqual(a: Array<{ name: string }>, b: Array<{ name: string }>): boolean {\r\n        return this.toOptionString(a) === this.toOptionString(b);\r\n    }\r\n\r\n    private optionsAreSubset(a: Array<{ name: string }>, b: Array<{ name: string }>): boolean {\r\n        return this.toOptionString(b).includes(this.toOptionString(a));\r\n    }\r\n\r\n    private toOptionString(o: Array<{ name: string }>): string {\r\n        return o\r\n            .map(x => x.name)\r\n            .sort()\r\n            .join('|');\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Asset, AssetType, BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AssetResolver extends BaseEntityResolver<Asset.Fragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'Asset' as const,\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                name: '',\r\n                type: AssetType.IMAGE,\r\n                fileSize: 0,\r\n                mimeType: '',\r\n                width: 0,\r\n                height: 0,\r\n                source: '',\r\n                preview: '',\r\n                focalPoint: null,\r\n            },\r\n            id => dataService.product.getAsset(id).mapStream(data => data.asset),\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver, Collection, DataService, getDefaultUiLanguage } from '@vendure/admin-ui/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CollectionResolver extends BaseEntityResolver<Collection.Fragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'Collection' as 'Collection',\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                languageCode: getDefaultUiLanguage(),\r\n                name: '',\r\n                slug: '',\r\n                isPrivate: false,\r\n                description: '',\r\n                featuredAsset: null,\r\n                assets: [],\r\n                translations: [],\r\n                filters: [],\r\n                parent: {} as any,\r\n                children: null,\r\n            },\r\n            id => dataService.collection.getCollection(id).mapStream(data => data.collection),\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { FacetWithValues } from '@vendure/admin-ui/core';\r\nimport { getDefaultUiLanguage } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class FacetResolver extends BaseEntityResolver<FacetWithValues.Fragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'Facet' as 'Facet',\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                isPrivate: false,\r\n                languageCode: getDefaultUiLanguage(),\r\n                name: '',\r\n                code: '',\r\n                translations: [],\r\n                values: [],\r\n            },\r\n            (id) => dataService.facet.getFacet(id).mapStream((data) => data.facet),\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n    BaseEntityResolver,\r\n    DataService,\r\n    getDefaultUiLanguage,\r\n    GetProductWithVariants,\r\n} from '@vendure/admin-ui/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ProductResolver extends BaseEntityResolver<GetProductWithVariants.Product> {\r\n    constructor(dataService: DataService, router: Router) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'Product' as 'Product',\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                enabled: true,\r\n                languageCode: getDefaultUiLanguage(),\r\n                name: '',\r\n                slug: '',\r\n                featuredAsset: null,\r\n                assets: [],\r\n                description: '',\r\n                translations: [],\r\n                optionGroups: [],\r\n                facetValues: [],\r\n                variantList: { items: [], totalItems: 0 },\r\n                channels: [],\r\n            },\r\n            id =>\r\n                dataService.product\r\n                    .getProduct(id, { take: 10 })\r\n                    .refetchOnChannelChange()\r\n                    .mapStream(data => data.product),\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\r\nimport { GetProductVariantOptions } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ProductVariantsResolver extends BaseEntityResolver<GetProductVariantOptions.Product> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'Product' as 'Product',\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                name: '',\r\n                optionGroups: [],\r\n                variants: [],\r\n            },\r\n            id => dataService.product.getProductVariantsOptions(id).mapStream(data => data.product),\r\n        );\r\n    }\r\n}\r\n","import { Route } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    Asset,\r\n    CanDeactivateDetailGuard,\r\n    Collection,\r\n    createResolveData,\r\n    detailBreadcrumb,\r\n    FacetWithValues,\r\n    GetProductWithVariants,\r\n} from '@vendure/admin-ui/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AssetDetailComponent } from './components/asset-detail/asset-detail.component';\r\nimport { AssetListComponent } from './components/asset-list/asset-list.component';\r\nimport { CollectionDetailComponent } from './components/collection-detail/collection-detail.component';\r\nimport { CollectionListComponent } from './components/collection-list/collection-list.component';\r\nimport { FacetDetailComponent } from './components/facet-detail/facet-detail.component';\r\nimport { FacetListComponent } from './components/facet-list/facet-list.component';\r\nimport { ProductDetailComponent } from './components/product-detail/product-detail.component';\r\nimport { ProductListComponent } from './components/product-list/product-list.component';\r\nimport { ProductOptionsEditorComponent } from './components/product-options-editor/product-options-editor.component';\r\nimport { ProductVariantsEditorComponent } from './components/product-variants-editor/product-variants-editor.component';\r\nimport { AssetResolver } from './providers/routing/asset-resolver';\r\nimport { CollectionResolver } from './providers/routing/collection-resolver';\r\nimport { FacetResolver } from './providers/routing/facet-resolver';\r\nimport { ProductResolver } from './providers/routing/product-resolver';\r\nimport { ProductVariantsResolver } from './providers/routing/product-variants-resolver';\r\n\r\nexport const catalogRoutes: Route[] = [\r\n    {\r\n        path: 'products',\r\n        component: ProductListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.products'),\r\n        },\r\n    },\r\n    {\r\n        path: 'products/:id',\r\n        component: ProductDetailComponent,\r\n        resolve: createResolveData(ProductResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: productBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: 'products/:id/manage-variants',\r\n        component: ProductVariantsEditorComponent,\r\n        resolve: createResolveData(ProductVariantsResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: productVariantEditorBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: 'products/:id/options',\r\n        component: ProductOptionsEditorComponent,\r\n        resolve: createResolveData(ProductVariantsResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: productOptionsEditorBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: 'facets',\r\n        component: FacetListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.facets'),\r\n        },\r\n    },\r\n    {\r\n        path: 'facets/:id',\r\n        component: FacetDetailComponent,\r\n        resolve: createResolveData(FacetResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: facetBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: 'collections',\r\n        component: CollectionListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.collections'),\r\n        },\r\n    },\r\n    {\r\n        path: 'collections/:id',\r\n        component: CollectionDetailComponent,\r\n        resolve: createResolveData(CollectionResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: collectionBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: 'assets',\r\n        component: AssetListComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.assets'),\r\n        },\r\n    },\r\n    {\r\n        path: 'assets/:id',\r\n        component: AssetDetailComponent,\r\n        resolve: createResolveData(AssetResolver),\r\n        data: {\r\n            breadcrumb: assetBreadcrumb,\r\n        },\r\n    },\r\n];\r\n\r\nexport function productBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<GetProductWithVariants.Product>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.products',\r\n        getName: product => product.name,\r\n        route: 'products',\r\n    });\r\n}\r\n\r\nexport function productVariantEditorBreadcrumb(data: any, params: any) {\r\n    return data.entity.pipe(\r\n        map((entity: any) => {\r\n            return [\r\n                {\r\n                    label: _('breadcrumb.products'),\r\n                    link: ['../', 'products'],\r\n                },\r\n                {\r\n                    label: `${entity.name}`,\r\n                    link: ['../', 'products', params.id, { tab: 'variants' }],\r\n                },\r\n                {\r\n                    label: _('breadcrumb.manage-variants'),\r\n                    link: ['manage-variants'],\r\n                },\r\n            ];\r\n        }),\r\n    );\r\n}\r\n\r\nexport function productOptionsEditorBreadcrumb(data: any, params: any) {\r\n    return data.entity.pipe(\r\n        map((entity: any) => {\r\n            return [\r\n                {\r\n                    label: _('breadcrumb.products'),\r\n                    link: ['../', 'products'],\r\n                },\r\n                {\r\n                    label: `${entity.name}`,\r\n                    link: ['../', 'products', params.id, { tab: 'variants' }],\r\n                },\r\n                {\r\n                    label: _('breadcrumb.product-options'),\r\n                    link: ['options'],\r\n                },\r\n            ];\r\n        }),\r\n    );\r\n}\r\n\r\nexport function facetBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<FacetWithValues.Fragment>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.facets',\r\n        getName: facet => facet.name,\r\n        route: 'facets',\r\n    });\r\n}\r\n\r\nexport function collectionBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<Collection.Fragment>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.collections',\r\n        getName: collection => collection.name,\r\n        route: 'collections',\r\n    });\r\n}\r\n\r\nexport function assetBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<Asset.Fragment>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.assets',\r\n        getName: asset => asset.name,\r\n        route: 'assets',\r\n    });\r\n}\r\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Input,\r\n    Output,\r\n} from '@angular/core';\r\nimport {\r\n    Asset,\r\n    AssetPickerDialogComponent,\r\n    AssetPreviewDialogComponent,\r\n    ModalService,\r\n    Permission,\r\n} from '@vendure/admin-ui/core';\r\nimport { unique } from '@vendure/common/lib/unique';\r\n\r\nexport interface AssetChange {\r\n    assets: Asset[];\r\n    featuredAsset: Asset | undefined;\r\n}\r\n\r\n/**\r\n * A component which displays the Assets, and allows assets to be removed and\r\n * added, and for the featured asset to be set.\r\n *\r\n * Note: rather complex code for drag drop is due to a limitation of the default CDK implementation\r\n * which is addressed by a work-around from here: https://github.com/angular/components/issues/13372#issuecomment-483998378\r\n */\r\n@Component({\r\n    selector: 'vdr-assets',\r\n    templateUrl: './assets.component.html',\r\n    styleUrls: ['./assets.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AssetsComponent {\r\n    @Input('assets') set assetsSetter(val: Asset[]) {\r\n        // create a new non-readonly array of assets\r\n        this.assets = (val || []).slice();\r\n    }\r\n\r\n    @Input() featuredAsset: Asset | undefined;\r\n    @HostBinding('class.compact')\r\n    @Input()\r\n    compact = false;\r\n    @Output() change = new EventEmitter<AssetChange>();\r\n\r\n    public assets: Asset[] = [];\r\n\r\n    @Input()\r\n    updatePermissions: string | string[] | Permission | Permission[];\r\n\r\n    constructor(private modalService: ModalService, private changeDetector: ChangeDetectorRef) {}\r\n\r\n    selectAssets() {\r\n        this.modalService\r\n            .fromComponent(AssetPickerDialogComponent, {\r\n                size: 'xl',\r\n            })\r\n            .subscribe(result => {\r\n                if (result && result.length) {\r\n                    this.assets = unique(this.assets.concat(result), 'id');\r\n                    if (!this.featuredAsset) {\r\n                        this.featuredAsset = result[0];\r\n                    }\r\n                    this.emitChangeEvent(this.assets, this.featuredAsset);\r\n                    this.changeDetector.markForCheck();\r\n                }\r\n            });\r\n    }\r\n\r\n    setAsFeatured(asset: Asset) {\r\n        this.featuredAsset = asset;\r\n        this.emitChangeEvent(this.assets, asset);\r\n    }\r\n\r\n    isFeatured(asset: Asset): boolean {\r\n        return !!this.featuredAsset && this.featuredAsset.id === asset.id;\r\n    }\r\n\r\n    previewAsset(asset: Asset) {\r\n        this.modalService\r\n            .fromComponent(AssetPreviewDialogComponent, {\r\n                size: 'xl',\r\n                closable: true,\r\n                locals: { asset },\r\n            })\r\n            .subscribe();\r\n    }\r\n\r\n    removeAsset(asset: Asset) {\r\n        this.assets = this.assets.filter(a => a.id !== asset.id);\r\n        if (this.featuredAsset && this.featuredAsset.id === asset.id) {\r\n            this.featuredAsset = this.assets.length > 0 ? this.assets[0] : undefined;\r\n        }\r\n        this.emitChangeEvent(this.assets, this.featuredAsset);\r\n    }\r\n\r\n    private emitChangeEvent(assets: Asset[], featuredAsset: Asset | undefined) {\r\n        this.change.emit({\r\n            assets,\r\n            featuredAsset,\r\n        });\r\n    }\r\n\r\n    dropListDropped(event: CdkDragDrop<number>) {\r\n        moveItemInArray(this.assets, event.previousContainer.data, event.container.data);\r\n        this.emitChangeEvent(this.assets, this.featuredAsset);\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ContentChild,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\r\nimport {\r\n    debounceTime,\r\n    distinctUntilChanged,\r\n    map,\r\n    startWith,\r\n    switchMap,\r\n    takeUntil,\r\n    tap,\r\n} from 'rxjs/operators';\r\n\r\nimport { GetCollectionContents } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-collection-contents',\r\n    templateUrl: './collection-contents.component.html',\r\n    styleUrls: ['./collection-contents.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CollectionContentsComponent implements OnInit, OnChanges, OnDestroy {\r\n    @Input() collectionId: string;\r\n    @ContentChild(TemplateRef, { static: true }) headerTemplate: TemplateRef<any>;\r\n\r\n    contents$: Observable<GetCollectionContents.Items[]>;\r\n    contentsTotalItems$: Observable<number>;\r\n    contentsItemsPerPage$: Observable<number>;\r\n    contentsCurrentPage$: Observable<number>;\r\n    filterTermControl = new FormControl('');\r\n    private collectionIdChange$ = new BehaviorSubject<string>('');\r\n    private refresh$ = new BehaviorSubject<boolean>(true);\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(private route: ActivatedRoute, private router: Router, private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.contentsCurrentPage$ = this.route.paramMap.pipe(\r\n            map(qpm => qpm.get('contentsPage')),\r\n            map(page => (!page ? 1 : +page)),\r\n            startWith(1),\r\n            distinctUntilChanged(),\r\n        );\r\n\r\n        this.contentsItemsPerPage$ = this.route.paramMap.pipe(\r\n            map(qpm => qpm.get('contentsPerPage')),\r\n            map(perPage => (!perPage ? 10 : +perPage)),\r\n            startWith(10),\r\n            distinctUntilChanged(),\r\n        );\r\n\r\n        const filterTerm$ = this.filterTermControl.valueChanges.pipe(\r\n            debounceTime(250),\r\n            tap(() => this.setContentsPageNumber(1)),\r\n            startWith(''),\r\n        );\r\n\r\n        const collection$ = combineLatest(\r\n            this.collectionIdChange$,\r\n            this.contentsCurrentPage$,\r\n            this.contentsItemsPerPage$,\r\n            filterTerm$,\r\n            this.refresh$,\r\n        ).pipe(\r\n            takeUntil(this.destroy$),\r\n            switchMap(([id, currentPage, itemsPerPage, filterTerm]) => {\r\n                const take = itemsPerPage;\r\n                const skip = (currentPage - 1) * itemsPerPage;\r\n                if (id) {\r\n                    return this.dataService.collection\r\n                        .getCollectionContents(id, take, skip, filterTerm)\r\n                        .mapSingle(data => data.collection);\r\n                } else {\r\n                    return of(null);\r\n                }\r\n            }),\r\n        );\r\n\r\n        this.contents$ = collection$.pipe(map(result => (result ? result.productVariants.items : [])));\r\n        this.contentsTotalItems$ = collection$.pipe(\r\n            map(result => (result ? result.productVariants.totalItems : 0)),\r\n        );\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if ('collectionId' in changes) {\r\n            this.collectionIdChange$.next(changes.collectionId.currentValue);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    setContentsPageNumber(page: number) {\r\n        this.setParam('contentsPage', page);\r\n    }\r\n\r\n    setContentsItemsPerPage(perPage: number) {\r\n        this.setParam('contentsPerPage', perPage);\r\n    }\r\n\r\n    refresh() {\r\n        this.refresh$.next(true);\r\n    }\r\n\r\n    private setParam(key: string, value: any) {\r\n        this.router.navigate(['./', { ...this.route.snapshot.params, [key]: value }], {\r\n            relativeTo: this.route,\r\n            queryParamsHandling: 'merge',\r\n        });\r\n    }\r\n}\r\n","export type HasParent = { id: string; parent?: { id: string } | null };\nexport type TreeNode<T extends HasParent> = T & { children: Array<TreeNode<T>>; expanded: boolean };\nexport type RootNode<T extends HasParent> = { id?: string; children: Array<TreeNode<T>> };\n\n/**\n * Builds a tree from an array of nodes which have a parent.\n * Based on https://stackoverflow.com/a/31247960/772859, modified to preserve ordering.\n */\nexport function arrayToTree<T extends HasParent>(nodes: T[], currentState?: RootNode<T>): RootNode<T> {\n    const topLevelNodes: Array<TreeNode<T>> = [];\n    const mappedArr: { [id: string]: TreeNode<T> } = {};\n    const currentStateMap = treeToMap(currentState);\n\n    // First map the nodes of the array to an object -> create a hash table.\n    for (const node of nodes) {\n        mappedArr[node.id] = { ...(node as any), children: [] };\n    }\n\n    for (const id of nodes.map(n => n.id)) {\n        if (mappedArr.hasOwnProperty(id)) {\n            const mappedElem = mappedArr[id];\n            mappedElem.expanded = currentStateMap.get(id)?.expanded ?? false;\n            const parent = mappedElem.parent;\n            if (!parent) {\n                continue;\n            }\n            // If the element is not at the root level, add it to its parent array of children.\n            const parentIsRoot = !mappedArr[parent.id];\n            if (!parentIsRoot) {\n                if (mappedArr[parent.id]) {\n                    mappedArr[parent.id].children.push(mappedElem);\n                } else {\n                    mappedArr[parent.id] = { children: [mappedElem] } as any;\n                }\n            } else {\n                topLevelNodes.push(mappedElem);\n            }\n        }\n    }\n    // tslint:disable-next-line:no-non-null-assertion\n    const rootId = topLevelNodes.length ? topLevelNodes[0].parent!.id : undefined;\n    return { id: rootId, children: topLevelNodes };\n}\n\n/**\n * Converts an existing tree (as generated by the arrayToTree function) into a flat\n * Map. This is used to persist certain states (e.g. `expanded`) when re-building the\n * tree.\n */\nfunction treeToMap<T extends HasParent>(tree?: RootNode<T>): Map<string, TreeNode<T>> {\n    const nodeMap = new Map<string, TreeNode<T>>();\n    function visit(node: TreeNode<T>) {\n        nodeMap.set(node.id, node);\n        node.children.forEach(visit);\n    }\n    if (tree) {\n        visit(tree as TreeNode<T>);\n    }\n    return nodeMap;\n}\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    Output,\r\n    SimpleChanges,\r\n} from '@angular/core';\r\nimport { Collection } from '@vendure/admin-ui/core';\r\n\r\nimport { arrayToTree, HasParent, RootNode, TreeNode } from './array-to-tree';\r\n\r\nexport type RearrangeEvent = { collectionId: string; parentId: string; index: number };\r\nexport type CollectionPartial = Pick<Collection.Fragment, 'id' | 'parent' | 'name'>;\r\n\r\n@Component({\r\n    selector: 'vdr-collection-tree',\r\n    templateUrl: 'collection-tree.component.html',\r\n    styleUrls: ['./collection-tree.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CollectionTreeComponent implements OnChanges {\r\n    @Input() collections: CollectionPartial[];\r\n    @Input() activeCollectionId: string;\r\n    @Input() expandAll = false;\r\n    @Output() rearrange = new EventEmitter<RearrangeEvent>();\r\n    @Output() deleteCollection = new EventEmitter<string>();\r\n    collectionTree: RootNode<CollectionPartial>;\r\n    private allMoveListItems: Array<{ path: string; id: string; ancestorIdPath: Set<string> }> = [];\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if ('collections' in changes && this.collections) {\r\n            this.collectionTree = arrayToTree(this.collections, this.collectionTree);\r\n            this.allMoveListItems = [];\r\n        }\r\n    }\r\n\r\n    onDrop(event: CdkDragDrop<CollectionPartial | RootNode<CollectionPartial>>) {\r\n        const item = event.item.data as CollectionPartial;\r\n        const newParent = event.container.data;\r\n        const newParentId = newParent.id;\r\n        if (newParentId == null) {\r\n            throw new Error(`Could not determine the ID of the root Collection`);\r\n        }\r\n        this.rearrange.emit({\r\n            collectionId: item.id,\r\n            parentId: newParentId,\r\n            index: event.currentIndex,\r\n        });\r\n    }\r\n\r\n    onMove(event: RearrangeEvent) {\r\n        this.rearrange.emit(event);\r\n    }\r\n\r\n    onDelete(id: string) {\r\n        this.deleteCollection.emit(id);\r\n    }\r\n\r\n    getMoveListItems(collection: CollectionPartial) {\r\n        if (this.allMoveListItems.length === 0) {\r\n            this.allMoveListItems = this.calculateAllMoveListItems();\r\n        }\r\n        return this.allMoveListItems.filter(\r\n            item =>\r\n                item.id !== collection.id &&\r\n                !item.ancestorIdPath.has(collection.id) &&\r\n                item.id !== collection.parent?.id,\r\n        );\r\n    }\r\n\r\n    calculateAllMoveListItems() {\r\n        const visit = (\r\n            node: TreeNode<any>,\r\n            parentPath: string[],\r\n            ancestorIdPath: Set<string>,\r\n            output: Array<{ path: string; id: string; ancestorIdPath: Set<string> }>,\r\n        ) => {\r\n            const path = parentPath.concat(node.name);\r\n            output.push({ path: path.slice(1).join(' / ') || 'root', id: node.id, ancestorIdPath });\r\n            node.children.forEach(child =>\r\n                visit(child, path, new Set<string>([...ancestorIdPath, node.id]), output),\r\n            );\r\n            return output;\r\n        };\r\n        return visit(this.collectionTree, [], new Set<string>(), []);\r\n    }\r\n\r\n    private isRootNode<T extends HasParent>(node: T | RootNode<T>): node is RootNode<T> {\r\n        return !node.hasOwnProperty('parent');\r\n    }\r\n}\r\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Optional,\r\n    SimpleChanges,\r\n    SkipSelf,\r\n} from '@angular/core';\r\nimport { DataService, Permission } from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\nimport { RootNode, TreeNode } from './array-to-tree';\r\nimport { CollectionPartial, CollectionTreeComponent } from './collection-tree.component';\r\n\r\n@Component({\r\n    selector: 'vdr-collection-tree-node',\r\n    templateUrl: './collection-tree-node.component.html',\r\n    styleUrls: ['./collection-tree-node.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CollectionTreeNodeComponent implements OnInit, OnChanges {\r\n    depth = 0;\r\n    parentName: string;\r\n    @Input() collectionTree: TreeNode<CollectionPartial>;\r\n    @Input() activeCollectionId: string;\r\n    @Input() expandAll = false;\r\n    hasUpdatePermission$: Observable<boolean>;\r\n    hasDeletePermission$: Observable<boolean>;\r\n    moveListItems: Array<{ path: string; id: string }> = [];\r\n\r\n    constructor(\r\n        @SkipSelf() @Optional() private parent: CollectionTreeNodeComponent,\r\n        private root: CollectionTreeComponent,\r\n        private dataService: DataService,\r\n    ) {\r\n        if (parent) {\r\n            this.depth = parent.depth + 1;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.parentName = this.collectionTree.name || '<root>';\r\n        const permissions$ = this.dataService.client\r\n            .userStatus()\r\n            .mapStream(data => data.userStatus.permissions)\r\n            .pipe(shareReplay(1));\r\n        this.hasUpdatePermission$ = permissions$.pipe(\r\n            map(\r\n                perms =>\r\n                    perms.includes(Permission.UpdateCatalog) || perms.includes(Permission.UpdateCollection),\r\n            ),\r\n        );\r\n        this.hasDeletePermission$ = permissions$.pipe(\r\n            map(\r\n                perms =>\r\n                    perms.includes(Permission.DeleteCatalog) || perms.includes(Permission.DeleteCollection),\r\n            ),\r\n        );\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        const expandAllChange = changes['expandAll'];\r\n        if (expandAllChange) {\r\n            if (expandAllChange.previousValue === true && expandAllChange.currentValue === false) {\r\n                this.collectionTree.children.forEach(c => (c.expanded = false));\r\n            }\r\n        }\r\n    }\r\n\r\n    trackByFn(index: number, item: CollectionPartial) {\r\n        return item.id;\r\n    }\r\n\r\n    getMoveListItems(collection: CollectionPartial) {\r\n        this.moveListItems = this.root.getMoveListItems(collection);\r\n    }\r\n\r\n    move(collection: CollectionPartial, parentId: string) {\r\n        this.root.onMove({\r\n            index: 0,\r\n            parentId,\r\n            collectionId: collection.id,\r\n        });\r\n    }\r\n\r\n    moveUp(collection: CollectionPartial, currentIndex: number) {\r\n        if (!collection.parent) {\r\n            return;\r\n        }\r\n        this.root.onMove({\r\n            index: currentIndex - 1,\r\n            parentId: collection.parent.id,\r\n            collectionId: collection.id,\r\n        });\r\n    }\r\n\r\n    moveDown(collection: CollectionPartial, currentIndex: number) {\r\n        if (!collection.parent) {\r\n            return;\r\n        }\r\n        this.root.onMove({\r\n            index: currentIndex + 1,\r\n            parentId: collection.parent.id,\r\n            collectionId: collection.id,\r\n        });\r\n    }\r\n\r\n    drop(event: CdkDragDrop<CollectionPartial | RootNode<CollectionPartial>>) {\r\n        moveItemInArray(this.collectionTree.children, event.previousIndex, event.currentIndex);\r\n        this.root.onDrop(event);\r\n    }\r\n\r\n    delete(id: string) {\r\n        this.root.onDelete(id);\r\n    }\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { generateAllCombinations } from '@vendure/common/lib/shared-utils';\r\n\r\nimport { CurrencyCode } from '@vendure/admin-ui/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\nimport { OptionValueInputComponent } from '../option-value-input/option-value-input.component';\r\n\r\nconst DEFAULT_VARIANT_CODE = '__DEFAULT_VARIANT__';\r\nexport type CreateVariantValues = {\r\n    optionValues: string[];\r\n    enabled: boolean;\r\n    sku: string;\r\n    price: number;\r\n    stock: number;\r\n};\r\nexport type CreateProductVariantsConfig = {\r\n    groups: Array<{ name: string; values: string[] }>;\r\n    variants: CreateVariantValues[];\r\n};\r\n\r\n@Component({\r\n    selector: 'vdr-generate-product-variants',\r\n    templateUrl: './generate-product-variants.component.html',\r\n    styleUrls: ['./generate-product-variants.component.scss'],\r\n})\r\nexport class GenerateProductVariantsComponent implements OnInit {\r\n    @Output() variantsChange = new EventEmitter<CreateProductVariantsConfig>();\r\n    optionGroups: Array<{ name: string; values: Array<{ name: string; locked: boolean }> }> = [];\r\n    currencyCode: CurrencyCode;\r\n    variants: Array<{ id: string; values: string[] }>;\r\n    variantFormValues: { [id: string]: CreateVariantValues } = {};\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\r\n            this.currencyCode = data.activeChannel.currencyCode;\r\n        });\r\n\r\n        this.generateVariants();\r\n    }\r\n\r\n    addOption() {\r\n        this.optionGroups.push({ name: '', values: [] });\r\n    }\r\n\r\n    removeOption(name: string) {\r\n        this.optionGroups = this.optionGroups.filter(g => g.name !== name);\r\n        this.generateVariants();\r\n    }\r\n\r\n    generateVariants() {\r\n        const totalValuesCount = this.optionGroups.reduce((sum, group) => sum + group.values.length, 0);\r\n        const groups = totalValuesCount\r\n            ? this.optionGroups.map(g => g.values.map(v => v.name))\r\n            : [[DEFAULT_VARIANT_CODE]];\r\n        this.variants = generateAllCombinations(groups).map(values => ({ id: values.join('|'), values }));\r\n\r\n        this.variants.forEach(variant => {\r\n            if (!this.variantFormValues[variant.id]) {\r\n                this.variantFormValues[variant.id] = {\r\n                    optionValues: variant.values,\r\n                    enabled: true,\r\n                    price: this.copyFromDefault(variant.id, 'price', 0),\r\n                    sku: this.copyFromDefault(variant.id, 'sku', ''),\r\n                    stock: this.copyFromDefault(variant.id, 'stock', 0),\r\n                };\r\n            }\r\n        });\r\n        this.onFormChange();\r\n    }\r\n\r\n    trackByFn(index: number, variant: { name: string; values: string[] }) {\r\n        return variant.values.join('|');\r\n    }\r\n\r\n    handleEnter(event: KeyboardEvent, optionValueInputComponent: OptionValueInputComponent) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        optionValueInputComponent.focus();\r\n    }\r\n\r\n    onFormChange() {\r\n        const variantsToCreate = this.variants.map(v => this.variantFormValues[v.id]).filter(v => v.enabled);\r\n        this.variantsChange.emit({\r\n            groups: this.optionGroups.map(og => ({ name: og.name, values: og.values.map(v => v.name) })),\r\n            variants: variantsToCreate,\r\n        });\r\n    }\r\n\r\n    private copyFromDefault<T extends keyof CreateVariantValues>(\r\n        variantId: string,\r\n        prop: T,\r\n        value: CreateVariantValues[T],\r\n    ): CreateVariantValues[T] {\r\n        return variantId !== DEFAULT_VARIANT_CODE\r\n            ? this.variantFormValues[DEFAULT_VARIANT_CODE][prop]\r\n            : value;\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    forwardRef,\r\n    Input,\r\n    Provider,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { unique } from '@vendure/common/lib/unique';\r\n\r\nexport const OPTION_VALUE_INPUT_VALUE_ACCESSOR: Provider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => OptionValueInputComponent),\r\n    multi: true,\r\n};\r\n\r\n@Component({\r\n    selector: 'vdr-option-value-input',\r\n    templateUrl: './option-value-input.component.html',\r\n    styleUrls: ['./option-value-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    providers: [OPTION_VALUE_INPUT_VALUE_ACCESSOR],\r\n})\r\nexport class OptionValueInputComponent implements ControlValueAccessor {\r\n    @Input() groupName = '';\r\n    @ViewChild('textArea', { static: true }) textArea: ElementRef<HTMLTextAreaElement>;\r\n    options: Array<{ name: string; locked: boolean }>;\r\n    disabled = false;\r\n    input = '';\r\n    isFocussed = false;\r\n    lastSelected = false;\r\n    onChangeFn: (value: any) => void;\r\n    onTouchFn: (value: any) => void;\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChangeFn = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouchFn = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        this.options = obj || [];\r\n    }\r\n\r\n    focus() {\r\n        this.textArea.nativeElement.focus();\r\n    }\r\n\r\n    removeOption(option: { name: string; locked: boolean }) {\r\n        if (!option.locked) {\r\n            this.options = this.options.filter(o => o.name !== option.name);\r\n            this.onChangeFn(this.options);\r\n        }\r\n    }\r\n\r\n    handleKey(event: KeyboardEvent) {\r\n        switch (event.key) {\r\n            case ',':\r\n            case 'Enter':\r\n                this.addOptionValue();\r\n                event.preventDefault();\r\n                break;\r\n            case 'Backspace':\r\n                if (this.lastSelected) {\r\n                    this.removeLastOption();\r\n                    this.lastSelected = false;\r\n                } else if (this.input === '') {\r\n                    this.lastSelected = true;\r\n                }\r\n                break;\r\n            default:\r\n                this.lastSelected = false;\r\n        }\r\n    }\r\n\r\n    handleBlur() {\r\n        this.isFocussed = false;\r\n        this.addOptionValue();\r\n    }\r\n\r\n    private addOptionValue() {\r\n        this.options = unique([...this.options, ...this.parseInputIntoOptions(this.input)]);\r\n        this.input = '';\r\n        this.onChangeFn(this.options);\r\n    }\r\n\r\n    private parseInputIntoOptions(input: string): Array<{ name: string; locked: boolean }> {\r\n        return input\r\n            .split(/[,\\n]/)\r\n            .map(s => s.trim())\r\n            .filter(s => s !== '')\r\n            .map(s => ({ name: s, locked: false }));\r\n    }\r\n\r\n    private removeLastOption() {\r\n        if (!this.options[this.options.length - 1].locked) {\r\n            this.options = this.options.slice(0, this.options.length - 1);\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { NgSelectComponent, SELECTION_MODEL_FACTORY } from '@ng-select/ng-select';\r\nimport { SearchProducts, SingleSearchSelectionModelFactory } from '@vendure/admin-ui/core';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\n\r\n@Component({\r\n    selector: 'vdr-product-search-input',\r\n    templateUrl: './product-search-input.component.html',\r\n    styleUrls: ['./product-search-input.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{ provide: SELECTION_MODEL_FACTORY, useValue: SingleSearchSelectionModelFactory }],\r\n})\r\nexport class ProductSearchInputComponent {\r\n    @Input() facetValueResults: SearchProducts.FacetValues[];\r\n    @Output() searchTermChange = new EventEmitter<string>();\r\n    @Output() facetValueChange = new EventEmitter<string[]>();\r\n    @ViewChild('selectComponent', { static: true }) private selectComponent: NgSelectComponent;\r\n    private lastTerm = '';\r\n    private lastFacetValueIds: string[] = [];\r\n\r\n    setSearchTerm(term: string | null) {\r\n        if (term) {\r\n            this.selectComponent.select({ label: term, value: { label: term } });\r\n        } else {\r\n            const currentTerm = this.selectComponent.selectedItems.find(i => !this.isFacetValueItem(i.value));\r\n            if (currentTerm) {\r\n                this.selectComponent.unselect(currentTerm);\r\n            }\r\n        }\r\n    }\r\n\r\n    setFacetValues(ids: string[]) {\r\n        const items = this.selectComponent.items;\r\n\r\n        this.selectComponent.selectedItems.forEach(item => {\r\n            if (this.isFacetValueItem(item.value) && !ids.includes(item.value.facetValue.id)) {\r\n                this.selectComponent.unselect(item);\r\n            }\r\n        });\r\n\r\n        ids.map(id => {\r\n            return items?.find(item => this.isFacetValueItem(item) && item.facetValue.id === id);\r\n        })\r\n            .filter(notNullOrUndefined)\r\n            .forEach(item => {\r\n                const isSelected = this.selectComponent.selectedItems.find(i => {\r\n                    const val = i.value;\r\n                    if (this.isFacetValueItem(val)) {\r\n                        return val.facetValue.id === item.facetValue.id;\r\n                    }\r\n                    return false;\r\n                });\r\n                if (!isSelected) {\r\n                    this.selectComponent.select({ label: '', value: item });\r\n                }\r\n            });\r\n    }\r\n\r\n    filterFacetResults = (term: string, item: SearchProducts.FacetValues | { label: string }) => {\r\n        if (!this.isFacetValueItem(item)) {\r\n            return false;\r\n        }\r\n\r\n        const cix = term.indexOf(':');\r\n        const facetName = cix > -1 ? term.toLowerCase().slice(0, cix) : null;\r\n        const facetVal = cix > -1 ? term.toLowerCase().slice(cix + 1) : term.toLowerCase();\r\n\r\n        if (facetName) {\r\n            return (\r\n                item.facetValue.facet.name.toLowerCase().includes(facetName) &&\r\n                item.facetValue.name.toLocaleLowerCase().includes(facetVal)\r\n            );\r\n        }\r\n\r\n        return (\r\n            item.facetValue.name.toLowerCase().includes(term.toLowerCase()) ||\r\n            item.facetValue.facet.name.toLowerCase().includes(term.toLowerCase())\r\n        );\r\n    };\r\n\r\n    onSelectChange(selectedItems: Array<SearchProducts.FacetValues | { label: string }>) {\r\n        if (!Array.isArray(selectedItems)) {\r\n            selectedItems = [selectedItems];\r\n        }\r\n        const searchTermItem = selectedItems.find(item => !this.isFacetValueItem(item)) as\r\n            | { label: string }\r\n            | undefined;\r\n        const searchTerm = searchTermItem ? searchTermItem.label : '';\r\n\r\n        const facetValueIds = selectedItems.filter(this.isFacetValueItem).map(i => i.facetValue.id);\r\n\r\n        if (searchTerm !== this.lastTerm) {\r\n            this.searchTermChange.emit(searchTerm);\r\n            this.lastTerm = searchTerm;\r\n        }\r\n        if (this.lastFacetValueIds.join(',') !== facetValueIds.join(',')) {\r\n            this.facetValueChange.emit(facetValueIds);\r\n            this.lastFacetValueIds = facetValueIds;\r\n        }\r\n    }\r\n\r\n    addTagFn(item: any) {\r\n        return { label: item };\r\n    }\r\n\r\n    isSearchHeaderSelected(): boolean {\r\n        return this.selectComponent.itemsList.markedIndex === -1;\r\n    }\r\n\r\n    private isFacetValueItem = (input: unknown): input is SearchProducts.FacetValues => {\r\n        return typeof input === 'object' && !!input && input.hasOwnProperty('facetValue');\r\n    };\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport {\r\n    CustomFieldConfig,\r\n    LanguageCode,\r\n    ProductVariant,\r\n    UpdateProductOptionInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { createUpdatedTranslatable } from '@vendure/admin-ui/core';\r\nimport { Dialog } from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\n\r\n@Component({\r\n    selector: 'vdr-update-product-option-dialog',\r\n    templateUrl: './update-product-option-dialog.component.html',\r\n    styleUrls: ['./update-product-option-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UpdateProductOptionDialogComponent\r\n    implements Dialog<UpdateProductOptionInput & { autoUpdate: boolean }>, OnInit {\r\n    resolveWith: (result?: UpdateProductOptionInput & { autoUpdate: boolean }) => void;\r\n    updateVariantName = true;\r\n    // Provided by caller\r\n    productOption: ProductVariant.Options;\r\n    activeLanguage: LanguageCode;\r\n    name: string;\r\n    code: string;\r\n    customFields: CustomFieldConfig[];\r\n    codeInputTouched = false;\r\n    customFieldsForm: FormGroup;\r\n\r\n    ngOnInit(): void {\r\n        const currentTranslation = this.productOption.translations.find(\r\n            t => t.languageCode === this.activeLanguage,\r\n        );\r\n        this.name = currentTranslation?.name ?? '';\r\n        this.code = this.productOption.code;\r\n        this.customFieldsForm = new FormGroup({});\r\n        if (this.customFields) {\r\n            const cfCurrentTranslation =\r\n                (currentTranslation && (currentTranslation as any).customFields) || {};\r\n\r\n            for (const fieldDef of this.customFields) {\r\n                const key = fieldDef.name;\r\n                const value =\r\n                    fieldDef.type === 'localeString'\r\n                        ? cfCurrentTranslation[key]\r\n                        : (this.productOption as any).customFields[key];\r\n                this.customFieldsForm.addControl(fieldDef.name, new FormControl(value));\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        const result = createUpdatedTranslatable({\r\n            translatable: this.productOption,\r\n            languageCode: this.activeLanguage,\r\n            updatedFields: {\r\n                code: this.code,\r\n                name: this.name,\r\n                customFields: this.customFieldsForm.value,\r\n            },\r\n            customFieldConfig: this.customFields,\r\n            defaultTranslation: {\r\n                languageCode: this.activeLanguage,\r\n                name: '',\r\n            },\r\n        });\r\n        this.resolveWith({ ...result, autoUpdate: this.updateVariantName });\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    updateCode(nameValue: string) {\r\n        if (!this.codeInputTouched && !this.productOption.code) {\r\n            this.code = normalizeString(nameValue, '-');\r\n        }\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormArray, FormGroup } from '@angular/forms';\r\nimport {\r\n    CustomFieldConfig,\r\n    DataService,\r\n    FacetValue,\r\n    FacetWithValues,\r\n    flattenFacetValues,\r\n    GlobalFlag,\r\n    LanguageCode,\r\n    ModalService,\r\n    Permission,\r\n    ProductDetail,\r\n    ProductOptionFragment,\r\n    ProductVariant,\r\n    TaxCategory,\r\n    UpdateProductOptionInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\n\r\nimport { AssetChange } from '../assets/assets.component';\r\nimport {\r\n    PaginationConfig,\r\n    SelectedAssets,\r\n    VariantFormValue,\r\n} from '../product-detail/product-detail.component';\r\nimport { UpdateProductOptionDialogComponent } from '../update-product-option-dialog/update-product-option-dialog.component';\r\n\r\nexport interface VariantAssetChange extends AssetChange {\r\n    variantId: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-product-variants-list',\r\n    templateUrl: './product-variants-list.component.html',\r\n    styleUrls: ['./product-variants-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductVariantsListComponent implements OnChanges, OnInit, OnDestroy {\r\n    @Input('productVariantsFormArray') formArray: FormArray;\r\n    @Input() variants: ProductVariant.Fragment[];\r\n    @Input() paginationConfig: PaginationConfig;\r\n    @Input() channelPriceIncludesTax: boolean;\r\n    @Input() taxCategories: TaxCategory[];\r\n    @Input() facets: FacetWithValues.Fragment[];\r\n    @Input() optionGroups: ProductDetail.OptionGroups[];\r\n    @Input() customFields: CustomFieldConfig[];\r\n    @Input() customOptionFields: CustomFieldConfig[];\r\n    @Input() activeLanguage: LanguageCode;\r\n    @Input() pendingAssetChanges: { [variantId: string]: SelectedAssets };\r\n    @Output() assignToChannel = new EventEmitter<ProductVariant.Fragment>();\r\n    @Output() removeFromChannel = new EventEmitter<{\r\n        channelId: string;\r\n        variant: ProductVariant.Fragment;\r\n    }>();\r\n    @Output() assetChange = new EventEmitter<VariantAssetChange>();\r\n    @Output() selectionChange = new EventEmitter<string[]>();\r\n    @Output() selectFacetValueClick = new EventEmitter<string[]>();\r\n    @Output() updateProductOption = new EventEmitter<UpdateProductOptionInput & { autoUpdate: boolean }>();\r\n    selectedVariantIds: string[] = [];\r\n    formGroupMap = new Map<string, FormGroup>();\r\n    GlobalFlag = GlobalFlag;\r\n    globalTrackInventory: boolean;\r\n    globalOutOfStockThreshold: number;\r\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n    private facetValues: FacetValue.Fragment[];\r\n    private subscription: Subscription;\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        private modalService: ModalService,\r\n        private dataService: DataService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.dataService.settings.getGlobalSettings('cache-first').single$.subscribe(({ globalSettings }) => {\r\n            this.globalTrackInventory = globalSettings.trackInventory;\r\n            this.globalOutOfStockThreshold = globalSettings.outOfStockThreshold;\r\n            this.changeDetector.markForCheck();\r\n        });\r\n        this.subscription = this.formArray.valueChanges.subscribe(() => this.changeDetector.markForCheck());\r\n\r\n        this.subscription.add(\r\n            this.formArray.valueChanges\r\n                .pipe(\r\n                    map(value => value.length),\r\n                    debounceTime(1),\r\n                    distinctUntilChanged(),\r\n                )\r\n                .subscribe(() => {\r\n                    this.buildFormGroupMap();\r\n                }),\r\n        );\r\n\r\n        this.buildFormGroupMap();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if ('facets' in changes && !!changes['facets'].currentValue) {\r\n            this.facetValues = flattenFacetValues(this.facets);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    isDefaultChannel(channelCode: string): boolean {\r\n        return channelCode === DEFAULT_CHANNEL_CODE;\r\n    }\r\n\r\n    trackById(index: number, item: ProductVariant.Fragment) {\r\n        return item.id;\r\n    }\r\n\r\n    inventoryIsNotTracked(formGroup: FormGroup): boolean {\r\n        const trackInventory = formGroup.get('trackInventory')?.value;\r\n        return (\r\n            trackInventory === GlobalFlag.FALSE ||\r\n            (trackInventory === GlobalFlag.INHERIT && this.globalTrackInventory === false)\r\n        );\r\n    }\r\n\r\n    getTaxCategoryName(group: FormGroup): string {\r\n        const control = group.get(['taxCategoryId']);\r\n        if (control && this.taxCategories) {\r\n            const match = this.taxCategories.find(t => t.id === control.value);\r\n            return match ? match.name : '';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    getSaleableStockLevel(variant: ProductVariant.Fragment) {\r\n        const effectiveOutOfStockThreshold = variant.useGlobalOutOfStockThreshold\r\n            ? this.globalOutOfStockThreshold\r\n            : variant.outOfStockThreshold;\r\n        return variant.stockOnHand - variant.stockAllocated - effectiveOutOfStockThreshold;\r\n    }\r\n\r\n    areAllSelected(): boolean {\r\n        return !!this.variants && this.selectedVariantIds.length === this.variants.length;\r\n    }\r\n\r\n    onAssetChange(variantId: string, event: AssetChange) {\r\n        this.assetChange.emit({\r\n            variantId,\r\n            ...event,\r\n        });\r\n        const index = this.variants.findIndex(v => v.id === variantId);\r\n        this.formArray.at(index).markAsDirty();\r\n    }\r\n\r\n    toggleSelectAll() {\r\n        if (this.areAllSelected()) {\r\n            this.selectedVariantIds = [];\r\n        } else {\r\n            this.selectedVariantIds = this.variants.map(v => v.id);\r\n        }\r\n        this.selectionChange.emit(this.selectedVariantIds);\r\n    }\r\n\r\n    toggleSelectVariant(variantId: string) {\r\n        const index = this.selectedVariantIds.indexOf(variantId);\r\n        if (-1 < index) {\r\n            this.selectedVariantIds.splice(index, 1);\r\n        } else {\r\n            this.selectedVariantIds.push(variantId);\r\n        }\r\n        this.selectionChange.emit(this.selectedVariantIds);\r\n    }\r\n\r\n    optionGroupName(optionGroupId: string): string | undefined {\r\n        const group = this.optionGroups.find(g => g.id === optionGroupId);\r\n        if (group) {\r\n            const translation =\r\n                group?.translations.find(t => t.languageCode === this.activeLanguage) ??\r\n                group.translations[0];\r\n            return translation.name;\r\n        }\r\n    }\r\n\r\n    optionName(option: ProductOptionFragment) {\r\n        const translation =\r\n            option.translations.find(t => t.languageCode === this.activeLanguage) ?? option.translations[0];\r\n        return translation.name;\r\n    }\r\n\r\n    pendingFacetValues(variant: ProductVariant.Fragment) {\r\n        if (this.facets) {\r\n            const formFacetValueIds = this.getFacetValueIds(variant.id);\r\n            const variantFacetValueIds = variant.facetValues.map(fv => fv.id);\r\n            return formFacetValueIds\r\n                .filter(x => !variantFacetValueIds.includes(x))\r\n                .map(id => this.facetValues.find(fv => fv.id === id))\r\n                .filter(notNullOrUndefined);\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    existingFacetValues(variant: ProductVariant.Fragment) {\r\n        const formFacetValueIds = this.getFacetValueIds(variant.id);\r\n        const intersection = [...formFacetValueIds].filter(x =>\r\n            variant.facetValues.map(fv => fv.id).includes(x),\r\n        );\r\n        return intersection\r\n            .map(id => variant.facetValues.find(fv => fv.id === id))\r\n            .filter(notNullOrUndefined);\r\n    }\r\n\r\n    removeFacetValue(variant: ProductVariant.Fragment, facetValueId: string) {\r\n        const formGroup = this.formGroupMap.get(variant.id);\r\n        if (formGroup) {\r\n            const newValue = (formGroup.value as VariantFormValue).facetValueIds.filter(\r\n                id => id !== facetValueId,\r\n            );\r\n            formGroup.patchValue({\r\n                facetValueIds: newValue,\r\n            });\r\n            formGroup.markAsDirty();\r\n        }\r\n    }\r\n\r\n    isVariantSelected(variantId: string): boolean {\r\n        return -1 < this.selectedVariantIds.indexOf(variantId);\r\n    }\r\n\r\n    editOption(option: ProductVariant.Options) {\r\n        this.modalService\r\n            .fromComponent(UpdateProductOptionDialogComponent, {\r\n                size: 'md',\r\n                locals: {\r\n                    productOption: option,\r\n                    activeLanguage: this.activeLanguage,\r\n                    customFields: this.customOptionFields,\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    this.updateProductOption.emit(result);\r\n                }\r\n            });\r\n    }\r\n\r\n    private buildFormGroupMap() {\r\n        this.formGroupMap.clear();\r\n        for (const controlGroup of this.formArray.controls) {\r\n            this.formGroupMap.set(controlGroup.value.id, controlGroup as FormGroup);\r\n        }\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    private getFacetValueIds(id: string): string[] {\r\n        const formValue: VariantFormValue = this.formGroupMap.get(id)?.value;\r\n        return formValue.facetValueIds;\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport { FormArray, FormGroup } from '@angular/forms';\r\nimport { Permission, ProductDetail, ProductVariant } from '@vendure/admin-ui/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\n\r\nimport { PaginationConfig, SelectedAssets } from '../product-detail/product-detail.component';\r\n\r\n@Component({\r\n    selector: 'vdr-product-variants-table',\r\n    templateUrl: './product-variants-table.component.html',\r\n    styleUrls: ['./product-variants-table.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProductVariantsTableComponent implements OnInit, OnDestroy {\r\n    @Input('productVariantsFormArray') formArray: FormArray;\r\n    @Input() variants: ProductVariant.Fragment[];\r\n    @Input() paginationConfig: PaginationConfig;\r\n    @Input() channelPriceIncludesTax: boolean;\r\n    @Input() optionGroups: ProductDetail.OptionGroups[];\r\n    @Input() pendingAssetChanges: { [variantId: string]: SelectedAssets };\r\n    formGroupMap = new Map<string, FormGroup>();\r\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n    private subscription: Subscription;\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n    ngOnInit() {\r\n        this.subscription = this.formArray.valueChanges\r\n            .pipe(\r\n                map(value => value.length),\r\n                debounceTime(1),\r\n                distinctUntilChanged(),\r\n            )\r\n            .subscribe(() => {\r\n                this.buildFormGroupMap();\r\n            });\r\n\r\n        this.buildFormGroupMap();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    trackByFn(index: number, item: any) {\r\n        if ((item as any).id != null) {\r\n            return (item as any).id;\r\n        } else {\r\n            return index;\r\n        }\r\n    }\r\n\r\n    getFeaturedAsset(variant: ProductVariant.Fragment) {\r\n        return this.pendingAssetChanges[variant.id]?.featuredAsset || variant.featuredAsset;\r\n    }\r\n\r\n    optionGroupName(optionGroupId: string): string | undefined {\r\n        const group = this.optionGroups.find(g => g.id === optionGroupId);\r\n        return group && group.name;\r\n    }\r\n\r\n    private buildFormGroupMap() {\r\n        this.formGroupMap.clear();\r\n        for (const controlGroup of this.formArray.controls) {\r\n            this.formGroupMap.set(controlGroup.value.id, controlGroup as FormGroup);\r\n        }\r\n        this.changeDetector.markForCheck();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { DataService } from '@vendure/admin-ui/core';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-variant-price-detail',\r\n    templateUrl: './variant-price-detail.component.html',\r\n    styleUrls: ['./variant-price-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class VariantPriceDetailComponent implements OnInit, OnChanges {\r\n    @Input() priceIncludesTax: boolean;\r\n    @Input() price: number;\r\n    @Input() currencyCode: string;\r\n    @Input() taxCategoryId: string;\r\n\r\n    grossPrice$: Observable<number>;\r\n    taxRate$: Observable<number>;\r\n\r\n    private priceChange$ = new BehaviorSubject<number>(0);\r\n    private taxCategoryIdChange$ = new BehaviorSubject<string>('');\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        const taxRates$ = this.dataService.settings\r\n            .getTaxRatesSimple(999, 0, 'cache-first')\r\n            .mapStream(data => data.taxRates.items);\r\n        const activeChannel$ = this.dataService.settings\r\n            .getActiveChannel('cache-first')\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel);\r\n\r\n        this.taxRate$ = combineLatest(activeChannel$, taxRates$, this.taxCategoryIdChange$).pipe(\r\n            map(([channel, taxRates, taxCategoryId]) => {\r\n                const defaultTaxZone = channel.defaultTaxZone;\r\n                if (!defaultTaxZone) {\r\n                    return 0;\r\n                }\r\n                const applicableRate = taxRates.find(\r\n                    taxRate => taxRate.zone.id === defaultTaxZone.id && taxRate.category.id === taxCategoryId,\r\n                );\r\n\r\n                if (!applicableRate) {\r\n                    return 0;\r\n                }\r\n                return applicableRate.value;\r\n            }),\r\n        );\r\n\r\n        this.grossPrice$ = combineLatest(this.taxRate$, this.priceChange$).pipe(\r\n            map(([taxRate, price]) => {\r\n                return Math.round(price * ((100 + taxRate) / 100));\r\n            }),\r\n        );\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if ('price' in changes) {\r\n            this.priceChange$.next(changes.price.currentValue);\r\n        }\r\n        if ('taxCategoryId' in changes) {\r\n            this.taxCategoryIdChange$.next(changes.taxCategoryId.currentValue);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '@vendure/admin-ui/core';\r\n\r\nimport { catalogRoutes } from './catalog.routes';\r\nimport { ApplyFacetDialogComponent } from './components/apply-facet-dialog/apply-facet-dialog.component';\r\nimport { AssetDetailComponent } from './components/asset-detail/asset-detail.component';\r\nimport { AssetListComponent } from './components/asset-list/asset-list.component';\r\nimport { AssetsComponent } from './components/assets/assets.component';\r\nimport { AssignProductsToChannelDialogComponent } from './components/assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\r\nimport { CollectionContentsComponent } from './components/collection-contents/collection-contents.component';\r\nimport { CollectionDetailComponent } from './components/collection-detail/collection-detail.component';\r\nimport { CollectionListComponent } from './components/collection-list/collection-list.component';\r\nimport { CollectionTreeNodeComponent } from './components/collection-tree/collection-tree-node.component';\r\nimport { CollectionTreeComponent } from './components/collection-tree/collection-tree.component';\r\nimport { ConfirmVariantDeletionDialogComponent } from './components/confirm-variant-deletion-dialog/confirm-variant-deletion-dialog.component';\r\nimport { FacetDetailComponent } from './components/facet-detail/facet-detail.component';\r\nimport { FacetListComponent } from './components/facet-list/facet-list.component';\r\nimport { GenerateProductVariantsComponent } from './components/generate-product-variants/generate-product-variants.component';\r\nimport { OptionValueInputComponent } from './components/option-value-input/option-value-input.component';\r\nimport { ProductDetailComponent } from './components/product-detail/product-detail.component';\r\nimport { ProductListComponent } from './components/product-list/product-list.component';\r\nimport { ProductOptionsEditorComponent } from './components/product-options-editor/product-options-editor.component';\r\nimport { ProductSearchInputComponent } from './components/product-search-input/product-search-input.component';\r\nimport { ProductVariantsEditorComponent } from './components/product-variants-editor/product-variants-editor.component';\r\nimport { ProductVariantsListComponent } from './components/product-variants-list/product-variants-list.component';\r\nimport { ProductVariantsTableComponent } from './components/product-variants-table/product-variants-table.component';\r\nimport { UpdateProductOptionDialogComponent } from './components/update-product-option-dialog/update-product-option-dialog.component';\r\nimport { VariantPriceDetailComponent } from './components/variant-price-detail/variant-price-detail.component';\r\n\r\nconst CATALOG_COMPONENTS = [\r\n    ProductListComponent,\r\n    ProductDetailComponent,\r\n    FacetListComponent,\r\n    FacetDetailComponent,\r\n    GenerateProductVariantsComponent,\r\n    ProductVariantsListComponent,\r\n    ApplyFacetDialogComponent,\r\n    AssetListComponent,\r\n    AssetsComponent,\r\n    VariantPriceDetailComponent,\r\n    CollectionListComponent,\r\n    CollectionDetailComponent,\r\n    CollectionTreeComponent,\r\n    CollectionTreeNodeComponent,\r\n    CollectionContentsComponent,\r\n    ProductVariantsTableComponent,\r\n    ProductSearchInputComponent,\r\n    OptionValueInputComponent,\r\n    UpdateProductOptionDialogComponent,\r\n    ProductVariantsEditorComponent,\r\n    AssignProductsToChannelDialogComponent,\r\n    AssetDetailComponent,\r\n    ConfirmVariantDeletionDialogComponent,\r\n    ProductOptionsEditorComponent,\r\n];\r\n\r\n@NgModule({\r\n    imports: [SharedModule, RouterModule.forChild(catalogRoutes)],\r\n    exports: [...CATALOG_COMPONENTS],\r\n    declarations: [...CATALOG_COMPONENTS],\r\n})\r\nexport class CatalogModule {}\r\n","// This file was generated by the build-public-api.ts script\nexport * from './catalog.module';\nexport * from './catalog.routes';\nexport * from './components/apply-facet-dialog/apply-facet-dialog.component';\nexport * from './components/asset-detail/asset-detail.component';\nexport * from './components/asset-list/asset-list.component';\nexport * from './components/assets/assets.component';\nexport * from './components/assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\nexport * from './components/collection-contents/collection-contents.component';\nexport * from './components/collection-detail/collection-detail.component';\nexport * from './components/collection-list/collection-list.component';\nexport * from './components/collection-tree/array-to-tree';\nexport * from './components/collection-tree/collection-tree-node.component';\nexport * from './components/collection-tree/collection-tree.component';\nexport * from './components/confirm-variant-deletion-dialog/confirm-variant-deletion-dialog.component';\nexport * from './components/facet-detail/facet-detail.component';\nexport * from './components/facet-list/facet-list.component';\nexport * from './components/generate-product-variants/generate-product-variants.component';\nexport * from './components/option-value-input/option-value-input.component';\nexport * from './components/product-detail/product-detail.component';\nexport * from './components/product-list/product-list.component';\nexport * from './components/product-options-editor/product-options-editor.component';\nexport * from './components/product-search-input/product-search-input.component';\nexport * from './components/product-variants-editor/product-variants-editor.component';\nexport * from './components/product-variants-list/product-variants-list.component';\nexport * from './components/product-variants-table/product-variants-table.component';\nexport * from './components/update-product-option-dialog/update-product-option-dialog.component';\nexport * from './components/variant-price-detail/variant-price-detail.component';\nexport * from './providers/product-detail/product-detail.service';\nexport * from './providers/product-detail/replace-last';\nexport * from './providers/routing/asset-resolver';\nexport * from './providers/routing/collection-resolver';\nexport * from './providers/routing/facet-resolver';\nexport * from './providers/routing/product-resolver';\nexport * from './providers/routing/product-variants-resolver';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}