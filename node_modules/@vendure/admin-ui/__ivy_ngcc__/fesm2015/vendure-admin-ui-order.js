import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Input, Output, Injectable, ElementRef, ViewChildren, HostBinding, NgModule } from '@angular/core';
import { FormGroup, FormControl, Validators, FormBuilder, FormArray } from '@angular/forms';
import * as i1 from '@vendure/admin-ui/core';
import { DataService, getAppConfig, I18nService, configurableDefinitionToInstance, GlobalFlag, configurableOperationValueIsValid, toConfigurableOperationInput, ServerConfigService, HistoryEntryType, SortOrder, ModalService, NotificationService, BaseDetailComponent, EditNoteDialogComponent, BaseListComponent, LocalStorageService, AdjustmentType, BaseEntityResolver, createResolveData, CanDeactivateDetailGuard, detailBreadcrumb, SharedModule } from '@vendure/admin-ui/core';
import { marker } from '@biesbjerg/ngx-translate-extract-marker';
import { isObject, summate, assertNever, notNullOrUndefined } from '@vendure/common/lib/shared-utils';
import * as i1$1 from '@angular/router';
import { Router, ActivatedRoute, RouterModule } from '@angular/router';
import { EMPTY, Subject, of, merge, concat, BehaviorSubject } from 'rxjs';
import { switchMap, catchError, retryWhen, delay, take, map, startWith, mapTo, takeUntil, distinctUntilChanged, shareReplay, filter, debounceTime, tap } from 'rxjs/operators';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@vendure/admin-ui/core';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@ng-select/ng-select';
import * as ɵngcc4 from '@ngx-translate/core';
import * as ɵngcc5 from '@angular/common';
import * as ɵngcc6 from '@clr/angular';
import * as ɵngcc7 from '@angular/cdk/bidi';
import * as ɵngcc8 from '@angular/router';

function AddManualPaymentDialogComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(1, 1, "order.add-payment-to-order"));
} }
function AddManualPaymentDialogComponent_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 7);
    ɵngcc0.ɵɵlistener("click", function AddManualPaymentDialogComponent_ng_template_9_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.cancel(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 8);
    ɵngcc0.ɵɵlistener("click", function AddManualPaymentDialogComponent_ng_template_9_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.submit(); });
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵpipe(6, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 4, "common.cancel"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r1.form.invalid || ctx_r1.form.pristine);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(5, 6, "order.add-payment"), " (", ɵngcc0.ɵɵpipeBind2(6, 8, ctx_r1.outstandingAmount, ctx_r1.currencyCode), ") ");
} }
function CancelOrderDialogComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(1, 1, "order.cancel-order"));
} }
function CancelOrderDialogComponent_tr_22_input_14_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 19);
    ɵngcc0.ɵɵlistener("ngModelChange", function CancelOrderDialogComponent_tr_22_input_14_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const line_r4 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(); return (ctx_r8.lineQuantities[line_r4.id] = $event); })("input", function CancelOrderDialogComponent_tr_22_input_14_Template_input_input_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.checkIfAllSelected(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const line_r4 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngModel", ctx_r5.lineQuantities[line_r4.id])("disabled", ctx_r5.cancelAll)("max", line_r4.quantity);
} }
function CancelOrderDialogComponent_tr_22_ng_template_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    const line_r4 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵtextInterpolate(line_r4.quantity);
} }
function CancelOrderDialogComponent_tr_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 10);
    ɵngcc0.ɵɵelementStart(1, "td", 11);
    ɵngcc0.ɵɵelement(2, "img", 12);
    ɵngcc0.ɵɵpipe(3, "assetPreview");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "td", 13);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "td", 14);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "td", 15);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "td", 15);
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵpipe(12, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "td", 16);
    ɵngcc0.ɵɵtemplate(14, CancelOrderDialogComponent_tr_22_input_14_Template, 1, 3, "input", 17);
    ɵngcc0.ɵɵtemplate(15, CancelOrderDialogComponent_tr_22_ng_template_15_Template, 1, 1, "ng-template", null, 18, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const line_r4 = ctx.$implicit;
    const _r6 = ɵngcc0.ɵɵreference(16);
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("is-disabled", ctx_r1.cancelAll)("is-cancelled", line_r4.quantity === 0);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("src", ɵngcc0.ɵɵpipeBind2(3, 11, line_r4.featuredAsset, "tiny"), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(line_r4.productVariant.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(line_r4.productVariant.sku);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(line_r4.quantity);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(12, 14, line_r4.unitPriceWithTax, ctx_r1.order.currencyCode), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", line_r4.quantity > 0 && !ctx_r1.order.active)("ngIfElse", _r6);
} }
function CancelOrderDialogComponent_ng_container_24_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "clr-radio-wrapper");
    ɵngcc0.ɵɵelementStart(2, "input", 20);
    ɵngcc0.ɵɵlistener("ngModelChange", function CancelOrderDialogComponent_ng_container_24_Template_input_ngModelChange_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.cancelAll = $event; })("ngModelChange", function CancelOrderDialogComponent_ng_container_24_Template_input_ngModelChange_2_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.radioChanged(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "label");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "clr-radio-wrapper");
    ɵngcc0.ɵɵelementStart(7, "input", 20);
    ɵngcc0.ɵɵlistener("ngModelChange", function CancelOrderDialogComponent_ng_container_24_Template_input_ngModelChange_7_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.cancelAll = $event; })("ngModelChange", function CancelOrderDialogComponent_ng_container_24_Template_input_ngModelChange_7_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.radioChanged(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "label");
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("value", true)("ngModel", ctx_r2.cancelAll);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 6, "order.cancel-entire-order"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("value", false)("ngModel", ctx_r2.cancelAll);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(10, 8, "order.cancel-specified-items"));
} }
function CancelOrderDialogComponent_ng_template_29_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.cancel-selected-items"), " ");
} }
function CancelOrderDialogComponent_ng_template_29_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.cancel-order"), " ");
} }
function CancelOrderDialogComponent_ng_template_29_Template(rf, ctx) { if (rf & 1) {
    const _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 21);
    ɵngcc0.ɵɵlistener("click", function CancelOrderDialogComponent_ng_template_29_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r22); const ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.cancel(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 22);
    ɵngcc0.ɵɵlistener("click", function CancelOrderDialogComponent_ng_template_29_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r22); const ctx_r23 = ɵngcc0.ɵɵnextContext(); return ctx_r23.select(); });
    ɵngcc0.ɵɵtemplate(4, CancelOrderDialogComponent_ng_template_29_ng_container_4_Template, 3, 3, "ng-container", 6);
    ɵngcc0.ɵɵtemplate(5, CancelOrderDialogComponent_ng_template_29_ng_container_5_Template, 3, 3, "ng-container", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 4, "common.cancel"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r3.reason || !ctx_r3.order.active && ctx_r3.selectionCount === 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r3.order.active);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.order.active);
} }
function FulfillOrderDialogComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(1, 1, "order.fulfill-order"));
} }
function FulfillOrderDialogComponent_tr_22_img_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 17);
    ɵngcc0.ɵɵpipe(1, "assetPreview");
} if (rf & 2) {
    const line_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("src", ɵngcc0.ɵɵpipeBind2(1, 1, line_r3.featuredAsset, "tiny"), ɵngcc0.ɵɵsanitizeUrl);
} }
function FulfillOrderDialogComponent_tr_22_input_12_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 18);
    ɵngcc0.ɵɵlistener("ngModelChange", function FulfillOrderDialogComponent_tr_22_input_12_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const line_r3 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.fulfillmentQuantities[line_r3.id].fulfillCount = $event; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const line_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("disabled", ctx_r5.getUnfulfilledCount(line_r3) === 0)("ngModel", ctx_r5.fulfillmentQuantities[line_r3.id].fulfillCount)("max", ctx_r5.fulfillmentQuantities[line_r3.id].max);
} }
function FulfillOrderDialogComponent_tr_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 9);
    ɵngcc0.ɵɵelementStart(1, "td", 10);
    ɵngcc0.ɵɵtemplate(2, FulfillOrderDialogComponent_tr_22_img_2_Template, 2, 4, "img", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "td", 12);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "td", 13);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "td", 14);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "td", 14);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "td", 15);
    ɵngcc0.ɵɵtemplate(12, FulfillOrderDialogComponent_tr_22_input_12_Template, 1, 3, "input", 16);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const line_r3 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("ignore", ctx_r1.getUnfulfilledCount(line_r3) === 0);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", line_r3.featuredAsset);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(line_r3.productVariant.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(line_r3.productVariant.sku);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.getUnfulfilledCount(line_r3));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(line_r3.productVariant.stockOnHand);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.fulfillmentQuantities[line_r3.id]);
} }
function FulfillOrderDialogComponent_ng_template_33_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 19);
    ɵngcc0.ɵɵlistener("click", function FulfillOrderDialogComponent_ng_template_33_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.cancel(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 20);
    ɵngcc0.ɵɵlistener("click", function FulfillOrderDialogComponent_ng_template_33_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.select(); });
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 3, "common.cancel"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r2.canSubmit());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 5, "order.create-fulfillment"), " ");
} }
function FulfillmentCardComponent_vdr_fulfillment_detail_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "vdr-fulfillment-detail", 7);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("fulfillmentId", ctx_r0.fulfillment == null ? null : ctx_r0.fulfillment.id)("order", ctx_r0.order);
} }
const _c0 = function (a0) { return { state: a0 }; };
function FulfillmentCardComponent_div_9_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 14);
    ɵngcc0.ɵɵlistener("click", function FulfillmentCardComponent_div_9_ng_container_1_Template_button_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r6); const suggestedState_r4 = restoredCtx.ngIf; const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.transitionState.emit(suggestedState_r4); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵpipe(5, "stateI18nToken");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const suggestedState_r4 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(3, 1, "order.set-fulfillment-state", ɵngcc0.ɵɵpureFunction1(8, _c0, ɵngcc0.ɵɵpipeBind1(4, 4, ɵngcc0.ɵɵpipeBind1(5, 6, suggestedState_r4)))), " ");
} }
function FulfillmentCardComponent_div_9_ng_container_6_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "clr-icon", 18);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵpipe(5, "stateI18nToken");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const nextState_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(3, 1, "order.transition-to-state", ɵngcc0.ɵɵpureFunction1(8, _c0, ɵngcc0.ɵɵpipeBind1(4, 4, ɵngcc0.ɵɵpipeBind1(5, 6, nextState_r7)))), " ");
} }
function FulfillmentCardComponent_div_9_ng_container_6_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-icon", 19);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.cancel-fulfillment"), " ");
} }
function FulfillmentCardComponent_div_9_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 15);
    ɵngcc0.ɵɵlistener("click", function FulfillmentCardComponent_div_9_ng_container_6_Template_button_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r13); const nextState_r7 = restoredCtx.$implicit; const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.transitionState.emit(nextState_r7); });
    ɵngcc0.ɵɵtemplate(2, FulfillmentCardComponent_div_9_ng_container_6_ng_container_2_Template, 6, 10, "ng-container", 16);
    ɵngcc0.ɵɵtemplate(3, FulfillmentCardComponent_div_9_ng_container_6_ng_template_3_Template, 3, 3, "ng-template", null, 17, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const nextState_r7 = ctx.$implicit;
    const _r9 = ɵngcc0.ɵɵreference(4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", nextState_r7 !== "Cancelled")("ngIfElse", _r9);
} }
function FulfillmentCardComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵtemplate(1, FulfillmentCardComponent_div_9_ng_container_1_Template, 6, 10, "ng-container", 9);
    ɵngcc0.ɵɵelementStart(2, "vdr-dropdown");
    ɵngcc0.ɵɵelementStart(3, "button", 10);
    ɵngcc0.ɵɵelement(4, "clr-icon", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "vdr-dropdown-menu", 12);
    ɵngcc0.ɵɵtemplate(6, FulfillmentCardComponent_div_9_ng_container_6_Template, 5, 2, "ng-container", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.nextSuggestedState());
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.nextOtherStates());
} }
function FulfillmentDetailComponent_vdr_labeled_data_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 0);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 2, "order.tracking-code"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.fulfillment == null ? null : ctx_r0.fulfillment.trackingCode, "\n");
} }
function FulfillmentDetailComponent_ng_container_11_vdr_custom_field_control_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "vdr-custom-field-control", 5);
} if (rf & 2) {
    const customField_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("readonly", true)("compact", true)("customField", customField_r2)("customFieldsFormGroup", ctx_r3.customFieldFormGroup);
} }
function FulfillmentDetailComponent_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, FulfillmentDetailComponent_ng_container_11_vdr_custom_field_control_1_Template, 1, 4, "vdr-custom-field-control", 4);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const customField_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.customFieldFormGroup.get(customField_r2.name));
} }
function FulfillmentStateLabelComponent_clr_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-icon", 2);
} }
function LineFulfillmentComponent_vdr_dropdown_0_clr_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-icon", 9);
} }
function LineFulfillmentComponent_vdr_dropdown_0_clr_icon_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-icon", 10);
} }
function LineFulfillmentComponent_vdr_dropdown_0_clr_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-icon", 11);
} }
function LineFulfillmentComponent_vdr_dropdown_0_label_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "label", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.line-fulfillment-all"), " ");
} }
const _c1 = function (a0, a1) { return { total: a0, count: a1 }; };
function LineFulfillmentComponent_vdr_dropdown_0_label_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "label", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, "order.line-fulfillment-partial", ɵngcc0.ɵɵpureFunction2(4, _c1, ctx_r5.line.quantity, ctx_r5.fulfilledCount)), " ");
} }
function LineFulfillmentComponent_vdr_dropdown_0_label_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "label", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.line-fulfillment-none"), " ");
} }
function LineFulfillmentComponent_vdr_dropdown_0_div_9_vdr_labeled_data_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 15);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r8 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 2, "order.tracking-code"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r8.fulfillment.trackingCode, " ");
} }
const _c2 = function (a0) { return { count: a0 }; };
function LineFulfillmentComponent_vdr_dropdown_0_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelementStart(1, "div", 14);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "vdr-labeled-data", 15);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "localeDate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "vdr-labeled-data", 15);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(12, LineFulfillmentComponent_vdr_dropdown_0_div_9_vdr_labeled_data_12_Template, 3, 4, "vdr-labeled-data", 16);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r8 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate3(" ", ɵngcc0.ɵɵpipeBind1(3, 8, "order.fulfillment"), " #", item_r8.fulfillment.id, " (", ɵngcc0.ɵɵpipeBind2(4, 10, "order.item-count", ɵngcc0.ɵɵpureFunction1(20, _c2, item_r8.count)), ") ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(6, 13, "common.created-at"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(8, 15, item_r8.fulfillment.createdAt, "medium"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(10, 18, "order.fulfillment-method"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r8.fulfillment.method, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r8.fulfillment.trackingCode);
} }
function LineFulfillmentComponent_vdr_dropdown_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-dropdown", 1);
    ɵngcc0.ɵɵelementStart(1, "button", 2);
    ɵngcc0.ɵɵtemplate(2, LineFulfillmentComponent_vdr_dropdown_0_clr_icon_2_Template, 1, 0, "clr-icon", 3);
    ɵngcc0.ɵɵtemplate(3, LineFulfillmentComponent_vdr_dropdown_0_clr_icon_3_Template, 1, 0, "clr-icon", 4);
    ɵngcc0.ɵɵtemplate(4, LineFulfillmentComponent_vdr_dropdown_0_clr_icon_4_Template, 1, 0, "clr-icon", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "vdr-dropdown-menu", 6);
    ɵngcc0.ɵɵtemplate(6, LineFulfillmentComponent_vdr_dropdown_0_label_6_Template, 3, 3, "label", 7);
    ɵngcc0.ɵɵtemplate(7, LineFulfillmentComponent_vdr_dropdown_0_label_7_Template, 3, 7, "label", 7);
    ɵngcc0.ɵɵtemplate(8, LineFulfillmentComponent_vdr_dropdown_0_label_8_Template, 3, 3, "label", 7);
    ɵngcc0.ɵɵtemplate(9, LineFulfillmentComponent_vdr_dropdown_0_div_9_Template, 13, 22, "div", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.fulfillmentStatus === "full");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.fulfillmentStatus === "partial");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.fulfillmentStatus === "none");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.fulfillmentStatus === "full");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.fulfillmentStatus === "partial");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.fulfillmentStatus === "none");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.fulfillments);
} }
function LineRefundsComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 1);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "clr-icon", 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind2(1, 1, "order.refunded-count", ɵngcc0.ɵɵpureFunction1(4, _c2, ctx_r0.getRefundedCount())));
} }
function ModificationDetailComponent_vdr_labeled_data_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 0);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 2, "order.note"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.modification.note);
} }
function ModificationDetailComponent_vdr_labeled_data_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 0);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const surcharge_r4 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    let tmp_1_0;
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 3, "order.surcharges"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate2(" ", (tmp_1_0 = ctx_r1.getSurcharge(surcharge_r4.id)) == null ? null : tmp_1_0.description, " ", ɵngcc0.ɵɵpipeBind2(3, 5, (tmp_1_0 = ctx_r1.getSurcharge(surcharge_r4.id)) == null ? null : tmp_1_0.priceWithTax, ctx_r1.order.currencyCode), "");
} }
function ModificationDetailComponent_vdr_labeled_data_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 0);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "vdr-simple-item-list", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 2, "order.added-items"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("items", ctx_r2.getAddedItems());
} }
function ModificationDetailComponent_vdr_labeled_data_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 0);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "vdr-simple-item-list", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 2, "order.removed-items"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("items", ctx_r3.getRemovedItems());
} }
function OrderCustomFieldsCardComponent_div_0_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "vdr-custom-field-control", 9);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const customField_r4 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("customFieldsFormGroup", ctx_r1.customFieldForm)("compact", true)("readonly", customField_r4.readonly || !ctx_r1.editable)("customField", customField_r4);
} }
function OrderCustomFieldsCardComponent_div_0_button_8_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function OrderCustomFieldsCardComponent_div_0_button_8_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.editable = true; });
    ɵngcc0.ɵɵelement(1, "clr-icon", 11);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 1, "common.edit"), " ");
} }
function OrderCustomFieldsCardComponent_div_0_button_9_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 12);
    ɵngcc0.ɵɵlistener("click", function OrderCustomFieldsCardComponent_div_0_button_9_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.onUpdateClick(); });
    ɵngcc0.ɵɵelement(1, "clr-icon", 13);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r3.customFieldForm.pristine || ctx_r3.customFieldForm.invalid);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 2, "common.update"), " ");
} }
function OrderCustomFieldsCardComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 3);
    ɵngcc0.ɵɵelementStart(5, "div", 4);
    ɵngcc0.ɵɵtemplate(6, OrderCustomFieldsCardComponent_div_0_ng_container_6_Template, 2, 4, "ng-container", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div", 6);
    ɵngcc0.ɵɵtemplate(8, OrderCustomFieldsCardComponent_div_0_button_8_Template, 4, 3, "button", 7);
    ɵngcc0.ɵɵtemplate(9, OrderCustomFieldsCardComponent_div_0_button_9_Template, 4, 4, "button", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 6, "common.custom-fields"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵclassProp("editable", ctx_r0.editable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.customFieldsConfig);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.editable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.editable);
} }
function OrderStateSelectDialogComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(1, 1, "order.select-state"));
} }
function OrderStateSelectDialogComponent_option_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "stateI18nToken");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const state_r3 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("value", state_r3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, ɵngcc0.ɵɵpipeBind1(3, 4, state_r3)), " ");
} }
function OrderStateSelectDialogComponent_ng_template_7_button_0_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 7);
    ɵngcc0.ɵɵlistener("click", function OrderStateSelectDialogComponent_ng_template_7_button_0_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.cancel(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "common.cancel"), " ");
} }
function OrderStateSelectDialogComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵtemplate(0, OrderStateSelectDialogComponent_ng_template_7_button_0_Template, 3, 3, "button", 5);
    ɵngcc0.ɵɵelementStart(1, "button", 6);
    ɵngcc0.ɵɵlistener("click", function OrderStateSelectDialogComponent_ng_template_7_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.select(); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵpipe(5, "stateI18nToken");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.cancellable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r2.selectedState);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(3, 3, "order.transition-to-state", ɵngcc0.ɵɵpureFunction1(10, _c0, ɵngcc0.ɵɵpipeBind1(4, 6, ɵngcc0.ɵɵpipeBind1(5, 8, ctx_r2.selectedState)))), " ");
} }
function OrderProcessGraphDialogComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(1, 1, "order.order-state-diagram"));
} }
function RefundOrderDialogComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(1, 1, "order.refund-and-cancel-order"));
} }
function RefundOrderDialogComponent_tr_31_ng_container_18_vdr_dropdown_1_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementStart(2, "div", 37);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "currency");
    ɵngcc0.ɵɵpipe(5, "number");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const discount_r14 = ctx.$implicit;
    const line_r6 = ɵngcc0.ɵɵnextContext(3).$implicit;
    const ctx_r13 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", discount_r14.description, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(4, 2, ɵngcc0.ɵɵpipeBind2(5, 5, discount_r14.amount / 100 / line_r6.quantity, "1.0-2"), ctx_r13.order.currencyCode), " ");
} }
function RefundOrderDialogComponent_tr_31_ng_container_18_vdr_dropdown_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-dropdown");
    ɵngcc0.ɵɵelementStart(1, "div", 32);
    ɵngcc0.ɵɵelementStart(2, "button", 33);
    ɵngcc0.ɵɵelement(3, "clr-icon", 34);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "vdr-dropdown-menu");
    ɵngcc0.ɵɵtemplate(5, RefundOrderDialogComponent_tr_31_ng_container_18_vdr_dropdown_1_div_5_Template, 6, 8, "div", 35);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const discounts_r11 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngForOf", discounts_r11);
} }
function RefundOrderDialogComponent_tr_31_ng_container_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, RefundOrderDialogComponent_tr_31_ng_container_18_vdr_dropdown_1_Template, 6, 1, "vdr-dropdown", 26);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const discounts_r11 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", discounts_r11.length);
} }
function RefundOrderDialogComponent_tr_31_input_20_Template(rf, ctx) { if (rf & 1) {
    const _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 38);
    ɵngcc0.ɵɵlistener("ngModelChange", function RefundOrderDialogComponent_tr_31_input_20_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r18); const line_r6 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.lineQuantities[line_r6.id].quantity = $event; })("input", function RefundOrderDialogComponent_tr_31_input_20_Template_input_input_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); const line_r6 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.handleZeroQuantity(ctx_r20.lineQuantities[line_r6.id]); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const line_r6 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngModel", ctx_r8.lineQuantities[line_r6.id].quantity)("max", line_r6.quantity);
} }
function RefundOrderDialogComponent_tr_31_input_23_Template(rf, ctx) { if (rf & 1) {
    const _r24 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 39);
    ɵngcc0.ɵɵlistener("ngModelChange", function RefundOrderDialogComponent_tr_31_input_23_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r24); const line_r6 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r23 = ɵngcc0.ɵɵnextContext(); return ctx_r23.lineQuantities[line_r6.id].refund = $event; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const line_r6 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("disabled", 0 === ctx_r9.lineQuantities[line_r6.id].quantity)("ngModel", ctx_r9.lineQuantities[line_r6.id].refund);
} }
function RefundOrderDialogComponent_tr_31_input_26_Template(rf, ctx) { if (rf & 1) {
    const _r28 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 39);
    ɵngcc0.ɵɵlistener("ngModelChange", function RefundOrderDialogComponent_tr_31_input_26_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const line_r6 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r27 = ɵngcc0.ɵɵnextContext(); return ctx_r27.lineQuantities[line_r6.id].cancel = $event; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const line_r6 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r10 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("disabled", 0 === ctx_r10.lineQuantities[line_r6.id].quantity)("ngModel", ctx_r10.lineQuantities[line_r6.id].cancel);
} }
function RefundOrderDialogComponent_tr_31_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 18);
    ɵngcc0.ɵɵelementStart(1, "td", 19);
    ɵngcc0.ɵɵelement(2, "img", 20);
    ɵngcc0.ɵɵpipe(3, "assetPreview");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "td", 21);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "td", 22);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "td", 23);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵelement(10, "vdr-line-refunds", 24);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "td", 23);
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵpipe(13, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "td", 23);
    ɵngcc0.ɵɵelementStart(15, "div", 25);
    ɵngcc0.ɵɵtext(16);
    ɵngcc0.ɵɵpipe(17, "localeCurrency");
    ɵngcc0.ɵɵtemplate(18, RefundOrderDialogComponent_tr_31_ng_container_18_Template, 2, 1, "ng-container", 26);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(19, "td", 27);
    ɵngcc0.ɵɵtemplate(20, RefundOrderDialogComponent_tr_31_input_20_Template, 1, 2, "input", 28);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(21, "td", 29);
    ɵngcc0.ɵɵelementStart(22, "div", 30);
    ɵngcc0.ɵɵtemplate(23, RefundOrderDialogComponent_tr_31_input_23_Template, 1, 2, "input", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(24, "td", 29);
    ɵngcc0.ɵɵelementStart(25, "div", 30);
    ɵngcc0.ɵɵtemplate(26, RefundOrderDialogComponent_tr_31_input_26_Template, 1, 2, "input", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const line_r6 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("src", ɵngcc0.ɵɵpipeBind2(3, 12, line_r6.featuredAsset, "tiny"), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(line_r6.productVariant.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(line_r6.productVariant.sku);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", line_r6.quantity, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("line", line_r6)("payments", ctx_r1.order.payments);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(13, 15, line_r6.unitPriceWithTax, ctx_r1.order.currencyCode), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(17, 18, line_r6.proratedUnitPriceWithTax, ctx_r1.order.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", line_r6.discounts);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.lineCanBeRefundedOrCancelled(line_r6));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.lineCanBeRefundedOrCancelled(line_r6));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.lineCanBeRefundedOrCancelled(line_r6));
} }
function RefundOrderDialogComponent_option_45_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 40);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const payment_r31 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngValue", payment_r31)("disabled", payment_r31.state !== "Settled");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate3(" #", payment_r31.id, " ", payment_r31.method, ": ", ɵngcc0.ɵɵpipeBind2(2, 5, payment_r31.amount, ctx_r2.order.currencyCode), " ");
} }
const _c3 = function (a0, a1) { return { min: a0, max: a1 }; };
function RefundOrderDialogComponent_div_66_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 41);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "currency");
    ɵngcc0.ɵɵpipe(4, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, "order.refund-total-error", ɵngcc0.ɵɵpureFunction2(10, _c3, ɵngcc0.ɵɵpipeBind2(3, 4, 0, ctx_r3.order.currencyCode), ɵngcc0.ɵɵpipeBind2(4, 7, ctx_r3.settledPaymentsTotal, ctx_r3.order.currencyCode))), " ");
} }
function RefundOrderDialogComponent_div_67_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 42);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.refund-total-warning"), " ");
} }
const _c4 = function (a0) { return { amount: a0 }; };
function RefundOrderDialogComponent_ng_template_68_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "localeCurrency");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r32 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, "order.refund-with-amount", ɵngcc0.ɵɵpureFunction1(7, _c4, ɵngcc0.ɵɵpipeBind2(3, 4, ctx_r32.refundTotal, ctx_r32.order.currencyCode))), " ");
} }
function RefundOrderDialogComponent_ng_template_68_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(1, 1, "order.cancel-selected-items"), " ");
} }
function RefundOrderDialogComponent_ng_template_68_Template(rf, ctx) { if (rf & 1) {
    const _r36 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 43);
    ɵngcc0.ɵɵlistener("click", function RefundOrderDialogComponent_ng_template_68_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35.cancel(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 44);
    ɵngcc0.ɵɵlistener("click", function RefundOrderDialogComponent_ng_template_68_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r37 = ɵngcc0.ɵɵnextContext(); return ctx_r37.select(); });
    ɵngcc0.ɵɵtemplate(4, RefundOrderDialogComponent_ng_template_68_ng_container_4_Template, 4, 9, "ng-container", 45);
    ɵngcc0.ɵɵtemplate(5, RefundOrderDialogComponent_ng_template_68_ng_template_5_Template, 2, 3, "ng-template", null, 46, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r33 = ɵngcc0.ɵɵreference(6);
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 4, "common.cancel"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r5.canSubmit());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.isRefunding())("ngIfElse", _r33);
} }
function SettleRefundDialogComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(1, 1, "order.settle-refund"));
} }
function SettleRefundDialogComponent_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 4);
    ɵngcc0.ɵɵlistener("click", function SettleRefundDialogComponent_ng_template_9_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.cancel(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 5);
    ɵngcc0.ɵɵlistener("click", function SettleRefundDialogComponent_ng_template_9_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.submit(); });
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 3, "common.cancel"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r1.transactionId);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 5, "order.settle-refund"), " ");
} }
const _c5 = function (a0) { return { method: a0 }; };
function OrderDetailComponent_vdr_action_bar_0_button_11_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 16);
    ɵngcc0.ɵɵlistener("click", function OrderDetailComponent_vdr_action_bar_0_button_11_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const order_r2 = ɵngcc0.ɵɵnextContext().ngIf; const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.addManualPayment(order_r2); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const order_r2 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(2, 2, "order.add-payment-to-order"), " (", ɵngcc0.ɵɵpipeBind2(3, 4, ctx_r3.outstandingPaymentAmount(order_r2), order_r2.currencyCode), ") ");
} }
function OrderDetailComponent_vdr_action_bar_0_button_12_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 16);
    ɵngcc0.ɵɵlistener("click", function OrderDetailComponent_vdr_action_bar_0_button_12_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.transitionToState("ArrangingAdditionalPayment"); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.arrange-additional-payment"), " ");
} }
function OrderDetailComponent_vdr_action_bar_0_ng_container_20_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 14);
    ɵngcc0.ɵɵlistener("click", function OrderDetailComponent_vdr_action_bar_0_ng_container_20_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(2); return ctx_r14.transitionToModifying(); });
    ɵngcc0.ɵɵelement(2, "clr-icon", 17);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "div", 13);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 1, "order.modify-order"), " ");
} }
function OrderDetailComponent_vdr_action_bar_0_button_21_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.refund-and-cancel-order"), " ");
} }
function OrderDetailComponent_vdr_action_bar_0_button_21_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(1, 1, "order.cancel-order"), " ");
} }
function OrderDetailComponent_vdr_action_bar_0_button_21_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 14);
    ɵngcc0.ɵɵlistener("click", function OrderDetailComponent_vdr_action_bar_0_button_21_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const order_r2 = ɵngcc0.ɵɵnextContext().ngIf; const ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.cancelOrRefund(order_r2); });
    ɵngcc0.ɵɵelement(1, "clr-icon", 18);
    ɵngcc0.ɵɵtemplate(2, OrderDetailComponent_vdr_action_bar_0_button_21_ng_container_2_Template, 3, 3, "ng-container", 19);
    ɵngcc0.ɵɵtemplate(3, OrderDetailComponent_vdr_action_bar_0_button_21_ng_template_3_Template, 2, 3, "ng-template", null, 20, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r17 = ɵngcc0.ɵɵreference(4);
    const order_r2 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.orderHasSettledPayments(order_r2))("ngIfElse", _r17);
} }
function OrderDetailComponent_vdr_action_bar_0_ng_container_22_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r26 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 14);
    ɵngcc0.ɵɵlistener("click", function OrderDetailComponent_vdr_action_bar_0_ng_container_22_button_2_Template_button_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r26); const nextState_r24 = restoredCtx.$implicit; const ctx_r25 = ɵngcc0.ɵɵnextContext(3); return ctx_r25.transitionToState(nextState_r24); });
    ɵngcc0.ɵɵelement(1, "clr-icon", 22);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵpipe(5, "stateI18nToken");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const nextState_r24 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(3, 1, "order.transition-to-state", ɵngcc0.ɵɵpureFunction1(8, _c0, ɵngcc0.ɵɵpipeBind1(4, 4, ɵngcc0.ɵɵpipeBind1(5, 6, nextState_r24)))), " ");
} }
function OrderDetailComponent_vdr_action_bar_0_ng_container_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "div", 13);
    ɵngcc0.ɵɵtemplate(2, OrderDetailComponent_vdr_action_bar_0_ng_container_22_button_2_Template, 6, 10, "button", 21);
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(3, 1, ctx_r7.nextStates$));
} }
function OrderDetailComponent_vdr_action_bar_0_Template(rf, ctx) { if (rf & 1) {
    const _r28 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "vdr-action-bar");
    ɵngcc0.ɵɵelementStart(1, "vdr-ab-left");
    ɵngcc0.ɵɵelementStart(2, "div", 1);
    ɵngcc0.ɵɵelement(3, "vdr-entity-info", 2);
    ɵngcc0.ɵɵpipe(4, "async");
    ɵngcc0.ɵɵelementStart(5, "vdr-order-state-label", 3);
    ɵngcc0.ɵɵelementStart(6, "button", 4);
    ɵngcc0.ɵɵlistener("click", function OrderDetailComponent_vdr_action_bar_0_Template_button_click_6_listener() { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r27 = ɵngcc0.ɵɵnextContext(); return ctx_r27.openStateDiagram(); });
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelement(8, "clr-icon", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "vdr-ab-right");
    ɵngcc0.ɵɵelement(10, "vdr-action-bar-items", 6);
    ɵngcc0.ɵɵtemplate(11, OrderDetailComponent_vdr_action_bar_0_button_11_Template, 4, 7, "button", 7);
    ɵngcc0.ɵɵtemplate(12, OrderDetailComponent_vdr_action_bar_0_button_12_Template, 3, 3, "button", 7);
    ɵngcc0.ɵɵelementStart(13, "button", 8);
    ɵngcc0.ɵɵlistener("click", function OrderDetailComponent_vdr_action_bar_0_Template_button_click_13_listener() { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29.fulfillOrder(); });
    ɵngcc0.ɵɵtext(14);
    ɵngcc0.ɵɵpipe(15, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(16, "vdr-dropdown");
    ɵngcc0.ɵɵelementStart(17, "button", 9);
    ɵngcc0.ɵɵelement(18, "clr-icon", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(19, "vdr-dropdown-menu", 11);
    ɵngcc0.ɵɵtemplate(20, OrderDetailComponent_vdr_action_bar_0_ng_container_20_Template, 6, 3, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(21, OrderDetailComponent_vdr_action_bar_0_button_21_Template, 5, 2, "button", 12);
    ɵngcc0.ɵɵtemplate(22, OrderDetailComponent_vdr_action_bar_0_ng_container_22_Template, 4, 3, "ng-container", 0);
    ɵngcc0.ɵɵpipe(23, "async");
    ɵngcc0.ɵɵelement(24, "div", 13);
    ɵngcc0.ɵɵelementStart(25, "button", 14);
    ɵngcc0.ɵɵlistener("click", function OrderDetailComponent_vdr_action_bar_0_Template_button_click_25_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r28); const order_r2 = restoredCtx.ngIf; const ctx_r30 = ɵngcc0.ɵɵnextContext(); return ctx_r30.manuallyTransitionToState(order_r2); });
    ɵngcc0.ɵɵelement(26, "clr-icon", 15);
    ɵngcc0.ɵɵtext(27);
    ɵngcc0.ɵɵpipe(28, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const order_r2 = ctx.ngIf;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    let tmp_9_0;
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("entity", ɵngcc0.ɵɵpipeBind1(4, 11, ctx_r0.entity$));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("state", order_r2.state);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(7, 13, "order.order-state-diagram"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngIf", (order_r2.state === "ArrangingPayment" || order_r2.state === "ArrangingAdditionalPayment") && (ctx_r0.hasUnsettledModifications(order_r2) || 0 < ctx_r0.outstandingPaymentAmount(order_r2)));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", order_r2.active === false && order_r2.state !== "ArrangingAdditionalPayment" && 0 < ctx_r0.outstandingPaymentAmount(order_r2));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r0.canAddFulfillment(order_r2));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(15, 15, "order.fulfill-order"), " ");
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("ngIf", order_r2.nextStates.includes("Modifying"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", order_r2.nextStates.includes("Cancelled"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (tmp_9_0 = ɵngcc0.ɵɵpipeBind1(23, 17, ctx_r0.nextStates$)) == null ? null : tmp_9_0.length);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(28, 19, "order.manually-transition-to-state"), " ");
} }
function OrderDetailComponent_div_2_tr_23_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵelementStart(1, "td");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "td");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "percent");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "td");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "td");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r37 = ctx.$implicit;
    const order_r31 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(row_r37.description);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 4, row_r37.taxRate / 100));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(8, 6, row_r37.taxBase, order_r31.currencyCode));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(11, 9, row_r37.taxTotal, order_r31.currencyCode));
} }
function OrderDetailComponent_div_2_h6_36_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h6");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.shipping-address"), " ");
} }
function OrderDetailComponent_div_2_h6_38_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h6");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.billing-address"), " ");
} }
function OrderDetailComponent_div_2_ng_container_40_vdr_order_payment_card_1_Template(rf, ctx) { if (rf & 1) {
    const _r42 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "vdr-order-payment-card", 39);
    ɵngcc0.ɵɵlistener("settlePayment", function OrderDetailComponent_div_2_ng_container_40_vdr_order_payment_card_1_Template_vdr_order_payment_card_settlePayment_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r42); const ctx_r41 = ɵngcc0.ɵɵnextContext(3); return ctx_r41.settlePayment($event); })("transitionPaymentState", function OrderDetailComponent_div_2_ng_container_40_vdr_order_payment_card_1_Template_vdr_order_payment_card_transitionPaymentState_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r42); const ctx_r43 = ɵngcc0.ɵɵnextContext(3); return ctx_r43.transitionPaymentState($event); })("settleRefund", function OrderDetailComponent_div_2_ng_container_40_vdr_order_payment_card_1_Template_vdr_order_payment_card_settleRefund_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r42); const ctx_r44 = ɵngcc0.ɵɵnextContext(3); return ctx_r44.settleRefund($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const payment_r40 = ctx.$implicit;
    const order_r31 = ɵngcc0.ɵɵnextContext(2).ngIf;
    ɵngcc0.ɵɵproperty("currencyCode", order_r31.currencyCode)("payment", payment_r40);
} }
function OrderDetailComponent_div_2_ng_container_40_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, OrderDetailComponent_div_2_ng_container_40_vdr_order_payment_card_1_Template, 1, 2, "vdr-order-payment-card", 38);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const order_r31 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", order_r31.payments);
} }
function OrderDetailComponent_div_2_ng_container_41_Template(rf, ctx) { if (rf & 1) {
    const _r49 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "vdr-fulfillment-card", 40);
    ɵngcc0.ɵɵlistener("transitionState", function OrderDetailComponent_div_2_ng_container_41_Template_vdr_fulfillment_card_transitionState_1_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r49); const fulfillment_r47 = restoredCtx.$implicit; const ctx_r48 = ɵngcc0.ɵɵnextContext(2); return ctx_r48.transitionFulfillment(fulfillment_r47.id, $event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const fulfillment_r47 = ctx.$implicit;
    const order_r31 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("fulfillment", fulfillment_r47)("order", order_r31);
} }
function OrderDetailComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r52 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 23);
    ɵngcc0.ɵɵelementStart(2, "div", 24);
    ɵngcc0.ɵɵelement(3, "vdr-order-table", 25);
    ɵngcc0.ɵɵelementStart(4, "h4");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "table", 26);
    ɵngcc0.ɵɵelementStart(8, "thead");
    ɵngcc0.ɵɵelementStart(9, "tr");
    ɵngcc0.ɵɵelementStart(10, "th");
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "th");
    ɵngcc0.ɵɵtext(14);
    ɵngcc0.ɵɵpipe(15, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(16, "th");
    ɵngcc0.ɵɵtext(17);
    ɵngcc0.ɵɵpipe(18, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(19, "th");
    ɵngcc0.ɵɵtext(20);
    ɵngcc0.ɵɵpipe(21, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(22, "tbody");
    ɵngcc0.ɵɵtemplate(23, OrderDetailComponent_div_2_tr_23_Template, 12, 12, "tr", 27);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(24, "vdr-custom-detail-component-host", 28);
    ɵngcc0.ɵɵelementStart(25, "vdr-order-history", 29);
    ɵngcc0.ɵɵlistener("addNote", function OrderDetailComponent_div_2_Template_vdr_order_history_addNote_25_listener($event) { ɵngcc0.ɵɵrestoreView(_r52); const ctx_r51 = ɵngcc0.ɵɵnextContext(); return ctx_r51.addNote($event); })("updateNote", function OrderDetailComponent_div_2_Template_vdr_order_history_updateNote_25_listener($event) { ɵngcc0.ɵɵrestoreView(_r52); const ctx_r53 = ɵngcc0.ɵɵnextContext(); return ctx_r53.updateNote($event); })("deleteNote", function OrderDetailComponent_div_2_Template_vdr_order_history_deleteNote_25_listener($event) { ɵngcc0.ɵɵrestoreView(_r52); const ctx_r54 = ɵngcc0.ɵɵnextContext(); return ctx_r54.deleteNote($event); });
    ɵngcc0.ɵɵpipe(26, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(27, "div", 30);
    ɵngcc0.ɵɵelementStart(28, "vdr-order-custom-fields-card", 31);
    ɵngcc0.ɵɵlistener("updateClick", function OrderDetailComponent_div_2_Template_vdr_order_custom_fields_card_updateClick_28_listener($event) { ɵngcc0.ɵɵrestoreView(_r52); const ctx_r55 = ɵngcc0.ɵɵnextContext(); return ctx_r55.updateCustomFields($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(29, "div", 32);
    ɵngcc0.ɵɵelementStart(30, "div", 33);
    ɵngcc0.ɵɵtext(31);
    ɵngcc0.ɵɵpipe(32, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(33, "div", 34);
    ɵngcc0.ɵɵelementStart(34, "div", 35);
    ɵngcc0.ɵɵelement(35, "vdr-customer-label", 36);
    ɵngcc0.ɵɵtemplate(36, OrderDetailComponent_div_2_h6_36_Template, 3, 3, "h6", 0);
    ɵngcc0.ɵɵelement(37, "vdr-formatted-address", 37);
    ɵngcc0.ɵɵtemplate(38, OrderDetailComponent_div_2_h6_38_Template, 3, 3, "h6", 0);
    ɵngcc0.ɵɵelement(39, "vdr-formatted-address", 37);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(40, OrderDetailComponent_div_2_ng_container_40_Template, 2, 1, "ng-container", 0);
    ɵngcc0.ɵɵtemplate(41, OrderDetailComponent_div_2_ng_container_41_Template, 2, 2, "ng-container", 27);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const order_r31 = ctx.ngIf;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("order", order_r31)("orderLineCustomFields", ctx_r1.orderLineCustomFields);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 22, "order.tax-summary"));
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(12, 24, "common.description"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(15, 26, "order.tax-rate"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(18, 28, "order.tax-base"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(21, 30, "order.tax-total"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", order_r31.taxSummary);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("entity$", ctx_r1.entity$)("detailForm", ctx_r1.detailForm);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("order", order_r31)("history", ɵngcc0.ɵɵpipeBind1(26, 32, ctx_r1.history$));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("customFieldsConfig", ctx_r1.customFields)("customFieldValues", order_r31.customFields);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(32, 34, "order.customer"), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("customer", order_r31.customer);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.getOrderAddressLines(order_r31.shippingAddress).length);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("address", order_r31.shippingAddress);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.getOrderAddressLines(order_r31.billingAddress).length);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("address", order_r31.billingAddress);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", order_r31.payments && order_r31.payments.length);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", order_r31.fulfillments);
} }
function OrderEditsPreviewDialogComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(1, 1, "order.confirm-modifications"));
} }
function OrderEditsPreviewDialogComponent_div_8_option_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 9);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const payment_r4 = ctx.$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngValue", payment_r4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate3(" #", payment_r4.id, " ", payment_r4.method, ": ", ɵngcc0.ɵɵpipeBind2(2, 4, payment_r4.amount, ctx_r3.order.currencyCode), " ");
} }
function OrderEditsPreviewDialogComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "clr-select-container");
    ɵngcc0.ɵɵelementStart(2, "label");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "select", 5);
    ɵngcc0.ɵɵlistener("ngModelChange", function OrderEditsPreviewDialogComponent_div_8_Template_select_ngModelChange_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.selectedPayment = $event; });
    ɵngcc0.ɵɵtemplate(6, OrderEditsPreviewDialogComponent_div_8_option_6_Template, 3, 7, "option", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "label", 7);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "textarea", 8);
    ɵngcc0.ɵɵlistener("ngModelChange", function OrderEditsPreviewDialogComponent_div_8_Template_textarea_ngModelChange_10_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.refundNote = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 5, "order.payment-to-refund"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.selectedPayment);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.order.payments);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(9, 7, "order.refund-cancellation-reason"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.refundNote);
} }
function OrderEditsPreviewDialogComponent_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function OrderEditsPreviewDialogComponent_ng_template_9_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.cancel(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 11);
    ɵngcc0.ɵɵlistener("click", function OrderEditsPreviewDialogComponent_ng_template_9_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.submit(); });
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 3, "common.cancel"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r2.priceDifference < 0 && !ctx_r2.selectedPayment);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 5, "common.confirm"), " ");
} }
function OrderEditorComponent_vdr_action_bar_0_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "vdr-action-bar");
    ɵngcc0.ɵɵelementStart(1, "vdr-ab-left");
    ɵngcc0.ɵɵelementStart(2, "div", 1);
    ɵngcc0.ɵɵelement(3, "vdr-entity-info", 2);
    ɵngcc0.ɵɵpipe(4, "async");
    ɵngcc0.ɵɵelement(5, "vdr-order-state-label", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "vdr-ab-right");
    ɵngcc0.ɵɵelementStart(7, "button", 4);
    ɵngcc0.ɵɵlistener("click", function OrderEditorComponent_vdr_action_bar_0_Template_button_click_7_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r4); const order_r2 = restoredCtx.ngIf; const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.transitionToPriorState(order_r2); });
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const order_r2 = ctx.ngIf;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("entity", ɵngcc0.ɵɵpipeBind1(4, 3, ctx_r0.entity$));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("state", order_r2.state);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(9, 5, "order.cancel-modification"), " ");
} }
function OrderEditorComponent_div_2_th_19_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, "common.custom-fields"));
} }
function OrderEditorComponent_div_2_tr_24_img_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 41);
    ɵngcc0.ɵɵpipe(1, "assetPreview");
} if (rf & 2) {
    const line_r22 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("src", ɵngcc0.ɵɵpipeBind2(1, 1, line_r22.featuredAsset, "tiny"), ɵngcc0.ɵɵsanitizeUrl);
} }
const _c6 = function (a0) { return [a0]; };
function OrderEditorComponent_div_2_tr_24_td_18_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "vdr-custom-field-control", 44);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const customField_r28 = ctx.$implicit;
    const i_r23 = ɵngcc0.ɵɵnextContext(2).index;
    const ctx_r27 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("customField", customField_r28)("customFieldsFormGroup", ctx_r27.orderLineCustomFieldsFormArray.get(ɵngcc0.ɵɵpureFunction1(3, _c6, i_r23)))("compact", true);
} }
function OrderEditorComponent_div_2_tr_24_td_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 42);
    ɵngcc0.ɵɵtemplate(1, OrderEditorComponent_div_2_tr_24_td_18_ng_container_1_Template, 2, 5, "ng-container", 43);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r25 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r25.orderLineCustomFields);
} }
function OrderEditorComponent_div_2_tr_24_Template(rf, ctx) { if (rf & 1) {
    const _r31 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr", 29);
    ɵngcc0.ɵɵelementStart(1, "td", 30);
    ɵngcc0.ɵɵtemplate(2, OrderEditorComponent_div_2_tr_24_img_2_Template, 2, 4, "img", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "td", 32);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "td", 33);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "td", 34);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "localeCurrency");
    ɵngcc0.ɵɵelementStart(10, "div", 16);
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵpipe(13, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "td", 35);
    ɵngcc0.ɵɵelementStart(15, "input", 36);
    ɵngcc0.ɵɵlistener("input", function OrderEditorComponent_div_2_tr_24_Template_input_input_15_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r31); const line_r22 = restoredCtx.$implicit; const ctx_r30 = ɵngcc0.ɵɵnextContext(2); return ctx_r30.updateLineQuantity(line_r22, $event.target.value); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(16, "vdr-line-refunds", 37);
    ɵngcc0.ɵɵelement(17, "vdr-line-fulfillment", 38);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(18, OrderEditorComponent_div_2_tr_24_td_18_Template, 2, 1, "td", 39);
    ɵngcc0.ɵɵelementStart(19, "td", 40);
    ɵngcc0.ɵɵtext(20);
    ɵngcc0.ɵɵpipe(21, "localeCurrency");
    ɵngcc0.ɵɵelementStart(22, "div", 16);
    ɵngcc0.ɵɵpipe(23, "translate");
    ɵngcc0.ɵɵtext(24);
    ɵngcc0.ɵɵpipe(25, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const line_r22 = ctx.$implicit;
    const order_r5 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("is-cancelled", line_r22.quantity === 0)("modified", ctx_r7.isLineModified(line_r22));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", line_r22.featuredAsset);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(line_r22.productVariant.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(line_r22.productVariant.sku);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(9, 19, line_r22.unitPriceWithTax, order_r5.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(11, 22, "order.net-price"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(13, 24, line_r22.unitPrice, order_r5.currencyCode), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("value", line_r22.quantity);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("line", line_r22)("payments", order_r5.payments);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("line", line_r22)("orderState", order_r5.state);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.orderLineCustomFields.length);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(21, 27, line_r22.linePriceWithTax, order_r5.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(23, 30, "order.net-price"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(25, 32, line_r22.linePrice, order_r5.currencyCode), " ");
} }
function OrderEditorComponent_div_2_tr_25_img_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 41);
    ɵngcc0.ɵɵpipe(1, "assetPreview");
} if (rf & 2) {
    const addedLine_r33 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("src", ɵngcc0.ɵɵpipeBind2(1, 1, addedLine_r33.productAsset, "tiny"), ɵngcc0.ɵɵsanitizeUrl);
} }
function OrderEditorComponent_div_2_tr_25_td_18_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "vdr-custom-field-control", 44);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const customField_r39 = ctx.$implicit;
    const i_r34 = ɵngcc0.ɵɵnextContext(2).index;
    const ctx_r38 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("customField", customField_r39)("customFieldsFormGroup", ctx_r38.addItemCustomFieldsFormArray.get(ɵngcc0.ɵɵpureFunction1(3, _c6, i_r34)))("compact", true);
} }
function OrderEditorComponent_div_2_tr_25_td_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 42);
    ɵngcc0.ɵɵtemplate(1, OrderEditorComponent_div_2_tr_25_td_18_ng_container_1_Template, 2, 5, "ng-container", 43);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r36 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r36.orderLineCustomFields);
} }
function OrderEditorComponent_div_2_tr_25_Template(rf, ctx) { if (rf & 1) {
    const _r42 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr", 45);
    ɵngcc0.ɵɵelementStart(1, "td", 30);
    ɵngcc0.ɵɵtemplate(2, OrderEditorComponent_div_2_tr_25_img_2_Template, 2, 4, "img", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "td", 32);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "td", 33);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "td", 34);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "localeCurrency");
    ɵngcc0.ɵɵelementStart(10, "div", 16);
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵpipe(13, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "td", 35);
    ɵngcc0.ɵɵelementStart(15, "input", 36);
    ɵngcc0.ɵɵlistener("input", function OrderEditorComponent_div_2_tr_25_Template_input_input_15_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r42); const addedLine_r33 = restoredCtx.$implicit; const ctx_r41 = ɵngcc0.ɵɵnextContext(2); return ctx_r41.updateAddedItemQuantity(addedLine_r33, $event.target.value); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(16, "button", 46);
    ɵngcc0.ɵɵlistener("click", function OrderEditorComponent_div_2_tr_25_Template_button_click_16_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r42); const i_r34 = restoredCtx.index; const ctx_r43 = ɵngcc0.ɵɵnextContext(2); return ctx_r43.removeAddedItem(i_r34); });
    ɵngcc0.ɵɵelement(17, "clr-icon", 47);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(18, OrderEditorComponent_div_2_tr_25_td_18_Template, 2, 1, "td", 39);
    ɵngcc0.ɵɵelementStart(19, "td", 40);
    ɵngcc0.ɵɵtext(20);
    ɵngcc0.ɵɵpipe(21, "currency");
    ɵngcc0.ɵɵelementStart(22, "div", 16);
    ɵngcc0.ɵɵpipe(23, "translate");
    ɵngcc0.ɵɵtext(24);
    ɵngcc0.ɵɵpipe(25, "currency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const addedLine_r33 = ctx.$implicit;
    const order_r5 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", addedLine_r33.productAsset);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(addedLine_r33.productVariantName);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(addedLine_r33.sku);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(9, 11, addedLine_r33.priceWithTax, order_r5.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(11, 14, "order.net-price"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(13, 16, addedLine_r33.price, order_r5.currencyCode), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("value", addedLine_r33.quantity);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.orderLineCustomFields.length);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(21, 19, addedLine_r33.priceWithTax * addedLine_r33.quantity / 100, order_r5.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(23, 22, "order.net-price"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(25, 24, addedLine_r33.price * addedLine_r33.quantity / 100, order_r5.currencyCode), " ");
} }
function OrderEditorComponent_div_2_tr_26_td_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "td");
} }
function OrderEditorComponent_div_2_tr_26_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 48);
    ɵngcc0.ɵɵelementStart(1, "td", 49);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "td", 33);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "td", 50);
    ɵngcc0.ɵɵelement(6, "td");
    ɵngcc0.ɵɵtemplate(7, OrderEditorComponent_div_2_tr_26_td_7_Template, 1, 0, "td", 0);
    ɵngcc0.ɵɵelementStart(8, "td", 40);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵpipe(10, "localeCurrency");
    ɵngcc0.ɵɵelementStart(11, "div", 16);
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵpipe(14, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const surcharge_r45 = ctx.$implicit;
    const order_r5 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(surcharge_r45.description);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(surcharge_r45.sku);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r9.orderLineCustomFields.length);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(10, 6, surcharge_r45.priceWithTax, order_r5.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(12, 9, "order.net-price"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(14, 11, surcharge_r45.price, order_r5.currencyCode), " ");
} }
function OrderEditorComponent_div_2_tr_27_td_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "td");
} }
function OrderEditorComponent_div_2_tr_27_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "localeCurrency");
    ɵngcc0.ɵɵelementStart(3, "div", 16);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const surchargePrice_r52 = ctx.ngIf;
    const order_r5 = ɵngcc0.ɵɵnextContext(2).ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 3, surchargePrice_r52.priceWithTax, order_r5.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(4, 6, "order.net-price"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(6, 8, surchargePrice_r52.price, order_r5.currencyCode), " ");
} }
function OrderEditorComponent_div_2_tr_27_Template(rf, ctx) { if (rf & 1) {
    const _r55 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr", 51);
    ɵngcc0.ɵɵelementStart(1, "td", 49);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementStart(3, "button", 46);
    ɵngcc0.ɵɵlistener("click", function OrderEditorComponent_div_2_tr_27_Template_button_click_3_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r55); const i_r49 = restoredCtx.index; const ctx_r54 = ɵngcc0.ɵɵnextContext(2); return ctx_r54.removeSurcharge(i_r49); });
    ɵngcc0.ɵɵelement(4, "clr-icon", 47);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "td", 33);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(7, "td", 50);
    ɵngcc0.ɵɵelement(8, "td");
    ɵngcc0.ɵɵtemplate(9, OrderEditorComponent_div_2_tr_27_td_9_Template, 1, 0, "td", 0);
    ɵngcc0.ɵɵelementStart(10, "td", 40);
    ɵngcc0.ɵɵtemplate(11, OrderEditorComponent_div_2_tr_27_ng_container_11_Template, 7, 11, "ng-container", 0);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const surcharge_r48 = ctx.$implicit;
    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", surcharge_r48.description, " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(surcharge_r48.sku);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r10.orderLineCustomFields.length);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r10.getSurchargePrices(surcharge_r48));
} }
function OrderEditorComponent_div_2_td_35_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "td");
} }
function OrderEditorComponent_div_2_clr_accordion_content_51_div_2_img_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 58);
    ɵngcc0.ɵɵpipe(1, "assetPreview");
} if (rf & 2) {
    const asset_r59 = ctx.ngIf;
    ɵngcc0.ɵɵproperty("src", ɵngcc0.ɵɵpipeBind2(1, 1, asset_r59, "tiny"), ɵngcc0.ɵɵsanitizeUrl);
} }
function OrderEditorComponent_div_2_clr_accordion_content_51_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 55);
    ɵngcc0.ɵɵtemplate(1, OrderEditorComponent_div_2_clr_accordion_content_51_div_2_img_1_Template, 2, 4, "img", 56);
    ɵngcc0.ɵɵelementStart(2, "div");
    ɵngcc0.ɵɵelementStart(3, "strong", 57);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "small");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div");
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const order_r5 = ɵngcc0.ɵɵnextContext(2).ngIf;
    const ctx_r56 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r56.addItemSelectedVariant.productAsset);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r56.addItemSelectedVariant.productVariantName);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r56.addItemSelectedVariant.sku);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(9, 4, ctx_r56.getSelectedItemPrice(ctx_r56.addItemSelectedVariant), order_r5.currencyCode), " ");
} }
function OrderEditorComponent_div_2_clr_accordion_content_51_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "vdr-custom-field-control", 59);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const customField_r61 = ctx.$implicit;
    const ctx_r57 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("readonly", !ctx_r57.addItemSelectedVariant)("customField", customField_r61)("customFieldsFormGroup", ctx_r57.addItemCustomFieldsForm)("compact", true);
} }
function OrderEditorComponent_div_2_clr_accordion_content_51_Template(rf, ctx) { if (rf & 1) {
    const _r63 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "clr-accordion-content");
    ɵngcc0.ɵɵelementStart(1, "vdr-product-selector", 52);
    ɵngcc0.ɵɵlistener("productSelected", function OrderEditorComponent_div_2_clr_accordion_content_51_Template_vdr_product_selector_productSelected_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r63); const ctx_r62 = ɵngcc0.ɵɵnextContext(2); return ctx_r62.addItemSelectedVariant = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(2, OrderEditorComponent_div_2_clr_accordion_content_51_div_2_Template, 10, 7, "div", 53);
    ɵngcc0.ɵɵtemplate(3, OrderEditorComponent_div_2_clr_accordion_content_51_ng_container_3_Template, 2, 4, "ng-container", 43);
    ɵngcc0.ɵɵelementStart(4, "button", 54);
    ɵngcc0.ɵɵlistener("click", function OrderEditorComponent_div_2_clr_accordion_content_51_Template_button_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r63); const ctx_r64 = ɵngcc0.ɵɵnextContext(2); return ctx_r64.addItemToOrder(ctx_r64.addItemSelectedVariant); });
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r12.addItemSelectedVariant);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r12.orderLineCustomFields);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r12.addItemSelectedVariant || ctx_r12.addItemCustomFieldsForm.invalid);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 4, "order.add-item-to-order"), " ");
} }
function OrderEditorComponent_div_2_clr_accordion_content_56_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-chip");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(2);
} if (rf & 2) {
    const item_r66 = ctx.item;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r66.code);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r66.promotionName, " ");
} }
function OrderEditorComponent_div_2_clr_accordion_content_56_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "clr-accordion-content");
    ɵngcc0.ɵɵelementStart(1, "ng-select", 60);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵtemplate(3, OrderEditorComponent_div_2_clr_accordion_content_56_ng_template_3_Template, 3, 2, "ng-template", 61);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("items", ɵngcc0.ɵɵpipeBind1(2, 7, ctx_r13.availableCouponCodes$))("addTag", false)("multiple", true)("hideSelected", true)("minTermLength", 2)("typeahead", ctx_r13.couponCodeInput$)("formControl", ctx_r13.couponCodesControl);
} }
const _c7 = function (a0) { return { rate: a0 }; };
function OrderEditorComponent_div_2_clr_accordion_content_61_Template(rf, ctx) { if (rf & 1) {
    const _r68 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "clr-accordion-content");
    ɵngcc0.ɵɵelementStart(1, "form", 62);
    ɵngcc0.ɵɵlistener("submit", function OrderEditorComponent_div_2_clr_accordion_content_61_Template_form_submit_1_listener() { ɵngcc0.ɵɵrestoreView(_r68); const ctx_r67 = ɵngcc0.ɵɵnextContext(2); return ctx_r67.addSurcharge(ctx_r67.surchargeForm.value); });
    ɵngcc0.ɵɵelementStart(2, "vdr-form-field", 63);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelement(4, "input", 64);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "vdr-form-field", 65);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelement(7, "input", 66);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "vdr-form-field", 67);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelement(10, "vdr-currency-input", 68);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "vdr-form-field", 69);
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵelement(13, "input", 70);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "vdr-form-field", 71);
    ɵngcc0.ɵɵpipe(15, "translate");
    ɵngcc0.ɵɵelementStart(16, "vdr-affixed-input", 72);
    ɵngcc0.ɵɵelement(17, "input", 73);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(18, "vdr-form-field", 74);
    ɵngcc0.ɵɵpipe(19, "translate");
    ɵngcc0.ɵɵelement(20, "input", 75);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(21, "button", 76);
    ɵngcc0.ɵɵtext(22);
    ɵngcc0.ɵɵpipe(23, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const order_r5 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r14 = ɵngcc0.ɵɵnextContext();
    let tmp_5_0;
    let tmp_8_0;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("formGroup", ctx_r14.surchargeForm);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(3, 10, "common.description"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(6, 12, "order.product-sku"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(9, 14, "common.price"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("currencyCode", order_r5.currencyCode);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind2(12, 16, "catalog.price-includes-tax-at", ɵngcc0.ɵɵpureFunction1(25, _c7, (tmp_5_0 = ctx_r14.surchargeForm.get("taxRate")) == null ? null : tmp_5_0.value)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(15, 19, "order.tax-rate"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(19, 21, "order.tax-description"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("disabled", ctx_r14.surchargeForm.invalid || ctx_r14.surchargeForm.pristine || ((tmp_8_0 = ctx_r14.surchargeForm.get("price")) == null ? null : tmp_8_0.value) === 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(23, 23, "order.add-surcharge"), " ");
} }
function OrderEditorComponent_div_2_clr_accordion_content_66_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "clr-accordion-content");
    ɵngcc0.ɵɵelement(1, "vdr-address-form", 77);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r15 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("formGroup", ctx_r15.shippingAddressForm)("availableCountries", ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r15.availableCountries$))("customFields", ctx_r15.addressCustomFields);
} }
function OrderEditorComponent_div_2_clr_accordion_content_71_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "clr-accordion-content");
    ɵngcc0.ɵɵelement(1, "vdr-address-form", 77);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("formGroup", ctx_r16.billingAddressForm)("availableCountries", ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r16.availableCountries$))("customFields", ctx_r16.addressCustomFields);
} }
function OrderEditorComponent_div_2_li_79_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, "order.modification-adding-items", ɵngcc0.ɵɵpureFunction1(4, _c2, ctx_r17.modifyOrderInput.addItems == null ? null : ctx_r17.modifyOrderInput.addItems.length)), " ");
} }
function OrderEditorComponent_div_2_li_80_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r18 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, "order.modification-adjusting-lines", ɵngcc0.ɵɵpureFunction1(4, _c2, ctx_r18.modifyOrderInput.adjustOrderLines == null ? null : ctx_r18.modifyOrderInput.adjustOrderLines.length)), " ");
} }
function OrderEditorComponent_div_2_li_81_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r19 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, "order.modification-adding-surcharges", ɵngcc0.ɵɵpureFunction1(4, _c2, ctx_r19.modifyOrderInput.surcharges == null ? null : ctx_r19.modifyOrderInput.surcharges.length)), " ");
} }
function OrderEditorComponent_div_2_li_82_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.modification-updating-shipping-address"), " ");
} }
function OrderEditorComponent_div_2_li_83_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.modification-updating-billing-address"), " ");
} }
function OrderEditorComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r71 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 5);
    ɵngcc0.ɵɵelementStart(2, "div", 6);
    ɵngcc0.ɵɵelementStart(3, "table", 7);
    ɵngcc0.ɵɵelementStart(4, "thead");
    ɵngcc0.ɵɵelementStart(5, "tr");
    ɵngcc0.ɵɵelement(6, "th");
    ɵngcc0.ɵɵelementStart(7, "th");
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "th");
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "th");
    ɵngcc0.ɵɵtext(14);
    ɵngcc0.ɵɵpipe(15, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(16, "th");
    ɵngcc0.ɵɵtext(17);
    ɵngcc0.ɵɵpipe(18, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(19, OrderEditorComponent_div_2_th_19_Template, 3, 3, "th", 0);
    ɵngcc0.ɵɵelementStart(20, "th");
    ɵngcc0.ɵɵtext(21);
    ɵngcc0.ɵɵpipe(22, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(23, "tbody");
    ɵngcc0.ɵɵtemplate(24, OrderEditorComponent_div_2_tr_24_Template, 26, 35, "tr", 8);
    ɵngcc0.ɵɵtemplate(25, OrderEditorComponent_div_2_tr_25_Template, 26, 27, "tr", 9);
    ɵngcc0.ɵɵtemplate(26, OrderEditorComponent_div_2_tr_26_Template, 15, 14, "tr", 10);
    ɵngcc0.ɵɵtemplate(27, OrderEditorComponent_div_2_tr_27_Template, 12, 4, "tr", 11);
    ɵngcc0.ɵɵelementStart(28, "tr", 12);
    ɵngcc0.ɵɵelementStart(29, "td", 13);
    ɵngcc0.ɵɵtext(30);
    ɵngcc0.ɵɵpipe(31, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(32, "td", 14);
    ɵngcc0.ɵɵtext(33);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(34, "td", 15);
    ɵngcc0.ɵɵtemplate(35, OrderEditorComponent_div_2_td_35_Template, 1, 0, "td", 0);
    ɵngcc0.ɵɵelementStart(36, "td", 14);
    ɵngcc0.ɵɵtext(37);
    ɵngcc0.ɵɵpipe(38, "localeCurrency");
    ɵngcc0.ɵɵelementStart(39, "div", 16);
    ɵngcc0.ɵɵpipe(40, "translate");
    ɵngcc0.ɵɵtext(41);
    ɵngcc0.ɵɵpipe(42, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(43, "h4", 17);
    ɵngcc0.ɵɵtext(44);
    ɵngcc0.ɵɵpipe(45, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(46, "clr-accordion");
    ɵngcc0.ɵɵelementStart(47, "clr-accordion-panel");
    ɵngcc0.ɵɵelementStart(48, "clr-accordion-title");
    ɵngcc0.ɵɵtext(49);
    ɵngcc0.ɵɵpipe(50, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(51, OrderEditorComponent_div_2_clr_accordion_content_51_Template, 7, 6, "clr-accordion-content", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(52, "clr-accordion-panel");
    ɵngcc0.ɵɵelementStart(53, "clr-accordion-title");
    ɵngcc0.ɵɵtext(54);
    ɵngcc0.ɵɵpipe(55, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(56, OrderEditorComponent_div_2_clr_accordion_content_56_Template, 4, 9, "clr-accordion-content", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(57, "clr-accordion-panel");
    ɵngcc0.ɵɵelementStart(58, "clr-accordion-title");
    ɵngcc0.ɵɵtext(59);
    ɵngcc0.ɵɵpipe(60, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(61, OrderEditorComponent_div_2_clr_accordion_content_61_Template, 24, 27, "clr-accordion-content", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(62, "clr-accordion-panel");
    ɵngcc0.ɵɵelementStart(63, "clr-accordion-title");
    ɵngcc0.ɵɵtext(64);
    ɵngcc0.ɵɵpipe(65, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(66, OrderEditorComponent_div_2_clr_accordion_content_66_Template, 3, 5, "clr-accordion-content", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(67, "clr-accordion-panel");
    ɵngcc0.ɵɵelementStart(68, "clr-accordion-title");
    ɵngcc0.ɵɵtext(69);
    ɵngcc0.ɵɵpipe(70, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(71, OrderEditorComponent_div_2_clr_accordion_content_71_Template, 3, 5, "clr-accordion-content", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(72, "div", 19);
    ɵngcc0.ɵɵelementStart(73, "div", 20);
    ɵngcc0.ɵɵelementStart(74, "div", 21);
    ɵngcc0.ɵɵtext(75);
    ɵngcc0.ɵɵpipe(76, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(77, "div", 22);
    ɵngcc0.ɵɵelementStart(78, "ul");
    ɵngcc0.ɵɵtemplate(79, OrderEditorComponent_div_2_li_79_Template, 3, 6, "li", 0);
    ɵngcc0.ɵɵtemplate(80, OrderEditorComponent_div_2_li_80_Template, 3, 6, "li", 0);
    ɵngcc0.ɵɵtemplate(81, OrderEditorComponent_div_2_li_81_Template, 3, 6, "li", 0);
    ɵngcc0.ɵɵtemplate(82, OrderEditorComponent_div_2_li_82_Template, 3, 3, "li", 0);
    ɵngcc0.ɵɵtemplate(83, OrderEditorComponent_div_2_li_83_Template, 3, 3, "li", 0);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(84, "div", 22);
    ɵngcc0.ɵɵelementStart(85, "label", 23);
    ɵngcc0.ɵɵtext(86);
    ɵngcc0.ɵɵpipe(87, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(88, "textarea", 24);
    ɵngcc0.ɵɵlistener("ngModelChange", function OrderEditorComponent_div_2_Template_textarea_ngModelChange_88_listener($event) { ɵngcc0.ɵɵrestoreView(_r71); const ctx_r70 = ɵngcc0.ɵɵnextContext(); return ctx_r70.note = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(89, "clr-checkbox-wrapper", 25);
    ɵngcc0.ɵɵelementStart(90, "input", 26);
    ɵngcc0.ɵɵlistener("ngModelChange", function OrderEditorComponent_div_2_Template_input_ngModelChange_90_listener($event) { ɵngcc0.ɵɵrestoreView(_r71); const ctx_r72 = ɵngcc0.ɵɵnextContext(); return ctx_r72.recalculateShipping = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(91, "label");
    ɵngcc0.ɵɵtext(92);
    ɵngcc0.ɵɵpipe(93, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(94, "div", 27);
    ɵngcc0.ɵɵelementStart(95, "button", 28);
    ɵngcc0.ɵɵlistener("click", function OrderEditorComponent_div_2_Template_button_click_95_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r71); const order_r5 = restoredCtx.ngIf; const ctx_r73 = ɵngcc0.ɵɵnextContext(); return ctx_r73.previewAndModify(order_r5); });
    ɵngcc0.ɵɵtext(96);
    ɵngcc0.ɵɵpipe(97, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const order_r5 = ctx.ngIf;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(9, 35, "order.product-name"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(12, 37, "order.product-sku"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(15, 39, "order.unit-price"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(18, 41, "order.quantity"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.orderLineCustomFields.length);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(22, 43, "order.total"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", order_r5.lines);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.addedLines)("ngForTrackBy", ctx_r1.trackByProductVariantId);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", order_r5.surcharges);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.modifyOrderInput.surcharges);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(31, 45, "order.shipping"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(order_r5.shippingLines[0] == null ? null : order_r5.shippingLines[0].shippingMethod == null ? null : order_r5.shippingLines[0].shippingMethod.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.orderLineCustomFields.length);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(38, 47, order_r5.shippingWithTax, order_r5.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(40, 50, "order.net-price"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(42, 52, order_r5.shipping, order_r5.currencyCode), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(45, 55, "order.modifications"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(50, 57, "order.add-item-to-order"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(55, 59, "order.set-coupon-codes"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(60, 61, "order.add-surcharge"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(65, 63, "order.edit-shipping-address"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(70, 65, "order.edit-billing-address"));
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(76, 67, "order.modification-summary"), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.modifyOrderInput.addItems == null ? null : ctx_r1.modifyOrderInput.addItems.length);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.modifyOrderInput.adjustOrderLines == null ? null : ctx_r1.modifyOrderInput.adjustOrderLines.length);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.modifyOrderInput.surcharges == null ? null : ctx_r1.modifyOrderInput.surcharges.length);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.shippingAddressForm.dirty);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.billingAddressForm.dirty);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(87, 69, "order.note"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.note);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.recalculateShipping);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(93, 71, "order.modification-recalculate-shipping"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r1.canPreviewChanges());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(97, 73, "order.preview-changes"), " ");
} }
function OrderHistoryComponent_span_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.note-only-visible-to-administrators"), " ");
} }
function OrderHistoryComponent_span_17_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.note-visible-to-customer"), " ");
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_2_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.history-order-fulfilled"), " ");
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_2_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.history-order-cancelled"), " ");
} }
const _c8 = function (a0, a1) { return { from: a0, to: a1 }; };
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(1, 1, "order.history-order-transition", ɵngcc0.ɵɵpureFunction2(4, _c8, entry_r3.data.from, entry_r3.data.to)), " ");
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_2_div_1_Template, 3, 3, "div", 17);
    ɵngcc0.ɵɵtemplate(2, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_2_div_2_Template, 3, 3, "div", 17);
    ɵngcc0.ɵɵtemplate(3, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_2_ng_template_3_Template, 2, 7, "ng-template", 18);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", entry_r3.data.to === "Delivered");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", entry_r3.data.to === "Cancelled");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", entry_r3.data.to !== "Cancelled" && entry_r3.data.to !== "Delivered");
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_3_ng_container_4_vdr_chip_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-chip", 23);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, "order.modification-settled"));
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_3_ng_container_4_vdr_chip_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-chip", 24);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, "order.modification-not-settled"));
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_3_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "strong");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(6, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_3_ng_container_4_vdr_chip_6_Template, 3, 3, "vdr-chip", 20);
    ɵngcc0.ɵɵtemplate(7, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_3_ng_container_4_vdr_chip_7_Template, 3, 3, "vdr-chip", 21);
    ɵngcc0.ɵɵelementStart(8, "vdr-history-entry-detail");
    ɵngcc0.ɵɵelement(9, "vdr-modification-detail", 22);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const modification_r20 = ctx.ngIf;
    const ctx_r19 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 6, "order.modify-order-price-difference"), ": ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(5, 8, modification_r20.priceChange, ctx_r19.order.currencyCode));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", modification_r20.isSettled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !modification_r20.isSettled);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("order", ctx_r19.order)("modification", modification_r20);
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 11);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_3_ng_container_4_Template, 10, 11, "ng-container", 19);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 2, "order.history-order-modified"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.getModification(entry_r3.data.modificationId));
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_4_ng_container_1_vdr_history_entry_detail_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-history-entry-detail");
    ɵngcc0.ɵɵelement(1, "vdr-payment-detail", 27);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const payment_r28 = ctx.ngIf;
    const ctx_r27 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("payment", payment_r28)("currencyCode", ctx_r27.order.currencyCode);
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 11);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵtemplate(6, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_4_ng_container_1_vdr_history_entry_detail_6_Template, 2, 2, "vdr-history-entry-detail", 19);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r24 = ɵngcc0.ɵɵnextContext();
    let tmp_1_0;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 4, "order.history-payment-settled"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(5, 6, "order.transaction-id"), ": ", (tmp_1_0 = ctx_r24.getPayment(entry_r3)) == null ? null : tmp_1_0.transactionId, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r24.getPayment(entry_r3));
} }
const _c9 = function (a0, a1, a2) { return { from: a0, to: a1, id: a2 }; };
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_4_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r26 = ɵngcc0.ɵɵnextContext();
    let tmp_0_0;
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(1, 1, "order.history-payment-transition", ɵngcc0.ɵɵpureFunction3(4, _c9, entry_r3.data.from, entry_r3.data.to, (tmp_0_0 = ctx_r26.getPayment(entry_r3)) == null ? null : tmp_0_0.transactionId)), " ");
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_4_ng_container_1_Template, 7, 8, "ng-container", 25);
    ɵngcc0.ɵɵtemplate(2, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_4_ng_template_2_Template, 2, 8, "ng-template", null, 26, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r25 = ɵngcc0.ɵɵreference(3);
    const entry_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", entry_r3.data.to === "Settled")("ngIfElse", _r25);
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, "order.history-refund-transition", ɵngcc0.ɵɵpureFunction3(4, _c9, entry_r3.data.from, entry_r3.data.to, entry_r3.data.refundId)), " ");
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_6_vdr_history_entry_detail_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-history-entry-detail");
    ɵngcc0.ɵɵelementStart(1, "vdr-labeled-data", 28);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "vdr-labeled-data", 28);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelement(6, "vdr-simple-item-list", 29);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "vdr-labeled-data", 28);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const items_r34 = ctx.ngIf;
    const entry_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(2, 6, "order.cancellation-reason"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", entry_r3.data.reason, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(5, 8, "order.contents"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("items", items_r34);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(8, 10, "order.shipping-cancelled"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", entry_r3.data.shippingCancelled, " ");
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtemplate(3, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_6_vdr_history_entry_detail_3_Template, 10, 12, "vdr-history-entry-detail", 19);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 2, "order.history-items-cancelled", ɵngcc0.ɵɵpureFunction1(5, _c2, entry_r3.data.orderItemIds.length)), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.getCancelledItems(entry_r3));
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_7_vdr_history_entry_detail_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-history-entry-detail");
    ɵngcc0.ɵɵelement(1, "vdr-fulfillment-detail", 30);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const fulfillment_r38 = ctx.ngIf;
    const ctx_r37 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("fulfillmentId", fulfillment_r38.id)("order", ctx_r37.order);
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtemplate(3, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_7_vdr_history_entry_detail_3_Template, 2, 2, "vdr-history-entry-detail", 19);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, "order.history-fulfillment-created"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r9.getFulfillment(entry_r3));
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_8_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 11);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r40 = ɵngcc0.ɵɵnextContext();
    let tmp_1_0;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 3, "order.history-fulfillment-delivered"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(5, 5, "order.tracking-code"), ": ", (tmp_1_0 = ctx_r40.getFulfillment(entry_r3)) == null ? null : tmp_1_0.trackingCode, " ");
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_8_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 11);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r41 = ɵngcc0.ɵɵnextContext();
    let tmp_1_0;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 3, "order.history-fulfillment-shipped"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(5, 5, "order.tracking-code"), ": ", (tmp_1_0 = ctx_r41.getFulfillment(entry_r3)) == null ? null : tmp_1_0.trackingCode, " ");
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_8_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, "order.history-fulfillment-transition", ɵngcc0.ɵɵpureFunction2(4, _c8, entry_r3.data.from, entry_r3.data.to)), " ");
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_8_vdr_history_entry_detail_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-history-entry-detail");
    ɵngcc0.ɵɵelement(1, "vdr-fulfillment-detail", 30);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const fulfillment_r47 = ctx.ngIf;
    const ctx_r43 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("fulfillmentId", fulfillment_r47.id)("order", ctx_r43.order);
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_8_ng_container_1_Template, 6, 7, "ng-container", 19);
    ɵngcc0.ɵɵtemplate(2, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_8_ng_container_2_Template, 6, 7, "ng-container", 19);
    ɵngcc0.ɵɵtemplate(3, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_8_ng_container_3_Template, 3, 7, "ng-container", 19);
    ɵngcc0.ɵɵtemplate(4, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_8_vdr_history_entry_detail_4_Template, 2, 2, "vdr-history-entry-detail", 19);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r10 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", entry_r3.data.to === "Delivered");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", entry_r3.data.to === "Shipped");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", entry_r3.data.to !== "Delivered" && entry_r3.data.to !== "Shipped");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r10.getFulfillment(entry_r3));
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_9_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 43);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, "common.public"));
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_9_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 44);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, "common.private"));
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    const _r53 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 31);
    ɵngcc0.ɵɵelementStart(2, "div", 32);
    ɵngcc0.ɵɵtemplate(3, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_9_span_3_Template, 3, 3, "span", 33);
    ɵngcc0.ɵɵtemplate(4, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_9_span_4_Template, 3, 3, "span", 34);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(6, "div", 35);
    ɵngcc0.ɵɵelementStart(7, "vdr-dropdown");
    ɵngcc0.ɵɵelementStart(8, "button", 36);
    ɵngcc0.ɵɵelement(9, "clr-icon", 37);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "vdr-dropdown-menu", 38);
    ɵngcc0.ɵɵelementStart(11, "button", 39);
    ɵngcc0.ɵɵlistener("click", function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_9_Template_button_click_11_listener() { ɵngcc0.ɵɵrestoreView(_r53); const entry_r3 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r51 = ɵngcc0.ɵɵnextContext(); return ctx_r51.updateNote.emit(entry_r3); });
    ɵngcc0.ɵɵpipe(12, "hasPermission");
    ɵngcc0.ɵɵelement(13, "clr-icon", 40);
    ɵngcc0.ɵɵtext(14);
    ɵngcc0.ɵɵpipe(15, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(16, "div", 41);
    ɵngcc0.ɵɵelementStart(17, "button", 39);
    ɵngcc0.ɵɵlistener("click", function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_9_Template_button_click_17_listener() { ɵngcc0.ɵɵrestoreView(_r53); const entry_r3 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r54 = ɵngcc0.ɵɵnextContext(); return ctx_r54.deleteNote.emit(entry_r3); });
    ɵngcc0.ɵɵpipe(18, "hasPermission");
    ɵngcc0.ɵɵelement(19, "clr-icon", 42);
    ɵngcc0.ɵɵtext(20);
    ɵngcc0.ɵɵpipe(21, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", entry_r3.isPublic);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !entry_r3.isPublic);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", entry_r3.data.note, " ");
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("disabled", !ɵngcc0.ɵɵpipeBind1(12, 7, "UpdateOrder"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(15, 9, "common.edit"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("disabled", !ɵngcc0.ɵɵpipeBind1(18, 11, "UpdateOrder"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(21, 13, "common.delete"), " ");
} }
const _c10 = function (a2) { return ["/marketing", "promotions", a2]; };
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "vdr-chip");
    ɵngcc0.ɵɵelementStart(4, "a", 45);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 3, "order.history-coupon-code-applied"), ": ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("routerLink", ɵngcc0.ɵɵpureFunction1(5, _c10, entry_r3.data.promotionId));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(entry_r3.data.couponCode);
} }
function OrderHistoryComponent_vdr_timeline_entry_18_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "vdr-chip");
    ɵngcc0.ɵɵelementStart(4, "span", 46);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const entry_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, "order.history-coupon-code-removed"), ": ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(entry_r3.data.couponCode);
} }
function OrderHistoryComponent_vdr_timeline_entry_18_Template(rf, ctx) { if (rf & 1) {
    const _r60 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "vdr-timeline-entry", 14);
    ɵngcc0.ɵɵlistener("expandClick", function OrderHistoryComponent_vdr_timeline_entry_18_Template_vdr_timeline_entry_expandClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r60); const ctx_r59 = ɵngcc0.ɵɵnextContext(); return ctx_r59.expanded = !ctx_r59.expanded; });
    ɵngcc0.ɵɵelementContainerStart(1, 15);
    ɵngcc0.ɵɵtemplate(2, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_2_Template, 4, 3, "ng-container", 16);
    ɵngcc0.ɵɵtemplate(3, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_3_Template, 5, 4, "ng-container", 16);
    ɵngcc0.ɵɵtemplate(4, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_4_Template, 4, 2, "ng-container", 16);
    ɵngcc0.ɵɵtemplate(5, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_5_Template, 3, 8, "ng-container", 16);
    ɵngcc0.ɵɵtemplate(6, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_6_Template, 4, 7, "ng-container", 16);
    ɵngcc0.ɵɵtemplate(7, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_7_Template, 4, 4, "ng-container", 16);
    ɵngcc0.ɵɵtemplate(8, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_8_Template, 5, 4, "ng-container", 16);
    ɵngcc0.ɵɵtemplate(9, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_9_Template, 22, 15, "ng-container", 16);
    ɵngcc0.ɵɵtemplate(10, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_10_Template, 6, 7, "ng-container", 16);
    ɵngcc0.ɵɵtemplate(11, OrderHistoryComponent_vdr_timeline_entry_18_ng_container_11_Template, 6, 4, "ng-container", 16);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const entry_r3 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("displayType", ctx_r2.getDisplayType(entry_r3))("iconShape", ctx_r2.getTimelineIcon(entry_r3))("createdAt", entry_r3.createdAt)("name", ctx_r2.getName(entry_r3))("featured", ctx_r2.isFeatured(entry_r3))("collapsed", !ctx_r2.expanded && !ctx_r2.isFeatured(entry_r3));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitch", entry_r3.type);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r2.type.ORDER_STATE_TRANSITION);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r2.type.ORDER_MODIFIED);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r2.type.ORDER_PAYMENT_TRANSITION);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r2.type.ORDER_REFUND_TRANSITION);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r2.type.ORDER_CANCELLATION);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r2.type.ORDER_FULFILLMENT);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r2.type.ORDER_FULFILLMENT_TRANSITION);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r2.type.ORDER_NOTE);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r2.type.ORDER_COUPON_APPLIED);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r2.type.ORDER_COUPON_REMOVED);
} }
function OrderListComponent_div_3_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 18);
    ɵngcc0.ɵɵlistener("click", function OrderListComponent_div_3_button_1_Template_button_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r8); const preset_r6 = restoredCtx.$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.selectFilterPreset(preset_r6.name); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const preset_r6 = ctx.$implicit;
    const activePreset_r4 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵclassProp("btn-primary", activePreset_r4 === preset_r6.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 3, preset_r6.label), " ");
} }
function OrderListComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 16);
    ɵngcc0.ɵɵtemplate(1, OrderListComponent_div_3_button_1_Template, 3, 5, "button", 17);
    ɵngcc0.ɵɵelementStart(2, "button", 18);
    ɵngcc0.ɵɵlistener("click", function OrderListComponent_div_3_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.selectFilterPreset("custom"); });
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelement(5, "clr-icon", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const activePreset_r4 = ctx.ngIf;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.filterPresets);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("btn-primary", activePreset_r4 === "custom");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 4, "order.filter-custom"), " ");
} }
function OrderListComponent_ng_template_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "stateI18nToken");
} if (rf & 2) {
    const item_r12 = ctx.item;
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(1, 1, ɵngcc0.ɵɵpipeBind1(2, 3, item_r12)));
} }
function OrderListComponent_ng_template_16_Template(rf, ctx) { if (rf & 1) {
    const _r16 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 20);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "stateI18nToken");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "span", 21);
    ɵngcc0.ɵɵlistener("click", function OrderListComponent_ng_template_16_Template_span_click_4_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r16); const item_r13 = restoredCtx.item; const clear_r14 = restoredCtx.clear; return clear_r14(item_r13); });
    ɵngcc0.ɵɵtext(5, "\u00D7");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r13 = ctx.item;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ɵngcc0.ɵɵpipeBind1(3, 3, item_r13)), "");
} }
const _c11 = function (a1) { return ["./", a1, "modify"]; };
const _c12 = function (a1) { return ["./", a1]; };
function OrderListComponent_ng_template_61_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 22);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "td", 22);
    ɵngcc0.ɵɵelement(3, "vdr-customer-label", 23);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "td", 22);
    ɵngcc0.ɵɵelement(5, "vdr-order-state-label", 24);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "td", 22);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "td", 22);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "timeAgo");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "td", 22);
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵpipe(14, "localeDate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(15, "td", 22);
    ɵngcc0.ɵɵtext(16);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(17, "td", 25);
    ɵngcc0.ɵɵelement(18, "vdr-table-row-action", 26);
    ɵngcc0.ɵɵpipe(19, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const order_r17 = ctx.item;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(order_r17.code);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("customer", order_r17.customer);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("state", order_r17.state);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(8, 9, order_r17.total, order_r17.currencyCode));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(11, 12, order_r17.updatedAt));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(14, 14, order_r17.orderPlacedAt, "medium"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.getShippingNames(order_r17));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(19, 17, "common.open"))("linkTo", order_r17.state === "Modifying" ? ɵngcc0.ɵɵpureFunction1(19, _c11, order_r17.id) : ɵngcc0.ɵɵpureFunction1(21, _c12, order_r17.id));
} }
function OrderPaymentCardComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("#", ctx_r0.payment.transactionId, "");
} }
function OrderPaymentCardComponent_ng_container_10_vdr_labeled_data_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 11);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const refund_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 2, "order.transaction-id"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", refund_r3.transactionId, " ");
} }
function OrderPaymentCardComponent_ng_container_10_vdr_labeled_data_17_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 11);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const refund_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 2, "order.refund-reason"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", refund_r3.reason, " ");
} }
function OrderPaymentCardComponent_ng_container_10_vdr_labeled_data_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 11);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "vdr-object-tree", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const refund_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 2, "order.refund-metadata"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("value", refund_r3.metadata);
} }
function OrderPaymentCardComponent_ng_container_10_div_19_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵelementStart(1, "button", 15);
    ɵngcc0.ɵɵlistener("click", function OrderPaymentCardComponent_ng_container_10_div_19_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r13); const refund_r3 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.settleRefund.emit(refund_r3); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 1, "order.settle-refund"), " ");
} }
function OrderPaymentCardComponent_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 1);
    ɵngcc0.ɵɵelement(2, "clr-icon", 9);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelement(5, "div", 10);
    ɵngcc0.ɵɵelement(6, "vdr-refund-state-label", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div", 5);
    ɵngcc0.ɵɵelementStart(8, "vdr-labeled-data", 11);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "localeDate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "vdr-labeled-data", 11);
    ɵngcc0.ɵɵpipe(13, "translate");
    ɵngcc0.ɵɵtext(14);
    ɵngcc0.ɵɵpipe(15, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(16, OrderPaymentCardComponent_ng_container_10_vdr_labeled_data_16_Template, 3, 4, "vdr-labeled-data", 12);
    ɵngcc0.ɵɵtemplate(17, OrderPaymentCardComponent_ng_container_10_vdr_labeled_data_17_Template, 3, 4, "vdr-labeled-data", 12);
    ɵngcc0.ɵɵtemplate(18, OrderPaymentCardComponent_ng_container_10_vdr_labeled_data_18_Template, 3, 4, "vdr-labeled-data", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(19, OrderPaymentCardComponent_ng_container_10_div_19_Template, 4, 3, "div", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const refund_r3 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(4, 11, "order.refund"), " #", refund_r3.id, " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("state", refund_r3.state);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(9, 13, "common.created-at"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(11, 15, refund_r3.createdAt, "medium"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(13, 18, "order.refund-total"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(15, 20, refund_r3.total, ctx_r1.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", refund_r3.transactionId);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", refund_r3.reason);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.refundHasMetadata(refund_r3));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", refund_r3.state === "Pending");
} }
function OrderPaymentCardComponent_div_11_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 15);
    ɵngcc0.ɵɵlistener("click", function OrderPaymentCardComponent_div_11_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(2); return ctx_r16.settlePayment.emit(ctx_r16.payment); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.settle-payment"), " ");
} }
function OrderPaymentCardComponent_div_11_ng_container_6_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "clr-icon", 23);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵpipe(5, "stateI18nToken");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const nextState_r18 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(3, 1, "order.transition-to-state", ɵngcc0.ɵɵpureFunction1(8, _c0, ɵngcc0.ɵɵpipeBind1(4, 4, ɵngcc0.ɵɵpipeBind1(5, 6, nextState_r18)))), " ");
} }
function OrderPaymentCardComponent_div_11_ng_container_6_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-icon", 24);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "order.cancel-payment"), " ");
} }
function OrderPaymentCardComponent_div_11_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    const _r24 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 20);
    ɵngcc0.ɵɵlistener("click", function OrderPaymentCardComponent_div_11_ng_container_6_Template_button_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r24); const nextState_r18 = restoredCtx.$implicit; const ctx_r23 = ɵngcc0.ɵɵnextContext(2); return ctx_r23.transitionPaymentState.emit({ payment: ctx_r23.payment, state: nextState_r18 }); });
    ɵngcc0.ɵɵtemplate(2, OrderPaymentCardComponent_div_11_ng_container_6_ng_container_2_Template, 6, 10, "ng-container", 21);
    ɵngcc0.ɵɵtemplate(3, OrderPaymentCardComponent_div_11_ng_container_6_ng_template_3_Template, 3, 3, "ng-template", null, 22, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const nextState_r18 = ctx.$implicit;
    const _r20 = ɵngcc0.ɵɵreference(4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", nextState_r18 !== "Cancelled")("ngIfElse", _r20);
} }
function OrderPaymentCardComponent_div_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵtemplate(1, OrderPaymentCardComponent_div_11_button_1_Template, 3, 3, "button", 16);
    ɵngcc0.ɵɵelementStart(2, "vdr-dropdown");
    ɵngcc0.ɵɵelementStart(3, "button", 17);
    ɵngcc0.ɵɵelement(4, "clr-icon", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "vdr-dropdown-menu", 19);
    ɵngcc0.ɵɵtemplate(6, OrderPaymentCardComponent_div_11_ng_container_6_Template, 5, 2, "ng-container", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.payment.nextStates.includes("Settled"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.nextOtherStates());
} }
function OrderProcessNodeComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵelement(1, "div", 4);
    ɵngcc0.ɵɵelement(2, "clr-icon", 5);
    ɵngcc0.ɵɵelementStart(3, "div", 6);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵpipe(6, "stateI18nToken");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 1, ɵngcc0.ɵɵpipeBind1(6, 3, ctx_r0.cancelledState)), " ");
} }
function OrderProcessGraphComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "vdr-order-process-node", 1);
    ɵngcc0.ɵɵlistener("mouseenter", function OrderProcessGraphComponent_ng_container_0_Template_vdr_order_process_node_mouseenter_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const state_r2 = restoredCtx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onMouseOver(state_r2.name); })("mouseleave", function OrderProcessGraphComponent_ng_container_0_Template_vdr_order_process_node_mouseleave_1_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onMouseOut(); });
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const state_r2 = ctx.$implicit;
    const i_r3 = ctx.index;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("node", state_r2)("index", i_r3)("active", ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r0.activeState$) === state_r2.name);
} }
function OrderProcessGraphComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "vdr-order-process-edge", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const edge_r7 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("from", edge_r7.from)("to", edge_r7.to)("index", edge_r7.index);
} }
function OrderTableComponent_ng_container_20_img_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 22);
    ɵngcc0.ɵɵpipe(1, "assetPreview");
} if (rf & 2) {
    const line_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("src", ɵngcc0.ɵɵpipeBind2(1, 1, line_r3.featuredAsset, "tiny"), ɵngcc0.ɵɵsanitizeUrl);
} }
function OrderTableComponent_ng_container_20_ng_container_26_vdr_dropdown_1_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 25);
    ɵngcc0.ɵɵelementStart(1, "a", 26);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 27);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "localeCurrency");
    ɵngcc0.ɵɵelementStart(6, "div", 7);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const discount_r11 = ctx.$implicit;
    const ctx_r10 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("routerLink", ctx_r10.getPromotionLink(discount_r11));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(discount_r11.description);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(5, 5, discount_r11.amountWithTax, ctx_r10.order.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(7, 8, "order.net-price"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(9, 10, discount_r11.amount, ctx_r10.order.currencyCode), " ");
} }
function OrderTableComponent_ng_container_20_ng_container_26_vdr_dropdown_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-dropdown");
    ɵngcc0.ɵɵelementStart(1, "div", 23);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "vdr-dropdown-menu");
    ɵngcc0.ɵɵtemplate(5, OrderTableComponent_ng_container_20_ng_container_26_vdr_dropdown_1_div_5_Template, 10, 13, "div", 24);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const discounts_r8 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 2, "order.promotions-applied"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", discounts_r8);
} }
function OrderTableComponent_ng_container_20_ng_container_26_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, OrderTableComponent_ng_container_20_ng_container_26_vdr_dropdown_1_Template, 6, 4, "vdr-dropdown", 21);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const discounts_r8 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", discounts_r8.length);
} }
function OrderTableComponent_ng_container_20_ng_container_27_tr_1_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 31);
    ɵngcc0.ɵɵelement(1, "vdr-custom-field-control", 32);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const field_r16 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("compact", true)("readonly", true)("customField", field_r16.config)("customFieldsFormGroup", field_r16.formGroup);
} }
function OrderTableComponent_ng_container_20_ng_container_27_tr_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵelementStart(1, "td", 28);
    ɵngcc0.ɵɵelementStart(2, "div", 29);
    ɵngcc0.ɵɵtemplate(3, OrderTableComponent_ng_container_20_ng_container_27_tr_1_div_3_Template, 2, 4, "div", 30);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const customFields_r13 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", customFields_r13);
} }
function OrderTableComponent_ng_container_20_ng_container_27_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, OrderTableComponent_ng_container_20_ng_container_27_tr_1_Template, 4, 1, "tr", 21);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const customFields_r13 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", customFields_r13.length);
} }
function OrderTableComponent_ng_container_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "tr", 11);
    ɵngcc0.ɵɵelementStart(2, "td", 12);
    ɵngcc0.ɵɵtemplate(3, OrderTableComponent_ng_container_20_img_3_Template, 2, 4, "img", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "td", 14);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "td", 15);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "td", 16);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵpipe(10, "localeCurrency");
    ɵngcc0.ɵɵelementStart(11, "div", 7);
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵpipe(14, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(15, "td", 17);
    ɵngcc0.ɵɵtext(16);
    ɵngcc0.ɵɵelement(17, "vdr-line-refunds", 18);
    ɵngcc0.ɵɵelement(18, "vdr-line-fulfillment", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(19, "td", 20);
    ɵngcc0.ɵɵtext(20);
    ɵngcc0.ɵɵpipe(21, "localeCurrency");
    ɵngcc0.ɵɵelementStart(22, "div", 7);
    ɵngcc0.ɵɵpipe(23, "translate");
    ɵngcc0.ɵɵtext(24);
    ɵngcc0.ɵɵpipe(25, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(26, OrderTableComponent_ng_container_20_ng_container_26_Template, 2, 1, "ng-container", 21);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(27, OrderTableComponent_ng_container_20_ng_container_27_Template, 2, 1, "ng-container", 21);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const line_r3 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("is-cancelled", line_r3.quantity === 0);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", line_r3.featuredAsset);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(line_r3.productVariant.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(line_r3.productVariant.sku);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(10, 18, line_r3.unitPriceWithTax, ctx_r0.order.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(12, 21, "order.net-price"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(14, 23, line_r3.unitPrice, ctx_r0.order.currencyCode), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", line_r3.quantity, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("line", line_r3)("payments", ctx_r0.order.payments);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("line", line_r3)("orderState", ctx_r0.order.state);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(21, 26, line_r3.linePriceWithTax, ctx_r0.order.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(23, 29, "order.net-price"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(25, 31, line_r3.linePrice, ctx_r0.order.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.getLineDiscounts(line_r3));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.customFieldsForLine[line_r3.id]);
} }
function OrderTableComponent_tr_21_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 33);
    ɵngcc0.ɵɵelementStart(1, "td", 34);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "td", 15);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "td", 35);
    ɵngcc0.ɵɵelementStart(6, "td", 20);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "localeCurrency");
    ɵngcc0.ɵɵelementStart(9, "div", 7);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵpipe(12, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const surcharge_r18 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(surcharge_r18.description);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(surcharge_r18.sku);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(8, 5, surcharge_r18.priceWithTax, ctx_r1.order.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(10, 8, "order.net-price"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(12, 10, surcharge_r18.price, ctx_r1.order.currencyCode), " ");
} }
function OrderTableComponent_ng_container_22_tr_1_vdr_chip_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-chip");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const couponCode_r22 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(couponCode_r22);
} }
function OrderTableComponent_ng_container_22_tr_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 37);
    ɵngcc0.ɵɵelementStart(1, "td", 38);
    ɵngcc0.ɵɵelementStart(2, "a", 39);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, OrderTableComponent_ng_container_22_tr_1_vdr_chip_4_Template, 2, 1, "vdr-chip", 21);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "td", 6);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "localeCurrency");
    ɵngcc0.ɵɵelementStart(8, "div", 7);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "localeCurrency");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const discount_r19 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r20 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("routerLink", ctx_r20.getPromotionLink(discount_r19));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(discount_r19.description);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r20.getCouponCodeForAdjustment(ctx_r20.order, discount_r19));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(7, 6, discount_r19.amountWithTax, ctx_r20.order.currencyCode), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(9, 9, "order.net-price"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(11, 11, discount_r19.amount, ctx_r20.order.currencyCode), " ");
} }
function OrderTableComponent_ng_container_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, OrderTableComponent_ng_container_22_tr_1_Template, 12, 14, "tr", 36);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const discount_r19 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", discount_r19.type !== "OTHER");
} }
function PaymentDetailComponent_vdr_labeled_data_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 0);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 2, "order.error-message"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.payment.errorMessage, "\n");
} }
function PaymentDetailComponent_vdr_labeled_data_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 0);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 2, "order.transaction-id"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.payment.transactionId, "\n");
} }
function PaymentStateLabelComponent_clr_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-icon", 2);
} }
function RefundStateLabelComponent_clr_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "clr-icon", 2);
} }
function SimpleItemListComponent_li_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 2);
    ɵngcc0.ɵɵelementStart(1, "div", 3);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "clr-icon", 4);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("title", item_r1.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(item_r1.quantity);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r1.name, " ");
} }
class AddManualPaymentDialogComponent {
    constructor(dataService) {
        this.dataService = dataService;
        this.form = new FormGroup({
            method: new FormControl('', Validators.required),
            transactionId: new FormControl('', Validators.required),
        });
    }
    ngOnInit() {
        this.paymentMethods$ = this.dataService.settings
            .getPaymentMethods(999)
            .mapSingle(data => data.paymentMethods.items);
    }
    submit() {
        const formValue = this.form.value;
        this.resolveWith({
            method: formValue.method,
            transactionId: formValue.transactionId,
        });
    }
    cancel() {
        this.resolveWith();
    }
}
AddManualPaymentDialogComponent.ɵfac = function AddManualPaymentDialogComponent_Factory(t) { return new (t || AddManualPaymentDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DataService)); };
AddManualPaymentDialogComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AddManualPaymentDialogComponent, selectors: [["vdr-add-manual-payment-dialog"]], decls: 10, vars: 11, consts: [["vdrDialogTitle", ""], [3, "formGroup"], ["for", "method", 3, "label"], ["bindLabel", "code", "autofocus", "", "bindValue", "code", "formControlName", "method", 3, "items", "addTag"], ["for", "transactionId", 3, "label"], ["id", "transactionId", "type", "text", "formControlName", "transactionId"], ["vdrDialogButtons", ""], ["type", "button", 1, "btn", 3, "click"], ["type", "submit", 1, "btn", "btn-primary", 3, "disabled", "click"]], template: function AddManualPaymentDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, AddManualPaymentDialogComponent_ng_template_0_Template, 2, 3, "ng-template", 0);
        ɵngcc0.ɵɵelementStart(1, "form", 1);
        ɵngcc0.ɵɵelementStart(2, "vdr-form-field", 2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵelement(4, "ng-select", 3);
        ɵngcc0.ɵɵpipe(5, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "vdr-form-field", 4);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelement(8, "input", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, AddManualPaymentDialogComponent_ng_template_9_Template, 7, 11, "ng-template", 6);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("formGroup", ctx.form);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(3, 5, "order.payment-method"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("items", ɵngcc0.ɵɵpipeBind1(5, 7, ctx.paymentMethods$))("addTag", true);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(7, 9, "order.transaction-id"));
    } }, directives: [ɵngcc1.DialogTitleDirective, ɵngcc2.ɵNgNoValidate, ɵngcc2.NgControlStatusGroup, ɵngcc2.FormGroupDirective, ɵngcc1.FormFieldComponent, ɵngcc3.NgSelectComponent, ɵngcc2.NgControlStatus, ɵngcc2.FormControlName, ɵngcc1.FormFieldControlDirective, ɵngcc2.DefaultValueAccessor, ɵngcc1.DialogButtonsDirective], pipes: [ɵngcc4.TranslatePipe, ɵngcc5.AsyncPipe, ɵngcc1.LocaleCurrencyPipe], styles: [".ng-select[_ngcontent-%COMP%]{min-width:100%}"], changeDetection: 0 });
AddManualPaymentDialogComponent.ctorParameters = () => [
    { type: DataService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AddManualPaymentDialogComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-add-manual-payment-dialog',
                template: "<ng-template vdrDialogTitle>{{ 'order.add-payment-to-order' | translate }}</ng-template>\r\n<form [formGroup]=\"form\">\r\n    <vdr-form-field [label]=\"'order.payment-method' | translate\" for=\"method\">\r\n        <ng-select\r\n            [items]=\"paymentMethods$ | async\"\r\n            bindLabel=\"code\"\r\n            autofocus\r\n            bindValue=\"code\"\r\n            [addTag]=\"true\"\r\n            formControlName=\"method\"\r\n        ></ng-select>\r\n    </vdr-form-field>\r\n    <vdr-form-field [label]=\"'order.transaction-id' | translate\" for=\"transactionId\">\r\n        <input id=\"transactionId\" type=\"text\" formControlName=\"transactionId\" />\r\n    </vdr-form-field>\r\n</form>\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button type=\"submit\" (click)=\"submit()\" class=\"btn btn-primary\" [disabled]=\"form.invalid || form.pristine\">\r\n        {{ 'order.add-payment' | translate }}  ({{ outstandingAmount | localeCurrency: currencyCode }})\r\n    </button>\r\n</ng-template>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".ng-select{min-width:100%}\n"]
            }]
    }], function () { return [{ type: ɵngcc1.DataService }]; }, null); })();

class CancelOrderDialogComponent {
    constructor(i18nService) {
        var _a;
        this.i18nService = i18nService;
        this.cancelAll = true;
        this.lineQuantities = {};
        this.reasons = (_a = getAppConfig().cancellationReasons) !== null && _a !== void 0 ? _a : [
            marker('order.cancel-reason-customer-request'),
            marker('order.cancel-reason-not-available'),
        ];
        this.reasons = this.reasons.map(r => this.i18nService.translate(r));
    }
    get selectionCount() {
        return Object.values(this.lineQuantities).reduce((sum, n) => sum + n, 0);
    }
    ngOnInit() {
        this.lineQuantities = this.order.lines.reduce((result, line) => {
            return Object.assign(Object.assign({}, result), { [line.id]: line.quantity });
        }, {});
    }
    radioChanged() {
        if (this.cancelAll) {
            for (const line of this.order.lines) {
                this.lineQuantities[line.id] = line.quantity;
            }
        }
        else {
            for (const line of this.order.lines) {
                this.lineQuantities[line.id] = 0;
            }
        }
    }
    checkIfAllSelected() {
        var _a;
        for (const [lineId, quantity] of Object.entries(this.lineQuantities)) {
            const quantityInOrder = (_a = this.order.lines.find(line => line.id === lineId)) === null || _a === void 0 ? void 0 : _a.quantity;
            if (quantityInOrder && quantity < quantityInOrder) {
                return;
            }
        }
        // If we got here, all of the selected quantities are equal to the order
        // line quantities, i.e. everything is selected.
        this.cancelAll = true;
    }
    select() {
        this.resolveWith({
            orderId: this.order.id,
            lines: this.getLineInputs(),
            reason: this.reason,
            cancelShipping: this.cancelAll,
        });
    }
    cancel() {
        this.resolveWith();
    }
    getLineInputs() {
        if (this.order.active) {
            return;
        }
        return Object.entries(this.lineQuantities)
            .map(([orderLineId, quantity]) => ({
            orderLineId,
            quantity,
        }))
            .filter(l => 0 < l.quantity);
    }
}
CancelOrderDialogComponent.ɵfac = function CancelOrderDialogComponent_Factory(t) { return new (t || CancelOrderDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.I18nService)); };
CancelOrderDialogComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CancelOrderDialogComponent, selectors: [["vdr-cancel-order-dialog"]], decls: 30, vars: 23, consts: [["vdrDialogTitle", ""], [1, "fulfillment-wrapper"], [1, "order-lines"], [1, "table"], ["class", "order-line", 3, "is-disabled", "is-cancelled", 4, "ngFor", "ngForOf"], [1, "cancellation-details"], [4, "ngIf"], [1, "clr-control-label"], ["bindLabel", "name", "autofocus", "", "bindValue", "id", 3, "items", "addTag", "ngModel", "ngModelChange"], ["vdrDialogButtons", ""], [1, "order-line"], [1, "align-middle", "thumb"], [3, "src"], [1, "align-middle", "name"], [1, "align-middle", "sku"], [1, "align-middle", "quantity"], [1, "align-middle", "fulfil"], ["type", "number", "min", "0", 3, "ngModel", "disabled", "max", "ngModelChange", "input", 4, "ngIf", "ngIfElse"], ["nonEditable", ""], ["type", "number", "min", "0", 3, "ngModel", "disabled", "max", "ngModelChange", "input"], ["type", "radio", "clrRadio", "", "name", "options", 3, "value", "ngModel", "ngModelChange"], ["type", "button", 1, "btn", 3, "click"], ["type", "submit", 1, "btn", "btn-primary", 3, "disabled", "click"]], template: function CancelOrderDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, CancelOrderDialogComponent_ng_template_0_Template, 2, 3, "ng-template", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "table", 3);
        ɵngcc0.ɵɵelementStart(4, "thead");
        ɵngcc0.ɵɵelementStart(5, "tr");
        ɵngcc0.ɵɵelement(6, "th");
        ɵngcc0.ɵɵelementStart(7, "th");
        ɵngcc0.ɵɵtext(8);
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "th");
        ɵngcc0.ɵɵtext(11);
        ɵngcc0.ɵɵpipe(12, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "th");
        ɵngcc0.ɵɵtext(14);
        ɵngcc0.ɵɵpipe(15, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "th");
        ɵngcc0.ɵɵtext(17);
        ɵngcc0.ɵɵpipe(18, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(19, "th");
        ɵngcc0.ɵɵtext(20);
        ɵngcc0.ɵɵpipe(21, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(22, CancelOrderDialogComponent_tr_22_Template, 17, 17, "tr", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(23, "div", 5);
        ɵngcc0.ɵɵtemplate(24, CancelOrderDialogComponent_ng_container_24_Template, 11, 10, "ng-container", 6);
        ɵngcc0.ɵɵelementStart(25, "label", 7);
        ɵngcc0.ɵɵtext(26);
        ɵngcc0.ɵɵpipe(27, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(28, "ng-select", 8);
        ɵngcc0.ɵɵlistener("ngModelChange", function CancelOrderDialogComponent_Template_ng_select_ngModelChange_28_listener($event) { return ctx.reason = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(29, CancelOrderDialogComponent_ng_template_29_Template, 6, 6, "ng-template", 9);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(9, 11, "order.product-name"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(12, 13, "order.product-sku"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(15, 15, "order.quantity"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(18, 17, "order.unit-price"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(21, 19, "order.cancel"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.order.lines);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.order.active !== true);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(27, 21, "order.cancellation-reason"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("items", ctx.reasons)("addTag", true)("ngModel", ctx.reason);
    } }, directives: [ɵngcc1.DialogTitleDirective, ɵngcc5.NgForOf, ɵngcc5.NgIf, ɵngcc6.ClrLabel, ɵngcc3.NgSelectComponent, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc1.DialogButtonsDirective, ɵngcc1.FormFieldControlDirective, ɵngcc2.MinValidator, ɵngcc2.NumberValueAccessor, ɵngcc2.MaxValidator, ɵngcc2.DefaultValueAccessor, ɵngcc6.ClrRadioWrapper, ɵngcc2.RadioControlValueAccessor, ɵngcc6.ClrRadio], pipes: [ɵngcc4.TranslatePipe, ɵngcc1.AssetPreviewPipe, ɵngcc1.LocaleCurrencyPipe], styles: ["[_nghost-%COMP%]{height:100%;display:flex;min-height:64vh}.fulfillment-wrapper[_ngcontent-%COMP%]{flex:1}@media screen and (min-width: 768px){.fulfillment-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:row}}@media screen and (min-width: 768px){.fulfillment-wrapper[_ngcontent-%COMP%]   .cancellation-details[_ngcontent-%COMP%]{margin-top:0;margin-left:24px;width:250px}}.fulfillment-wrapper[_ngcontent-%COMP%]   .order-lines[_ngcontent-%COMP%]{flex:1;overflow-y:auto}.fulfillment-wrapper[_ngcontent-%COMP%]   .order-lines[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{margin-top:0}.fulfillment-wrapper[_ngcontent-%COMP%]   tr.ignore[_ngcontent-%COMP%]{color:var(--color-grey-300)}.fulfillment-wrapper[_ngcontent-%COMP%]   .is-cancelled[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{text-decoration:line-through;background-color:var(--color-component-bg-200)}.fulfillment-wrapper[_ngcontent-%COMP%]   .is-disabled[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], .fulfillment-wrapper[_ngcontent-%COMP%]   .is-disabled[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background-color:var(--color-component-bg-200)}"], changeDetection: 0 });
CancelOrderDialogComponent.ctorParameters = () => [
    { type: I18nService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CancelOrderDialogComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-cancel-order-dialog',
                template: "<ng-template vdrDialogTitle>{{ 'order.cancel-order' | translate }}</ng-template>\r\n\r\n<div class=\"fulfillment-wrapper\">\r\n    <div class=\"order-lines\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>{{ 'order.product-name' | translate }}</th>\r\n                    <th>{{ 'order.product-sku' | translate }}</th>\r\n                    <th>{{ 'order.quantity' | translate }}</th>\r\n                    <th>{{ 'order.unit-price' | translate }}</th>\r\n                    <th>{{ 'order.cancel' | translate }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tr\r\n                *ngFor=\"let line of order.lines\"\r\n                class=\"order-line\"\r\n                [class.is-disabled]=\"cancelAll\"\r\n                [class.is-cancelled]=\"line.quantity === 0\"\r\n            >\r\n                <td class=\"align-middle thumb\">\r\n                    <img [src]=\"line.featuredAsset | assetPreview: 'tiny'\" />\r\n                </td>\r\n                <td class=\"align-middle name\">{{ line.productVariant.name }}</td>\r\n                <td class=\"align-middle sku\">{{ line.productVariant.sku }}</td>\r\n                <td class=\"align-middle quantity\">{{ line.quantity }}</td>\r\n                <td class=\"align-middle quantity\">\r\n                    {{ line.unitPriceWithTax | localeCurrency: order.currencyCode }}\r\n                </td>\r\n                <td class=\"align-middle fulfil\">\r\n                    <input\r\n                        *ngIf=\"line.quantity > 0 && !order.active; else nonEditable\"\r\n                        [(ngModel)]=\"lineQuantities[line.id]\"\r\n                        (input)=\"checkIfAllSelected()\"\r\n                        [disabled]=\"cancelAll\"\r\n                        type=\"number\"\r\n                        [max]=\"line.quantity\"\r\n                        min=\"0\"\r\n                    />\r\n                    <ng-template #nonEditable>{{ line.quantity }}</ng-template>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n    <div class=\"cancellation-details\">\r\n        <ng-container *ngIf=\"order.active !== true\">\r\n            <clr-radio-wrapper>\r\n                <input\r\n                    type=\"radio\"\r\n                    clrRadio\r\n                    [value]=\"true\"\r\n                    [(ngModel)]=\"cancelAll\"\r\n                    name=\"options\"\r\n                    (ngModelChange)=\"radioChanged()\"\r\n                />\r\n                <label>{{ 'order.cancel-entire-order' | translate }}</label>\r\n            </clr-radio-wrapper>\r\n            <clr-radio-wrapper>\r\n                <input\r\n                    type=\"radio\"\r\n                    clrRadio\r\n                    [value]=\"false\"\r\n                    [(ngModel)]=\"cancelAll\"\r\n                    name=\"options\"\r\n                    (ngModelChange)=\"radioChanged()\"\r\n                />\r\n                <label>{{ 'order.cancel-specified-items' | translate }}</label>\r\n            </clr-radio-wrapper>\r\n        </ng-container>\r\n        <label class=\"clr-control-label\">{{ 'order.cancellation-reason' | translate }}</label>\r\n        <ng-select\r\n            [items]=\"reasons\"\r\n            bindLabel=\"name\"\r\n            autofocus\r\n            bindValue=\"id\"\r\n            [addTag]=\"true\"\r\n            [(ngModel)]=\"reason\"\r\n        ></ng-select>\r\n    </div>\r\n</div>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button\r\n        type=\"submit\"\r\n        (click)=\"select()\"\r\n        [disabled]=\"!reason || (!order.active && selectionCount === 0)\"\r\n        class=\"btn btn-primary\"\r\n    >\r\n        <ng-container *ngIf=\"!order.active\">\r\n            {{ 'order.cancel-selected-items' | translate }}\r\n        </ng-container>\r\n        <ng-container *ngIf=\"order.active\">\r\n            {{ 'order.cancel-order' | translate }}\r\n        </ng-container>\r\n    </button>\r\n</ng-template>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{height:100%;display:flex;min-height:64vh}.fulfillment-wrapper{flex:1}@media screen and (min-width: 768px){.fulfillment-wrapper{display:flex;flex-direction:row}}@media screen and (min-width: 768px){.fulfillment-wrapper .cancellation-details{margin-top:0;margin-left:24px;width:250px}}.fulfillment-wrapper .order-lines{flex:1;overflow-y:auto}.fulfillment-wrapper .order-lines table{margin-top:0}.fulfillment-wrapper tr.ignore{color:var(--color-grey-300)}.fulfillment-wrapper .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}.fulfillment-wrapper .is-disabled td,.fulfillment-wrapper .is-disabled td input{background-color:var(--color-component-bg-200)}\n"]
            }]
    }], function () { return [{ type: ɵngcc1.I18nService }]; }, null); })();

class FulfillOrderDialogComponent {
    constructor(dataService, changeDetector) {
        this.dataService = dataService;
        this.changeDetector = changeDetector;
        this.fulfillmentHandlerControl = new FormControl();
        this.fulfillmentQuantities = {};
    }
    ngOnInit() {
        this.dataService.settings.getGlobalSettings().single$.subscribe(({ globalSettings }) => {
            this.fulfillmentQuantities = this.order.lines.reduce((result, line) => {
                const fulfillCount = this.getFulfillableCount(line, globalSettings.trackInventory);
                return Object.assign(Object.assign({}, result), { [line.id]: { fulfillCount, max: fulfillCount } });
            }, {});
            this.changeDetector.markForCheck();
        });
        this.dataService.shippingMethod
            .getShippingMethodOperations()
            .mapSingle(data => data.fulfillmentHandlers)
            .subscribe(handlers => {
            this.fulfillmentHandlerDef =
                handlers.find(h => { var _a, _b; return h.code === ((_b = (_a = this.order.shippingLines[0]) === null || _a === void 0 ? void 0 : _a.shippingMethod) === null || _b === void 0 ? void 0 : _b.fulfillmentHandlerCode); }) || handlers[0];
            this.fulfillmentHandler = configurableDefinitionToInstance(this.fulfillmentHandlerDef);
            this.fulfillmentHandlerControl.patchValue(this.fulfillmentHandler);
            this.changeDetector.markForCheck();
        });
    }
    getFulfillableCount(line, globalTrackInventory) {
        const { trackInventory, stockOnHand } = line.productVariant;
        const effectiveTracInventory = trackInventory === GlobalFlag.INHERIT ? globalTrackInventory : trackInventory === GlobalFlag.TRUE;
        const unfulfilledCount = this.getUnfulfilledCount(line);
        return effectiveTracInventory ? Math.min(unfulfilledCount, stockOnHand) : unfulfilledCount;
    }
    getUnfulfilledCount(line) {
        const fulfilled = line.items.reduce((sum, item) => sum + (item.fulfillment ? 1 : 0), 0);
        return line.quantity - fulfilled;
    }
    canSubmit() {
        const totalCount = Object.values(this.fulfillmentQuantities).reduce((total, { fulfillCount }) => total + fulfillCount, 0);
        const formIsValid = configurableOperationValueIsValid(this.fulfillmentHandlerDef, this.fulfillmentHandlerControl.value) && this.fulfillmentHandlerControl.valid;
        return formIsValid && 0 < totalCount;
    }
    select() {
        const lines = Object.entries(this.fulfillmentQuantities).map(([orderLineId, { fulfillCount }]) => ({
            orderLineId,
            quantity: fulfillCount,
        }));
        this.resolveWith({
            lines,
            handler: toConfigurableOperationInput(this.fulfillmentHandler, this.fulfillmentHandlerControl.value),
        });
    }
    cancel() {
        this.resolveWith();
    }
}
FulfillOrderDialogComponent.ɵfac = function FulfillOrderDialogComponent_Factory(t) { return new (t || FulfillOrderDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DataService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
FulfillOrderDialogComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FulfillOrderDialogComponent, selectors: [["vdr-fulfill-order-dialog"]], decls: 34, vars: 29, consts: [["vdrDialogTitle", ""], [1, "fulfillment-wrapper"], [1, "order-table"], [1, "table"], ["class", "order-line", 3, "ignore", 4, "ngFor", "ngForOf"], [1, "shipping-details"], [3, "address"], [3, "operationDefinition", "operation", "formControl", "removable"], ["vdrDialogButtons", ""], [1, "order-line"], [1, "align-middle", "thumb"], [3, "src", 4, "ngIf"], [1, "align-middle", "name"], [1, "align-middle", "sku"], [1, "align-middle", "quantity"], [1, "align-middle", "fulfil"], ["type", "number", "min", "0", 3, "disabled", "ngModel", "max", "ngModelChange", 4, "ngIf"], [3, "src"], ["type", "number", "min", "0", 3, "disabled", "ngModel", "max", "ngModelChange"], ["type", "button", 1, "btn", 3, "click"], ["type", "submit", 1, "btn", "btn-primary", 3, "disabled", "click"]], template: function FulfillOrderDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, FulfillOrderDialogComponent_ng_template_0_Template, 2, 3, "ng-template", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "table", 3);
        ɵngcc0.ɵɵelementStart(4, "thead");
        ɵngcc0.ɵɵelementStart(5, "tr");
        ɵngcc0.ɵɵelement(6, "th");
        ɵngcc0.ɵɵelementStart(7, "th");
        ɵngcc0.ɵɵtext(8);
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "th");
        ɵngcc0.ɵɵtext(11);
        ɵngcc0.ɵɵpipe(12, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "th");
        ɵngcc0.ɵɵtext(14);
        ɵngcc0.ɵɵpipe(15, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "th");
        ɵngcc0.ɵɵtext(17);
        ɵngcc0.ɵɵpipe(18, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(19, "th");
        ɵngcc0.ɵɵtext(20);
        ɵngcc0.ɵɵpipe(21, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(22, FulfillOrderDialogComponent_tr_22_Template, 13, 8, "tr", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(23, "div", 5);
        ɵngcc0.ɵɵelement(24, "vdr-formatted-address", 6);
        ɵngcc0.ɵɵelementStart(25, "h6");
        ɵngcc0.ɵɵtext(26);
        ɵngcc0.ɵɵpipe(27, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(28);
        ɵngcc0.ɵɵelementStart(29, "strong");
        ɵngcc0.ɵɵtext(30);
        ɵngcc0.ɵɵpipe(31, "localeCurrency");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(32, "vdr-configurable-input", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(33, FulfillOrderDialogComponent_ng_template_33_Template, 6, 7, "ng-template", 8);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(9, 14, "order.product-name"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(12, 16, "order.product-sku"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(15, 18, "order.unfulfilled"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(18, 20, "catalog.stock-on-hand"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(21, 22, "order.fulfill"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.order.lines);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("address", ctx.order.shippingAddress);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(27, 24, "order.shipping-method"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.order.shippingLines[0] == null ? null : ctx.order.shippingLines[0].shippingMethod == null ? null : ctx.order.shippingLines[0].shippingMethod.name, " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(31, 26, ctx.order.shipping, ctx.order.currencyCode));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("operationDefinition", ctx.fulfillmentHandlerDef)("operation", ctx.fulfillmentHandler)("formControl", ctx.fulfillmentHandlerControl)("removable", false);
    } }, directives: [ɵngcc1.DialogTitleDirective, ɵngcc5.NgForOf, ɵngcc1.FormattedAddressComponent, ɵngcc1.ConfigurableInputComponent, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc1.DialogButtonsDirective, ɵngcc5.NgIf, ɵngcc1.FormFieldControlDirective, ɵngcc2.MinValidator, ɵngcc2.NumberValueAccessor, ɵngcc2.MaxValidator, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgModel], pipes: [ɵngcc4.TranslatePipe, ɵngcc1.LocaleCurrencyPipe, ɵngcc1.AssetPreviewPipe], styles: ["[_nghost-%COMP%]{height:100%;display:flex;min-height:64vh}.fulfillment-wrapper[_ngcontent-%COMP%]{flex:1}@media screen and (min-width: 768px){.fulfillment-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:row}}.fulfillment-wrapper[_ngcontent-%COMP%]   .shipping-details[_ngcontent-%COMP%]{margin-top:24px}@media screen and (min-width: 768px){.fulfillment-wrapper[_ngcontent-%COMP%]   .shipping-details[_ngcontent-%COMP%]{margin-top:0;margin-left:24px;width:250px}}.fulfillment-wrapper[_ngcontent-%COMP%]   .shipping-details[_ngcontent-%COMP%]   clr-input-container[_ngcontent-%COMP%]{margin-top:24px}.fulfillment-wrapper[_ngcontent-%COMP%]   .order-table[_ngcontent-%COMP%]{flex:1;overflow-y:auto}.fulfillment-wrapper[_ngcontent-%COMP%]   .order-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{margin-top:0}.fulfillment-wrapper[_ngcontent-%COMP%]   tr.ignore[_ngcontent-%COMP%]{color:var(--color-grey-300)}"], changeDetection: 0 });
FulfillOrderDialogComponent.ctorParameters = () => [
    { type: DataService },
    { type: ChangeDetectorRef }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FulfillOrderDialogComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-fulfill-order-dialog',
                template: "<ng-template vdrDialogTitle>{{ 'order.fulfill-order' | translate }}</ng-template>\r\n\r\n<div class=\"fulfillment-wrapper\">\r\n    <div class=\"order-table\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>{{ 'order.product-name' | translate }}</th>\r\n                    <th>{{ 'order.product-sku' | translate }}</th>\r\n                    <th>{{ 'order.unfulfilled' | translate }}</th>\r\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\r\n                    <th>{{ 'order.fulfill' | translate }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tr\r\n                *ngFor=\"let line of order.lines\"\r\n                class=\"order-line\"\r\n                [class.ignore]=\"getUnfulfilledCount(line) === 0\"\r\n            >\r\n                <td class=\"align-middle thumb\">\r\n                    <img *ngIf=\"line.featuredAsset\" [src]=\"line.featuredAsset | assetPreview: 'tiny'\" />\r\n                </td>\r\n                <td class=\"align-middle name\">{{ line.productVariant.name }}</td>\r\n                <td class=\"align-middle sku\">{{ line.productVariant.sku }}</td>\r\n                <td class=\"align-middle quantity\">{{ getUnfulfilledCount(line) }}</td>\r\n                <td class=\"align-middle quantity\">{{ line.productVariant.stockOnHand }}</td>\r\n                <td class=\"align-middle fulfil\">\r\n                    <input\r\n                        *ngIf=\"fulfillmentQuantities[line.id]\"\r\n                        [disabled]=\"getUnfulfilledCount(line) === 0\"\r\n                        [(ngModel)]=\"fulfillmentQuantities[line.id].fulfillCount\"\r\n                        type=\"number\"\r\n                        [max]=\"fulfillmentQuantities[line.id].max\"\r\n                        min=\"0\"\r\n                    />\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n    <div class=\"shipping-details\">\r\n        <vdr-formatted-address [address]=\"order.shippingAddress\"></vdr-formatted-address>\r\n        <h6>{{ 'order.shipping-method' | translate }}</h6>\r\n        {{ order.shippingLines[0]?.shippingMethod?.name }}\r\n        <strong>{{ order.shipping | localeCurrency: order.currencyCode }}</strong>\r\n        <vdr-configurable-input\r\n            [operationDefinition]=\"fulfillmentHandlerDef\"\r\n            [operation]=\"fulfillmentHandler\"\r\n            [formControl]=\"fulfillmentHandlerControl\"\r\n            [removable]=\"false\"\r\n        ></vdr-configurable-input>\r\n    </div>\r\n</div>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button type=\"submit\" (click)=\"select()\" [disabled]=\"!canSubmit()\" class=\"btn btn-primary\">\r\n        {{ 'order.create-fulfillment' | translate }}\r\n    </button>\r\n</ng-template>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{height:100%;display:flex;min-height:64vh}.fulfillment-wrapper{flex:1}@media screen and (min-width: 768px){.fulfillment-wrapper{display:flex;flex-direction:row}}.fulfillment-wrapper .shipping-details{margin-top:24px}@media screen and (min-width: 768px){.fulfillment-wrapper .shipping-details{margin-top:0;margin-left:24px;width:250px}}.fulfillment-wrapper .shipping-details clr-input-container{margin-top:24px}.fulfillment-wrapper .order-table{flex:1;overflow-y:auto}.fulfillment-wrapper .order-table table{margin-top:0}.fulfillment-wrapper tr.ignore{color:var(--color-grey-300)}\n"]
            }]
    }], function () { return [{ type: ɵngcc1.DataService }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();

class FulfillmentCardComponent {
    constructor() {
        this.transitionState = new EventEmitter();
    }
    nextSuggestedState() {
        var _a;
        if (!this.fulfillment) {
            return;
        }
        const { nextStates } = this.fulfillment;
        const namedStateOrDefault = (targetState) => nextStates.includes(targetState) ? targetState : nextStates[0];
        switch ((_a = this.fulfillment) === null || _a === void 0 ? void 0 : _a.state) {
            case 'Pending':
                return namedStateOrDefault('Shipped');
            case 'Shipped':
                return namedStateOrDefault('Delivered');
            default:
                return nextStates.find(s => s !== 'Cancelled');
        }
    }
    nextOtherStates() {
        if (!this.fulfillment) {
            return [];
        }
        const suggested = this.nextSuggestedState();
        return this.fulfillment.nextStates.filter(s => s !== suggested);
    }
}
FulfillmentCardComponent.ɵfac = function FulfillmentCardComponent_Factory(t) { return new (t || FulfillmentCardComponent)(); };
FulfillmentCardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FulfillmentCardComponent, selectors: [["vdr-fulfillment-card"]], inputs: { fulfillment: "fulfillment", order: "order" }, outputs: { transitionState: "transitionState" }, decls: 10, vars: 6, consts: [[1, "card"], [1, "card-header", "fulfillment-header"], [1, "fulfillment-state"], [3, "state"], [1, "card-block"], [3, "fulfillmentId", "order", 4, "ngIf"], ["class", "card-footer", 4, "ngIf"], [3, "fulfillmentId", "order"], [1, "card-footer"], [4, "ngIf"], ["vdrDropdownTrigger", "", 1, "icon-button"], ["shape", "ellipsis-vertical"], ["vdrPosition", "bottom-right"], [4, "ngFor", "ngForOf"], [1, "btn", "btn-sm", "btn-primary", 3, "click"], ["type", "button", "vdrDropdownItem", "", 1, "btn", 3, "click"], [4, "ngIf", "ngIfElse"], ["cancel", ""], ["shape", "step-forward-2"], ["shape", "error-standard", 1, "is-error"]], template: function FulfillmentCardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div");
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 2);
        ɵngcc0.ɵɵelement(6, "vdr-fulfillment-state-label", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 4);
        ɵngcc0.ɵɵtemplate(8, FulfillmentCardComponent_vdr_fulfillment_detail_8_Template, 1, 2, "vdr-fulfillment-detail", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, FulfillmentCardComponent_div_9_Template, 7, 2, "div", 6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 4, "order.fulfillment"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("state", ctx.fulfillment == null ? null : ctx.fulfillment.state);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.fulfillment);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.fulfillment == null ? null : ctx.fulfillment.nextStates.length);
    } }, directives: function () { return [FulfillmentStateLabelComponent, ɵngcc5.NgIf, FulfillmentDetailComponent, ɵngcc1.DropdownComponent, ɵngcc1.DropdownTriggerDirective, ɵngcc6.ClrIconCustomTag, ɵngcc1.DropdownMenuComponent, ɵngcc5.NgForOf, ɵngcc1.DropdownItemDirective]; }, pipes: function () { return [ɵngcc4.TranslatePipe, ɵngcc1.StateI18nTokenPipe]; }, styles: [".fulfillment-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.card-footer[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:flex-end}"], changeDetection: 0 });
FulfillmentCardComponent.propDecorators = {
    fulfillment: [{ type: Input }],
    order: [{ type: Input }],
    transitionState: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FulfillmentCardComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-fulfillment-card',
                template: "<div class=\"card\">\r\n    <div class=\"card-header fulfillment-header\">\r\n        <div>{{ 'order.fulfillment' | translate }}</div>\r\n        <div class=\"fulfillment-state\">\r\n            <vdr-fulfillment-state-label [state]=\"fulfillment?.state\"></vdr-fulfillment-state-label>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-block\">\r\n        <vdr-fulfillment-detail\r\n            *ngIf=\"!!fulfillment\"\r\n            [fulfillmentId]=\"fulfillment?.id\"\r\n            [order]=\"order\"\r\n        ></vdr-fulfillment-detail>\r\n    </div>\r\n    <div class=\"card-footer\" *ngIf=\"fulfillment?.nextStates.length\">\r\n        <ng-container *ngIf=\"nextSuggestedState() as suggestedState\">\r\n            <button class=\"btn btn-sm btn-primary\" (click)=\"transitionState.emit(suggestedState)\">\r\n                {{ 'order.set-fulfillment-state' | translate: { state: (suggestedState | stateI18nToken | translate) } }}\r\n            </button>\r\n        </ng-container>\r\n        <vdr-dropdown>\r\n            <button class=\"icon-button\" vdrDropdownTrigger>\r\n                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n            </button>\r\n            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                <ng-container *ngFor=\"let nextState of nextOtherStates()\">\r\n                    <button\r\n                        type=\"button\"\r\n                        class=\"btn\"\r\n                        vdrDropdownItem\r\n                        (click)=\"transitionState.emit(nextState)\"\r\n                    >\r\n                        <ng-container *ngIf=\"nextState !== 'Cancelled'; else cancel\">\r\n                            <clr-icon shape=\"step-forward-2\"></clr-icon>\r\n                            {{ 'order.transition-to-state' | translate: { state: (nextState | stateI18nToken | translate) } }}\r\n                        </ng-container>\r\n                        <ng-template #cancel>\r\n                            <clr-icon shape=\"error-standard\" class=\"is-error\"></clr-icon>\r\n                            {{ 'order.cancel-fulfillment' | translate }}\r\n                        </ng-template>\r\n                    </button>\r\n                </ng-container>\r\n            </vdr-dropdown-menu>\r\n        </vdr-dropdown>\r\n    </div>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".fulfillment-header{display:flex;justify-content:space-between;align-items:center}.card-footer{display:flex;align-items:center;justify-content:flex-end}\n"]
            }]
    }], function () { return []; }, { transitionState: [{
            type: Output
        }], fulfillment: [{
            type: Input
        }], order: [{
            type: Input
        }] }); })();

class FulfillmentDetailComponent {
    constructor(serverConfigService) {
        this.serverConfigService = serverConfigService;
        this.customFieldConfig = [];
        this.customFieldFormGroup = new FormGroup({});
    }
    ngOnInit() {
        this.customFieldConfig = this.serverConfigService.getCustomFieldsFor('Fulfillment');
    }
    ngOnChanges(changes) {
        this.buildCustomFieldsFormGroup();
    }
    get fulfillment() {
        return this.order.fulfillments && this.order.fulfillments.find(f => f.id === this.fulfillmentId);
    }
    get items() {
        var _a;
        const itemMap = new Map();
        const fulfillmentItemIds = (_a = this.fulfillment) === null || _a === void 0 ? void 0 : _a.orderItems.map(i => i.id);
        for (const line of this.order.lines) {
            for (const item of line.items) {
                if (fulfillmentItemIds === null || fulfillmentItemIds === void 0 ? void 0 : fulfillmentItemIds.includes(item.id)) {
                    const count = itemMap.get(line.productVariant.name);
                    if (count != null) {
                        itemMap.set(line.productVariant.name, count + 1);
                    }
                    else {
                        itemMap.set(line.productVariant.name, 1);
                    }
                }
            }
        }
        return Array.from(itemMap.entries()).map(([name, quantity]) => ({ name, quantity }));
    }
    buildCustomFieldsFormGroup() {
        const customFields = this.fulfillment.customFields;
        for (const fieldDef of this.serverConfigService.getCustomFieldsFor('Fulfillment')) {
            this.customFieldFormGroup.addControl(fieldDef.name, new FormControl(customFields[fieldDef.name]));
        }
    }
    customFieldIsObject(customField) {
        return Array.isArray(customField) || isObject(customField);
    }
}
FulfillmentDetailComponent.ɵfac = function FulfillmentDetailComponent_Factory(t) { return new (t || FulfillmentDetailComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ServerConfigService)); };
FulfillmentDetailComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FulfillmentDetailComponent, selectors: [["vdr-fulfillment-detail"]], inputs: { fulfillmentId: "fulfillmentId", order: "order" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 12, vars: 17, consts: [[3, "label"], [3, "label", 4, "ngIf"], [3, "items"], [4, "ngFor", "ngForOf"], [3, "readonly", "compact", "customField", "customFieldsFormGroup", 4, "ngIf"], [3, "readonly", "compact", "customField", "customFieldsFormGroup"]], template: function FulfillmentDetailComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 0);
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "localeDate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "vdr-labeled-data", 0);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, FulfillmentDetailComponent_vdr_labeled_data_7_Template, 3, 4, "vdr-labeled-data", 1);
        ɵngcc0.ɵɵelementStart(8, "vdr-labeled-data", 0);
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵelement(10, "vdr-simple-item-list", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(11, FulfillmentDetailComponent_ng_container_11_Template, 2, 1, "ng-container", 3);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 8, "common.created-at"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(3, 10, ctx.fulfillment == null ? null : ctx.fulfillment.createdAt, "medium"), "\n");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(5, 13, "order.fulfillment-method"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.fulfillment == null ? null : ctx.fulfillment.method, "\n");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.fulfillment == null ? null : ctx.fulfillment.trackingCode);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(9, 15, "order.contents"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("items", ctx.items);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.customFieldConfig);
    } }, directives: function () { return [ɵngcc1.LabeledDataComponent, ɵngcc5.NgIf, SimpleItemListComponent, ɵngcc5.NgForOf, ɵngcc1.CustomFieldControlComponent]; }, pipes: function () { return [ɵngcc4.TranslatePipe, ɵngcc1.LocaleDatePipe]; }, styles: [""], changeDetection: 0 });
FulfillmentDetailComponent.ctorParameters = () => [
    { type: ServerConfigService }
];
FulfillmentDetailComponent.propDecorators = {
    fulfillmentId: [{ type: Input }],
    order: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FulfillmentDetailComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-fulfillment-detail',
                template: "<vdr-labeled-data [label]=\"'common.created-at' | translate\">\r\n    {{ fulfillment?.createdAt | localeDate: 'medium' }}\r\n</vdr-labeled-data>\r\n<vdr-labeled-data [label]=\"'order.fulfillment-method' | translate\">\r\n    {{ fulfillment?.method }}\r\n</vdr-labeled-data>\r\n<vdr-labeled-data *ngIf=\"fulfillment?.trackingCode\" [label]=\"'order.tracking-code' | translate\">\r\n    {{ fulfillment?.trackingCode }}\r\n</vdr-labeled-data>\r\n<vdr-labeled-data [label]=\"'order.contents' | translate\">\r\n    <vdr-simple-item-list [items]=\"items\"></vdr-simple-item-list>\r\n</vdr-labeled-data>\r\n<ng-container *ngFor=\"let customField of customFieldConfig\">\r\n    <vdr-custom-field-control\r\n        *ngIf=\"customFieldFormGroup.get(customField.name)\"\r\n        [readonly]=\"true\"\r\n        [compact]=\"true\"\r\n        [customField]=\"customField\"\r\n        [customFieldsFormGroup]=\"customFieldFormGroup\"\r\n    ></vdr-custom-field-control>\r\n</ng-container>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc1.ServerConfigService }]; }, { fulfillmentId: [{
            type: Input
        }], order: [{
            type: Input
        }] }); })();

class FulfillmentStateLabelComponent {
    get chipColorType() {
        switch (this.state) {
            case 'Pending':
            case 'Shipped':
                return 'warning';
            case 'Delivered':
                return 'success';
            case 'Cancelled':
                return 'error';
        }
    }
}
FulfillmentStateLabelComponent.ɵfac = function FulfillmentStateLabelComponent_Factory(t) { return new (t || FulfillmentStateLabelComponent)(); };
FulfillmentStateLabelComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FulfillmentStateLabelComponent, selectors: [["vdr-fulfillment-state-label"]], inputs: { state: "state" }, decls: 6, vars: 10, consts: [[3, "title", "colorType"], ["shape", "check-circle", 4, "ngIf"], ["shape", "check-circle"]], template: function FulfillmentStateLabelComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "vdr-chip", 0);
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵtemplate(2, FulfillmentStateLabelComponent_clr_icon_2_Template, 1, 0, "clr-icon", 1);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵpipe(5, "stateI18nToken");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(1, 4, "order.payment-state"))("colorType", ctx.chipColorType);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.state === "Delivered");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 6, ɵngcc0.ɵɵpipeBind1(5, 8, ctx.state)), "\n");
    } }, directives: [ɵngcc1.ChipComponent, ɵngcc5.NgIf, ɵngcc6.ClrIconCustomTag], pipes: [ɵngcc4.TranslatePipe, ɵngcc1.StateI18nTokenPipe], styles: ["[_nghost-%COMP%]{font-size:14px}"], changeDetection: 0 });
FulfillmentStateLabelComponent.propDecorators = {
    state: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FulfillmentStateLabelComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-fulfillment-state-label',
                template: "<vdr-chip [title]=\"'order.payment-state' | translate\" [colorType]=\"chipColorType\">\r\n    <clr-icon shape=\"check-circle\" *ngIf=\"state === 'Delivered'\"></clr-icon>\r\n    {{ state | stateI18nToken | translate }}\r\n</vdr-chip>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{font-size:14px}\n"]
            }]
    }], null, { state: [{
            type: Input
        }] }); })();

class LineFulfillmentComponent {
    constructor() {
        this.fulfilledCount = 0;
        this.fulfillments = [];
    }
    ngOnChanges(changes) {
        if (this.line) {
            this.fulfilledCount = this.getDeliveredCount(this.line);
            this.fulfillmentStatus = this.getFulfillmentStatus(this.fulfilledCount, this.line.items.length);
            this.fulfillments = this.getFulfillments(this.line);
        }
    }
    /**
     * Returns the number of items in an OrderLine which are fulfilled.
     */
    getDeliveredCount(line) {
        return line.items.reduce((sum, item) => sum + (item.fulfillment ? 1 : 0), 0);
    }
    getFulfillmentStatus(fulfilledCount, lineQuantity) {
        if (fulfilledCount === lineQuantity) {
            return 'full';
        }
        if (0 < fulfilledCount && fulfilledCount < lineQuantity) {
            return 'partial';
        }
        return 'none';
    }
    getFulfillments(line) {
        const counts = {};
        for (const item of line.items) {
            if (item.fulfillment) {
                if (counts[item.fulfillment.id] === undefined) {
                    counts[item.fulfillment.id] = 1;
                }
                else {
                    counts[item.fulfillment.id]++;
                }
            }
        }
        const all = line.items.reduce((fulfillments, item) => {
            return item.fulfillment ? [...fulfillments, item.fulfillment] : fulfillments;
        }, []);
        return Object.entries(counts).map(([id, count]) => {
            return {
                count,
                // tslint:disable-next-line:no-non-null-assertion
                fulfillment: all.find(f => f.id === id),
            };
        });
    }
}
LineFulfillmentComponent.ɵfac = function LineFulfillmentComponent_Factory(t) { return new (t || LineFulfillmentComponent)(); };
LineFulfillmentComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LineFulfillmentComponent, selectors: [["vdr-line-fulfillment"]], inputs: { line: "line", orderState: "orderState" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [["class", "search-settings-menu", 4, "ngIf"], [1, "search-settings-menu"], ["type", "button", "vdrDropdownTrigger", "", 1, "icon-button"], ["class", "item-fulfilled", "shape", "check-circle", 4, "ngIf"], ["class", "item-partially-fulfilled", "shape", "check-circle", 4, "ngIf"], ["class", "item-not-fulfilled", "shape", "exclamation-circle", 4, "ngIf"], ["vdrPosition", "bottom-right"], ["class", "dropdown-header", 4, "ngIf"], ["class", "fulfillment-detail", 4, "ngFor", "ngForOf"], ["shape", "check-circle", 1, "item-fulfilled"], ["shape", "check-circle", 1, "item-partially-fulfilled"], ["shape", "exclamation-circle", 1, "item-not-fulfilled"], [1, "dropdown-header"], [1, "fulfillment-detail"], [1, "fulfillment-title"], [3, "label"], [3, "label", 4, "ngIf"]], template: function LineFulfillmentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, LineFulfillmentComponent_vdr_dropdown_0_Template, 10, 7, "vdr-dropdown", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.fulfilledCount || ctx.orderState === "PartiallyDelivered");
    } }, directives: [ɵngcc5.NgIf, ɵngcc1.DropdownComponent, ɵngcc1.DropdownTriggerDirective, ɵngcc1.DropdownMenuComponent, ɵngcc5.NgForOf, ɵngcc6.ClrIconCustomTag, ɵngcc6.ClrLabel, ɵngcc1.LabeledDataComponent], pipes: [ɵngcc4.TranslatePipe, ɵngcc1.LocaleDatePipe], styles: [".item-fulfilled[_ngcontent-%COMP%]{color:var(--color-success-500)}.item-partially-fulfilled[_ngcontent-%COMP%]{color:var(--color-warning-500)}.item-not-fulfilled[_ngcontent-%COMP%]{color:var(--color-error-500)}.fulfillment-detail[_ngcontent-%COMP%]{margin:6px 12px}.fulfillment-detail[_ngcontent-%COMP%]:not(:last-of-type){border-bottom:1px dashed var(--color-component-border-200)}"], changeDetection: 0 });
LineFulfillmentComponent.propDecorators = {
    line: [{ type: Input }],
    orderState: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LineFulfillmentComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-line-fulfillment',
                template: "<vdr-dropdown class=\"search-settings-menu\" *ngIf=\"fulfilledCount || orderState === 'PartiallyDelivered'\">\r\n    <button type=\"button\" class=\"icon-button\" vdrDropdownTrigger>\r\n        <clr-icon *ngIf=\"fulfillmentStatus === 'full'\" class=\"item-fulfilled\" shape=\"check-circle\"></clr-icon>\r\n        <clr-icon\r\n            *ngIf=\"fulfillmentStatus === 'partial'\"\r\n            class=\"item-partially-fulfilled\"\r\n            shape=\"check-circle\"\r\n        ></clr-icon>\r\n        <clr-icon\r\n            *ngIf=\"fulfillmentStatus === 'none'\"\r\n            class=\"item-not-fulfilled\"\r\n            shape=\"exclamation-circle\"\r\n        ></clr-icon>\r\n    </button>\r\n    <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n        <label class=\"dropdown-header\" *ngIf=\"fulfillmentStatus === 'full'\">\r\n            {{ 'order.line-fulfillment-all' | translate }}\r\n        </label>\r\n        <label class=\"dropdown-header\" *ngIf=\"fulfillmentStatus === 'partial'\">\r\n            {{\r\n                'order.line-fulfillment-partial' | translate: { total: line.quantity, count: fulfilledCount }\r\n            }}\r\n        </label>\r\n        <label class=\"dropdown-header\" *ngIf=\"fulfillmentStatus === 'none'\">\r\n            {{ 'order.line-fulfillment-none' | translate }}\r\n        </label>\r\n        <div class=\"fulfillment-detail\" *ngFor=\"let item of fulfillments\">\r\n            <div class=\"fulfillment-title\">\r\n                {{ 'order.fulfillment' | translate }} #{{ item.fulfillment.id }} ({{\r\n                    'order.item-count' | translate: { count: item.count }\r\n                }})\r\n            </div>\r\n            <vdr-labeled-data [label]=\"'common.created-at' | translate\">\r\n                {{ item.fulfillment.createdAt | localeDate: 'medium' }}\r\n            </vdr-labeled-data>\r\n            <vdr-labeled-data [label]=\"'order.fulfillment-method' | translate\">\r\n                {{ item.fulfillment.method }}\r\n            </vdr-labeled-data>\r\n            <vdr-labeled-data\r\n                *ngIf=\"item.fulfillment.trackingCode\"\r\n                [label]=\"'order.tracking-code' | translate\"\r\n            >\r\n                {{ item.fulfillment.trackingCode }}\r\n            </vdr-labeled-data>\r\n        </div>\r\n    </vdr-dropdown-menu>\r\n</vdr-dropdown>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".item-fulfilled{color:var(--color-success-500)}.item-partially-fulfilled{color:var(--color-warning-500)}.item-not-fulfilled{color:var(--color-error-500)}.fulfillment-detail{margin:6px 12px}.fulfillment-detail:not(:last-of-type){border-bottom:1px dashed var(--color-component-border-200)}\n"]
            }]
    }], function () { return []; }, { line: [{
            type: Input
        }], orderState: [{
            type: Input
        }] }); })();

class LineRefundsComponent {
    getRefundedCount() {
        var _a, _b;
        const refunds = (_b = (_a = this.payments) === null || _a === void 0 ? void 0 : _a.reduce((all, payment) => [...all, ...payment.refunds], [])) !== null && _b !== void 0 ? _b : [];
        return this.line.items.filter(i => {
            if (i.refundId === null && !i.cancelled) {
                return false;
            }
            if (i.refundId) {
                const refund = refunds.find(r => r.id === i.refundId);
                if ((refund === null || refund === void 0 ? void 0 : refund.state) === 'Failed') {
                    return false;
                }
                else {
                    return true;
                }
            }
            return false;
        }).length;
    }
}
LineRefundsComponent.ɵfac = function LineRefundsComponent_Factory(t) { return new (t || LineRefundsComponent)(); };
LineRefundsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LineRefundsComponent, selectors: [["vdr-line-refunds"]], inputs: { line: "line", payments: "payments" }, decls: 1, vars: 1, consts: [[3, "title", 4, "ngIf"], [3, "title"], ["shape", "redo", "dir", "down", 1, "is-solid"]], template: function LineRefundsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, LineRefundsComponent_span_0_Template, 3, 6, "span", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.getRefundedCount());
    } }, directives: [ɵngcc5.NgIf, ɵngcc6.ClrIconCustomTag, ɵngcc7.Dir], pipes: [ɵngcc4.TranslatePipe], styles: ["[_nghost-%COMP%]{color:var(--color-error-500)}"], changeDetection: 0 });
LineRefundsComponent.propDecorators = {
    line: [{ type: Input }],
    payments: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LineRefundsComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-line-refunds',
                template: "<span *ngIf=\"getRefundedCount()\" [title]=\"'order.refunded-count' | translate: { count: getRefundedCount() }\">\r\n    <clr-icon shape=\"redo\" class=\"is-solid\" dir=\"down\"></clr-icon>\r\n</span>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{color:var(--color-error-500)}\n"]
            }]
    }], null, { line: [{
            type: Input
        }], payments: [{
            type: Input
        }] }); })();

class ModificationDetailComponent {
    constructor() {
        this.addedItems = new Map();
        this.removedItems = new Map();
    }
    ngOnChanges() {
        const { added, removed } = this.getModifiedLines();
        this.addedItems = added;
        this.removedItems = removed;
    }
    getSurcharge(id) {
        return this.order.surcharges.find(m => m.id === id);
    }
    getAddedItems() {
        return [...this.addedItems.entries()].map(([line, count]) => {
            return { name: line.productVariant.name, quantity: count };
        });
    }
    getRemovedItems() {
        return [...this.removedItems.entries()].map(([line, count]) => {
            return { name: line.productVariant.name, quantity: count };
        });
    }
    getModifiedLines() {
        var _a, _b;
        const added = new Map();
        const removed = new Map();
        for (const _item of this.modification.orderItems || []) {
            const result = this.getOrderLineAndItem(_item.id);
            if (result) {
                const { line, item } = result;
                if (item.cancelled) {
                    const count = (_a = removed.get(line)) !== null && _a !== void 0 ? _a : 0;
                    removed.set(line, count + 1);
                }
                else {
                    const count = (_b = added.get(line)) !== null && _b !== void 0 ? _b : 0;
                    added.set(line, count + 1);
                }
            }
        }
        return { added, removed };
    }
    getOrderLineAndItem(itemId) {
        for (const line of this.order.lines) {
            const item = line.items.find(i => i.id === itemId);
            if (item) {
                return { line, item };
            }
        }
    }
}
ModificationDetailComponent.ɵfac = function ModificationDetailComponent_Factory(t) { return new (t || ModificationDetailComponent)(); };
ModificationDetailComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ModificationDetailComponent, selectors: [["vdr-modification-detail"]], inputs: { order: "order", modification: "modification" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 7, vars: 8, consts: [[3, "label"], [3, "label", 4, "ngIf"], [3, "label", 4, "ngFor", "ngForOf"], [3, "items"]], template: function ModificationDetailComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 0);
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, ModificationDetailComponent_vdr_labeled_data_3_Template, 3, 4, "vdr-labeled-data", 1);
        ɵngcc0.ɵɵtemplate(4, ModificationDetailComponent_vdr_labeled_data_4_Template, 4, 8, "vdr-labeled-data", 2);
        ɵngcc0.ɵɵtemplate(5, ModificationDetailComponent_vdr_labeled_data_5_Template, 3, 4, "vdr-labeled-data", 1);
        ɵngcc0.ɵɵtemplate(6, ModificationDetailComponent_vdr_labeled_data_6_Template, 3, 4, "vdr-labeled-data", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 6, "common.ID"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.modification.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.modification.note);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.modification.surcharges);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.getAddedItems().length);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.getRemovedItems().length);
    } }, directives: function () { return [ɵngcc1.LabeledDataComponent, ɵngcc5.NgIf, ɵngcc5.NgForOf, SimpleItemListComponent]; }, pipes: function () { return [ɵngcc4.TranslatePipe, ɵngcc1.LocaleCurrencyPipe]; }, styles: [""], changeDetection: 0 });
ModificationDetailComponent.propDecorators = {
    order: [{ type: Input }],
    modification: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModificationDetailComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-modification-detail',
                template: "<vdr-labeled-data [label]=\"'common.ID' | translate\">{{ modification.id }}</vdr-labeled-data>\r\n<vdr-labeled-data *ngIf=\"modification.note\" [label]=\"'order.note' | translate\">{{\r\n    modification.note\r\n}}</vdr-labeled-data>\r\n<vdr-labeled-data *ngFor=\"let surcharge of modification.surcharges\" [label]=\"'order.surcharges' | translate\">\r\n    {{ getSurcharge(surcharge.id)?.description }}\r\n    {{ getSurcharge(surcharge.id)?.priceWithTax | localeCurrency: order.currencyCode }}</vdr-labeled-data\r\n>\r\n<vdr-labeled-data *ngIf=\"getAddedItems().length\" [label]=\"'order.added-items' | translate\">\r\n    <vdr-simple-item-list [items]=\"getAddedItems()\"></vdr-simple-item-list>\r\n</vdr-labeled-data>\r\n<vdr-labeled-data *ngIf=\"getRemovedItems().length\" [label]=\"'order.removed-items' | translate\">\r\n    <vdr-simple-item-list [items]=\"getRemovedItems()\"></vdr-simple-item-list>\r\n</vdr-labeled-data>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], function () { return []; }, { order: [{
            type: Input
        }], modification: [{
            type: Input
        }] }); })();

class OrderCustomFieldsCardComponent {
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        this.customFieldsConfig = [];
        this.customFieldValues = {};
        this.updateClick = new EventEmitter();
        this.editable = false;
    }
    ngOnInit() {
        this.customFieldForm = this.formBuilder.group({});
        for (const field of this.customFieldsConfig) {
            this.customFieldForm.addControl(field.name, this.formBuilder.control(this.customFieldValues[field.name]));
        }
    }
    onUpdateClick() {
        this.updateClick.emit(this.customFieldForm.value);
        this.customFieldForm.markAsPristine();
        this.editable = false;
    }
}
OrderCustomFieldsCardComponent.ɵfac = function OrderCustomFieldsCardComponent_Factory(t) { return new (t || OrderCustomFieldsCardComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormBuilder)); };
OrderCustomFieldsCardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderCustomFieldsCardComponent, selectors: [["vdr-order-custom-fields-card"]], inputs: { customFieldsConfig: "customFieldsConfig", customFieldValues: "customFieldValues" }, outputs: { updateClick: "updateClick" }, decls: 1, vars: 1, consts: [["class", "card", 4, "ngIf"], [1, "card"], [1, "card-header"], [1, "card-block"], [1, "card-text", "custom-field-form"], [4, "ngFor", "ngForOf"], [1, "card-footer"], ["class", "btn btn-sm btn-secondary", 3, "click", 4, "ngIf"], ["class", "btn btn-sm btn-primary", 3, "disabled", "click", 4, "ngIf"], ["entityName", "Order", 3, "customFieldsFormGroup", "compact", "readonly", "customField"], [1, "btn", "btn-sm", "btn-secondary", 3, "click"], ["shape", "pencil"], [1, "btn", "btn-sm", "btn-primary", 3, "disabled", "click"], ["shape", "check"]], template: function OrderCustomFieldsCardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, OrderCustomFieldsCardComponent_div_0_Template, 10, 8, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.customFieldsConfig.length);
    } }, directives: [ɵngcc5.NgIf, ɵngcc5.NgForOf, ɵngcc1.CustomFieldControlComponent, ɵngcc6.ClrIconCustomTag], pipes: [ɵngcc4.TranslatePipe], styles: ["vdr-custom-field-control[_ngcontent-%COMP%]{margin-bottom:6px;display:block}.custom-field-form[_ngcontent-%COMP%]     .clr-control-label{color:var(--color-grey-400)}.custom-field-form.editable[_ngcontent-%COMP%]     .clr-control-label{color:inherit}"], changeDetection: 0 });
OrderCustomFieldsCardComponent.ctorParameters = () => [
    { type: FormBuilder }
];
OrderCustomFieldsCardComponent.propDecorators = {
    customFieldsConfig: [{ type: Input }],
    customFieldValues: [{ type: Input }],
    updateClick: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderCustomFieldsCardComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-custom-fields-card',
                template: "<div class=\"card\" *ngIf=\"customFieldsConfig.length\">\r\n    <div class=\"card-header\">\r\n        {{ 'common.custom-fields' | translate }}\r\n    </div>\r\n    <div class=\"card-block\">\r\n        <div class=\"card-text custom-field-form\" [class.editable]=\"editable\">\r\n            <ng-container *ngFor=\"let customField of customFieldsConfig\">\r\n                <vdr-custom-field-control\r\n                    entityName=\"Order\"\r\n                    [customFieldsFormGroup]=\"customFieldForm\"\r\n                    [compact]=\"true\"\r\n                    [readonly]=\"customField.readonly || !editable\"\r\n                    [customField]=\"customField\"\r\n                ></vdr-custom-field-control>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <button class=\"btn btn-sm btn-secondary\" (click)=\"editable = true\" *ngIf=\"!editable\">\r\n            <clr-icon shape=\"pencil\"></clr-icon>\r\n            {{ 'common.edit' | translate }}\r\n        </button>\r\n        <button\r\n            class=\"btn btn-sm btn-primary\"\r\n            (click)=\"onUpdateClick()\"\r\n            *ngIf=\"editable\"\r\n            [disabled]=\"customFieldForm.pristine || customFieldForm.invalid\"\r\n        >\r\n            <clr-icon shape=\"check\"></clr-icon>\r\n            {{ 'common.update' | translate }}\r\n        </button>\r\n    </div>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: ["vdr-custom-field-control{margin-bottom:6px;display:block}.custom-field-form ::ng-deep .clr-control-label{color:var(--color-grey-400)}.custom-field-form.editable ::ng-deep .clr-control-label{color:inherit}\n"]
            }]
    }], function () { return [{ type: ɵngcc2.FormBuilder }]; }, { customFieldsConfig: [{
            type: Input
        }], customFieldValues: [{
            type: Input
        }], updateClick: [{
            type: Output
        }] }); })();

class OrderStateSelectDialogComponent {
    constructor() {
        this.nextStates = [];
        this.message = '';
        this.selectedState = '';
    }
    select() {
        if (this.selectedState) {
            this.resolveWith(this.selectedState);
        }
    }
    cancel() {
        this.resolveWith();
    }
}
OrderStateSelectDialogComponent.ɵfac = function OrderStateSelectDialogComponent_Factory(t) { return new (t || OrderStateSelectDialogComponent)(); };
OrderStateSelectDialogComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderStateSelectDialogComponent, selectors: [["vdr-order-state-select-dialog"]], decls: 8, vars: 5, consts: [["vdrDialogTitle", ""], ["clrSelect", "", "name", "state", 3, "ngModel", "ngModelChange"], [3, "value", 4, "ngFor", "ngForOf"], ["vdrDialogButtons", ""], [3, "value"], ["type", "submit", "class", "btn btn-secondary", 3, "click", 4, "ngIf"], ["type", "submit", 1, "btn", "btn-primary", 3, "disabled", "click"], ["type", "submit", 1, "btn", "btn-secondary", 3, "click"]], template: function OrderStateSelectDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, OrderStateSelectDialogComponent_ng_template_0_Template, 2, 3, "ng-template", 0);
        ɵngcc0.ɵɵelementStart(1, "p");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "clr-select-container");
        ɵngcc0.ɵɵelementStart(5, "select", 1);
        ɵngcc0.ɵɵlistener("ngModelChange", function OrderStateSelectDialogComponent_Template_select_ngModelChange_5_listener($event) { return ctx.selectedState = $event; });
        ɵngcc0.ɵɵtemplate(6, OrderStateSelectDialogComponent_option_6_Template, 4, 6, "option", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, OrderStateSelectDialogComponent_ng_template_7_Template, 6, 12, "ng-template", 3);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 3, ctx.message));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngModel", ctx.selectedState);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.nextStates);
    } }, directives: [ɵngcc1.DialogTitleDirective, ɵngcc6.ClrSelectContainer, ɵngcc1.FormFieldControlDirective, ɵngcc2.SelectControlValueAccessor, ɵngcc6.ClrSelect, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc5.NgForOf, ɵngcc1.DialogButtonsDirective, ɵngcc2.NgSelectOption, ɵngcc2.ɵNgSelectMultipleOption, ɵngcc5.NgIf], pipes: [ɵngcc4.TranslatePipe, ɵngcc1.StateI18nTokenPipe], styles: [""], changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderStateSelectDialogComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-state-select-dialog',
                template: "<ng-template vdrDialogTitle>{{ 'order.select-state' | translate }}</ng-template>\r\n<p>{{ message | translate }}</p>\r\n<clr-select-container>\r\n    <select clrSelect name=\"state\" [(ngModel)]=\"selectedState\">\r\n        <option *ngFor=\"let state of nextStates\" [value]=\"state\">\r\n            {{ state | stateI18nToken | translate }}\r\n        </option>\r\n    </select>\r\n</clr-select-container>\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"submit\" *ngIf=\"cancellable\" (click)=\"cancel()\" class=\"btn btn-secondary\">\r\n        {{ 'common.cancel' | translate }}\r\n    </button>\r\n    <button type=\"submit\" (click)=\"select()\" class=\"btn btn-primary\" [disabled]=\"!selectedState\">\r\n        {{ 'order.transition-to-state' | translate: { state: (selectedState | stateI18nToken | translate) } }}\r\n    </button>\r\n</ng-template>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], function () { return []; }, null); })();

class OrderTransitionService {
    constructor(dataService, modalService, notificationService, i18nService) {
        this.dataService = dataService;
        this.modalService = modalService;
        this.notificationService = notificationService;
        this.i18nService = i18nService;
    }
    /**
     * Attempts to transition the Order to the last state it was in before it was transitioned
     * to the "Modifying" state. If this fails, a manual prompt is used.
     */
    transitionToPreModifyingState(orderId, nextStates) {
        return this.getPreModifyingState(orderId).pipe(switchMap(state => {
            const manualTransitionOptions = {
                orderId,
                nextStates,
                message: this.i18nService.translate(marker('order.unable-to-transition-to-state-try-another'), { state }),
                cancellable: false,
                retry: 10,
            };
            if (state) {
                return this.transitionToStateOrThrow(orderId, state).pipe(catchError(err => this.manuallyTransitionToState(manualTransitionOptions)));
            }
            else {
                return this.manuallyTransitionToState(manualTransitionOptions);
            }
        }));
    }
    /**
     * Displays a modal for manually selecting the next state.
     */
    manuallyTransitionToState(options) {
        return this.modalService
            .fromComponent(OrderStateSelectDialogComponent, {
            locals: {
                nextStates: options.nextStates,
                cancellable: options.cancellable,
                message: options.message,
            },
            closable: false,
            size: 'md',
        })
            .pipe(switchMap(result => {
            if (result) {
                return this.transitionToStateOrThrow(options.orderId, result);
            }
            else {
                if (!options.cancellable) {
                    throw new Error(`An order state must be selected`);
                }
                else {
                    return EMPTY;
                }
            }
        }), retryWhen(errors => errors.pipe(delay(2000), take(options.retry))));
    }
    /**
     * Attempts to get the last state the Order was in before it was transitioned
     * to the "Modifying" state.
     */
    getPreModifyingState(orderId) {
        return this.dataService.order
            .getOrderHistory(orderId, {
            filter: {
                type: {
                    eq: HistoryEntryType.ORDER_STATE_TRANSITION,
                },
            },
            sort: {
                createdAt: SortOrder.DESC,
            },
        })
            .mapSingle(result => result.order)
            .pipe(map(result => {
            const item = result === null || result === void 0 ? void 0 : result.history.items.find(i => i.data.to === 'Modifying');
            if (item) {
                return item.data.from;
            }
            else {
                return;
            }
        }));
    }
    transitionToStateOrThrow(orderId, state) {
        return this.dataService.order.transitionToState(orderId, state).pipe(map(({ transitionOrderToState }) => {
            switch (transitionOrderToState === null || transitionOrderToState === void 0 ? void 0 : transitionOrderToState.__typename) {
                case 'Order':
                    return transitionOrderToState === null || transitionOrderToState === void 0 ? void 0 : transitionOrderToState.state;
                case 'OrderStateTransitionError':
                    this.notificationService.error(transitionOrderToState === null || transitionOrderToState === void 0 ? void 0 : transitionOrderToState.transitionError);
                    throw new Error(transitionOrderToState === null || transitionOrderToState === void 0 ? void 0 : transitionOrderToState.transitionError);
            }
        }));
    }
}
OrderTransitionService.ɵfac = function OrderTransitionService_Factory(t) { return new (t || OrderTransitionService)(ɵngcc0.ɵɵinject(ɵngcc1.DataService), ɵngcc0.ɵɵinject(ɵngcc1.ModalService), ɵngcc0.ɵɵinject(ɵngcc1.NotificationService), ɵngcc0.ɵɵinject(ɵngcc1.I18nService)); };
OrderTransitionService.ɵprov = i0.ɵɵdefineInjectable({ factory: function OrderTransitionService_Factory() { return new OrderTransitionService(i0.ɵɵinject(i1.DataService), i0.ɵɵinject(i1.ModalService), i0.ɵɵinject(i1.NotificationService), i0.ɵɵinject(i1.I18nService)); }, token: OrderTransitionService, providedIn: "root" });
OrderTransitionService.ctorParameters = () => [
    { type: DataService },
    { type: ModalService },
    { type: NotificationService },
    { type: I18nService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderTransitionService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc1.DataService }, { type: ɵngcc1.ModalService }, { type: ɵngcc1.NotificationService }, { type: ɵngcc1.I18nService }]; }, null); })();

class OrderProcessGraphDialogComponent {
    constructor(serverConfigService) {
        this.serverConfigService = serverConfigService;
        this.states = [];
    }
    ngOnInit() {
        this.states = this.serverConfigService.getOrderProcessStates();
    }
}
OrderProcessGraphDialogComponent.ɵfac = function OrderProcessGraphDialogComponent_Factory(t) { return new (t || OrderProcessGraphDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ServerConfigService)); };
OrderProcessGraphDialogComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderProcessGraphDialogComponent, selectors: [["vdr-order-process-graph-dialog"]], decls: 2, vars: 2, consts: [["vdrDialogTitle", ""], [3, "states", "initialState"]], template: function OrderProcessGraphDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, OrderProcessGraphDialogComponent_ng_template_0_Template, 2, 3, "ng-template", 0);
        ɵngcc0.ɵɵelement(1, "vdr-order-process-graph", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("states", ctx.states)("initialState", ctx.activeState);
    } }, directives: function () { return [ɵngcc1.DialogTitleDirective, OrderProcessGraphComponent]; }, pipes: function () { return [ɵngcc4.TranslatePipe]; }, styles: [""], changeDetection: 0 });
OrderProcessGraphDialogComponent.ctorParameters = () => [
    { type: ServerConfigService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderProcessGraphDialogComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-process-graph-dialog',
                template: "<ng-template vdrDialogTitle>{{ 'order.order-state-diagram' | translate }}</ng-template>\r\n\r\n<vdr-order-process-graph [states]=\"states\" [initialState]=\"activeState\"></vdr-order-process-graph>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc1.ServerConfigService }]; }, null); })();

class RefundOrderDialogComponent {
    constructor(i18nService) {
        var _a;
        this.i18nService = i18nService;
        this.lineQuantities = {};
        this.refundShipping = false;
        this.adjustment = 0;
        this.reasons = (_a = getAppConfig().cancellationReasons) !== null && _a !== void 0 ? _a : [
            marker('order.refund-reason-customer-request'),
            marker('order.refund-reason-not-available'),
        ];
        this.reasons = this.reasons.map(r => this.i18nService.translate(r));
    }
    get refundTotal() {
        const itemTotal = this.order.lines.reduce((total, line) => {
            const lineRef = this.lineQuantities[line.id];
            const refundCount = (lineRef.refund && lineRef.quantity) || 0;
            return total + line.proratedUnitPriceWithTax * refundCount;
        }, 0);
        return itemTotal + (this.refundShipping ? this.order.shippingWithTax : 0) + this.adjustment;
    }
    get settledPaymentsTotal() {
        return this.settledPayments
            .map(payment => {
            const paymentTotal = payment.amount;
            const alreadyRefundedTotal = summate(payment.refunds.filter(r => r.state !== 'Failed'), 'total');
            return paymentTotal - alreadyRefundedTotal;
        })
            .reduce((sum, amount) => sum + amount, 0);
    }
    lineCanBeRefundedOrCancelled(line) {
        var _a, _b;
        const refunds = (_b = (_a = this.order.payments) === null || _a === void 0 ? void 0 : _a.reduce((all, payment) => [...all, ...payment.refunds], [])) !== null && _b !== void 0 ? _b : [];
        const refundable = line.items.filter(i => {
            if (i.cancelled) {
                return false;
            }
            if (i.refundId == null) {
                return true;
            }
            const refund = refunds.find(r => r.id === i.refundId);
            return (refund === null || refund === void 0 ? void 0 : refund.state) === 'Failed';
        });
        return 0 < refundable.length;
    }
    ngOnInit() {
        this.lineQuantities = this.order.lines.reduce((result, line) => {
            return Object.assign(Object.assign({}, result), { [line.id]: {
                    quantity: 0,
                    refund: false,
                    cancel: false,
                } });
        }, {});
        this.settledPayments = (this.order.payments || []).filter(p => p.state === 'Settled');
        if (this.settledPayments.length) {
            this.selectedPayment = this.settledPayments[0];
        }
    }
    handleZeroQuantity(line) {
        if ((line === null || line === void 0 ? void 0 : line.quantity) === 0) {
            line.cancel = false;
            line.refund = false;
        }
    }
    isRefunding() {
        const result = Object.values(this.lineQuantities).reduce((isRefunding, line) => {
            return isRefunding || (0 < line.quantity && line.refund);
        }, false);
        return result;
    }
    isCancelling() {
        const result = Object.values(this.lineQuantities).reduce((isCancelling, line) => {
            return isCancelling || (0 < line.quantity && line.cancel);
        }, false);
        return result;
    }
    canSubmit() {
        if (this.isRefunding()) {
            return !!(this.selectedPayment &&
                this.reason &&
                0 < this.refundTotal &&
                this.refundTotal <= this.settledPaymentsTotal);
        }
        else if (this.isCancelling()) {
            return !!this.reason;
        }
        return false;
    }
    select() {
        const payment = this.selectedPayment;
        if (payment) {
            const refundLines = this.getOrderLineInput(line => line.refund);
            const cancelLines = this.getOrderLineInput(line => line.cancel);
            this.resolveWith({
                refund: {
                    lines: refundLines,
                    reason: this.reason,
                    shipping: this.refundShipping ? this.order.shippingWithTax : 0,
                    adjustment: this.adjustment,
                    paymentId: payment.id,
                },
                cancel: {
                    lines: cancelLines,
                    orderId: this.order.id,
                    reason: this.reason,
                    cancelShipping: this.refundShipping,
                },
            });
        }
    }
    cancel() {
        this.resolveWith();
    }
    getOrderLineInput(filterFn) {
        return Object.entries(this.lineQuantities)
            .filter(([orderLineId, line]) => 0 < line.quantity && filterFn(line))
            .map(([orderLineId, line]) => ({
            orderLineId,
            quantity: line.quantity,
        }));
    }
}
RefundOrderDialogComponent.ɵfac = function RefundOrderDialogComponent_Factory(t) { return new (t || RefundOrderDialogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.I18nService)); };
RefundOrderDialogComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: RefundOrderDialogComponent, selectors: [["vdr-refund-order-dialog"]], decls: 69, vars: 76, consts: [["vdrDialogTitle", ""], [1, "refund-wrapper"], [1, "order-table"], [1, "table"], ["class", "order-line", 4, "ngFor", "ngForOf"], [1, "refund-details", "mt4"], [1, "clr-control-label"], ["bindLabel", "name", "autofocus", "", "bindValue", "id", 3, "disabled", "items", "placeholder", "addTag", "ngModel", "ngModelChange"], ["clrSelect", "", "name", "options", 3, "ngModel", "disabled", "ngModelChange"], [3, "ngValue", "disabled", 4, "ngFor", "ngForOf"], ["type", "checkbox", "clrCheckbox", "", 3, "ngModel", "disabled", "ngModelChange"], ["clrInput", "", 3, "disabled", "currencyCode", "ngModel", "ngModelChange"], [1, "totals"], [1, "order-total"], [1, "refund-total"], ["class", "refund-total-error", 4, "ngIf"], ["class", "refund-total-warning", 4, "ngIf"], ["vdrDialogButtons", ""], [1, "order-line"], [1, "align-middle", "thumb"], [3, "src"], [1, "align-middle", "name"], [1, "align-middle", "sku"], [1, "align-middle", "quantity"], [3, "line", "payments"], [1, "prorated-wrapper"], [4, "ngIf"], [1, "align-middle", "quantity-col"], ["type", "number", "min", "0", 3, "ngModel", "max", "ngModelChange", "input", 4, "ngIf"], [1, "align-middle"], [1, "cancel-checkbox-wrapper"], ["type", "checkbox", "clrCheckbox", "", 3, "disabled", "ngModel", "ngModelChange", 4, "ngIf"], ["vdrDropdownTrigger", "", 1, "promotions-label"], [1, "icon-button"], ["shape", "info"], ["class", "line-promotion", 4, "ngFor", "ngForOf"], [1, "line-promotion"], [1, "promotion-amount"], ["type", "number", "min", "0", 3, "ngModel", "max", "ngModelChange", "input"], ["type", "checkbox", "clrCheckbox", "", 3, "disabled", "ngModel", "ngModelChange"], [3, "ngValue", "disabled"], [1, "refund-total-error"], [1, "refund-total-warning"], ["type", "button", 1, "btn", 3, "click"], ["type", "submit", 1, "btn", "btn-primary", 3, "disabled", "click"], [4, "ngIf", "ngIfElse"], ["cancelling", ""]], template: function RefundOrderDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, RefundOrderDialogComponent_ng_template_0_Template, 2, 3, "ng-template", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "table", 3);
        ɵngcc0.ɵɵelementStart(4, "thead");
        ɵngcc0.ɵɵelementStart(5, "tr");
        ɵngcc0.ɵɵelement(6, "th");
        ɵngcc0.ɵɵelementStart(7, "th");
        ɵngcc0.ɵɵtext(8);
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "th");
        ɵngcc0.ɵɵtext(11);
        ɵngcc0.ɵɵpipe(12, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "th");
        ɵngcc0.ɵɵtext(14);
        ɵngcc0.ɵɵpipe(15, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "th");
        ɵngcc0.ɵɵtext(17);
        ɵngcc0.ɵɵpipe(18, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(19, "th");
        ɵngcc0.ɵɵtext(20);
        ɵngcc0.ɵɵpipe(21, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(22, "th");
        ɵngcc0.ɵɵtext(23);
        ɵngcc0.ɵɵpipe(24, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(25, "th");
        ɵngcc0.ɵɵtext(26);
        ɵngcc0.ɵɵpipe(27, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(28, "th");
        ɵngcc0.ɵɵtext(29);
        ɵngcc0.ɵɵpipe(30, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(31, RefundOrderDialogComponent_tr_31_Template, 27, 21, "tr", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(32, "div", 5);
        ɵngcc0.ɵɵelementStart(33, "div");
        ɵngcc0.ɵɵelementStart(34, "label", 6);
        ɵngcc0.ɵɵtext(35);
        ɵngcc0.ɵɵpipe(36, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(37, "ng-select", 7);
        ɵngcc0.ɵɵlistener("ngModelChange", function RefundOrderDialogComponent_Template_ng_select_ngModelChange_37_listener($event) { return ctx.reason = $event; });
        ɵngcc0.ɵɵpipe(38, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(39, "div");
        ɵngcc0.ɵɵelementStart(40, "clr-select-container");
        ɵngcc0.ɵɵelementStart(41, "label");
        ɵngcc0.ɵɵtext(42);
        ɵngcc0.ɵɵpipe(43, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(44, "select", 8);
        ɵngcc0.ɵɵlistener("ngModelChange", function RefundOrderDialogComponent_Template_select_ngModelChange_44_listener($event) { return ctx.selectedPayment = $event; });
        ɵngcc0.ɵɵtemplate(45, RefundOrderDialogComponent_option_45_Template, 3, 8, "option", 9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(46, "clr-checkbox-wrapper");
        ɵngcc0.ɵɵelementStart(47, "input", 10);
        ɵngcc0.ɵɵlistener("ngModelChange", function RefundOrderDialogComponent_Template_input_ngModelChange_47_listener($event) { return ctx.refundShipping = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(48, "label");
        ɵngcc0.ɵɵtext(49);
        ɵngcc0.ɵɵpipe(50, "translate");
        ɵngcc0.ɵɵpipe(51, "localeCurrency");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(52, "clr-input-container");
        ɵngcc0.ɵɵelementStart(53, "label");
        ɵngcc0.ɵɵtext(54);
        ɵngcc0.ɵɵpipe(55, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(56, "vdr-currency-input", 11);
        ɵngcc0.ɵɵlistener("ngModelChange", function RefundOrderDialogComponent_Template_vdr_currency_input_ngModelChange_56_listener($event) { return ctx.adjustment = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(57, "div", 12);
        ɵngcc0.ɵɵelementStart(58, "div", 13);
        ɵngcc0.ɵɵtext(59);
        ɵngcc0.ɵɵpipe(60, "translate");
        ɵngcc0.ɵɵpipe(61, "localeCurrency");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(62, "div", 14);
        ɵngcc0.ɵɵtext(63);
        ɵngcc0.ɵɵpipe(64, "translate");
        ɵngcc0.ɵɵpipe(65, "localeCurrency");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(66, RefundOrderDialogComponent_div_66_Template, 5, 13, "div", 15);
        ɵngcc0.ɵɵtemplate(67, RefundOrderDialogComponent_div_67_Template, 3, 3, "div", 16);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(68, RefundOrderDialogComponent_ng_template_68_Template, 7, 6, "ng-template", 17);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(9, 37, "order.product-name"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(12, 39, "order.product-sku"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(15, 41, "order.quantity"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(18, 43, "order.unit-price"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(21, 45, "order.prorated-unit-price"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(24, 47, "order.quantity"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(27, 49, "order.refund"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(30, 51, "order.cancel"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.order.lines);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("faded", !ctx.isRefunding() && !ctx.isCancelling());
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(36, 53, "order.refund-cancellation-reason"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", !ctx.isRefunding() && !ctx.isCancelling())("items", ctx.reasons)("placeholder", ɵngcc0.ɵɵpipeBind1(38, 55, "order.refund-cancellation-reason-required"))("addTag", true)("ngModel", ctx.reason);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(43, 57, "order.payment-to-refund"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.selectedPayment)("disabled", !ctx.isRefunding());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.settledPayments);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.refundShipping)("disabled", !ctx.isRefunding());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(50, 59, "order.refund-shipping"), " (", ɵngcc0.ɵɵpipeBind2(51, 61, ctx.order.shippingWithTax, ctx.order.currencyCode), ") ");
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(55, 64, "order.refund-adjustment"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", !ctx.isRefunding())("currencyCode", ctx.order.currencyCode)("ngModel", ctx.adjustment);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("disabled", !ctx.isRefunding());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(60, 66, "order.payment-amount"), ": ", ɵngcc0.ɵɵpipeBind2(61, 68, ctx.selectedPayment.amount, ctx.order.currencyCode), " ");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(64, 71, "order.refund-total"), ": ", ɵngcc0.ɵɵpipeBind2(65, 73, ctx.refundTotal, ctx.order.currencyCode), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.refundTotal < 0 || ctx.settledPaymentsTotal < ctx.refundTotal);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.selectedPayment.amount < ctx.refundTotal);
    } }, directives: [ɵngcc1.DialogTitleDirective, ɵngcc5.NgForOf, ɵngcc6.ClrLabel, ɵngcc3.NgSelectComponent, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc6.ClrSelectContainer, ɵngcc1.FormFieldControlDirective, ɵngcc2.SelectControlValueAccessor, ɵngcc6.ClrSelect, ɵngcc6.ClrCheckboxWrapper, ɵngcc2.CheckboxControlValueAccessor, ɵngcc6.ClrCheckbox, ɵngcc6.ClrInputContainer, ɵngcc1.CurrencyInputComponent, ɵngcc6.ClrInput, ɵngcc5.NgIf, ɵngcc1.DialogButtonsDirective, LineRefundsComponent, ɵngcc1.DropdownComponent, ɵngcc1.DropdownTriggerDirective, ɵngcc6.ClrIconCustomTag, ɵngcc1.DropdownMenuComponent, ɵngcc2.MinValidator, ɵngcc2.NumberValueAccessor, ɵngcc2.MaxValidator, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgSelectOption, ɵngcc2.ɵNgSelectMultipleOption], pipes: [ɵngcc4.TranslatePipe, ɵngcc1.LocaleCurrencyPipe, ɵngcc1.AssetPreviewPipe, ɵngcc5.CurrencyPipe, ɵngcc5.DecimalPipe], styles: ["[_nghost-%COMP%]{height:100%;display:flex;min-height:64vh}.refund-wrapper[_ngcontent-%COMP%]{flex:1;flex-direction:column}.refund-wrapper[_ngcontent-%COMP%]   .order-table[_ngcontent-%COMP%]{flex:1;overflow-y:auto}.refund-wrapper[_ngcontent-%COMP%]   .order-table[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{margin-top:0}.refund-wrapper[_ngcontent-%COMP%]   tr.ignore[_ngcontent-%COMP%]{color:var(--color-grey-300)}.quantity-col[_ngcontent-%COMP%]{background-color:var(--color-warning-100)}.cancel-checkbox-wrapper[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}clr-checkbox-wrapper[_ngcontent-%COMP%]{margin-top:12px;margin-bottom:12px;display:block}.refund-details[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.refund-details.faded[_ngcontent-%COMP%]{opacity:.5}.totals[_ngcontent-%COMP%]{margin-top:48px}.totals[_ngcontent-%COMP%]   .refund-total[_ngcontent-%COMP%]{font-size:18px}.totals[_ngcontent-%COMP%]   .refund-total-error[_ngcontent-%COMP%]{color:var(--color-error-500)}.totals[_ngcontent-%COMP%]   .refund-total-warning[_ngcontent-%COMP%]{color:var(--color-warning-600);max-width:250px}.totals.disabled[_ngcontent-%COMP%]{color:var(--color-grey-300)}.prorated-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:center}.line-promotion[_ngcontent-%COMP%]{display:flex;justify-content:space-between;font-size:12px;padding:3px 6px}.line-promotion[_ngcontent-%COMP%]   .promotion-amount[_ngcontent-%COMP%]{margin-left:12px}"], changeDetection: 0 });
RefundOrderDialogComponent.ctorParameters = () => [
    { type: I18nService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RefundOrderDialogComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-refund-order-dialog',
                template: "<ng-template vdrDialogTitle>{{ 'order.refund-and-cancel-order' | translate }}</ng-template>\r\n\r\n<div class=\"refund-wrapper\">\r\n    <div class=\"order-table\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>{{ 'order.product-name' | translate }}</th>\r\n                    <th>{{ 'order.product-sku' | translate }}</th>\r\n                    <th>{{ 'order.quantity' | translate }}</th>\r\n                    <th>{{ 'order.unit-price' | translate }}</th>\r\n                    <th>{{ 'order.prorated-unit-price' | translate }}</th>\r\n                    <th>{{ 'order.quantity' | translate }}</th>\r\n                    <th>{{ 'order.refund' | translate }}</th>\r\n                    <th>{{ 'order.cancel' | translate }}</th>\r\n                </tr>\r\n            </thead>\r\n            <tr *ngFor=\"let line of order.lines\" class=\"order-line\">\r\n                <td class=\"align-middle thumb\">\r\n                    <img [src]=\"line.featuredAsset | assetPreview: 'tiny'\" />\r\n                </td>\r\n                <td class=\"align-middle name\">{{ line.productVariant.name }}</td>\r\n                <td class=\"align-middle sku\">{{ line.productVariant.sku }}</td>\r\n                <td class=\"align-middle quantity\">\r\n                    {{ line.quantity }}\r\n                    <vdr-line-refunds [line]=\"line\" [payments]=\"order.payments\"></vdr-line-refunds>\r\n                </td>\r\n                <td class=\"align-middle quantity\">\r\n                    {{ line.unitPriceWithTax | localeCurrency: order.currencyCode }}\r\n                </td>\r\n                <td class=\"align-middle quantity\">\r\n                    <div class=\"prorated-wrapper\">\r\n                        {{ line.proratedUnitPriceWithTax | localeCurrency: order.currencyCode }}\r\n                        <ng-container *ngIf=\"line.discounts as discounts\">\r\n                            <vdr-dropdown *ngIf=\"discounts.length\">\r\n                                <div class=\"promotions-label\" vdrDropdownTrigger>\r\n                                    <button class=\"icon-button\"><clr-icon shape=\"info\"></clr-icon></button>\r\n                                </div>\r\n                                <vdr-dropdown-menu>\r\n                                    <div class=\"line-promotion\" *ngFor=\"let discount of discounts\">\r\n                                        {{ discount.description }}\r\n                                        <div class=\"promotion-amount\">\r\n                                            {{\r\n                                                discount.amount / 100 / line.quantity\r\n                                                    | number: '1.0-2'\r\n                                                    | currency: order.currencyCode\r\n                                            }}\r\n                                        </div>\r\n                                    </div>\r\n                                </vdr-dropdown-menu>\r\n                            </vdr-dropdown>\r\n                        </ng-container>\r\n                    </div>\r\n                </td>\r\n                <td class=\"align-middle quantity-col\">\r\n                    <input\r\n                        *ngIf=\"lineCanBeRefundedOrCancelled(line)\"\r\n                        [(ngModel)]=\"lineQuantities[line.id].quantity\"\r\n                        type=\"number\"\r\n                        [max]=\"line.quantity\"\r\n                        min=\"0\"\r\n                        (input)=\"handleZeroQuantity(lineQuantities[line.id])\"\r\n                    />\r\n                </td>\r\n                <td class=\"align-middle\">\r\n                    <div class=\"cancel-checkbox-wrapper\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            *ngIf=\"lineCanBeRefundedOrCancelled(line)\"\r\n                            clrCheckbox\r\n                            [disabled]=\"0 === lineQuantities[line.id].quantity\"\r\n                            [(ngModel)]=\"lineQuantities[line.id].refund\"\r\n                        />\r\n                    </div>\r\n                </td>\r\n                <td class=\"align-middle\">\r\n                    <div class=\"cancel-checkbox-wrapper\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            *ngIf=\"lineCanBeRefundedOrCancelled(line)\"\r\n                            clrCheckbox\r\n                            [disabled]=\"0 === lineQuantities[line.id].quantity\"\r\n                            [(ngModel)]=\"lineQuantities[line.id].cancel\"\r\n                        />\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n    <div class=\"refund-details mt4\" [class.faded]=\"!isRefunding() && !isCancelling()\">\r\n        <div>\r\n            <label class=\"clr-control-label\">{{ 'order.refund-cancellation-reason' | translate }}</label>\r\n            <ng-select\r\n                [disabled]=\"!isRefunding() && !isCancelling()\"\r\n                [items]=\"reasons\"\r\n                bindLabel=\"name\"\r\n                autofocus\r\n                [placeholder]=\"'order.refund-cancellation-reason-required' | translate\"\r\n                bindValue=\"id\"\r\n                [addTag]=\"true\"\r\n                [(ngModel)]=\"reason\"\r\n            ></ng-select>\r\n        </div>\r\n\r\n        <div>\r\n            <clr-select-container>\r\n                <label>{{ 'order.payment-to-refund' | translate }}</label>\r\n                <select clrSelect name=\"options\" [(ngModel)]=\"selectedPayment\" [disabled]=\"!isRefunding()\">\r\n                    <option\r\n                        *ngFor=\"let payment of settledPayments\"\r\n                        [ngValue]=\"payment\"\r\n                        [disabled]=\"payment.state !== 'Settled'\"\r\n                    >\r\n                        #{{ payment.id }} {{ payment.method }}:\r\n                        {{ payment.amount | localeCurrency: order.currencyCode }}\r\n                    </option>\r\n                </select>\r\n            </clr-select-container>\r\n\r\n            <clr-checkbox-wrapper>\r\n                <input type=\"checkbox\" clrCheckbox [(ngModel)]=\"refundShipping\" [disabled]=\"!isRefunding()\" />\r\n                <label>\r\n                    {{ 'order.refund-shipping' | translate }} ({{\r\n                        order.shippingWithTax | localeCurrency: order.currencyCode\r\n                    }})\r\n                </label>\r\n            </clr-checkbox-wrapper>\r\n            <clr-input-container>\r\n                <label>{{ 'order.refund-adjustment' | translate }}</label>\r\n                <vdr-currency-input\r\n                    clrInput\r\n                    [disabled]=\"!isRefunding()\"\r\n                    [currencyCode]=\"order.currencyCode\"\r\n                    [(ngModel)]=\"adjustment\"\r\n                ></vdr-currency-input>\r\n            </clr-input-container>\r\n            <div class=\"totals\" [class.disabled]=\"!isRefunding()\">\r\n                <div class=\"order-total\">\r\n                    {{ 'order.payment-amount' | translate }}:\r\n                    {{ selectedPayment.amount | localeCurrency: order.currencyCode }}\r\n                </div>\r\n                <div class=\"refund-total\">\r\n                    {{ 'order.refund-total' | translate }}:\r\n                    {{ refundTotal | localeCurrency: order.currencyCode }}\r\n                </div>\r\n                <div class=\"refund-total-error\" *ngIf=\"refundTotal < 0 || settledPaymentsTotal < refundTotal\">\r\n                    {{\r\n                        'order.refund-total-error'\r\n                            | translate\r\n                                : {\r\n                                      min: 0 | currency: order.currencyCode,\r\n                                      max: settledPaymentsTotal | localeCurrency: order.currencyCode\r\n                                  }\r\n                    }}\r\n                </div>\r\n                <div class=\"refund-total-warning\" *ngIf=\"selectedPayment.amount < refundTotal\">\r\n                    {{ 'order.refund-total-warning' | translate }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button type=\"submit\" (click)=\"select()\" [disabled]=\"!canSubmit()\" class=\"btn btn-primary\">\r\n        <ng-container *ngIf=\"isRefunding(); else cancelling\">\r\n            {{\r\n                'order.refund-with-amount'\r\n                    | translate: { amount: refundTotal | localeCurrency: order.currencyCode }\r\n            }}\r\n        </ng-container>\r\n        <ng-template #cancelling>\r\n            {{ 'order.cancel-selected-items' | translate }}\r\n        </ng-template>\r\n    </button>\r\n</ng-template>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{height:100%;display:flex;min-height:64vh}.refund-wrapper{flex:1;flex-direction:column}.refund-wrapper .order-table{flex:1;overflow-y:auto}.refund-wrapper .order-table table{margin-top:0}.refund-wrapper tr.ignore{color:var(--color-grey-300)}.quantity-col{background-color:var(--color-warning-100)}.cancel-checkbox-wrapper{display:flex;align-items:center;justify-content:center}clr-checkbox-wrapper{margin-top:12px;margin-bottom:12px;display:block}.refund-details{display:flex;justify-content:space-between}.refund-details.faded{opacity:.5}.totals{margin-top:48px}.totals .refund-total{font-size:18px}.totals .refund-total-error{color:var(--color-error-500)}.totals .refund-total-warning{color:var(--color-warning-600);max-width:250px}.totals.disabled{color:var(--color-grey-300)}.prorated-wrapper{display:flex;justify-content:center}.line-promotion{display:flex;justify-content:space-between;font-size:12px;padding:3px 6px}.line-promotion .promotion-amount{margin-left:12px}\n"]
            }]
    }], function () { return [{ type: ɵngcc1.I18nService }]; }, null); })();

class SettleRefundDialogComponent {
    constructor() {
        this.transactionId = '';
    }
    submit() {
        this.resolveWith(this.transactionId);
    }
    cancel() {
        this.resolveWith();
    }
}
SettleRefundDialogComponent.ɵfac = function SettleRefundDialogComponent_Factory(t) { return new (t || SettleRefundDialogComponent)(); };
SettleRefundDialogComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SettleRefundDialogComponent, selectors: [["vdr-settle-refund-dialog"]], decls: 10, vars: 10, consts: [["vdrDialogTitle", ""], [1, "instruction"], ["clrInput", "", "name", "transactionId", 3, "ngModel", "ngModelChange"], ["vdrDialogButtons", ""], ["type", "button", 1, "btn", 3, "click"], ["type", "submit", 1, "btn", "btn-primary", 3, "disabled", "click"]], template: function SettleRefundDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SettleRefundDialogComponent_ng_template_0_Template, 2, 3, "ng-template", 0);
        ɵngcc0.ɵɵelementStart(1, "p", 1);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "clr-input-container");
        ɵngcc0.ɵɵelementStart(5, "label");
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "input", 2);
        ɵngcc0.ɵɵlistener("ngModelChange", function SettleRefundDialogComponent_Template_input_ngModelChange_8_listener($event) { return ctx.transactionId = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, SettleRefundDialogComponent_ng_template_9_Template, 6, 7, "ng-template", 3);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(3, 3, "order.settle-refund-manual-instructions", ɵngcc0.ɵɵpureFunction1(8, _c5, ctx.refund.method)), "\n");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 6, "order.transaction-id"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.transactionId);
    } }, directives: [ɵngcc1.DialogTitleDirective, ɵngcc6.ClrInputContainer, ɵngcc6.ClrLabel, ɵngcc1.FormFieldControlDirective, ɵngcc2.DefaultValueAccessor, ɵngcc6.ClrInput, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc1.DialogButtonsDirective], pipes: [ɵngcc4.TranslatePipe], styles: ["[_nghost-%COMP%]{padding-bottom:32px}.instruction[_ngcontent-%COMP%]{margin-top:0;margin-bottom:24px}"], changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SettleRefundDialogComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-settle-refund-dialog',
                template: "<ng-template vdrDialogTitle>{{ 'order.settle-refund' | translate }}</ng-template>\r\n<p class=\"instruction\">\r\n    {{ 'order.settle-refund-manual-instructions' | translate: { method: refund.method } }}\r\n</p>\r\n<clr-input-container>\r\n    <label>{{ 'order.transaction-id' | translate }}</label>\r\n    <input clrInput name=\"transactionId\" [(ngModel)]=\"transactionId\" />\r\n</clr-input-container>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button type=\"submit\" (click)=\"submit()\" [disabled]=\"!transactionId\" class=\"btn btn-primary\">\r\n        {{ 'order.settle-refund' | translate }}\r\n    </button>\r\n</ng-template>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{padding-bottom:32px}.instruction{margin-top:0;margin-bottom:24px}\n"]
            }]
    }], function () { return []; }, null); })();

class OrderDetailComponent extends BaseDetailComponent {
    constructor(router, route, serverConfigService, changeDetector, dataService, notificationService, modalService, orderTransitionService) {
        super(route, router, serverConfigService, dataService);
        this.changeDetector = changeDetector;
        this.dataService = dataService;
        this.notificationService = notificationService;
        this.modalService = modalService;
        this.orderTransitionService = orderTransitionService;
        this.detailForm = new FormGroup({});
        this.fetchHistory = new Subject();
        this.defaultStates = [
            'AddingItems',
            'ArrangingPayment',
            'PaymentAuthorized',
            'PaymentSettled',
            'PartiallyShipped',
            'Shipped',
            'PartiallyDelivered',
            'Delivered',
            'Cancelled',
            'Modifying',
            'ArrangingAdditionalPayment',
        ];
    }
    ngOnInit() {
        this.init();
        this.entity$.pipe(take(1)).subscribe(order => {
            if (order.state === 'Modifying') {
                this.router.navigate(['./', 'modify'], { relativeTo: this.route });
            }
        });
        this.customFields = this.getCustomFieldConfig('Order');
        this.orderLineCustomFields = this.getCustomFieldConfig('OrderLine');
        this.history$ = this.fetchHistory.pipe(startWith(null), switchMap(() => {
            return this.dataService.order
                .getOrderHistory(this.id, {
                sort: {
                    createdAt: SortOrder.DESC,
                },
            })
                .mapStream(data => { var _a; return (_a = data.order) === null || _a === void 0 ? void 0 : _a.history.items; });
        }));
        this.nextStates$ = this.entity$.pipe(map(order => {
            const isInCustomState = !this.defaultStates.includes(order.state);
            return isInCustomState
                ? order.nextStates
                : order.nextStates.filter(s => !this.defaultStates.includes(s));
        }));
    }
    ngOnDestroy() {
        this.destroy();
    }
    openStateDiagram() {
        this.entity$
            .pipe(take(1), switchMap(order => this.modalService.fromComponent(OrderProcessGraphDialogComponent, {
            closable: true,
            locals: {
                activeState: order.state,
            },
        })))
            .subscribe();
    }
    transitionToState(state) {
        this.dataService.order.transitionToState(this.id, state).subscribe(({ transitionOrderToState }) => {
            switch (transitionOrderToState === null || transitionOrderToState === void 0 ? void 0 : transitionOrderToState.__typename) {
                case 'Order':
                    this.notificationService.success(marker('order.transitioned-to-state-success'), { state });
                    this.fetchHistory.next();
                    break;
                case 'OrderStateTransitionError':
                    this.notificationService.error(transitionOrderToState.transitionError);
            }
        });
    }
    manuallyTransitionToState(order) {
        this.orderTransitionService
            .manuallyTransitionToState({
            orderId: order.id,
            nextStates: order.nextStates,
            cancellable: true,
            message: marker('order.manually-transition-to-state-message'),
            retry: 0,
        })
            .subscribe();
    }
    transitionToModifying() {
        this.dataService.order
            .transitionToState(this.id, 'Modifying')
            .subscribe(({ transitionOrderToState }) => {
            switch (transitionOrderToState === null || transitionOrderToState === void 0 ? void 0 : transitionOrderToState.__typename) {
                case 'Order':
                    this.router.navigate(['./modify'], { relativeTo: this.route });
                    break;
                case 'OrderStateTransitionError':
                    this.notificationService.error(transitionOrderToState.transitionError);
            }
        });
    }
    updateCustomFields(customFieldsValue) {
        this.dataService.order
            .updateOrderCustomFields({
            id: this.id,
            customFields: customFieldsValue,
        })
            .subscribe(() => {
            this.notificationService.success(marker('common.notify-update-success'), { entity: 'Order' });
        });
    }
    getOrderAddressLines(orderAddress) {
        if (!orderAddress) {
            return [];
        }
        return Object.values(orderAddress)
            .filter(val => val !== 'OrderAddress')
            .filter(line => !!line);
    }
    settlePayment(payment) {
        this.dataService.order.settlePayment(payment.id).subscribe(({ settlePayment }) => {
            switch (settlePayment.__typename) {
                case 'Payment':
                    if (settlePayment.state === 'Settled') {
                        this.notificationService.success(marker('order.settle-payment-success'));
                    }
                    else {
                        this.notificationService.error(marker('order.settle-payment-error'));
                    }
                    this.dataService.order.getOrder(this.id).single$.subscribe();
                    this.fetchHistory.next();
                    break;
                case 'OrderStateTransitionError':
                case 'PaymentStateTransitionError':
                case 'SettlePaymentError':
                    this.notificationService.error(settlePayment.message);
            }
        });
    }
    transitionPaymentState({ payment, state }) {
        this.dataService.order
            .transitionPaymentToState(payment.id, state)
            .subscribe(({ transitionPaymentToState }) => {
            switch (transitionPaymentToState.__typename) {
                case 'Payment':
                    this.notificationService.success(marker('order.transitioned-payment-to-state-success'), {
                        state,
                    });
                    this.dataService.order.getOrder(this.id).single$.subscribe();
                    this.fetchHistory.next();
                    break;
                case 'PaymentStateTransitionError':
                    this.notificationService.error(transitionPaymentToState.message);
                    break;
            }
        });
    }
    canAddFulfillment(order) {
        const allItemsFulfilled = order.lines
            .reduce((items, line) => [...items, ...line.items], [])
            .every(item => !!item.fulfillment || item.cancelled);
        return (!allItemsFulfilled &&
            !this.hasUnsettledModifications(order) &&
            this.outstandingPaymentAmount(order) === 0 &&
            (order.nextStates.includes('Shipped') ||
                order.nextStates.includes('PartiallyShipped') ||
                order.nextStates.includes('Delivered')));
    }
    hasUnsettledModifications(order) {
        return 0 < order.modifications.filter(m => !m.isSettled).length;
    }
    getOutstandingModificationAmount(order) {
        return summate(order.modifications.filter(m => !m.isSettled), 'priceChange');
    }
    outstandingPaymentAmount(order) {
        var _a, _b, _c;
        const paymentIsValid = (p) => p.state !== 'Cancelled' && p.state !== 'Declined' && p.state !== 'Error';
        let amountCovered = 0;
        for (const payment of (_b = (_a = order.payments) === null || _a === void 0 ? void 0 : _a.filter(paymentIsValid)) !== null && _b !== void 0 ? _b : []) {
            const refunds = (_c = payment.refunds.filter(r => r.state !== 'Failed')) !== null && _c !== void 0 ? _c : [];
            const refundsTotal = summate(refunds, 'total');
            amountCovered += payment.amount - refundsTotal;
        }
        return order.totalWithTax - amountCovered;
    }
    addManualPayment(order) {
        const priorState = order.state;
        this.modalService
            .fromComponent(AddManualPaymentDialogComponent, {
            closable: true,
            locals: {
                outstandingAmount: this.outstandingPaymentAmount(order),
                currencyCode: order.currencyCode,
            },
        })
            .pipe(switchMap(result => {
            if (result) {
                return this.dataService.order.addManualPaymentToOrder({
                    orderId: this.id,
                    transactionId: result.transactionId,
                    method: result.method,
                    metadata: result.metadata || {},
                });
            }
            else {
                return EMPTY;
            }
        }), switchMap(({ addManualPaymentToOrder }) => {
            switch (addManualPaymentToOrder.__typename) {
                case 'Order':
                    this.notificationService.success(marker('order.add-payment-to-order-success'));
                    if (priorState === 'ArrangingAdditionalPayment') {
                        return this.orderTransitionService.transitionToPreModifyingState(order.id, order.nextStates);
                    }
                    else {
                        return this.dataService.order
                            .transitionToState(this.id, 'PaymentSettled')
                            .pipe(mapTo('PaymentSettled'));
                    }
                case 'ManualPaymentStateError':
                    this.notificationService.error(addManualPaymentToOrder.message);
                    return EMPTY;
                default:
                    return EMPTY;
            }
        }))
            .subscribe(result => {
            if (result) {
                this.refetchOrder({ result });
            }
        });
    }
    fulfillOrder() {
        this.entity$
            .pipe(take(1), switchMap(order => {
            return this.modalService.fromComponent(FulfillOrderDialogComponent, {
                size: 'xl',
                locals: {
                    order,
                },
            });
        }), switchMap(input => {
            if (input) {
                return this.dataService.order.createFulfillment(input);
            }
            else {
                return of(undefined);
            }
        }), switchMap(result => this.refetchOrder(result).pipe(mapTo(result))))
            .subscribe(result => {
            if (result) {
                const { addFulfillmentToOrder } = result;
                switch (addFulfillmentToOrder.__typename) {
                    case 'Fulfillment':
                        this.notificationService.success(marker('order.create-fulfillment-success'));
                        break;
                    case 'EmptyOrderLineSelectionError':
                    case 'InsufficientStockOnHandError':
                    case 'ItemsAlreadyFulfilledError':
                    case 'InvalidFulfillmentHandlerError':
                        this.notificationService.error(addFulfillmentToOrder.message);
                        break;
                    case 'FulfillmentStateTransitionError':
                        this.notificationService.error(addFulfillmentToOrder.transitionError);
                        break;
                    case 'CreateFulfillmentError':
                        this.notificationService.error(addFulfillmentToOrder.fulfillmentHandlerError);
                        break;
                    case undefined:
                        this.notificationService.error(JSON.stringify(addFulfillmentToOrder));
                        break;
                    default:
                        assertNever(addFulfillmentToOrder);
                }
            }
        });
    }
    transitionFulfillment(id, state) {
        this.dataService.order
            .transitionFulfillmentToState(id, state)
            .pipe(switchMap(result => this.refetchOrder(result)))
            .subscribe(() => {
            this.notificationService.success(marker('order.successfully-updated-fulfillment'));
        });
    }
    cancelOrRefund(order) {
        const isRefundable = this.orderHasSettledPayments(order);
        if (order.state === 'PaymentAuthorized' || order.active === true || !isRefundable) {
            this.cancelOrder(order);
        }
        else {
            this.refundOrder(order);
        }
    }
    settleRefund(refund) {
        this.modalService
            .fromComponent(SettleRefundDialogComponent, {
            size: 'md',
            locals: {
                refund,
            },
        })
            .pipe(switchMap(transactionId => {
            if (transactionId) {
                return this.dataService.order.settleRefund({
                    transactionId,
                    id: refund.id,
                }, this.id);
            }
            else {
                return of(undefined);
            }
        }))
            .subscribe(result => {
            if (result) {
                this.notificationService.success(marker('order.settle-refund-success'));
            }
        });
    }
    addNote(event) {
        const { note, isPublic } = event;
        this.dataService.order
            .addNoteToOrder({
            id: this.id,
            note,
            isPublic,
        })
            .pipe(switchMap(result => this.refetchOrder(result)))
            .subscribe(result => {
            this.notificationService.success(marker('common.notify-create-success'), {
                entity: 'Note',
            });
        });
    }
    updateNote(entry) {
        this.modalService
            .fromComponent(EditNoteDialogComponent, {
            closable: true,
            locals: {
                displayPrivacyControls: true,
                note: entry.data.note,
                noteIsPrivate: !entry.isPublic,
            },
        })
            .pipe(switchMap(result => {
            if (result) {
                return this.dataService.order.updateOrderNote({
                    noteId: entry.id,
                    isPublic: !result.isPrivate,
                    note: result.note,
                });
            }
            else {
                return EMPTY;
            }
        }))
            .subscribe(result => {
            this.fetchHistory.next();
            this.notificationService.success(marker('common.notify-update-success'), {
                entity: 'Note',
            });
        });
    }
    deleteNote(entry) {
        return this.modalService
            .dialog({
            title: marker('common.confirm-delete-note'),
            body: entry.data.note,
            buttons: [
                { type: 'secondary', label: marker('common.cancel') },
                { type: 'danger', label: marker('common.delete'), returnValue: true },
            ],
        })
            .pipe(switchMap(res => (res ? this.dataService.order.deleteOrderNote(entry.id) : EMPTY)))
            .subscribe(() => {
            this.fetchHistory.next();
            this.notificationService.success(marker('common.notify-delete-success'), {
                entity: 'Note',
            });
        });
    }
    orderHasSettledPayments(order) {
        var _a;
        return !!((_a = order.payments) === null || _a === void 0 ? void 0 : _a.find(p => p.state === 'Settled'));
    }
    cancelOrder(order) {
        this.modalService
            .fromComponent(CancelOrderDialogComponent, {
            size: 'xl',
            locals: {
                order,
            },
        })
            .pipe(switchMap(input => {
            if (input) {
                return this.dataService.order.cancelOrder(input);
            }
            else {
                return of(undefined);
            }
        }), switchMap(result => this.refetchOrder(result)))
            .subscribe(result => {
            if (result) {
                this.notificationService.success(marker('order.cancelled-order-success'));
            }
        });
    }
    refundOrder(order) {
        this.modalService
            .fromComponent(RefundOrderDialogComponent, {
            size: 'xl',
            locals: {
                order,
            },
        })
            .pipe(switchMap(input => {
            var _a;
            if (!input) {
                return of(undefined);
            }
            const operations = [];
            if (input.refund.lines.length) {
                operations.push(this.dataService.order
                    .refundOrder(input.refund)
                    .pipe(map(res => res.refundOrder)));
            }
            if ((_a = input.cancel.lines) === null || _a === void 0 ? void 0 : _a.length) {
                operations.push(this.dataService.order
                    .cancelOrder(input.cancel)
                    .pipe(map(res => res.cancelOrder)));
            }
            return merge(...operations);
        }))
            .subscribe(result => {
            if (result) {
                switch (result.__typename) {
                    case 'Order':
                        this.refetchOrder(result).subscribe();
                        this.notificationService.success(marker('order.cancelled-order-success'));
                        break;
                    case 'Refund':
                        this.refetchOrder(result).subscribe();
                        if (result.state === 'Failed') {
                            this.notificationService.error(marker('order.refund-order-failed'));
                        }
                        else {
                            this.notificationService.success(marker('order.refund-order-success'));
                        }
                        break;
                    case 'QuantityTooGreatError':
                    case 'MultipleOrderError':
                    case 'OrderStateTransitionError':
                    case 'CancelActiveOrderError':
                    case 'EmptyOrderLineSelectionError':
                    case 'AlreadyRefundedError':
                    case 'NothingToRefundError':
                    case 'PaymentOrderMismatchError':
                    case 'RefundOrderStateError':
                    case 'RefundStateTransitionError':
                        this.notificationService.error(result.message);
                        break;
                }
            }
        });
    }
    refetchOrder(result) {
        this.fetchHistory.next();
        if (result) {
            return this.dataService.order.getOrder(this.id).single$;
        }
        else {
            return of(undefined);
        }
    }
    setFormValues(entity) {
        // empty
    }
}
OrderDetailComponent.ɵfac = function OrderDetailComponent_Factory(t) { return new (t || OrderDetailComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ServerConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DataService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NotificationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ModalService), ɵngcc0.ɵɵdirectiveInject(OrderTransitionService)); };
OrderDetailComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderDetailComponent, selectors: [["vdr-order-detail"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 6, consts: [[4, "ngIf"], [1, "flex", "clr-align-items-center"], [3, "entity"], [3, "state"], [1, "icon-button", 3, "title", "click"], ["shape", "list"], ["locationId", "order-detail"], ["class", "btn btn-primary", 3, "click", 4, "ngIf"], [1, "btn", "btn-primary", 3, "disabled", "click"], ["vdrDropdownTrigger", "", 1, "icon-button"], ["shape", "ellipsis-vertical"], ["vdrPosition", "bottom-right"], ["type", "button", "class", "btn", "vdrDropdownItem", "", 3, "click", 4, "ngIf"], [1, "dropdown-divider"], ["type", "button", "vdrDropdownItem", "", 1, "btn", 3, "click"], ["shape", "step-forward-2", 1, "is-warning"], [1, "btn", "btn-primary", 3, "click"], ["shape", "pencil"], ["shape", "error-standard", 1, "is-error"], [4, "ngIf", "ngIfElse"], ["cancelOnly", ""], ["type", "button", "class", "btn", "vdrDropdownItem", "", 3, "click", 4, "ngFor", "ngForOf"], ["shape", "step-forward-2"], [1, "clr-row"], [1, "clr-col-lg-8"], [3, "order", "orderLineCustomFields"], [1, "table"], [4, "ngFor", "ngForOf"], ["locationId", "order-detail", 3, "entity$", "detailForm"], [3, "order", "history", "addNote", "updateNote", "deleteNote"], [1, "clr-col-lg-4", "order-cards"], [3, "customFieldsConfig", "customFieldValues", "updateClick"], [1, "card"], [1, "card-header"], [1, "card-block"], [1, "card-text"], [3, "customer"], [3, "address"], [3, "currencyCode", "payment", "settlePayment", "transitionPaymentState", "settleRefund", 4, "ngFor", "ngForOf"], [3, "currencyCode", "payment", "settlePayment", "transitionPaymentState", "settleRefund"], [3, "fulfillment", "order", "transitionState"]], template: function OrderDetailComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, OrderDetailComponent_vdr_action_bar_0_Template, 29, 21, "vdr-action-bar", 0);
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵtemplate(2, OrderDetailComponent_div_2_Template, 42, 36, "div", 0);
        ɵngcc0.ɵɵpipe(3, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(1, 2, ctx.entity$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(3, 4, ctx.entity$));
    } }, directives: function () { return [ɵngcc5.NgIf, ɵngcc1.ActionBarComponent, ɵngcc1.ActionBarLeftComponent, ɵngcc1.EntityInfoComponent, ɵngcc1.OrderStateLabelComponent, ɵngcc6.ClrIconCustomTag, ɵngcc1.ActionBarRightComponent, ɵngcc1.ActionBarItemsComponent, ɵngcc1.DropdownComponent, ɵngcc1.DropdownTriggerDirective, ɵngcc1.DropdownMenuComponent, ɵngcc1.DropdownItemDirective, ɵngcc5.NgForOf, OrderTableComponent, ɵngcc1.CustomDetailComponentHostComponent, OrderHistoryComponent, OrderCustomFieldsCardComponent, ɵngcc1.CustomerLabelComponent, ɵngcc1.FormattedAddressComponent, OrderPaymentCardComponent, FulfillmentCardComponent]; }, pipes: function () { return [ɵngcc5.AsyncPipe, ɵngcc4.TranslatePipe, ɵngcc1.LocaleCurrencyPipe, ɵngcc1.StateI18nTokenPipe, ɵngcc5.PercentPipe]; }, styles: [".shipping-address[_ngcontent-%COMP%]{list-style-type:none;line-height:1.3em}.order-cards[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%]{margin-top:6px;color:var(--color-text-200)}"], changeDetection: 0 });
OrderDetailComponent.ctorParameters = () => [
    { type: Router },
    { type: ActivatedRoute },
    { type: ServerConfigService },
    { type: ChangeDetectorRef },
    { type: DataService },
    { type: NotificationService },
    { type: ModalService },
    { type: OrderTransitionService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderDetailComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-detail',
                template: "<vdr-action-bar *ngIf=\"entity$ | async as order\">\r\n    <vdr-ab-left>\r\n        <div class=\"flex clr-align-items-center\">\r\n            <vdr-entity-info [entity]=\"entity$ | async\"></vdr-entity-info>\r\n            <vdr-order-state-label [state]=\"order.state\">\r\n                <button\r\n                    class=\"icon-button\"\r\n                    (click)=\"openStateDiagram()\"\r\n                    [title]=\"'order.order-state-diagram' | translate\"\r\n                >\r\n                    <clr-icon shape=\"list\"></clr-icon>\r\n                </button>\r\n            </vdr-order-state-label>\r\n        </div>\r\n    </vdr-ab-left>\r\n\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId=\"order-detail\"></vdr-action-bar-items>\r\n        <button\r\n            class=\"btn btn-primary\"\r\n            *ngIf=\"\r\n                (order.state === 'ArrangingPayment' || order.state === 'ArrangingAdditionalPayment') &&\r\n                (hasUnsettledModifications(order) || 0 < outstandingPaymentAmount(order))\r\n            \"\r\n            (click)=\"addManualPayment(order)\"\r\n        >\r\n            {{ 'order.add-payment-to-order' | translate }}\r\n            ({{ outstandingPaymentAmount(order) | localeCurrency: order.currencyCode }})\r\n        </button>\r\n        <button\r\n            class=\"btn btn-primary\"\r\n            *ngIf=\"\r\n                order.active === false &&\r\n                order.state !== 'ArrangingAdditionalPayment' &&\r\n                0 < outstandingPaymentAmount(order)\r\n            \"\r\n            (click)=\"transitionToState('ArrangingAdditionalPayment')\"\r\n        >\r\n            {{ 'order.arrange-additional-payment' | translate }}\r\n        </button>\r\n        <button class=\"btn btn-primary\" (click)=\"fulfillOrder()\" [disabled]=\"!canAddFulfillment(order)\">\r\n            {{ 'order.fulfill-order' | translate }}\r\n        </button>\r\n        <vdr-dropdown>\r\n            <button class=\"icon-button\" vdrDropdownTrigger>\r\n                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n            </button>\r\n            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                <ng-container *ngIf=\"order.nextStates.includes('Modifying')\">\r\n                    <button type=\"button\" class=\"btn\" vdrDropdownItem (click)=\"transitionToModifying()\">\r\n                        <clr-icon shape=\"pencil\"></clr-icon>\r\n                        {{ 'order.modify-order' | translate }}\r\n                    </button>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                </ng-container>\r\n                <button\r\n                    type=\"button\"\r\n                    class=\"btn\"\r\n                    vdrDropdownItem\r\n                    *ngIf=\"order.nextStates.includes('Cancelled')\"\r\n                    (click)=\"cancelOrRefund(order)\"\r\n                >\r\n                    <clr-icon shape=\"error-standard\" class=\"is-error\"></clr-icon>\r\n                    <ng-container *ngIf=\"orderHasSettledPayments(order); else cancelOnly\">\r\n                        {{ 'order.refund-and-cancel-order' | translate }}\r\n                    </ng-container>\r\n                    <ng-template #cancelOnly>\r\n                        {{ 'order.cancel-order' | translate }}\r\n                    </ng-template>\r\n                </button>\r\n\r\n                <ng-container *ngIf=\"(nextStates$ | async)?.length\">\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <button\r\n                        *ngFor=\"let nextState of nextStates$ | async\"\r\n                        type=\"button\"\r\n                        class=\"btn\"\r\n                        vdrDropdownItem\r\n                        (click)=\"transitionToState(nextState)\"\r\n                    >\r\n                        <clr-icon shape=\"step-forward-2\"></clr-icon>\r\n                        {{\r\n                            'order.transition-to-state'\r\n                                | translate: { state: (nextState | stateI18nToken | translate) }\r\n                        }}\r\n                    </button>\r\n                </ng-container>\r\n                <div class=\"dropdown-divider\"></div>\r\n                <button type=\"button\" class=\"btn\" vdrDropdownItem (click)=\"manuallyTransitionToState(order)\">\r\n                    <clr-icon shape=\"step-forward-2\" class=\"is-warning\"></clr-icon>\r\n                    {{ 'order.manually-transition-to-state' | translate }}\r\n                </button>\r\n            </vdr-dropdown-menu>\r\n        </vdr-dropdown>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<div *ngIf=\"entity$ | async as order\">\r\n    <div class=\"clr-row\">\r\n        <div class=\"clr-col-lg-8\">\r\n            <vdr-order-table\r\n                [order]=\"order\"\r\n                [orderLineCustomFields]=\"orderLineCustomFields\"\r\n            ></vdr-order-table>\r\n            <h4>{{ 'order.tax-summary' | translate }}</h4>\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>{{ 'common.description' | translate }}</th>\r\n                        <th>{{ 'order.tax-rate' | translate }}</th>\r\n                        <th>{{ 'order.tax-base' | translate }}</th>\r\n                        <th>{{ 'order.tax-total' | translate }}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let row of order.taxSummary\">\r\n                        <td>{{ row.description }}</td>\r\n                        <td>{{ row.taxRate / 100 | percent }}</td>\r\n                        <td>{{ row.taxBase | localeCurrency: order.currencyCode }}</td>\r\n                        <td>{{ row.taxTotal | localeCurrency: order.currencyCode }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"order-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n\r\n            <vdr-order-history\r\n                [order]=\"order\"\r\n                [history]=\"history$ | async\"\r\n                (addNote)=\"addNote($event)\"\r\n                (updateNote)=\"updateNote($event)\"\r\n                (deleteNote)=\"deleteNote($event)\"\r\n            ></vdr-order-history>\r\n        </div>\r\n        <div class=\"clr-col-lg-4 order-cards\">\r\n            <vdr-order-custom-fields-card\r\n                [customFieldsConfig]=\"customFields\"\r\n                [customFieldValues]=\"order.customFields\"\r\n                (updateClick)=\"updateCustomFields($event)\"\r\n            ></vdr-order-custom-fields-card>\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    {{ 'order.customer' | translate }}\r\n                </div>\r\n                <div class=\"card-block\">\r\n                    <div class=\"card-text\">\r\n                        <vdr-customer-label [customer]=\"order.customer\"></vdr-customer-label>\r\n                        <h6 *ngIf=\"getOrderAddressLines(order.shippingAddress).length\">\r\n                            {{ 'order.shipping-address' | translate }}\r\n                        </h6>\r\n                        <vdr-formatted-address [address]=\"order.shippingAddress\"></vdr-formatted-address>\r\n                        <h6 *ngIf=\"getOrderAddressLines(order.billingAddress).length\">\r\n                            {{ 'order.billing-address' | translate }}\r\n                        </h6>\r\n                        <vdr-formatted-address [address]=\"order.billingAddress\"></vdr-formatted-address>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf=\"order.payments && order.payments.length\">\r\n                <vdr-order-payment-card\r\n                    *ngFor=\"let payment of order.payments\"\r\n                    [currencyCode]=\"order.currencyCode\"\r\n                    [payment]=\"payment\"\r\n                    (settlePayment)=\"settlePayment($event)\"\r\n                    (transitionPaymentState)=\"transitionPaymentState($event)\"\r\n                    (settleRefund)=\"settleRefund($event)\"\r\n                ></vdr-order-payment-card>\r\n            </ng-container>\r\n            <ng-container *ngFor=\"let fulfillment of order.fulfillments\">\r\n                <vdr-fulfillment-card\r\n                    [fulfillment]=\"fulfillment\"\r\n                    [order]=\"order\"\r\n                    (transitionState)=\"transitionFulfillment(fulfillment.id, $event)\"\r\n                ></vdr-fulfillment-card>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".shipping-address{list-style-type:none;line-height:1.3em}.order-cards h6{margin-top:6px;color:var(--color-text-200)}\n"]
            }]
    }], function () { return [{ type: ɵngcc8.Router }, { type: ɵngcc8.ActivatedRoute }, { type: ɵngcc1.ServerConfigService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.DataService }, { type: ɵngcc1.NotificationService }, { type: ɵngcc1.ModalService }, { type: OrderTransitionService }]; }, null); })();

var OrderEditResultType;
(function (OrderEditResultType) {
    OrderEditResultType[OrderEditResultType["Refund"] = 0] = "Refund";
    OrderEditResultType[OrderEditResultType["Payment"] = 1] = "Payment";
    OrderEditResultType[OrderEditResultType["PriceUnchanged"] = 2] = "PriceUnchanged";
    OrderEditResultType[OrderEditResultType["Cancel"] = 3] = "Cancel";
})(OrderEditResultType || (OrderEditResultType = {}));
class OrderEditsPreviewDialogComponent {
    get priceDifference() {
        return this.order.totalWithTax - this.originalTotalWithTax;
    }
    ngOnInit() {
        this.refundNote = this.modifyOrderInput.note || '';
    }
    cancel() {
        this.resolveWith({
            result: OrderEditResultType.Cancel,
        });
    }
    submit() {
        if (0 < this.priceDifference) {
            this.resolveWith({
                result: OrderEditResultType.Payment,
            });
        }
        else if (this.priceDifference < 0) {
            this.resolveWith({
                result: OrderEditResultType.Refund,
                // tslint:disable-next-line:no-non-null-assertion
                refundPaymentId: this.selectedPayment.id,
                refundNote: this.refundNote,
            });
        }
        else {
            this.resolveWith({
                result: OrderEditResultType.PriceUnchanged,
            });
        }
    }
}
OrderEditsPreviewDialogComponent.ɵfac = function OrderEditsPreviewDialogComponent_Factory(t) { return new (t || OrderEditsPreviewDialogComponent)(); };
OrderEditsPreviewDialogComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderEditsPreviewDialogComponent, selectors: [["vdr-order-edits-preview-dialog"]], decls: 10, vars: 10, consts: [["vdrDialogTitle", ""], [3, "order", "orderLineCustomFields"], [1, "h4"], [4, "ngIf"], ["vdrDialogButtons", ""], ["clrSelect", "", "name", "options", 3, "ngModel", "ngModelChange"], [3, "ngValue", 4, "ngFor", "ngForOf"], [1, "clr-control-label"], ["name", "refundNote", "clrTextarea", "", "required", "", 3, "ngModel", "ngModelChange"], [3, "ngValue"], ["type", "button", 1, "btn", 3, "click"], ["type", "submit", 1, "btn", "btn-primary", 3, "disabled", "click"]], template: function OrderEditsPreviewDialogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, OrderEditsPreviewDialogComponent_ng_template_0_Template, 2, 3, "ng-template", 0);
        ɵngcc0.ɵɵelement(1, "vdr-order-table", 1);
        ɵngcc0.ɵɵelementStart(2, "h4", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementStart(5, "strong");
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵpipe(7, "localeCurrency");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, OrderEditsPreviewDialogComponent_div_8_Template, 11, 9, "div", 3);
        ɵngcc0.ɵɵtemplate(9, OrderEditsPreviewDialogComponent_ng_template_9_Template, 6, 7, "ng-template", 4);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("order", ctx.order)("orderLineCustomFields", ctx.orderLineCustomFields);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 5, "order.modify-order-price-difference"), ": ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(7, 7, ctx.priceDifference, ctx.order.currencyCode));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.priceDifference < 0);
    } }, directives: function () { return [ɵngcc1.DialogTitleDirective, OrderTableComponent, ɵngcc5.NgIf, ɵngcc1.DialogButtonsDirective, ɵngcc6.ClrSelectContainer, ɵngcc6.ClrLabel, ɵngcc1.FormFieldControlDirective, ɵngcc2.SelectControlValueAccessor, ɵngcc6.ClrSelect, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc5.NgForOf, ɵngcc2.DefaultValueAccessor, ɵngcc6.ClrTextarea, ɵngcc2.RequiredValidator, ɵngcc2.NgSelectOption, ɵngcc2.ɵNgSelectMultipleOption]; }, pipes: function () { return [ɵngcc4.TranslatePipe, ɵngcc1.LocaleCurrencyPipe]; }, styles: [""], changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderEditsPreviewDialogComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-edits-preview-dialog',
                template: "<ng-template vdrDialogTitle>{{ 'order.confirm-modifications' | translate }}</ng-template>\r\n<vdr-order-table [order]=\"order\" [orderLineCustomFields]=\"orderLineCustomFields\"></vdr-order-table>\r\n\r\n<h4 class=\"h4\">\r\n    {{ 'order.modify-order-price-difference' | translate }}:\r\n    <strong>{{ priceDifference | localeCurrency: order.currencyCode }}</strong>\r\n</h4>\r\n<div *ngIf=\"priceDifference < 0\">\r\n<clr-select-container>\r\n    <label>{{ 'order.payment-to-refund' | translate }}</label>\r\n    <select clrSelect name=\"options\" [(ngModel)]=\"selectedPayment\">\r\n        <option\r\n            *ngFor=\"let payment of order.payments\"\r\n            [ngValue]=\"payment\"\r\n        >\r\n            #{{ payment.id }} {{ payment.method }}:\r\n            {{ payment.amount | localeCurrency: order.currencyCode }}\r\n        </option>\r\n    </select>\r\n</clr-select-container>\r\n    <label class=\"clr-control-label\">{{ 'order.refund-cancellation-reason' | translate }}</label>\r\n    <textarea [(ngModel)]=\"refundNote\" name=\"refundNote\" clrTextarea required></textarea>\r\n</div>\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button type=\"submit\" (click)=\"submit()\" [disabled]=\"priceDifference < 0 && !selectedPayment\" class=\"btn btn-primary\">\r\n        {{ 'common.confirm' | translate }}\r\n    </button>\r\n</ng-template>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], null, null); })();

class OrderEditorComponent extends BaseDetailComponent {
    constructor(router, route, serverConfigService, changeDetector, dataService, notificationService, modalService, orderTransitionService) {
        super(route, router, serverConfigService, dataService);
        this.changeDetector = changeDetector;
        this.dataService = dataService;
        this.notificationService = notificationService;
        this.modalService = modalService;
        this.orderTransitionService = orderTransitionService;
        this.couponCodeInput$ = new Subject();
        this.detailForm = new FormGroup({});
        this.couponCodesControl = new FormControl();
        this.modifyOrderInput = {
            dryRun: true,
            orderId: '',
            addItems: [],
            adjustOrderLines: [],
            surcharges: [],
            note: '',
            updateShippingAddress: {},
            updateBillingAddress: {},
        };
        this.note = '';
        this.recalculateShipping = true;
        this.addedVariants = new Map();
    }
    get addedLines() {
        const getSinglePriceValue = (price) => price.__typename === 'SinglePrice' ? price.value : 0;
        return (this.modifyOrderInput.addItems || [])
            .map(row => {
            const variantInfo = this.addedVariants.get(row.productVariantId);
            if (variantInfo) {
                return Object.assign(Object.assign({}, variantInfo), { price: getSinglePriceValue(variantInfo.price), priceWithTax: getSinglePriceValue(variantInfo.priceWithTax), quantity: row.quantity });
            }
        })
            .filter(notNullOrUndefined);
    }
    ngOnInit() {
        this.init();
        this.dataService.promotion.getPromotions();
        this.addressCustomFields = this.getCustomFieldConfig('Address');
        this.modifyOrderInput.orderId = this.route.snapshot.paramMap.get('id');
        this.orderLineCustomFields = this.getCustomFieldConfig('OrderLine');
        this.entity$.pipe(takeUntil(this.destroy$)).subscribe(order => {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;
            if (order.couponCodes.length) {
                this.couponCodesControl.setValue(order.couponCodes);
            }
            this.surchargeForm = new FormGroup({
                description: new FormControl('', Validators.required),
                sku: new FormControl(''),
                price: new FormControl(0, Validators.required),
                priceIncludesTax: new FormControl(true),
                taxRate: new FormControl(0),
                taxDescription: new FormControl(''),
            });
            if (!this.shippingAddressForm) {
                this.shippingAddressForm = new FormGroup({
                    fullName: new FormControl((_a = order.shippingAddress) === null || _a === void 0 ? void 0 : _a.fullName),
                    company: new FormControl((_b = order.shippingAddress) === null || _b === void 0 ? void 0 : _b.company),
                    streetLine1: new FormControl((_c = order.shippingAddress) === null || _c === void 0 ? void 0 : _c.streetLine1),
                    streetLine2: new FormControl((_d = order.shippingAddress) === null || _d === void 0 ? void 0 : _d.streetLine2),
                    city: new FormControl((_e = order.shippingAddress) === null || _e === void 0 ? void 0 : _e.city),
                    province: new FormControl((_f = order.shippingAddress) === null || _f === void 0 ? void 0 : _f.province),
                    postalCode: new FormControl((_g = order.shippingAddress) === null || _g === void 0 ? void 0 : _g.postalCode),
                    countryCode: new FormControl((_h = order.shippingAddress) === null || _h === void 0 ? void 0 : _h.countryCode),
                    phoneNumber: new FormControl((_j = order.shippingAddress) === null || _j === void 0 ? void 0 : _j.phoneNumber),
                });
                this.addAddressCustomFieldsFormGroup(this.shippingAddressForm, order.shippingAddress);
            }
            if (!this.billingAddressForm) {
                this.billingAddressForm = new FormGroup({
                    fullName: new FormControl((_k = order.billingAddress) === null || _k === void 0 ? void 0 : _k.fullName),
                    company: new FormControl((_l = order.billingAddress) === null || _l === void 0 ? void 0 : _l.company),
                    streetLine1: new FormControl((_m = order.billingAddress) === null || _m === void 0 ? void 0 : _m.streetLine1),
                    streetLine2: new FormControl((_o = order.billingAddress) === null || _o === void 0 ? void 0 : _o.streetLine2),
                    city: new FormControl((_p = order.billingAddress) === null || _p === void 0 ? void 0 : _p.city),
                    province: new FormControl((_q = order.billingAddress) === null || _q === void 0 ? void 0 : _q.province),
                    postalCode: new FormControl((_r = order.billingAddress) === null || _r === void 0 ? void 0 : _r.postalCode),
                    countryCode: new FormControl((_s = order.billingAddress) === null || _s === void 0 ? void 0 : _s.countryCode),
                    phoneNumber: new FormControl((_t = order.billingAddress) === null || _t === void 0 ? void 0 : _t.phoneNumber),
                });
                this.addAddressCustomFieldsFormGroup(this.billingAddressForm, order.billingAddress);
            }
            this.orderLineCustomFieldsFormArray = new FormArray([]);
            for (const line of order.lines) {
                const formGroup = new FormGroup({});
                for (const { name } of this.orderLineCustomFields) {
                    formGroup.addControl(name, new FormControl(line.customFields[name]));
                }
                formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {
                    let modifyRow = this.modifyOrderInput.adjustOrderLines.find(l => l.orderLineId === line.id);
                    if (!modifyRow) {
                        modifyRow = {
                            orderLineId: line.id,
                            quantity: line.quantity,
                        };
                        this.modifyOrderInput.adjustOrderLines.push(modifyRow);
                    }
                    if (this.orderLineCustomFields.length) {
                        modifyRow.customFields = value;
                    }
                });
                this.orderLineCustomFieldsFormArray.push(formGroup);
            }
        });
        this.availableCouponCodes$ = concat(this.couponCodeInput$.pipe(distinctUntilChanged(), switchMap(term => this.dataService.promotion.getPromotions(10, 0, {
            couponCode: { contains: term },
        }).single$), map(({ promotions }) => 
        // tslint:disable-next-line:no-non-null-assertion
        promotions.items.map(p => ({ code: p.couponCode, promotionName: p.name }))), startWith([])));
        this.addItemCustomFieldsFormArray = new FormArray([]);
        this.addItemCustomFieldsForm = new FormGroup({});
        for (const customField of this.orderLineCustomFields) {
            this.addItemCustomFieldsForm.addControl(customField.name, new FormControl());
        }
        this.availableCountries$ = this.dataService.settings
            .getAvailableCountries()
            .mapSingle(result => result.countries.items)
            .pipe(shareReplay(1));
        this.dataService.order
            .getOrderHistory(this.id, {
            take: 1,
            sort: {
                createdAt: SortOrder.DESC,
            },
            filter: { type: { eq: HistoryEntryType.ORDER_STATE_TRANSITION } },
        })
            .single$.subscribe(({ order }) => {
            this.previousState = order === null || order === void 0 ? void 0 : order.history.items[0].data.from;
        });
    }
    ngOnDestroy() {
        this.destroy();
    }
    transitionToPriorState(order) {
        this.orderTransitionService
            .transitionToPreModifyingState(order.id, order.nextStates)
            .subscribe(result => {
            this.router.navigate(['..'], { relativeTo: this.route });
        });
    }
    canPreviewChanges() {
        const { addItems, adjustOrderLines, surcharges } = this.modifyOrderInput;
        return (!!(addItems === null || addItems === void 0 ? void 0 : addItems.length) ||
            !!(surcharges === null || surcharges === void 0 ? void 0 : surcharges.length) ||
            !!(adjustOrderLines === null || adjustOrderLines === void 0 ? void 0 : adjustOrderLines.length) ||
            (this.shippingAddressForm.dirty && this.shippingAddressForm.valid) ||
            (this.billingAddressForm.dirty && this.billingAddressForm.valid) ||
            this.couponCodesControl.dirty);
    }
    isLineModified(line) {
        var _a;
        return !!((_a = this.modifyOrderInput.adjustOrderLines) === null || _a === void 0 ? void 0 : _a.find(l => l.orderLineId === line.id && l.quantity !== line.quantity));
    }
    updateLineQuantity(line, quantity) {
        const { adjustOrderLines } = this.modifyOrderInput;
        let row = adjustOrderLines === null || adjustOrderLines === void 0 ? void 0 : adjustOrderLines.find(l => l.orderLineId === line.id);
        if (row && +quantity === line.quantity) {
            // Remove the modification if the quantity is the same as
            // the original order
            adjustOrderLines === null || adjustOrderLines === void 0 ? void 0 : adjustOrderLines.splice(adjustOrderLines === null || adjustOrderLines === void 0 ? void 0 : adjustOrderLines.indexOf(row), 1);
        }
        if (!row) {
            row = { orderLineId: line.id, quantity: +quantity };
            adjustOrderLines === null || adjustOrderLines === void 0 ? void 0 : adjustOrderLines.push(row);
        }
        row.quantity = +quantity;
    }
    updateAddedItemQuantity(item, quantity) {
        var _a;
        const row = (_a = this.modifyOrderInput.addItems) === null || _a === void 0 ? void 0 : _a.find(l => l.productVariantId === item.productVariantId);
        if (row) {
            row.quantity = +quantity;
        }
    }
    trackByProductVariantId(index, item) {
        return item.productVariantId;
    }
    getSelectedItemPrice(result) {
        switch (result === null || result === void 0 ? void 0 : result.priceWithTax.__typename) {
            case 'SinglePrice':
                return result.priceWithTax.value;
            default:
                return 0;
        }
    }
    addItemToOrder(result) {
        var _a, _b;
        if (!result) {
            return;
        }
        const customFields = this.orderLineCustomFields.length
            ? this.addItemCustomFieldsForm.value
            : undefined;
        let row = (_a = this.modifyOrderInput.addItems) === null || _a === void 0 ? void 0 : _a.find(l => this.isMatchingAddItemRow(l, result, customFields));
        if (!row) {
            row = { productVariantId: result.productVariantId, quantity: 1 };
            if (customFields) {
                row.customFields = customFields;
            }
            (_b = this.modifyOrderInput.addItems) === null || _b === void 0 ? void 0 : _b.push(row);
        }
        else {
            row.quantity++;
        }
        if (customFields) {
            const formGroup = new FormGroup({});
            for (const [key, value] of Object.entries(customFields)) {
                formGroup.addControl(key, new FormControl(value));
            }
            this.addItemCustomFieldsFormArray.push(formGroup);
            formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {
                if (row) {
                    row.customFields = value;
                }
            });
        }
        this.addItemCustomFieldsForm.reset({});
        this.addItemSelectedVariant = undefined;
        this.addedVariants.set(result.productVariantId, result);
    }
    isMatchingAddItemRow(row, result, customFields) {
        return (row.productVariantId === result.productVariantId &&
            JSON.stringify(row.customFields) === JSON.stringify(customFields));
    }
    removeAddedItem(index) {
        this.modifyOrderInput.addItems.splice(index, 1);
        if (-1 < index) {
            this.addItemCustomFieldsFormArray.removeAt(index);
        }
    }
    getSurchargePrices(surcharge) {
        const priceWithTax = surcharge.priceIncludesTax
            ? surcharge.price
            : Math.round(surcharge.price * ((100 + (surcharge.taxRate || 0)) / 100));
        const price = surcharge.priceIncludesTax
            ? Math.round(surcharge.price / ((100 + (surcharge.taxRate || 0)) / 100))
            : surcharge.price;
        return {
            price,
            priceWithTax,
        };
    }
    addSurcharge(value) {
        var _a;
        (_a = this.modifyOrderInput.surcharges) === null || _a === void 0 ? void 0 : _a.push(value);
        this.surchargeForm.reset({
            price: 0,
            priceIncludesTax: true,
            taxRate: 0,
        });
    }
    removeSurcharge(index) {
        var _a;
        (_a = this.modifyOrderInput.surcharges) === null || _a === void 0 ? void 0 : _a.splice(index, 1);
    }
    previewAndModify(order) {
        var _a;
        const input = Object.assign(Object.assign(Object.assign(Object.assign({}, this.modifyOrderInput), (this.billingAddressForm.dirty ? { updateBillingAddress: this.billingAddressForm.value } : {})), (this.shippingAddressForm.dirty
            ? { updateShippingAddress: this.shippingAddressForm.value }
            : {})), { dryRun: true, couponCodes: this.couponCodesControl.dirty ? this.couponCodesControl.value : undefined, note: (_a = this.note) !== null && _a !== void 0 ? _a : '', options: {
                recalculateShipping: this.recalculateShipping,
            } });
        const originalTotalWithTax = order.totalWithTax;
        this.dataService.order
            .modifyOrder(input)
            .pipe(switchMap(({ modifyOrder }) => {
            switch (modifyOrder.__typename) {
                case 'Order':
                    return this.modalService.fromComponent(OrderEditsPreviewDialogComponent, {
                        size: 'xl',
                        closable: false,
                        locals: {
                            originalTotalWithTax,
                            order: modifyOrder,
                            orderLineCustomFields: this.orderLineCustomFields,
                            modifyOrderInput: input,
                        },
                    });
                case 'InsufficientStockError':
                case 'NegativeQuantityError':
                case 'NoChangesSpecifiedError':
                case 'OrderLimitError':
                case 'OrderModificationStateError':
                case 'PaymentMethodMissingError':
                case 'RefundPaymentIdMissingError':
                case 'CouponCodeLimitError':
                case 'CouponCodeExpiredError':
                case 'CouponCodeInvalidError': {
                    this.notificationService.error(modifyOrder.message);
                    return of(false);
                }
                case null:
                case undefined:
                    return of(false);
                default:
                    assertNever(modifyOrder);
            }
        }), switchMap(result => {
            if (!result || result.result === OrderEditResultType.Cancel) {
                // re-fetch so that the preview values get overwritten in the cache.
                return this.dataService.order.getOrder(this.id).mapSingle(() => false);
            }
            else {
                // Do the modification
                const wetRunInput = Object.assign(Object.assign({}, input), { dryRun: false });
                if (result.result === OrderEditResultType.Refund) {
                    wetRunInput.refund = {
                        paymentId: result.refundPaymentId,
                        reason: result.refundNote,
                    };
                }
                return this.dataService.order.modifyOrder(wetRunInput).pipe(switchMap(({ modifyOrder }) => {
                    if (modifyOrder.__typename === 'Order') {
                        const priceDelta = modifyOrder.totalWithTax - originalTotalWithTax;
                        const nextState = 0 < priceDelta ? 'ArrangingAdditionalPayment' : this.previousState;
                        return this.dataService.order
                            .transitionToState(order.id, nextState)
                            .pipe(mapTo(true));
                    }
                    else {
                        this.notificationService.error(modifyOrder.message);
                        return EMPTY;
                    }
                }));
            }
        }))
            .subscribe(result => {
            if (result) {
                this.router.navigate(['../'], { relativeTo: this.route });
            }
        });
    }
    addAddressCustomFieldsFormGroup(parentFormGroup, address) {
        var _a;
        if (address && this.addressCustomFields.length) {
            const addressCustomFieldsFormGroup = new FormGroup({});
            for (const customFieldDef of this.addressCustomFields) {
                const name = customFieldDef.name;
                const value = (_a = address.customFields) === null || _a === void 0 ? void 0 : _a[name];
                addressCustomFieldsFormGroup.addControl(name, new FormControl(value));
            }
            parentFormGroup.addControl('customFields', addressCustomFieldsFormGroup);
        }
    }
    setFormValues(entity, languageCode) {
        /* not used */
    }
}
OrderEditorComponent.ɵfac = function OrderEditorComponent_Factory(t) { return new (t || OrderEditorComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ServerConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DataService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NotificationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ModalService), ɵngcc0.ɵɵdirectiveInject(OrderTransitionService)); };
OrderEditorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderEditorComponent, selectors: [["vdr-order-editor"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 6, consts: [[4, "ngIf"], [1, "flex", "clr-align-items-center"], [3, "entity"], [3, "state"], [1, "btn", "btn-secondary", 3, "click"], [1, "clr-row"], [1, "clr-col-lg-8"], [1, "order-table", "table"], ["class", "order-line", 3, "is-cancelled", "modified", 4, "ngFor", "ngForOf"], ["class", "modified", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["class", "surcharge", 4, "ngFor", "ngForOf"], ["class", "surcharge modified", 4, "ngFor", "ngForOf"], [1, "shipping"], [1, "left", "clr-align-middle"], [1, "clr-align-middle"], ["colspan", "3"], [1, "net-price", 3, "title"], [1, "mb2"], [4, "clrIfExpanded"], [1, "clr-col-lg-4", "order-cards"], [1, "card"], [1, "card-header"], [1, "card-block"], [1, "clr-control-label"], ["name", "note", "clrTextarea", "", "required", "", 3, "ngModel", "ngModelChange"], [1, ""], ["type", "checkbox", "clrCheckbox", "", 3, "ngModel", "ngModelChange"], [1, "card-footer"], [1, "btn", "btn-primary", 3, "disabled", "click"], [1, "order-line"], [1, "align-middle", "thumb"], [3, "src", 4, "ngIf"], [1, "align-middle", "name"], [1, "align-middle", "sku"], [1, "align-middle", "unit-price"], [1, "align-middle", "quantity"], ["type", "number", "min", "0", 3, "value", "input"], [3, "line", "payments"], [3, "line", "orderState"], ["class", "order-line-custom-field align-middle", 4, "ngIf"], [1, "align-middle", "total"], [3, "src"], [1, "order-line-custom-field", "align-middle"], [4, "ngFor", "ngForOf"], ["entityName", "OrderLine", 3, "customField", "customFieldsFormGroup", "compact"], [1, "modified"], [1, "icon-button", 3, "click"], ["shape", "trash"], [1, "surcharge"], ["colspan", "2", 1, "align-middle", "name", "left"], [1, "align-middle"], [1, "surcharge", "modified"], [1, "mb4", 3, "productSelected"], ["class", "flex mb4", 4, "ngIf"], [1, "btn", "btn-secondary", 3, "disabled", "click"], [1, "flex", "mb4"], ["class", "mr4", 3, "src", 4, "ngIf"], [1, "mr4"], [1, "mr4", 3, "src"], ["entityName", "OrderLine", 3, "readonly", "customField", "customFieldsFormGroup", "compact"], ["appendTo", "body", "bindLabel", "code", "bindValue", "code", "typeToSearchText", "", 3, "items", "addTag", "multiple", "hideSelected", "minTermLength", "typeahead", "formControl"], ["ng-option-tmp", ""], [3, "formGroup", "submit"], ["for", "description", 3, "label"], ["id", "description", "type", "text", "formControlName", "description"], ["for", "sku", 3, "label"], ["id", "sku", "type", "text", "formControlName", "sku"], ["for", "price", 3, "label"], ["id", "price", "formControlName", "price", 3, "currencyCode"], ["for", "priceIncludesTax", 3, "label"], ["id", "priceIncludesTax", "type", "checkbox", "clrCheckbox", "", "formControlName", "priceIncludesTax"], ["for", "taxRate", 3, "label"], ["suffix", "%"], ["id", "taxRate", "type", "number", "min", "0", "max", "100", "formControlName", "taxRate"], ["for", "taxDescription", 3, "label"], ["id", "taxDescription", "type", "text", "formControlName", "taxDescription"], [1, "btn", "btn-secondary", 3, "disabled"], [3, "formGroup", "availableCountries", "customFields"]], template: function OrderEditorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, OrderEditorComponent_vdr_action_bar_0_Template, 10, 7, "vdr-action-bar", 0);
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵtemplate(2, OrderEditorComponent_div_2_Template, 98, 75, "div", 0);
        ɵngcc0.ɵɵpipe(3, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(1, 2, ctx.entity$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(3, 4, ctx.entity$));
    } }, directives: [ɵngcc5.NgIf, ɵngcc1.ActionBarComponent, ɵngcc1.ActionBarLeftComponent, ɵngcc1.EntityInfoComponent, ɵngcc1.OrderStateLabelComponent, ɵngcc1.ActionBarRightComponent, ɵngcc5.NgForOf, ɵngcc6.ClrDatagridItemsTrackBy, ɵngcc6.ClrAccordion, ɵngcc6.ÇlrAccordionWillyWonka, ɵngcc6.ClrAccordionPanel, ɵngcc6.ÇlrAccordionOompaLoompa, ɵngcc6.ClrAccordionTitle, ɵngcc6.ÇlrDatagridDetailRegisterer, ɵngcc6.ClrIfExpanded, ɵngcc6.ClrLabel, ɵngcc1.FormFieldControlDirective, ɵngcc2.DefaultValueAccessor, ɵngcc6.ClrTextarea, ɵngcc2.RequiredValidator, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc6.ClrCheckboxWrapper, ɵngcc2.CheckboxControlValueAccessor, ɵngcc6.ClrCheckbox, LineRefundsComponent, LineFulfillmentComponent, ɵngcc1.CustomFieldControlComponent, ɵngcc6.ClrIconCustomTag, ɵngcc6.ClrAccordionContent, ɵngcc1.ProductSelectorComponent, ɵngcc3.NgSelectComponent, ɵngcc2.FormControlDirective, ɵngcc3.ɵf, ɵngcc1.ChipComponent, ɵngcc2.ɵNgNoValidate, ɵngcc2.NgControlStatusGroup, ɵngcc2.FormGroupDirective, ɵngcc1.FormFieldComponent, ɵngcc2.FormControlName, ɵngcc1.CurrencyInputComponent, ɵngcc1.AffixedInputComponent, ɵngcc2.MinValidator, ɵngcc2.MaxValidator, ɵngcc2.NumberValueAccessor, ɵngcc1.AddressFormComponent], pipes: [ɵngcc5.AsyncPipe, ɵngcc4.TranslatePipe, ɵngcc1.LocaleCurrencyPipe, ɵngcc1.AssetPreviewPipe, ɵngcc5.CurrencyPipe], styles: [".order-table[_ngcontent-%COMP%]   .is-cancelled[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{text-decoration:line-through;background-color:var(--color-component-bg-200)}.order-table[_ngcontent-%COMP%]   .sub-total[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-top:1px dashed var(--color-component-border-200)}.order-table[_ngcontent-%COMP%]   .total[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{font-weight:bold;border-top:1px dashed var(--color-component-border-200)}.order-table[_ngcontent-%COMP%]   td.custom-fields-row[_ngcontent-%COMP%]{border-top-style:dashed;border-top-color:var(--color-grey-200)}.order-table[_ngcontent-%COMP%]   .order-line-custom-fields[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}.order-table[_ngcontent-%COMP%]   .order-line-custom-fields[_ngcontent-%COMP%]   .custom-field[_ngcontent-%COMP%]{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-right:18px}.order-table[_ngcontent-%COMP%]   .order-line-custom-field[_ngcontent-%COMP%]{background-color:var(--color-component-bg-100)}.order-table[_ngcontent-%COMP%]   .order-line-custom-field[_ngcontent-%COMP%]   .custom-field-ellipsis[_ngcontent-%COMP%]{color:var(--color-text-300)}.order-table[_ngcontent-%COMP%]   .net-price[_ngcontent-%COMP%]{font-size:11px;color:var(--color-text-300)}.order-table[_ngcontent-%COMP%]   .promotions-label[_ngcontent-%COMP%]{-webkit-text-decoration:underline dotted var(--color-text-200);text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}.order-table[_ngcontent-%COMP%]   tr.modified[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{background-color:var(--color-warning-100)}"], changeDetection: 0 });
OrderEditorComponent.ctorParameters = () => [
    { type: Router },
    { type: ActivatedRoute },
    { type: ServerConfigService },
    { type: ChangeDetectorRef },
    { type: DataService },
    { type: NotificationService },
    { type: ModalService },
    { type: OrderTransitionService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderEditorComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-editor',
                template: "<vdr-action-bar *ngIf=\"entity$ | async as order\">\r\n    <vdr-ab-left>\r\n        <div class=\"flex clr-align-items-center\">\r\n            <vdr-entity-info [entity]=\"entity$ | async\"></vdr-entity-info>\r\n            <vdr-order-state-label [state]=\"order.state\"></vdr-order-state-label>\r\n        </div>\r\n    </vdr-ab-left>\r\n\r\n    <vdr-ab-right>\r\n        <button class=\"btn btn-secondary\" (click)=\"transitionToPriorState(order)\">\r\n            {{ 'order.cancel-modification' | translate }}\r\n        </button>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<div *ngIf=\"entity$ | async as order\">\r\n    <div class=\"clr-row\">\r\n        <div class=\"clr-col-lg-8\">\r\n            <table class=\"order-table table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>{{ 'order.product-name' | translate }}</th>\r\n                        <th>{{ 'order.product-sku' | translate }}</th>\r\n                        <th>{{ 'order.unit-price' | translate }}</th>\r\n                        <th>{{ 'order.quantity' | translate }}</th>\r\n                        <th *ngIf=\"orderLineCustomFields.length\">{{ 'common.custom-fields' | translate }}</th>\r\n                        <th>{{ 'order.total' | translate }}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr\r\n                        *ngFor=\"let line of order.lines; let i = index\"\r\n                        class=\"order-line\"\r\n                        [class.is-cancelled]=\"line.quantity === 0\"\r\n                        [class.modified]=\"isLineModified(line)\"\r\n                    >\r\n                        <td class=\"align-middle thumb\">\r\n                            <img\r\n                                *ngIf=\"line.featuredAsset\"\r\n                                [src]=\"line.featuredAsset | assetPreview: 'tiny'\"\r\n                            />\r\n                        </td>\r\n                        <td class=\"align-middle name\">{{ line.productVariant.name }}</td>\r\n                        <td class=\"align-middle sku\">{{ line.productVariant.sku }}</td>\r\n                        <td class=\"align-middle unit-price\">\r\n                            {{ line.unitPriceWithTax | localeCurrency: order.currencyCode }}\r\n                            <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                {{ line.unitPrice | localeCurrency: order.currencyCode }}\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"align-middle quantity\">\r\n                            <input\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                [value]=\"line.quantity\"\r\n                                (input)=\"updateLineQuantity(line, $event.target.value)\"\r\n                            />\r\n                            <vdr-line-refunds [line]=\"line\" [payments]=\"order.payments\"></vdr-line-refunds>\r\n                            <vdr-line-fulfillment\r\n                                [line]=\"line\"\r\n                                [orderState]=\"order.state\"\r\n                            ></vdr-line-fulfillment>\r\n                        </td>\r\n                        <td *ngIf=\"orderLineCustomFields.length\" class=\"order-line-custom-field align-middle\">\r\n                            <ng-container *ngFor=\"let customField of orderLineCustomFields\">\r\n                                <vdr-custom-field-control\r\n                                    [customField]=\"customField\"\r\n                                    [customFieldsFormGroup]=\"orderLineCustomFieldsFormArray.get([i])\"\r\n                                    entityName=\"OrderLine\"\r\n                                    [compact]=\"true\"\r\n                                ></vdr-custom-field-control>\r\n                            </ng-container>\r\n                        </td>\r\n                        <td class=\"align-middle total\">\r\n                            {{ line.linePriceWithTax | localeCurrency: order.currencyCode }}\r\n                            <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                {{ line.linePrice | localeCurrency: order.currencyCode }}\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr\r\n                        *ngFor=\"let addedLine of addedLines; trackBy: trackByProductVariantId; let i = index\"\r\n                        class=\"modified\"\r\n                    >\r\n                        <td class=\"align-middle thumb\">\r\n                            <img\r\n                                *ngIf=\"addedLine.productAsset\"\r\n                                [src]=\"addedLine.productAsset | assetPreview: 'tiny'\"\r\n                            />\r\n                        </td>\r\n                        <td class=\"align-middle name\">{{ addedLine.productVariantName }}</td>\r\n                        <td class=\"align-middle sku\">{{ addedLine.sku }}</td>\r\n                        <td class=\"align-middle unit-price\">\r\n                            {{ addedLine.priceWithTax | localeCurrency: order.currencyCode }}\r\n                            <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                {{ addedLine.price | localeCurrency: order.currencyCode }}\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"align-middle quantity\">\r\n                            <input\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                [value]=\"addedLine.quantity\"\r\n                                (input)=\"updateAddedItemQuantity(addedLine, $event.target.value)\"\r\n                            />\r\n                            <button class=\"icon-button\" (click)=\"removeAddedItem(i)\">\r\n                                <clr-icon shape=\"trash\"></clr-icon>\r\n                            </button>\r\n                        </td>\r\n                        <td *ngIf=\"orderLineCustomFields.length\" class=\"order-line-custom-field align-middle\">\r\n                            <ng-container *ngFor=\"let customField of orderLineCustomFields\">\r\n                                <vdr-custom-field-control\r\n                                    [customField]=\"customField\"\r\n                                    [customFieldsFormGroup]=\"addItemCustomFieldsFormArray.get([i])\"\r\n                                    entityName=\"OrderLine\"\r\n                                    [compact]=\"true\"\r\n                                ></vdr-custom-field-control>\r\n                            </ng-container>\r\n                        </td>\r\n                        <td class=\"align-middle total\">\r\n                            {{\r\n                                (addedLine.priceWithTax * addedLine.quantity) / 100\r\n                                    | currency: order.currencyCode\r\n                            }}\r\n                            <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                {{\r\n                                    (addedLine.price * addedLine.quantity) / 100\r\n                                        | currency: order.currencyCode\r\n                                }}\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr class=\"surcharge\" *ngFor=\"let surcharge of order.surcharges\">\r\n                        <td class=\"align-middle name left\" colspan=\"2\">{{ surcharge.description }}</td>\r\n                        <td class=\"align-middle sku\">{{ surcharge.sku }}</td>\r\n                        <td class=\"align-middle\"></td>\r\n                        <td></td>\r\n                        <td *ngIf=\"orderLineCustomFields.length\"></td>\r\n                        <td class=\"align-middle total\">\r\n                            {{ surcharge.priceWithTax | localeCurrency: order.currencyCode }}\r\n                            <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                {{ surcharge.price | localeCurrency: order.currencyCode }}\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr\r\n                        class=\"surcharge modified\"\r\n                        *ngFor=\"let surcharge of modifyOrderInput.surcharges; let i = index\"\r\n                    >\r\n                        <td class=\"align-middle name left\" colspan=\"2\">\r\n                            {{ surcharge.description }}\r\n                            <button class=\"icon-button\" (click)=\"removeSurcharge(i)\">\r\n                                <clr-icon shape=\"trash\"></clr-icon>\r\n                            </button>\r\n                        </td>\r\n                        <td class=\"align-middle sku\">{{ surcharge.sku }}</td>\r\n                        <td class=\"align-middle\"></td>\r\n                        <td></td>\r\n                        <td *ngIf=\"orderLineCustomFields.length\"></td>\r\n                        <td class=\"align-middle total\">\r\n                            <ng-container *ngIf=\"getSurchargePrices(surcharge) as surchargePrice\">\r\n                                {{ surchargePrice.priceWithTax | localeCurrency: order.currencyCode }}\r\n                                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                    {{ surchargePrice.price | localeCurrency: order.currencyCode }}\r\n                                </div>\r\n                            </ng-container>\r\n                        </td>\r\n                    </tr>\r\n                    <tr class=\"shipping\">\r\n                        <td class=\"left clr-align-middle\">{{ 'order.shipping' | translate }}</td>\r\n                        <td class=\"clr-align-middle\">{{ order.shippingLines[0]?.shippingMethod?.name }}</td>\r\n                        <td colspan=\"3\"></td>\r\n                        <td *ngIf=\"orderLineCustomFields.length\"></td>\r\n                        <td class=\"clr-align-middle\">\r\n                            {{ order.shippingWithTax | localeCurrency: order.currencyCode }}\r\n                            <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                {{ order.shipping | localeCurrency: order.currencyCode }}\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <h4 class=\"mb2\">{{ 'order.modifications' | translate }}</h4>\r\n            <clr-accordion>\r\n                <clr-accordion-panel>\r\n                    <clr-accordion-title>{{ 'order.add-item-to-order' | translate }}</clr-accordion-title>\r\n                    <clr-accordion-content *clrIfExpanded>\r\n                        <vdr-product-selector class=\"mb4\" (productSelected)=\"addItemSelectedVariant = $event\">\r\n                        </vdr-product-selector>\r\n                        <div *ngIf=\"addItemSelectedVariant\" class=\"flex mb4\">\r\n                            <img\r\n                                *ngIf=\"addItemSelectedVariant.productAsset as asset\"\r\n                                [src]=\"asset | assetPreview: 'tiny'\"\r\n                                class=\"mr4\"\r\n                            />\r\n                            <div>\r\n                                <strong class=\"mr4\">{{ addItemSelectedVariant.productVariantName }}</strong>\r\n                                <small>{{ addItemSelectedVariant.sku }}</small>\r\n                                <div>\r\n                                    {{\r\n                                        getSelectedItemPrice(addItemSelectedVariant)\r\n                                            | localeCurrency: order.currencyCode\r\n                                    }}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ng-container *ngFor=\"let customField of orderLineCustomFields\">\r\n                            <vdr-custom-field-control\r\n                                [readonly]=\"!addItemSelectedVariant\"\r\n                                [customField]=\"customField\"\r\n                                [customFieldsFormGroup]=\"addItemCustomFieldsForm\"\r\n                                entityName=\"OrderLine\"\r\n                                [compact]=\"true\"\r\n                            ></vdr-custom-field-control>\r\n                        </ng-container>\r\n                        <button\r\n                            class=\"btn btn-secondary\"\r\n                            [disabled]=\"!addItemSelectedVariant || addItemCustomFieldsForm.invalid\"\r\n                            (click)=\"addItemToOrder(addItemSelectedVariant)\"\r\n                        >\r\n                            {{ 'order.add-item-to-order' | translate }}\r\n                        </button>\r\n                    </clr-accordion-content>\r\n                </clr-accordion-panel>\r\n                <clr-accordion-panel>\r\n                    <clr-accordion-title>{{ 'order.set-coupon-codes' | translate }}</clr-accordion-title>\r\n                    <clr-accordion-content *clrIfExpanded>\r\n                        <ng-select\r\n                            [items]=\"availableCouponCodes$ | async\"\r\n                            appendTo=\"body\"\r\n                            bindLabel=\"code\"\r\n                            bindValue=\"code\"\r\n                            [addTag]=\"false\"\r\n                            [multiple]=\"true\"\r\n                            [hideSelected]=\"true\"\r\n                            [minTermLength]=\"2\"\r\n                            typeToSearchText=\"\"\r\n                            [typeahead]=\"couponCodeInput$\"\r\n                            [formControl]=\"couponCodesControl\"\r\n                        >\r\n                            <ng-template ng-option-tmp let-item=\"item\">\r\n                                <vdr-chip>{{ item.code }}</vdr-chip> {{ item.promotionName }}\r\n                            </ng-template>\r\n                        </ng-select>\r\n                    </clr-accordion-content>\r\n                </clr-accordion-panel>\r\n\r\n                <clr-accordion-panel>\r\n                    <clr-accordion-title>{{ 'order.add-surcharge' | translate }}</clr-accordion-title>\r\n                    <clr-accordion-content *clrIfExpanded>\r\n                        <form [formGroup]=\"surchargeForm\" (submit)=\"addSurcharge(surchargeForm.value)\">\r\n                            <vdr-form-field [label]=\"'common.description' | translate\" for=\"description\"\r\n                                ><input id=\"description\" type=\"text\" formControlName=\"description\"\r\n                            /></vdr-form-field>\r\n                            <vdr-form-field [label]=\"'order.product-sku' | translate\" for=\"sku\"\r\n                                ><input id=\"sku\" type=\"text\" formControlName=\"sku\"\r\n                            /></vdr-form-field>\r\n                            <vdr-form-field [label]=\"'common.price' | translate\" for=\"price\"\r\n                                ><vdr-currency-input\r\n                                    [currencyCode]=\"order.currencyCode\"\r\n                                    id=\"price\"\r\n                                    formControlName=\"price\"\r\n                                ></vdr-currency-input\r\n                            ></vdr-form-field>\r\n                            <vdr-form-field\r\n                                [label]=\"\r\n                                    'catalog.price-includes-tax-at'\r\n                                        | translate: { rate: surchargeForm.get('taxRate')?.value }\r\n                                \"\r\n                                for=\"priceIncludesTax\"\r\n                                ><input\r\n                                    id=\"priceIncludesTax\"\r\n                                    type=\"checkbox\"\r\n                                    clrCheckbox\r\n                                    formControlName=\"priceIncludesTax\"\r\n                            /></vdr-form-field>\r\n                            <vdr-form-field [label]=\"'order.tax-rate' | translate\" for=\"taxRate\"\r\n                                ><vdr-affixed-input suffix=\"%\"\r\n                                    ><input\r\n                                        id=\"taxRate\"\r\n                                        type=\"number\"\r\n                                        min=\"0\"\r\n                                        max=\"100\"\r\n                                        formControlName=\"taxRate\" /></vdr-affixed-input\r\n                            ></vdr-form-field>\r\n                            <vdr-form-field [label]=\"'order.tax-description' | translate\" for=\"taxDescription\"\r\n                                ><input id=\"taxDescription\" type=\"text\" formControlName=\"taxDescription\"\r\n                            /></vdr-form-field>\r\n                            <button\r\n                                class=\"btn btn-secondary\"\r\n                                [disabled]=\"\r\n                                    surchargeForm.invalid ||\r\n                                    surchargeForm.pristine ||\r\n                                    surchargeForm.get('price')?.value === 0\r\n                                \"\r\n                            >\r\n                                {{ 'order.add-surcharge' | translate }}\r\n                            </button>\r\n                        </form>\r\n                    </clr-accordion-content>\r\n                </clr-accordion-panel>\r\n                <clr-accordion-panel>\r\n                    <clr-accordion-title>{{ 'order.edit-shipping-address' | translate }}</clr-accordion-title>\r\n                    <clr-accordion-content *clrIfExpanded>\r\n                        <vdr-address-form\r\n                            [formGroup]=\"shippingAddressForm\"\r\n                            [availableCountries]=\"availableCountries$ | async\"\r\n                            [customFields]=\"addressCustomFields\"\r\n                        ></vdr-address-form>\r\n                    </clr-accordion-content>\r\n                </clr-accordion-panel>\r\n                <clr-accordion-panel>\r\n                    <clr-accordion-title>{{ 'order.edit-billing-address' | translate }}</clr-accordion-title>\r\n                    <clr-accordion-content *clrIfExpanded>\r\n                        <vdr-address-form\r\n                            [formGroup]=\"billingAddressForm\"\r\n                            [availableCountries]=\"availableCountries$ | async\"\r\n                            [customFields]=\"addressCustomFields\"\r\n                        ></vdr-address-form>\r\n                    </clr-accordion-content>\r\n                </clr-accordion-panel>\r\n            </clr-accordion>\r\n        </div>\r\n        <div class=\"clr-col-lg-4 order-cards\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    {{ 'order.modification-summary' | translate }}\r\n                </div>\r\n                <div class=\"card-block\">\r\n                    <ul>\r\n                        <li *ngIf=\"modifyOrderInput.addItems?.length\">\r\n                            {{\r\n                                'order.modification-adding-items'\r\n                                    | translate: { count: modifyOrderInput.addItems?.length }\r\n                            }}\r\n                        </li>\r\n                        <li *ngIf=\"modifyOrderInput.adjustOrderLines?.length\">\r\n                            {{\r\n                                'order.modification-adjusting-lines'\r\n                                    | translate: { count: modifyOrderInput.adjustOrderLines?.length }\r\n                            }}\r\n                        </li>\r\n                        <li *ngIf=\"modifyOrderInput.surcharges?.length\">\r\n                            {{\r\n                                'order.modification-adding-surcharges'\r\n                                    | translate: { count: modifyOrderInput.surcharges?.length }\r\n                            }}\r\n                        </li>\r\n                        <li *ngIf=\"shippingAddressForm.dirty\">\r\n                            {{ 'order.modification-updating-shipping-address' | translate }}\r\n                        </li>\r\n                        <li *ngIf=\"billingAddressForm.dirty\">\r\n                            {{ 'order.modification-updating-billing-address' | translate }}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"card-block\">\r\n                    <label class=\"clr-control-label\">{{ 'order.note' | translate }}</label>\r\n                    <textarea [(ngModel)]=\"note\" name=\"note\" clrTextarea required></textarea>\r\n                    <clr-checkbox-wrapper class=\"\">\r\n                        <input type=\"checkbox\" clrCheckbox [(ngModel)]=\"recalculateShipping\" />\r\n                        <label>{{ 'order.modification-recalculate-shipping' | translate }}</label>\r\n                    </clr-checkbox-wrapper>\r\n                </div>\r\n                <div class=\"card-footer\">\r\n                    <button\r\n                        class=\"btn btn-primary\"\r\n                        [disabled]=\"!canPreviewChanges()\"\r\n                        (click)=\"previewAndModify(order)\"\r\n                    >\r\n                        {{ 'order.preview-changes' | translate }}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".order-table .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}.order-table .sub-total td{border-top:1px dashed var(--color-component-border-200)}.order-table .total td{font-weight:bold;border-top:1px dashed var(--color-component-border-200)}.order-table td.custom-fields-row{border-top-style:dashed;border-top-color:var(--color-grey-200)}.order-table .order-line-custom-fields{display:flex;flex-wrap:wrap}.order-table .order-line-custom-fields .custom-field{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-right:18px}.order-table .order-line-custom-field{background-color:var(--color-component-bg-100)}.order-table .order-line-custom-field .custom-field-ellipsis{color:var(--color-text-300)}.order-table .net-price{font-size:11px;color:var(--color-text-300)}.order-table .promotions-label{-webkit-text-decoration:underline dotted var(--color-text-200);text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}.order-table tr.modified td{background-color:var(--color-warning-100)}\n"]
            }]
    }], function () { return [{ type: ɵngcc8.Router }, { type: ɵngcc8.ActivatedRoute }, { type: ɵngcc1.ServerConfigService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.DataService }, { type: ɵngcc1.NotificationService }, { type: ɵngcc1.ModalService }, { type: OrderTransitionService }]; }, null); })();

class OrderHistoryComponent {
    constructor() {
        this.addNote = new EventEmitter();
        this.updateNote = new EventEmitter();
        this.deleteNote = new EventEmitter();
        this.note = '';
        this.noteIsPrivate = true;
        this.expanded = false;
        this.type = HistoryEntryType;
    }
    getDisplayType(entry) {
        if (entry.type === HistoryEntryType.ORDER_STATE_TRANSITION) {
            if (entry.data.to === 'Delivered') {
                return 'success';
            }
            if (entry.data.to === 'Cancelled') {
                return 'error';
            }
        }
        if (entry.type === HistoryEntryType.ORDER_FULFILLMENT_TRANSITION) {
            if (entry.data.to === 'Delivered') {
                return 'success';
            }
        }
        if (entry.type === HistoryEntryType.ORDER_PAYMENT_TRANSITION) {
            if (entry.data.to === 'Declined' || entry.data.to === 'Cancelled') {
                return 'error';
            }
        }
        if (entry.type === HistoryEntryType.ORDER_CANCELLATION) {
            return 'error';
        }
        if (entry.type === HistoryEntryType.ORDER_REFUND_TRANSITION) {
            return 'warning';
        }
        return 'default';
    }
    getTimelineIcon(entry) {
        if (entry.type === HistoryEntryType.ORDER_STATE_TRANSITION) {
            if (entry.data.to === 'Delivered') {
                return ['success-standard', 'is-solid'];
            }
            if (entry.data.to === 'Cancelled') {
                return 'ban';
            }
        }
        if (entry.type === HistoryEntryType.ORDER_PAYMENT_TRANSITION) {
            if (entry.data.to === 'Settled') {
                return 'credit-card';
            }
        }
        if (entry.type === HistoryEntryType.ORDER_NOTE) {
            return 'note';
        }
        if (entry.type === HistoryEntryType.ORDER_MODIFIED) {
            return 'pencil';
        }
        if (entry.type === HistoryEntryType.ORDER_FULFILLMENT_TRANSITION) {
            if (entry.data.to === 'Shipped') {
                return 'truck';
            }
            if (entry.data.to === 'Delivered') {
                return 'truck';
            }
        }
    }
    isFeatured(entry) {
        switch (entry.type) {
            case HistoryEntryType.ORDER_STATE_TRANSITION: {
                return (entry.data.to === 'Delivered' ||
                    entry.data.to === 'Cancelled' ||
                    entry.data.to === 'Settled');
            }
            case HistoryEntryType.ORDER_PAYMENT_TRANSITION:
                return entry.data.to === 'Settled' || entry.data.to === 'Cancelled';
            case HistoryEntryType.ORDER_FULFILLMENT_TRANSITION:
                return entry.data.to === 'Delivered' || entry.data.to === 'Shipped';
            case HistoryEntryType.ORDER_NOTE:
            case HistoryEntryType.ORDER_MODIFIED:
                return true;
            default:
                return false;
        }
    }
    getFulfillment(entry) {
        if ((entry.type === HistoryEntryType.ORDER_FULFILLMENT ||
            entry.type === HistoryEntryType.ORDER_FULFILLMENT_TRANSITION) &&
            this.order.fulfillments) {
            return this.order.fulfillments.find(f => f.id === entry.data.fulfillmentId);
        }
    }
    getPayment(entry) {
        if (entry.type === HistoryEntryType.ORDER_PAYMENT_TRANSITION && this.order.payments) {
            return this.order.payments.find(p => p.id === entry.data.paymentId);
        }
    }
    getCancelledItems(entry) {
        const itemMap = new Map();
        const cancelledItemIds = entry.data.orderItemIds;
        for (const line of this.order.lines) {
            for (const item of line.items) {
                if (cancelledItemIds.includes(item.id)) {
                    const count = itemMap.get(line.productVariant.name);
                    if (count != null) {
                        itemMap.set(line.productVariant.name, count + 1);
                    }
                    else {
                        itemMap.set(line.productVariant.name, 1);
                    }
                }
            }
        }
        return Array.from(itemMap.entries()).map(([name, quantity]) => ({ name, quantity }));
    }
    getModification(id) {
        return this.order.modifications.find(m => m.id === id);
    }
    getName(entry) {
        const { administrator } = entry;
        if (administrator) {
            return `${administrator.firstName} ${administrator.lastName}`;
        }
        else {
            const customer = this.order.customer;
            if (customer) {
                return `${customer.firstName} ${customer.lastName}`;
            }
        }
        return '';
    }
    addNoteToOrder() {
        this.addNote.emit({ note: this.note, isPublic: !this.noteIsPrivate });
        this.note = '';
        this.noteIsPrivate = true;
    }
}
OrderHistoryComponent.ɵfac = function OrderHistoryComponent_Factory(t) { return new (t || OrderHistoryComponent)(); };
OrderHistoryComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderHistoryComponent, selectors: [["vdr-order-history"]], inputs: { order: "order", history: "history" }, outputs: { addNote: "addNote", updateNote: "updateNote", deleteNote: "deleteNote" }, decls: 23, vars: 24, consts: [[1, "entry-list"], ["iconShape", "note", "displayType", "muted", 3, "featured"], [1, "note-entry"], ["name", "note", 1, "note", 3, "ngModel", "ngModelChange"], [1, "btn", "btn-secondary", 3, "disabled", "click"], [1, "visibility-select"], ["type", "checkbox", "clrCheckbox", "", 3, "ngModel", "ngModelChange"], ["class", "private", 4, "ngIf"], ["class", "public", 4, "ngIf"], [3, "displayType", "iconShape", "createdAt", "name", "featured", "collapsed", "expandClick", 4, "ngFor", "ngForOf"], [3, "isLast", "createdAt", "featured"], [1, "title"], [1, "private"], [1, "public"], [3, "displayType", "iconShape", "createdAt", "name", "featured", "collapsed", "expandClick"], [3, "ngSwitch"], [4, "ngSwitchCase"], ["class", "title", 4, "ngIf"], [3, "ngIf"], [4, "ngIf"], ["colorType", "success", 4, "ngIf"], ["colorType", "error", 4, "ngIf"], [3, "order", "modification"], ["colorType", "success"], ["colorType", "error"], [4, "ngIf", "ngIfElse"], ["regularPaymentTransition", ""], [3, "payment", "currencyCode"], [3, "label"], [3, "items"], [3, "fulfillmentId", "order"], [1, "flex"], [1, "note-text"], ["class", "note-visibility public", 4, "ngIf"], ["class", "note-visibility private", 4, "ngIf"], [1, "flex-spacer"], ["vdrDropdownTrigger", "", 1, "icon-button"], ["shape", "ellipsis-vertical"], ["vdrPosition", "bottom-right"], ["vdrDropdownItem", "", 1, "button", 3, "disabled", "click"], ["shape", "edit"], [1, "dropdown-divider"], ["shape", "trash", 1, "is-danger"], [1, "note-visibility", "public"], [1, "note-visibility", "private"], [3, "routerLink"], [1, "cancelled-coupon-code"]], template: function OrderHistoryComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "h4");
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 0);
        ɵngcc0.ɵɵelementStart(4, "vdr-timeline-entry", 1);
        ɵngcc0.ɵɵelementStart(5, "div", 2);
        ɵngcc0.ɵɵelementStart(6, "textarea", 3);
        ɵngcc0.ɵɵlistener("ngModelChange", function OrderHistoryComponent_Template_textarea_ngModelChange_6_listener($event) { return ctx.note = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "button", 4);
        ɵngcc0.ɵɵlistener("click", function OrderHistoryComponent_Template_button_click_7_listener() { return ctx.addNoteToOrder(); });
        ɵngcc0.ɵɵtext(8);
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "div", 5);
        ɵngcc0.ɵɵelementStart(11, "clr-checkbox-wrapper");
        ɵngcc0.ɵɵelementStart(12, "input", 6);
        ɵngcc0.ɵɵlistener("ngModelChange", function OrderHistoryComponent_Template_input_ngModelChange_12_listener($event) { return ctx.noteIsPrivate = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "label");
        ɵngcc0.ɵɵtext(14);
        ɵngcc0.ɵɵpipe(15, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(16, OrderHistoryComponent_span_16_Template, 3, 3, "span", 7);
        ɵngcc0.ɵɵtemplate(17, OrderHistoryComponent_span_17_Template, 3, 3, "span", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(18, OrderHistoryComponent_vdr_timeline_entry_18_Template, 12, 17, "vdr-timeline-entry", 9);
        ɵngcc0.ɵɵelementStart(19, "vdr-timeline-entry", 10);
        ɵngcc0.ɵɵelementStart(20, "div", 11);
        ɵngcc0.ɵɵtext(21);
        ɵngcc0.ɵɵpipe(22, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 16, "order.order-history"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassProp("expanded", ctx.expanded);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("featured", true);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.note);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("disabled", !ctx.note);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(9, 18, "common.add-note"), " ");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngModel", ctx.noteIsPrivate);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(15, 20, "order.note-is-private"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.noteIsPrivate);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.noteIsPrivate);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.history);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("isLast", true)("createdAt", ctx.order.createdAt)("featured", true);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(22, 22, "order.history-order-created"), " ");
    } }, directives: function () { return [ɵngcc1.TimelineEntryComponent, ɵngcc1.FormFieldControlDirective, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc6.ClrCheckboxWrapper, ɵngcc2.CheckboxControlValueAccessor, ɵngcc6.ClrCheckbox, ɵngcc6.ClrLabel, ɵngcc5.NgIf, ɵngcc5.NgForOf, ɵngcc5.NgSwitch, ɵngcc5.NgSwitchCase, ɵngcc1.HistoryEntryDetailComponent, ModificationDetailComponent, ɵngcc1.ChipComponent, PaymentDetailComponent, ɵngcc1.LabeledDataComponent, SimpleItemListComponent, FulfillmentDetailComponent, ɵngcc1.DropdownComponent, ɵngcc1.DropdownTriggerDirective, ɵngcc6.ClrIconCustomTag, ɵngcc1.DropdownMenuComponent, ɵngcc1.DropdownItemDirective, ɵngcc8.RouterLinkWithHref]; }, pipes: function () { return [ɵngcc4.TranslatePipe, ɵngcc1.LocaleCurrencyPipe, ɵngcc1.HasPermissionPipe]; }, styles: ["[_nghost-%COMP%]{margin-top:48px;display:block}.entry-list[_ngcontent-%COMP%]{margin-top:24px;margin-left:24px;margin-right:12px}.note-entry[_ngcontent-%COMP%]{display:flex;align-items:center}.note-entry[_ngcontent-%COMP%]   .note[_ngcontent-%COMP%]{flex:1}.note-entry[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:0}.visibility-select[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:baseline}.visibility-select[_ngcontent-%COMP%]   .public[_ngcontent-%COMP%]{color:var(--color-warning-500)}.visibility-select[_ngcontent-%COMP%]   .private[_ngcontent-%COMP%]{color:var(--color-success-500)}textarea.note[_ngcontent-%COMP%]{flex:1;height:36px;border-radius:3px;margin-right:6px}.note-text[_ngcontent-%COMP%]{color:var(--color-grey-800);white-space:pre-wrap}.cancelled-coupon-code[_ngcontent-%COMP%]{text-decoration:line-through}.note-visibility[_ngcontent-%COMP%]{text-transform:lowercase}.note-visibility.public[_ngcontent-%COMP%]{color:var(--color-warning-500)}.note-visibility.private[_ngcontent-%COMP%]{color:var(--color-success-500)}"], changeDetection: 0 });
OrderHistoryComponent.propDecorators = {
    order: [{ type: Input }],
    history: [{ type: Input }],
    addNote: [{ type: Output }],
    updateNote: [{ type: Output }],
    deleteNote: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderHistoryComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-history',
                template: "<h4>{{ 'order.order-history' | translate }}</h4>\r\n<div class=\"entry-list\" [class.expanded]=\"expanded\">\r\n    <vdr-timeline-entry iconShape=\"note\" displayType=\"muted\" [featured]=\"true\">\r\n        <div class=\"note-entry\">\r\n            <textarea [(ngModel)]=\"note\" name=\"note\" class=\"note\"></textarea>\r\n            <button class=\"btn btn-secondary\" [disabled]=\"!note\" (click)=\"addNoteToOrder()\">\r\n                {{ 'common.add-note' | translate }}\r\n            </button>\r\n        </div>\r\n        <div class=\"visibility-select\">\r\n            <clr-checkbox-wrapper>\r\n                <input type=\"checkbox\" clrCheckbox [(ngModel)]=\"noteIsPrivate\" />\r\n                <label>{{ 'order.note-is-private' | translate }}</label>\r\n            </clr-checkbox-wrapper>\r\n            <span *ngIf=\"noteIsPrivate\" class=\"private\">\r\n                {{ 'order.note-only-visible-to-administrators' | translate }}\r\n            </span>\r\n            <span *ngIf=\"!noteIsPrivate\" class=\"public\">\r\n                {{ 'order.note-visible-to-customer' | translate }}\r\n            </span>\r\n        </div>\r\n    </vdr-timeline-entry>\r\n    <vdr-timeline-entry\r\n        *ngFor=\"let entry of history\"\r\n        [displayType]=\"getDisplayType(entry)\"\r\n        [iconShape]=\"getTimelineIcon(entry)\"\r\n        [createdAt]=\"entry.createdAt\"\r\n        [name]=\"getName(entry)\"\r\n        [featured]=\"isFeatured(entry)\"\r\n        [collapsed]=\"!expanded && !isFeatured(entry)\"\r\n        (expandClick)=\"expanded = !expanded\"\r\n    >\r\n        <ng-container [ngSwitch]=\"entry.type\">\r\n            <ng-container *ngSwitchCase=\"type.ORDER_STATE_TRANSITION\">\r\n                <div class=\"title\" *ngIf=\"entry.data.to === 'Delivered'\">\r\n                    {{ 'order.history-order-fulfilled' | translate }}\r\n                </div>\r\n                <div class=\"title\" *ngIf=\"entry.data.to === 'Cancelled'\">\r\n                    {{ 'order.history-order-cancelled' | translate }}\r\n                </div>\r\n                <ng-template [ngIf]=\"entry.data.to !== 'Cancelled' && entry.data.to !== 'Delivered'\">\r\n                    {{\r\n                        'order.history-order-transition'\r\n                            | translate: { from: entry.data.from, to: entry.data.to }\r\n                    }}\r\n                </ng-template>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"type.ORDER_MODIFIED\">\r\n                <div class=\"title\">\r\n                    {{ 'order.history-order-modified' | translate }}\r\n                </div>\r\n                <ng-container *ngIf=\"getModification(entry.data.modificationId) as modification\">\r\n                    {{ 'order.modify-order-price-difference' | translate }}:\r\n                    <strong>{{ modification.priceChange | localeCurrency: order.currencyCode }}</strong>\r\n                    <vdr-chip colorType=\"success\" *ngIf=\"modification.isSettled\">{{\r\n                        'order.modification-settled' | translate\r\n                    }}</vdr-chip>\r\n                    <vdr-chip colorType=\"error\" *ngIf=\"!modification.isSettled\">{{\r\n                        'order.modification-not-settled' | translate\r\n                    }}</vdr-chip>\r\n                    <vdr-history-entry-detail>\r\n                        <vdr-modification-detail\r\n                            [order]=\"order\"\r\n                            [modification]=\"modification\"\r\n                        ></vdr-modification-detail>\r\n                    </vdr-history-entry-detail>\r\n                </ng-container>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"type.ORDER_PAYMENT_TRANSITION\">\r\n                <ng-container *ngIf=\"entry.data.to === 'Settled'; else regularPaymentTransition\">\r\n                    <div class=\"title\">\r\n                        {{ 'order.history-payment-settled' | translate }}\r\n                    </div>\r\n                    {{ 'order.transaction-id' | translate }}: {{ getPayment(entry)?.transactionId }}\r\n                    <vdr-history-entry-detail *ngIf=\"getPayment(entry) as payment\">\r\n                        <vdr-payment-detail\r\n                            [payment]=\"payment\"\r\n                            [currencyCode]=\"order.currencyCode\"\r\n                        ></vdr-payment-detail>\r\n                    </vdr-history-entry-detail>\r\n                </ng-container>\r\n                <ng-template #regularPaymentTransition>\r\n                    {{\r\n                        'order.history-payment-transition'\r\n                            | translate\r\n                                : {\r\n                                      from: entry.data.from,\r\n                                      to: entry.data.to,\r\n                                      id: getPayment(entry)?.transactionId\r\n                                  }\r\n                    }}\r\n                </ng-template>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"type.ORDER_REFUND_TRANSITION\">\r\n                {{\r\n                    'order.history-refund-transition'\r\n                        | translate: { from: entry.data.from, to: entry.data.to, id: entry.data.refundId }\r\n                }}\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"type.ORDER_CANCELLATION\">\r\n                {{ 'order.history-items-cancelled' | translate: { count: entry.data.orderItemIds.length } }}\r\n                <vdr-history-entry-detail *ngIf=\"getCancelledItems(entry) as items\">\r\n                    <vdr-labeled-data [label]=\"'order.cancellation-reason' | translate\">\r\n                        {{ entry.data.reason }}\r\n                    </vdr-labeled-data>\r\n                    <vdr-labeled-data [label]=\"'order.contents' | translate\">\r\n                        <vdr-simple-item-list [items]=\"items\"></vdr-simple-item-list>\r\n                    </vdr-labeled-data>\r\n                    <vdr-labeled-data [label]=\"'order.shipping-cancelled' | translate\">\r\n                        {{ entry.data.shippingCancelled }}\r\n                    </vdr-labeled-data>\r\n                </vdr-history-entry-detail>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"type.ORDER_FULFILLMENT\">\r\n                {{ 'order.history-fulfillment-created' | translate }}\r\n                <vdr-history-entry-detail *ngIf=\"getFulfillment(entry) as fulfillment\">\r\n                    <vdr-fulfillment-detail\r\n                        [fulfillmentId]=\"fulfillment.id\"\r\n                        [order]=\"order\"\r\n                    ></vdr-fulfillment-detail>\r\n                </vdr-history-entry-detail>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"type.ORDER_FULFILLMENT_TRANSITION\">\r\n                <ng-container *ngIf=\"entry.data.to === 'Delivered'\">\r\n                    <div class=\"title\">\r\n                        {{ 'order.history-fulfillment-delivered' | translate }}\r\n                    </div>\r\n                    {{ 'order.tracking-code' | translate }}: {{ getFulfillment(entry)?.trackingCode }}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"entry.data.to === 'Shipped'\">\r\n                    <div class=\"title\">\r\n                        {{ 'order.history-fulfillment-shipped' | translate }}\r\n                    </div>\r\n                    {{ 'order.tracking-code' | translate }}: {{ getFulfillment(entry)?.trackingCode }}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"entry.data.to !== 'Delivered' && entry.data.to !== 'Shipped'\">\r\n                    {{\r\n                        'order.history-fulfillment-transition'\r\n                            | translate: { from: entry.data.from, to: entry.data.to }\r\n                    }}\r\n                </ng-container>\r\n                <vdr-history-entry-detail *ngIf=\"getFulfillment(entry) as fulfillment\">\r\n                    <vdr-fulfillment-detail\r\n                        [fulfillmentId]=\"fulfillment.id\"\r\n                        [order]=\"order\"\r\n                    ></vdr-fulfillment-detail>\r\n                </vdr-history-entry-detail>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"type.ORDER_NOTE\">\r\n                <div class=\"flex\">\r\n                    <div class=\"note-text\">\r\n                        <span *ngIf=\"entry.isPublic\" class=\"note-visibility public\">{{\r\n                            'common.public' | translate\r\n                        }}</span>\r\n                        <span *ngIf=\"!entry.isPublic\" class=\"note-visibility private\">{{\r\n                            'common.private' | translate\r\n                        }}</span>\r\n                        {{ entry.data.note }}\r\n                    </div>\r\n                    <div class=\"flex-spacer\"></div>\r\n                    <vdr-dropdown>\r\n                        <button class=\"icon-button\" vdrDropdownTrigger>\r\n                            <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                            <button\r\n                                class=\"button\"\r\n                                vdrDropdownItem\r\n                                (click)=\"updateNote.emit(entry)\"\r\n                                [disabled]=\"!('UpdateOrder' | hasPermission)\"\r\n                            >\r\n                                <clr-icon shape=\"edit\"></clr-icon>\r\n                                {{ 'common.edit' | translate }}\r\n                            </button>\r\n                            <div class=\"dropdown-divider\"></div>\r\n                            <button\r\n                                class=\"button\"\r\n                                vdrDropdownItem\r\n                                (click)=\"deleteNote.emit(entry)\"\r\n                                [disabled]=\"!('UpdateOrder' | hasPermission)\"\r\n                            >\r\n                                <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                                {{ 'common.delete' | translate }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </div>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"type.ORDER_COUPON_APPLIED\">\r\n                {{ 'order.history-coupon-code-applied' | translate }}:\r\n                <vdr-chip>\r\n                    <a [routerLink]=\"['/marketing', 'promotions', entry.data.promotionId]\">{{\r\n                        entry.data.couponCode\r\n                    }}</a>\r\n                </vdr-chip>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"type.ORDER_COUPON_REMOVED\">\r\n                {{ 'order.history-coupon-code-removed' | translate }}:\r\n                <vdr-chip\r\n                    ><span class=\"cancelled-coupon-code\">{{ entry.data.couponCode }}</span></vdr-chip\r\n                >\r\n            </ng-container>\r\n        </ng-container>\r\n    </vdr-timeline-entry>\r\n    <vdr-timeline-entry [isLast]=\"true\" [createdAt]=\"order.createdAt\" [featured]=\"true\">\r\n        <div class=\"title\">\r\n            {{ 'order.history-order-created' | translate }}\r\n        </div>\r\n    </vdr-timeline-entry>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{margin-top:48px;display:block}.entry-list{margin-top:24px;margin-left:24px;margin-right:12px}.note-entry{display:flex;align-items:center}.note-entry .note{flex:1}.note-entry button{margin:0}.visibility-select{display:flex;justify-content:space-between;align-items:baseline}.visibility-select .public{color:var(--color-warning-500)}.visibility-select .private{color:var(--color-success-500)}textarea.note{flex:1;height:36px;border-radius:3px;margin-right:6px}.note-text{color:var(--color-grey-800);white-space:pre-wrap}.cancelled-coupon-code{text-decoration:line-through}.note-visibility{text-transform:lowercase}.note-visibility.public{color:var(--color-warning-500)}.note-visibility.private{color:var(--color-success-500)}\n"]
            }]
    }], function () { return []; }, { addNote: [{
            type: Output
        }], updateNote: [{
            type: Output
        }], deleteNote: [{
            type: Output
        }], order: [{
            type: Input
        }], history: [{
            type: Input
        }] }); })();

class OrderListComponent extends BaseListComponent {
    constructor(serverConfigService, dataService, localStorageService, router, route) {
        super(router, route);
        this.serverConfigService = serverConfigService;
        this.dataService = dataService;
        this.localStorageService = localStorageService;
        this.searchOrderCodeControl = new FormControl('');
        this.searchLastNameControl = new FormControl('');
        this.orderStates = this.serverConfigService.getOrderProcessStates().map(item => item.name);
        this.filterPresets = [
            {
                name: 'open',
                label: marker('order.filter-preset-open'),
                config: {
                    active: false,
                    states: this.orderStates.filter(s => s !== 'Delivered' && s !== 'Cancelled' && s !== 'Shipped'),
                },
            },
            {
                name: 'shipped',
                label: marker('order.filter-preset-shipped'),
                config: {
                    active: false,
                    states: ['Shipped'],
                },
            },
            {
                name: 'completed',
                label: marker('order.filter-preset-completed'),
                config: {
                    active: false,
                    states: ['Delivered', 'Cancelled'],
                },
            },
            {
                name: 'active',
                label: marker('order.filter-preset-active'),
                config: {
                    active: true,
                },
            },
        ];
        super.setQueryFn(
        // tslint:disable-next-line:no-shadowed-variable
        (take, skip) => this.dataService.order.getOrders({ take, skip }).refetchOnChannelChange(), data => data.orders, 
        // tslint:disable-next-line:no-shadowed-variable
        (skip, take) => this.createQueryOptions(skip, take, this.searchOrderCodeControl.value, this.searchLastNameControl.value, this.route.snapshot.queryParamMap.get('filter') || 'open'));
        const lastFilters = this.localStorageService.get('orderListLastCustomFilters');
        if (lastFilters) {
            this.setQueryParam(lastFilters, { replaceUrl: true });
        }
    }
    ngOnInit() {
        var _a;
        super.ngOnInit();
        this.activePreset$ = this.route.queryParamMap.pipe(map(qpm => qpm.get('filter') || 'open'), distinctUntilChanged());
        const searchTerms$ = merge(this.searchOrderCodeControl.valueChanges, this.searchLastNameControl.valueChanges).pipe(filter(value => 2 < value.length || value.length === 0), debounceTime(250));
        merge(searchTerms$, this.route.queryParamMap)
            .pipe(takeUntil(this.destroy$))
            .subscribe(val => {
            this.refresh();
        });
        const queryParamMap = this.route.snapshot.queryParamMap;
        this.customFilterForm = new FormGroup({
            states: new FormControl((_a = queryParamMap.getAll('states')) !== null && _a !== void 0 ? _a : []),
            placedAtStart: new FormControl(queryParamMap.get('placedAtStart')),
            placedAtEnd: new FormControl(queryParamMap.get('placedAtEnd')),
        });
    }
    selectFilterPreset(presetName) {
        var _a;
        const lastCustomFilters = (_a = this.localStorageService.get('orderListLastCustomFilters')) !== null && _a !== void 0 ? _a : {};
        const emptyCustomFilters = { states: undefined, placedAtStart: undefined, placedAtEnd: undefined };
        const filters = presetName === 'custom' ? lastCustomFilters : emptyCustomFilters;
        this.setQueryParam(Object.assign({ filter: presetName, page: 1 }, filters), { replaceUrl: true });
    }
    applyCustomFilters() {
        const formValue = this.customFilterForm.value;
        const customFilters = {
            states: formValue.states,
            placedAtStart: formValue.placedAtStart,
            placedAtEnd: formValue.placedAtEnd,
        };
        this.setQueryParam(Object.assign({ filter: 'custom' }, customFilters));
        this.customFilterForm.markAsPristine();
        this.localStorageService.set('orderListLastCustomFilters', customFilters);
    }
    createQueryOptions(
    // tslint:disable-next-line:no-shadowed-variable
    skip, take, orderCodeSearchTerm, customerNameSearchTerm, activeFilterPreset) {
        var _a;
        const filterConfig = this.filterPresets.find(p => p.name === activeFilterPreset);
        // tslint:disable-next-line:no-shadowed-variable
        const filter = {};
        if (filterConfig) {
            if (filterConfig.config.active != null) {
                filter.active = {
                    eq: filterConfig.config.active,
                };
            }
            if (filterConfig.config.states) {
                filter.state = {
                    in: filterConfig.config.states,
                };
            }
        }
        else if (activeFilterPreset === 'custom') {
            const queryParams = this.route.snapshot.queryParamMap;
            const states = (_a = queryParams.getAll('states')) !== null && _a !== void 0 ? _a : [];
            const placedAtStart = queryParams.get('placedAtStart');
            const placedAtEnd = queryParams.get('placedAtEnd');
            if (states.length) {
                filter.state = {
                    in: states,
                };
            }
            if (placedAtStart && placedAtEnd) {
                filter.orderPlacedAt = {
                    between: {
                        start: placedAtStart,
                        end: placedAtEnd,
                    },
                };
            }
            else if (placedAtStart) {
                filter.orderPlacedAt = {
                    after: placedAtStart,
                };
            }
            else if (placedAtEnd) {
                filter.orderPlacedAt = {
                    before: placedAtEnd,
                };
            }
        }
        if (customerNameSearchTerm) {
            filter.customerLastName = {
                contains: customerNameSearchTerm,
            };
        }
        if (orderCodeSearchTerm) {
            filter.code = {
                contains: orderCodeSearchTerm,
            };
        }
        return {
            options: {
                skip,
                take,
                filter: Object.assign({}, (filter !== null && filter !== void 0 ? filter : {})),
                sort: {
                    updatedAt: SortOrder.DESC,
                },
            },
        };
    }
    getShippingNames(order) {
        if (order.shippingLines.length) {
            return order.shippingLines.map(shippingLine => shippingLine.shippingMethod.name).join(', ');
        }
        else {
            return '';
        }
    }
}
OrderListComponent.ɵfac = function OrderListComponent_Factory(t) { return new (t || OrderListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ServerConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DataService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LocalStorageService), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.ActivatedRoute)); };
OrderListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderListComponent, selectors: [["vdr-order-list"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 62, vars: 67, consts: [[1, "search-form"], ["class", "btn-group btn-outline-primary", 4, "ngIf"], ["type", "text", "name", "searchTerm", 1, "search-input", 3, "formControl", "placeholder"], [1, "custom-filters"], [3, "formGroup"], [1, "flex", "align-center"], ["appendTo", "body", "formControlName", "states", 3, "items", "addTag", "multiple", "placeholder", "clearable", "searchable"], ["ng-option-tmp", ""], ["ng-label-tmp", ""], [1, "btn", "btn-secondary", 3, "disabled", "click"], ["shape", "filter"], [1, "flex"], ["formControlName", "placedAtStart"], ["formControlName", "placedAtEnd"], ["locationId", "order-list"], [3, "items", "itemsPerPage", "totalItems", "currentPage", "pageChange", "itemsPerPageChange"], [1, "btn-group", "btn-outline-primary"], ["class", "btn", 3, "btn-primary", "click", 4, "ngFor", "ngForOf"], [1, "btn", 3, "click"], ["shape", "angle down"], [1, "ng-value-label"], ["aria-hidden", "true", 1, "ng-value-icon", "right", 3, "click"], [1, "left", "align-middle"], [3, "customer"], [3, "state"], [1, "right", "align-middle"], ["iconShape", "shopping-cart", 3, "label", "linkTo"]], template: function OrderListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "vdr-action-bar");
        ɵngcc0.ɵɵelementStart(1, "vdr-ab-left");
        ɵngcc0.ɵɵelementStart(2, "div", 0);
        ɵngcc0.ɵɵtemplate(3, OrderListComponent_div_3_Template, 6, 6, "div", 1);
        ɵngcc0.ɵɵpipe(4, "async");
        ɵngcc0.ɵɵelement(5, "input", 2);
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵelement(7, "input", 2);
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 3);
        ɵngcc0.ɵɵpipe(10, "async");
        ɵngcc0.ɵɵelementStart(11, "form", 4);
        ɵngcc0.ɵɵelementStart(12, "div", 5);
        ɵngcc0.ɵɵelementStart(13, "ng-select", 6);
        ɵngcc0.ɵɵpipe(14, "translate");
        ɵngcc0.ɵɵtemplate(15, OrderListComponent_ng_template_15_Template, 3, 5, "ng-template", 7);
        ɵngcc0.ɵɵtemplate(16, OrderListComponent_ng_template_16_Template, 6, 5, "ng-template", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "button", 9);
        ɵngcc0.ɵɵlistener("click", function OrderListComponent_Template_button_click_17_listener() { return ctx.applyCustomFilters(); });
        ɵngcc0.ɵɵtext(18);
        ɵngcc0.ɵɵpipe(19, "translate");
        ɵngcc0.ɵɵelement(20, "clr-icon", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(21, "div", 11);
        ɵngcc0.ɵɵelementStart(22, "div");
        ɵngcc0.ɵɵelementStart(23, "label");
        ɵngcc0.ɵɵtext(24);
        ɵngcc0.ɵɵpipe(25, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(26, "vdr-datetime-picker", 12);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(27, "div");
        ɵngcc0.ɵɵelementStart(28, "label");
        ɵngcc0.ɵɵtext(29);
        ɵngcc0.ɵɵpipe(30, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(31, "vdr-datetime-picker", 13);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(32, "vdr-ab-right");
        ɵngcc0.ɵɵelement(33, "vdr-action-bar-items", 14);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(34, "vdr-data-table", 15);
        ɵngcc0.ɵɵlistener("pageChange", function OrderListComponent_Template_vdr_data_table_pageChange_34_listener($event) { return ctx.setPageNumber($event); })("itemsPerPageChange", function OrderListComponent_Template_vdr_data_table_itemsPerPageChange_34_listener($event) { return ctx.setItemsPerPage($event); });
        ɵngcc0.ɵɵpipe(35, "async");
        ɵngcc0.ɵɵpipe(36, "async");
        ɵngcc0.ɵɵpipe(37, "async");
        ɵngcc0.ɵɵpipe(38, "async");
        ɵngcc0.ɵɵelementStart(39, "vdr-dt-column");
        ɵngcc0.ɵɵtext(40);
        ɵngcc0.ɵɵpipe(41, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(42, "vdr-dt-column");
        ɵngcc0.ɵɵtext(43);
        ɵngcc0.ɵɵpipe(44, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(45, "vdr-dt-column");
        ɵngcc0.ɵɵtext(46);
        ɵngcc0.ɵɵpipe(47, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(48, "vdr-dt-column");
        ɵngcc0.ɵɵtext(49);
        ɵngcc0.ɵɵpipe(50, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(51, "vdr-dt-column");
        ɵngcc0.ɵɵtext(52);
        ɵngcc0.ɵɵpipe(53, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(54, "vdr-dt-column");
        ɵngcc0.ɵɵtext(55);
        ɵngcc0.ɵɵpipe(56, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(57, "vdr-dt-column");
        ɵngcc0.ɵɵtext(58);
        ɵngcc0.ɵɵpipe(59, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(60, "vdr-dt-column");
        ɵngcc0.ɵɵtemplate(61, OrderListComponent_ng_template_61_Template, 20, 23, "ng-template");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(4, 29, ctx.activePreset$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("formControl", ctx.searchOrderCodeControl)("placeholder", ɵngcc0.ɵɵpipeBind1(6, 31, "order.search-by-order-code"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("formControl", ctx.searchLastNameControl)("placeholder", ɵngcc0.ɵɵpipeBind1(8, 33, "order.search-by-customer-last-name"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassProp("expanded", ɵngcc0.ɵɵpipeBind1(10, 35, ctx.activePreset$) === "custom");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("formGroup", ctx.customFilterForm);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("items", ctx.orderStates)("addTag", false)("multiple", true)("placeholder", ɵngcc0.ɵɵpipeBind1(14, 37, "state.all-orders"))("clearable", true)("searchable", false);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("disabled", ctx.customFilterForm.pristine);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(19, 39, "order.apply-filters"), " ");
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(25, 41, "order.placed-at-start"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(30, 43, "order.placed-at-end"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("items", ɵngcc0.ɵɵpipeBind1(35, 45, ctx.items$))("itemsPerPage", ɵngcc0.ɵɵpipeBind1(36, 47, ctx.itemsPerPage$))("totalItems", ɵngcc0.ɵɵpipeBind1(37, 49, ctx.totalItems$))("currentPage", ɵngcc0.ɵɵpipeBind1(38, 51, ctx.currentPage$));
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(41, 53, "common.code"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(44, 55, "order.customer"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(47, 57, "order.state"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(50, 59, "order.total"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(53, 61, "common.updated-at"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(56, 63, "order.placed-at"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(59, 65, "order.shipping"));
    } }, directives: [ɵngcc1.ActionBarComponent, ɵngcc1.ActionBarLeftComponent, ɵngcc5.NgIf, ɵngcc1.FormFieldControlDirective, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc2.ɵNgNoValidate, ɵngcc2.NgControlStatusGroup, ɵngcc2.FormGroupDirective, ɵngcc3.NgSelectComponent, ɵngcc2.FormControlName, ɵngcc3.ɵf, ɵngcc3.ɵh, ɵngcc6.ClrIconCustomTag, ɵngcc6.ClrLabel, ɵngcc1.DatetimePickerComponent, ɵngcc1.ActionBarRightComponent, ɵngcc1.ActionBarItemsComponent, ɵngcc1.DataTableComponent, ɵngcc1.DataTableColumnComponent, ɵngcc5.NgForOf, ɵngcc1.CustomerLabelComponent, ɵngcc1.OrderStateLabelComponent, ɵngcc1.TableRowActionComponent], pipes: [ɵngcc5.AsyncPipe, ɵngcc4.TranslatePipe, ɵngcc1.StateI18nTokenPipe, ɵngcc1.LocaleCurrencyPipe, ɵngcc1.TimeAgoPipe, ɵngcc1.LocaleDatePipe], styles: [".search-form[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:baseline;width:100%;margin-bottom:6px}@media screen and (min-width: 768px){.search-form[_ngcontent-%COMP%]{flex-direction:row}}.search-input[_ngcontent-%COMP%]{margin-left:6px;margin-top:6px;min-width:300px}.custom-filters[_ngcontent-%COMP%]{overflow:hidden;max-height:0;padding-bottom:6px}.custom-filters.expanded[_ngcontent-%COMP%]{max-height:initial}.custom-filters[_ngcontent-%COMP%] > form[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center}.custom-filters[_ngcontent-%COMP%] > form[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{width:100%}ng-select[_ngcontent-%COMP%]{flex:1;min-width:200px;height:36px}ng-select[_ngcontent-%COMP%]     .ng-select-container{height:36px}"], changeDetection: 0 });
OrderListComponent.ctorParameters = () => [
    { type: ServerConfigService },
    { type: DataService },
    { type: LocalStorageService },
    { type: Router },
    { type: ActivatedRoute }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderListComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-list',
                template: "<vdr-action-bar>\r\n    <vdr-ab-left>\r\n        <div class=\"search-form\">\r\n            <div class=\"btn-group btn-outline-primary\" *ngIf=\"activePreset$ | async as activePreset\">\r\n                <button\r\n                    class=\"btn\"\r\n                    *ngFor=\"let preset of filterPresets\"\r\n                    [class.btn-primary]=\"activePreset === preset.name\"\r\n                    (click)=\"selectFilterPreset(preset.name)\"\r\n                >\r\n                    {{ preset.label | translate }}\r\n                </button>\r\n                <button\r\n                    class=\"btn\"\r\n                    [class.btn-primary]=\"activePreset === 'custom'\"\r\n                    (click)=\"selectFilterPreset('custom')\"\r\n                >\r\n                    {{ 'order.filter-custom' | translate }}\r\n                    <clr-icon shape=\"angle down\"></clr-icon>\r\n                </button>\r\n            </div>\r\n\r\n            <input\r\n                type=\"text\"\r\n                name=\"searchTerm\"\r\n                [formControl]=\"searchOrderCodeControl\"\r\n                [placeholder]=\"'order.search-by-order-code' | translate\"\r\n                class=\"search-input\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"searchTerm\"\r\n                [formControl]=\"searchLastNameControl\"\r\n                [placeholder]=\"'order.search-by-customer-last-name' | translate\"\r\n                class=\"search-input\"\r\n            />\r\n        </div>\r\n        <div class=\"custom-filters\" [class.expanded]=\"(activePreset$ | async) === 'custom'\">\r\n            <form [formGroup]=\"customFilterForm\">\r\n                <div class=\"flex align-center\">\r\n                    <ng-select\r\n                        [items]=\"orderStates\"\r\n                        appendTo=\"body\"\r\n                        [addTag]=\"false\"\r\n                        [multiple]=\"true\"\r\n                        formControlName=\"states\"\r\n                        [placeholder]=\"'state.all-orders' | translate\"\r\n                        [clearable]=\"true\"\r\n                        [searchable]=\"false\"\r\n                    >\r\n                        <ng-template ng-option-tmp let-item=\"item\">{{ item | stateI18nToken | translate }}</ng-template>\r\n                        <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\r\n                            <span class=\"ng-value-label\"> {{ item | stateI18nToken | translate }}</span>\r\n                            <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">\u00D7</span>\r\n                        </ng-template>\r\n                    </ng-select>\r\n                    <button\r\n                        class=\"btn btn-secondary\"\r\n                        [disabled]=\"customFilterForm.pristine\"\r\n                        (click)=\"applyCustomFilters()\"\r\n                    >\r\n                        {{ 'order.apply-filters' | translate }}\r\n                        <clr-icon shape=\"filter\"></clr-icon>\r\n                    </button>\r\n                </div>\r\n                <div class=\"flex\">\r\n                    <div>\r\n                        <label>{{ 'order.placed-at-start' | translate }}</label>\r\n                        <vdr-datetime-picker formControlName=\"placedAtStart\"></vdr-datetime-picker>\r\n                    </div>\r\n                    <div>\r\n                        <label>{{ 'order.placed-at-end' | translate }}</label>\r\n                        <vdr-datetime-picker formControlName=\"placedAtEnd\"></vdr-datetime-picker>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </vdr-ab-left>\r\n    <vdr-ab-right>\r\n        <vdr-action-bar-items locationId=\"order-list\"></vdr-action-bar-items>\r\n    </vdr-ab-right>\r\n</vdr-action-bar>\r\n\r\n<vdr-data-table\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n>\r\n    <vdr-dt-column>{{ 'common.code' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ 'order.customer' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ 'order.state' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ 'order.total' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ 'common.updated-at' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ 'order.placed-at' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column>{{ 'order.shipping' | translate }}</vdr-dt-column>\r\n    <vdr-dt-column></vdr-dt-column>\r\n    <ng-template let-order=\"item\">\r\n        <td class=\"left align-middle\">{{ order.code }}</td>\r\n        <td class=\"left align-middle\">\r\n            <vdr-customer-label [customer]=\"order.customer\"></vdr-customer-label>\r\n        </td>\r\n        <td class=\"left align-middle\">\r\n            <vdr-order-state-label [state]=\"order.state\"></vdr-order-state-label>\r\n        </td>\r\n        <td class=\"left align-middle\">{{ order.total | localeCurrency: order.currencyCode }}</td>\r\n        <td class=\"left align-middle\">{{ order.updatedAt | timeAgo }}</td>\r\n        <td class=\"left align-middle\">{{ order.orderPlacedAt | localeDate: 'medium' }}</td>\r\n        <td class=\"left align-middle\">{{ getShippingNames(order) }}</td>\r\n        <td class=\"right align-middle\">\r\n            <vdr-table-row-action\r\n                iconShape=\"shopping-cart\"\r\n                [label]=\"'common.open' | translate\"\r\n                [linkTo]=\"order.state === 'Modifying' ? ['./', order.id, 'modify'] : ['./', order.id]\"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".search-form{display:flex;flex-direction:column;align-items:baseline;width:100%;margin-bottom:6px}@media screen and (min-width: 768px){.search-form{flex-direction:row}}.search-input{margin-left:6px;margin-top:6px;min-width:300px}.custom-filters{overflow:hidden;max-height:0;padding-bottom:6px}.custom-filters.expanded{max-height:initial}.custom-filters>form{display:flex;flex-direction:column;align-items:center}.custom-filters>form>div{width:100%}ng-select{flex:1;min-width:200px;height:36px}ng-select ::ng-deep .ng-select-container{height:36px}\n"]
            }]
    }], function () { return [{ type: ɵngcc1.ServerConfigService }, { type: ɵngcc1.DataService }, { type: ɵngcc1.LocalStorageService }, { type: ɵngcc8.Router }, { type: ɵngcc8.ActivatedRoute }]; }, null); })();

class OrderPaymentCardComponent {
    constructor() {
        this.settlePayment = new EventEmitter();
        this.transitionPaymentState = new EventEmitter();
        this.settleRefund = new EventEmitter();
    }
    refundHasMetadata(refund) {
        return !!refund && Object.keys(refund.metadata).length > 0;
    }
    nextOtherStates() {
        if (!this.payment) {
            return [];
        }
        return this.payment.nextStates.filter(s => s !== 'Settled');
    }
}
OrderPaymentCardComponent.ɵfac = function OrderPaymentCardComponent_Factory(t) { return new (t || OrderPaymentCardComponent)(); };
OrderPaymentCardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderPaymentCardComponent, selectors: [["vdr-order-payment-card"]], inputs: { payment: "payment", currencyCode: "currencyCode" }, outputs: { settlePayment: "settlePayment", transitionPaymentState: "transitionPaymentState", settleRefund: "settleRefund" }, decls: 12, vars: 9, consts: [[1, "card"], [1, "card-header", "payment-header"], [4, "ngIf"], [1, "payment-state"], [3, "state"], [1, "card-block"], [3, "payment", "currencyCode"], [4, "ngFor", "ngForOf"], ["class", "card-footer", 4, "ngIf"], ["shape", "redo", "dir", "down", 1, "refund-icon"], [1, "clr-flex-fill"], [3, "label"], [3, "label", 4, "ngIf"], [3, "value"], [1, "card-footer"], [1, "btn", "btn-sm", "btn-primary", 3, "click"], ["class", "btn btn-sm btn-primary", 3, "click", 4, "ngIf"], ["vdrDropdownTrigger", "", 1, "icon-button"], ["shape", "ellipsis-vertical"], ["vdrPosition", "bottom-right"], ["type", "button", "vdrDropdownItem", "", 1, "btn", 3, "click"], [4, "ngIf", "ngIfElse"], ["cancel", ""], ["shape", "step-forward-2"], ["shape", "error-standard", 1, "is-error"]], template: function OrderPaymentCardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div");
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵtemplate(5, OrderPaymentCardComponent_ng_container_5_Template, 2, 1, "ng-container", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 3);
        ɵngcc0.ɵɵelement(7, "vdr-payment-state-label", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "div", 5);
        ɵngcc0.ɵɵelement(9, "vdr-payment-detail", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, OrderPaymentCardComponent_ng_container_10_Template, 20, 23, "ng-container", 7);
        ɵngcc0.ɵɵtemplate(11, OrderPaymentCardComponent_div_11_Template, 7, 2, "div", 8);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 7, "order.payment"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.payment.transactionId);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("state", ctx.payment.state);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("payment", ctx.payment)("currencyCode", ctx.currencyCode);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.payment.refunds);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.payment.nextStates.length);
    } }, directives: function () { return [ɵngcc5.NgIf, PaymentStateLabelComponent, PaymentDetailComponent, ɵngcc5.NgForOf, ɵngcc6.ClrIconCustomTag, ɵngcc7.Dir, RefundStateLabelComponent, ɵngcc1.LabeledDataComponent, ɵngcc1.ObjectTreeComponent, ɵngcc1.DropdownComponent, ɵngcc1.DropdownTriggerDirective, ɵngcc1.DropdownMenuComponent, ɵngcc1.DropdownItemDirective]; }, pipes: function () { return [ɵngcc4.TranslatePipe, ɵngcc1.LocaleDatePipe, ɵngcc1.LocaleCurrencyPipe, ɵngcc1.StateI18nTokenPipe]; }, styles: [".payment-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.refund-icon[_ngcontent-%COMP%]{margin-right:6px;color:var(--color-grey-400)}.card-footer[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:flex-end}"], changeDetection: 0 });
OrderPaymentCardComponent.propDecorators = {
    payment: [{ type: Input }],
    currencyCode: [{ type: Input }],
    settlePayment: [{ type: Output }],
    transitionPaymentState: [{ type: Output }],
    settleRefund: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderPaymentCardComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-payment-card',
                template: "<div class=\"card\">\r\n    <div class=\"card-header payment-header\">\r\n        <div>\r\n            {{ 'order.payment' | translate }}\r\n            <ng-container *ngIf=\"payment.transactionId\">#{{ payment.transactionId }}</ng-container>\r\n        </div>\r\n        <div class=\"payment-state\">\r\n            <vdr-payment-state-label [state]=\"payment.state\"></vdr-payment-state-label>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-block\">\r\n        <vdr-payment-detail [payment]=\"payment\" [currencyCode]=\"currencyCode\"></vdr-payment-detail>\r\n    </div>\r\n    <ng-container *ngFor=\"let refund of payment.refunds\">\r\n        <div class=\"card-header payment-header\">\r\n            <clr-icon shape=\"redo\" class=\"refund-icon\" dir=\"down\"></clr-icon>\r\n            {{ 'order.refund' | translate }} #{{ refund.id }}\r\n            <div class=\"clr-flex-fill\"></div>\r\n            <vdr-refund-state-label [state]=\"refund.state\"></vdr-refund-state-label>\r\n        </div>\r\n        <div class=\"card-block\">\r\n            <vdr-labeled-data [label]=\"'common.created-at' | translate\">\r\n                {{ refund.createdAt | localeDate: 'medium' }}\r\n            </vdr-labeled-data>\r\n            <vdr-labeled-data [label]=\"'order.refund-total' | translate\">\r\n                {{ refund.total | localeCurrency: currencyCode }}\r\n            </vdr-labeled-data>\r\n            <vdr-labeled-data [label]=\"'order.transaction-id' | translate\" *ngIf=\"refund.transactionId\">\r\n                {{ refund.transactionId }}\r\n            </vdr-labeled-data>\r\n            <vdr-labeled-data [label]=\"'order.refund-reason' | translate\" *ngIf=\"refund.reason\">\r\n                {{ refund.reason }}\r\n            </vdr-labeled-data>\r\n            <vdr-labeled-data [label]=\"'order.refund-metadata' | translate\" *ngIf=\"refundHasMetadata(refund)\">\r\n                <vdr-object-tree [value]=\"refund.metadata\"></vdr-object-tree>\r\n            </vdr-labeled-data>\r\n        </div>\r\n        <div class=\"card-footer\" *ngIf=\"refund.state === 'Pending'\">\r\n            <button class=\"btn btn-sm btn-primary\" (click)=\"settleRefund.emit(refund)\">\r\n                {{ 'order.settle-refund' | translate }}\r\n            </button>\r\n        </div>\r\n    </ng-container>\r\n    <div class=\"card-footer\" *ngIf=\"payment.nextStates.length\">\r\n        <button\r\n            class=\"btn btn-sm btn-primary\"\r\n            *ngIf=\"payment.nextStates.includes('Settled')\"\r\n            (click)=\"settlePayment.emit(payment)\"\r\n        >\r\n            {{ 'order.settle-payment' | translate }}\r\n        </button>\r\n        <vdr-dropdown>\r\n            <button class=\"icon-button\" vdrDropdownTrigger>\r\n                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n            </button>\r\n            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                <ng-container *ngFor=\"let nextState of nextOtherStates()\">\r\n                    <button\r\n                        type=\"button\"\r\n                        class=\"btn\"\r\n                        vdrDropdownItem\r\n                        (click)=\"transitionPaymentState.emit({ payment: payment, state: nextState })\"\r\n                    >\r\n                        <ng-container *ngIf=\"nextState !== 'Cancelled'; else cancel\">\r\n                            <clr-icon shape=\"step-forward-2\"></clr-icon>\r\n                            {{\r\n                                'order.transition-to-state'\r\n                                    | translate: { state: (nextState | stateI18nToken | translate) }\r\n                            }}\r\n                        </ng-container>\r\n                        <ng-template #cancel>\r\n                            <clr-icon shape=\"error-standard\" class=\"is-error\"></clr-icon>\r\n                            {{ 'order.cancel-payment' | translate }}\r\n                        </ng-template>\r\n                    </button>\r\n                </ng-container>\r\n            </vdr-dropdown-menu>\r\n        </vdr-dropdown>\r\n    </div>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".payment-header{display:flex;justify-content:space-between;align-items:center}.refund-icon{margin-right:6px;color:var(--color-grey-400)}.card-footer{display:flex;align-items:center;justify-content:flex-end}\n"]
            }]
    }], function () { return []; }, { settlePayment: [{
            type: Output
        }], transitionPaymentState: [{
            type: Output
        }], settleRefund: [{
            type: Output
        }], payment: [{
            type: Input
        }], currencyCode: [{
            type: Input
        }] }); })();

const NODE_HEIGHT = 72;

class OrderProcessEdgeComponent {
    ngOnInit() {
        this.active$ = this.from.active$
            .asObservable()
            .pipe(tap((active) => this.to.activeTarget$.next(active)));
    }
    getStyle() {
        const direction = this.from.index < this.to.index ? 'down' : 'up';
        const startPos = this.from.getPos(direction === 'down' ? 'bottom' : 'top');
        const endPos = this.to.getPos(direction === 'down' ? 'top' : 'bottom');
        const dX = Math.abs(startPos.x - endPos.x);
        const dY = Math.abs(startPos.y - endPos.y);
        const length = Math.sqrt(Math.pow(dX, 2) + Math.pow(dY, 2));
        return Object.assign({ 'top.px': startPos.y, 'left.px': startPos.x + (direction === 'down' ? 10 : 40) + this.index * 12, 'height.px': length, 'width.px': 1 }, (direction === 'up'
            ? {
                transform: 'rotateZ(180deg)',
                'transform-origin': 'top',
            }
            : {}));
    }
}
OrderProcessEdgeComponent.ɵfac = function OrderProcessEdgeComponent_Factory(t) { return new (t || OrderProcessEdgeComponent)(); };
OrderProcessEdgeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderProcessEdgeComponent, selectors: [["vdr-order-process-edge"]], inputs: { from: "from", to: "to", index: "index" }, decls: 3, vars: 7, consts: [[1, "edge", 3, "ngStyle"], ["shape", "arrow", "flip", "vertical", 1, "arrow"]], template: function OrderProcessEdgeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵelement(2, "clr-icon", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("active", ɵngcc0.ɵɵpipeBind1(1, 5, ctx.active$));
        ɵngcc0.ɵɵproperty("ngStyle", ctx.getStyle());
        ɵngcc0.ɵɵattribute("data-from", ctx.from.node.name)("data-to", ctx.to.node.name);
    } }, directives: [ɵngcc5.NgStyle, ɵngcc6.ClrIconCustomTag], pipes: [ɵngcc5.AsyncPipe], styles: [".edge[_ngcontent-%COMP%]{position:absolute;border:1px solid var(--color-component-border-200);background-color:var(--color-component-bg-300);opacity:.3;transition:border .2s,opacity .2s,background-color .2s}.edge.active[_ngcontent-%COMP%]{border-color:var(--color-primary-500);background-color:var(--color-primary-500);opacity:1}.edge.active[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]{color:var(--color-primary-500)}.edge[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]{position:absolute;bottom:-4px;left:-8px;color:var(--color-grey-300)}"], changeDetection: 0 });
OrderProcessEdgeComponent.propDecorators = {
    from: [{ type: Input }],
    to: [{ type: Input }],
    index: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderProcessEdgeComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-process-edge',
                template: "<div\r\n    [attr.data-from]=\"from.node.name\"\r\n    [attr.data-to]=\"to.node.name\"\r\n    [ngStyle]=\"getStyle()\"\r\n    [class.active]=\"active$ | async\"\r\n    class=\"edge\">\r\n    <clr-icon shape=\"arrow\" flip=\"vertical\" class=\"arrow\"></clr-icon>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".edge{position:absolute;border:1px solid var(--color-component-border-200);background-color:var(--color-component-bg-300);opacity:.3;transition:border .2s,opacity .2s,background-color .2s}.edge.active{border-color:var(--color-primary-500);background-color:var(--color-primary-500);opacity:1}.edge.active .arrow{color:var(--color-primary-500)}.edge .arrow{position:absolute;bottom:-4px;left:-8px;color:var(--color-grey-300)}\n"]
            }]
    }], null, { from: [{
            type: Input
        }], to: [{
            type: Input
        }], index: [{
            type: Input
        }] }); })();

class OrderProcessNodeComponent {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.active$ = new BehaviorSubject(false);
        this.activeTarget$ = new BehaviorSubject(false);
        this.isCancellable = false;
        // We use a class field here to prevent the
        // i18n extractor from extracting a "Cancelled" key
        this.cancelledState = 'Cancelled';
    }
    ngOnChanges(changes) {
        this.isCancellable = !!this.node.to.find((s) => s.name === 'Cancelled');
        if (changes.active) {
            this.active$.next(this.active);
        }
    }
    getPos(origin = 'top') {
        var _a, _b;
        const rect = this.elementRef.nativeElement.getBoundingClientRect();
        const nodeHeight = (_b = (_a = this.elementRef.nativeElement.querySelector('.node')) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect().height) !== null && _b !== void 0 ? _b : 0;
        return {
            x: 10,
            y: this.index * NODE_HEIGHT + (origin === 'bottom' ? nodeHeight : 0),
        };
    }
    getStyle() {
        const pos = this.getPos();
        return {
            'top.px': pos.y,
            'left.px': pos.x,
        };
    }
}
OrderProcessNodeComponent.ɵfac = function OrderProcessNodeComponent_Factory(t) { return new (t || OrderProcessNodeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
OrderProcessNodeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderProcessNodeComponent, selectors: [["vdr-order-process-node"]], inputs: { node: "node", index: "index", active: "active" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 8, vars: 15, consts: [[1, "node-wrapper", 3, "ngStyle"], [1, "node"], ["class", "cancelled-wrapper", 4, "ngIf"], [1, "cancelled-wrapper"], [1, "cancelled-edge"], ["shape", "dot-circle"], [1, "cancelled-node"]], template: function OrderProcessNodeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵpipe(3, "async");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵpipe(6, "stateI18nToken");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, OrderProcessNodeComponent_div_7_Template, 7, 5, "div", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("active", ɵngcc0.ɵɵpipeBind1(1, 7, ctx.active$));
        ɵngcc0.ɵɵproperty("ngStyle", ctx.getStyle());
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassProp("active-target", ɵngcc0.ɵɵpipeBind1(3, 9, ctx.activeTarget$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 11, ɵngcc0.ɵɵpipeBind1(6, 13, ctx.node.name)), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isCancellable);
    } }, directives: [ɵngcc5.NgStyle, ɵngcc5.NgIf, ɵngcc6.ClrIconCustomTag], pipes: [ɵngcc5.AsyncPipe, ɵngcc4.TranslatePipe, ɵngcc1.StateI18nTokenPipe], styles: ["[_nghost-%COMP%]{display:block}.node-wrapper[_ngcontent-%COMP%]{position:absolute;z-index:1;display:flex;align-items:center}.node[_ngcontent-%COMP%]{display:inline-block;border:2px solid var(--color-component-border-200);border-radius:3px;padding:3px 6px;z-index:1;background-color:var(--color-component-bg-100);opacity:.7;transition:opacity .2s,background-color .2s,color .2s;cursor:default}.node.active-target[_ngcontent-%COMP%]{border-color:var(--color-primary-500);opacity:.9}.cancelled-wrapper[_ngcontent-%COMP%]{display:flex;align-items:center;color:var(--color-grey-300);transition:color .2s,opacity .2s;opacity:.7}.cancelled-edge[_ngcontent-%COMP%]{width:48px;height:2px;background-color:var(--color-component-bg-300);transition:background-color .2s}clr-icon[_ngcontent-%COMP%]{margin-left:-1px}.cancelled-node[_ngcontent-%COMP%]{margin-left:6px}.active[_ngcontent-%COMP%]   .cancelled-wrapper[_ngcontent-%COMP%]{opacity:1}.active[_ngcontent-%COMP%]   .node[_ngcontent-%COMP%]{opacity:1;background-color:var(--color-primary-600);border-color:var(--color-primary-600);color:var(--color-primary-100)}.active[_ngcontent-%COMP%]   .cancelled-wrapper[_ngcontent-%COMP%]{color:var(--color-error-500)}.active[_ngcontent-%COMP%]   .cancelled-edge[_ngcontent-%COMP%]{background-color:var(--color-error-500)}"], changeDetection: 0 });
OrderProcessNodeComponent.ctorParameters = () => [
    { type: ElementRef }
];
OrderProcessNodeComponent.propDecorators = {
    node: [{ type: Input }],
    index: [{ type: Input }],
    active: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderProcessNodeComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-process-node',
                template: "<div class=\"node-wrapper\" [ngStyle]=\"getStyle()\" [class.active]=\"active$ | async\">\r\n    <div\r\n        class=\"node\"\r\n        [class.active-target]=\"activeTarget$ | async\"\r\n    >\r\n        {{ node.name | stateI18nToken | translate }}\r\n    </div>\r\n    <div class=\"cancelled-wrapper\" *ngIf=\"isCancellable\">\r\n        <div class=\"cancelled-edge\">\r\n        </div>\r\n        <clr-icon shape=\"dot-circle\"></clr-icon>\r\n        <div class=\"cancelled-node\">\r\n            {{ cancelledState | stateI18nToken | translate }}\r\n        </div>\r\n    </div>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{display:block}.node-wrapper{position:absolute;z-index:1;display:flex;align-items:center}.node{display:inline-block;border:2px solid var(--color-component-border-200);border-radius:3px;padding:3px 6px;z-index:1;background-color:var(--color-component-bg-100);opacity:.7;transition:opacity .2s,background-color .2s,color .2s;cursor:default}.node.active-target{border-color:var(--color-primary-500);opacity:.9}.cancelled-wrapper{display:flex;align-items:center;color:var(--color-grey-300);transition:color .2s,opacity .2s;opacity:.7}.cancelled-edge{width:48px;height:2px;background-color:var(--color-component-bg-300);transition:background-color .2s}clr-icon{margin-left:-1px}.cancelled-node{margin-left:6px}.active .cancelled-wrapper{opacity:1}.active .node{opacity:1;background-color:var(--color-primary-600);border-color:var(--color-primary-600);color:var(--color-primary-100)}.active .cancelled-wrapper{color:var(--color-error-500)}.active .cancelled-edge{background-color:var(--color-error-500)}\n"]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { node: [{
            type: Input
        }], index: [{
            type: Input
        }], active: [{
            type: Input
        }] }); })();

class OrderProcessGraphComponent {
    constructor(changeDetector) {
        this.changeDetector = changeDetector;
        this.setActiveState$ = new BehaviorSubject(undefined);
        this.nodes = [];
        this.edges = [];
    }
    get outerHeight() {
        return this.nodes.length * NODE_HEIGHT;
    }
    ngOnInit() {
        this.setActiveState$.next(this.initialState);
        this.activeState$ = this.setActiveState$.pipe(debounceTime(150));
    }
    ngOnChanges(changes) {
        this.populateNodes();
    }
    ngAfterViewInit() {
        setTimeout(() => this.populateEdges());
    }
    onMouseOver(stateName) {
        this.setActiveState$.next(stateName);
    }
    onMouseOut() {
        this.setActiveState$.next(this.initialState);
    }
    getNodeFor(state) {
        if (this.nodeComponents) {
            return this.nodeComponents.find((n) => n.node.name === state);
        }
    }
    populateNodes() {
        var _a, _b;
        const stateNodeMap = new Map();
        for (const state of this.states) {
            stateNodeMap.set(state.name, {
                name: state.name,
                to: [],
            });
        }
        for (const [name, stateNode] of stateNodeMap.entries()) {
            const targets = (_b = (_a = this.states.find((s) => s.name === name)) === null || _a === void 0 ? void 0 : _a.to) !== null && _b !== void 0 ? _b : [];
            for (const target of targets) {
                const targetNode = stateNodeMap.get(target);
                if (targetNode) {
                    stateNode.to.push(targetNode);
                }
            }
        }
        this.nodes = [...stateNodeMap.values()].filter((n) => n.name !== 'Cancelled');
    }
    populateEdges() {
        for (const node of this.nodes) {
            const nodeCmp = this.getNodeFor(node.name);
            let index = 0;
            for (const to of node.to) {
                const toCmp = this.getNodeFor(to.name);
                if (nodeCmp && toCmp && nodeCmp !== toCmp) {
                    this.edges.push({
                        to: toCmp,
                        from: nodeCmp,
                        index,
                    });
                    index++;
                }
            }
        }
        this.edges = [...this.edges];
        this.changeDetector.markForCheck();
    }
}
OrderProcessGraphComponent.ɵfac = function OrderProcessGraphComponent_Factory(t) { return new (t || OrderProcessGraphComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
OrderProcessGraphComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderProcessGraphComponent, selectors: [["vdr-order-process-graph"]], viewQuery: function OrderProcessGraphComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(OrderProcessNodeComponent, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nodeComponents = _t);
    } }, hostVars: 2, hostBindings: function OrderProcessGraphComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("height", ctx.outerHeight, "px");
    } }, inputs: { states: "states", initialState: "initialState" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[4, "ngFor", "ngForOf"], [3, "node", "index", "active", "mouseenter", "mouseleave"], [3, "from", "to", "index"]], template: function OrderProcessGraphComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, OrderProcessGraphComponent_ng_container_0_Template, 3, 5, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, OrderProcessGraphComponent_ng_container_1_Template, 2, 3, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.nodes);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.edges);
    } }, directives: [ɵngcc5.NgForOf, OrderProcessNodeComponent, OrderProcessEdgeComponent], pipes: [ɵngcc5.AsyncPipe], styles: ["[_nghost-%COMP%]{display:block;border:1px hotpink;margin:20px;padding:12px;position:relative}.state-row[_ngcontent-%COMP%]{display:flex}"], changeDetection: 0 });
OrderProcessGraphComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
OrderProcessGraphComponent.propDecorators = {
    states: [{ type: Input }],
    initialState: [{ type: Input }],
    nodeComponents: [{ type: ViewChildren, args: [OrderProcessNodeComponent,] }],
    outerHeight: [{ type: HostBinding, args: ['style.height.px',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderProcessGraphComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-process-graph',
                template: "<ng-container *ngFor=\"let state of nodes; let i = index\">\r\n    <vdr-order-process-node\r\n        [node]=\"state\"\r\n        [index]=\"i\"\r\n        [active]=\"(activeState$ | async) === state.name\"\r\n        (mouseenter)=\"onMouseOver(state.name)\"\r\n        (mouseleave)=\"onMouseOut()\"\r\n    ></vdr-order-process-node>\r\n</ng-container>\r\n<ng-container *ngFor=\"let edge of edges\">\r\n    <vdr-order-process-edge [from]=\"edge.from\" [to]=\"edge.to\" [index]=\"edge.index\"></vdr-order-process-edge>\r\n</ng-container>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{display:block;border:1px hotpink;margin:20px;padding:12px;position:relative}.state-row{display:flex}\n"]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { outerHeight: [{
            type: HostBinding,
            args: ['style.height.px']
        }], states: [{
            type: Input
        }], initialState: [{
            type: Input
        }], nodeComponents: [{
            type: ViewChildren,
            args: [OrderProcessNodeComponent]
        }] }); })();

class OrderTableComponent {
    constructor() {
        this.orderLineCustomFieldsVisible = false;
        this.customFieldsForLine = {};
    }
    get visibleOrderLineCustomFields() {
        return this.orderLineCustomFieldsVisible ? this.orderLineCustomFields : [];
    }
    get showElided() {
        return !this.orderLineCustomFieldsVisible && 0 < this.orderLineCustomFields.length;
    }
    ngOnInit() {
        this.orderLineCustomFieldsVisible = this.orderLineCustomFields.length < 2;
        this.getLineCustomFields();
    }
    toggleOrderLineCustomFields() {
        this.orderLineCustomFieldsVisible = !this.orderLineCustomFieldsVisible;
    }
    getLineDiscounts(line) {
        return line.discounts.filter(a => a.type === AdjustmentType.PROMOTION);
    }
    getLineCustomFields() {
        for (const line of this.order.lines) {
            const formGroup = new FormGroup({});
            const result = this.orderLineCustomFields
                .map(config => {
                const value = line.customFields[config.name];
                formGroup.addControl(config.name, new FormControl(value));
                return {
                    config,
                    formGroup,
                    value,
                };
            })
                .filter(field => {
                return this.orderLineCustomFieldsVisible ? true : field.value != null;
            });
            this.customFieldsForLine[line.id] = result;
        }
    }
    getPromotionLink(promotion) {
        const id = promotion.adjustmentSource.split(':')[1];
        return ['/marketing', 'promotions', id];
    }
    getCouponCodeForAdjustment(order, promotionAdjustment) {
        const id = promotionAdjustment.adjustmentSource.split(':')[1];
        const promotion = order.promotions.find(p => p.id === id);
        if (promotion) {
            return promotion.couponCode || undefined;
        }
    }
}
OrderTableComponent.ɵfac = function OrderTableComponent_Factory(t) { return new (t || OrderTableComponent)(); };
OrderTableComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OrderTableComponent, selectors: [["vdr-order-table"]], inputs: { order: "order", orderLineCustomFields: "orderLineCustomFields" }, decls: 61, vars: 61, consts: [[1, "order-table", "table"], [4, "ngFor", "ngForOf"], ["class", "surcharge", 4, "ngFor", "ngForOf"], [1, "sub-total"], [1, "left", "clr-align-middle"], ["colspan", "4"], [1, "clr-align-middle"], [1, "net-price", 3, "title"], [1, "shipping"], ["colspan", "3"], [1, "total"], [1, "order-line"], [1, "align-middle", "thumb"], [3, "src", 4, "ngIf"], [1, "align-middle", "name"], [1, "align-middle", "sku"], [1, "align-middle", "unit-price"], [1, "align-middle", "quantity"], [3, "line", "payments"], [3, "line", "orderState"], [1, "align-middle", "total"], [4, "ngIf"], [3, "src"], ["vdrDropdownTrigger", "", 1, "promotions-label"], ["class", "line-promotion", 4, "ngFor", "ngForOf"], [1, "line-promotion"], [1, "promotion-name", 3, "routerLink"], [1, "promotion-amount"], ["colspan", "6", 1, "custom-fields-row"], [1, "order-line-custom-fields"], ["class", "custom-field", 4, "ngFor", "ngForOf"], [1, "custom-field"], [3, "compact", "readonly", "customField", "customFieldsFormGroup"], [1, "surcharge"], ["colspan", "2", 1, "align-middle", "name", "left"], ["colspan", "2", 1, "align-middle"], ["class", "order-adjustment", 4, "ngIf"], [1, "order-adjustment"], ["colspan", "5", 1, "left", "clr-align-middle"], [3, "routerLink"]], template: function OrderTableComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "table", 0);
        ɵngcc0.ɵɵelementStart(1, "thead");
        ɵngcc0.ɵɵelementStart(2, "tr");
        ɵngcc0.ɵɵelement(3, "th");
        ɵngcc0.ɵɵelementStart(4, "th");
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "th");
        ɵngcc0.ɵɵtext(8);
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "th");
        ɵngcc0.ɵɵtext(11);
        ɵngcc0.ɵɵpipe(12, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "th");
        ɵngcc0.ɵɵtext(14);
        ɵngcc0.ɵɵpipe(15, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "th");
        ɵngcc0.ɵɵtext(17);
        ɵngcc0.ɵɵpipe(18, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(19, "tbody");
        ɵngcc0.ɵɵtemplate(20, OrderTableComponent_ng_container_20_Template, 28, 34, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(21, OrderTableComponent_tr_21_Template, 13, 13, "tr", 2);
        ɵngcc0.ɵɵtemplate(22, OrderTableComponent_ng_container_22_Template, 2, 1, "ng-container", 1);
        ɵngcc0.ɵɵelementStart(23, "tr", 3);
        ɵngcc0.ɵɵelementStart(24, "td", 4);
        ɵngcc0.ɵɵtext(25);
        ɵngcc0.ɵɵpipe(26, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(27, "td", 5);
        ɵngcc0.ɵɵelementStart(28, "td", 6);
        ɵngcc0.ɵɵtext(29);
        ɵngcc0.ɵɵpipe(30, "localeCurrency");
        ɵngcc0.ɵɵelementStart(31, "div", 7);
        ɵngcc0.ɵɵpipe(32, "translate");
        ɵngcc0.ɵɵtext(33);
        ɵngcc0.ɵɵpipe(34, "localeCurrency");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(35, "tr", 8);
        ɵngcc0.ɵɵelementStart(36, "td", 4);
        ɵngcc0.ɵɵtext(37);
        ɵngcc0.ɵɵpipe(38, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(39, "td", 6);
        ɵngcc0.ɵɵtext(40);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(41, "td", 9);
        ɵngcc0.ɵɵelementStart(42, "td", 6);
        ɵngcc0.ɵɵtext(43);
        ɵngcc0.ɵɵpipe(44, "localeCurrency");
        ɵngcc0.ɵɵelementStart(45, "div", 7);
        ɵngcc0.ɵɵpipe(46, "translate");
        ɵngcc0.ɵɵtext(47);
        ɵngcc0.ɵɵpipe(48, "localeCurrency");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(49, "tr", 10);
        ɵngcc0.ɵɵelementStart(50, "td", 4);
        ɵngcc0.ɵɵtext(51);
        ɵngcc0.ɵɵpipe(52, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(53, "td", 5);
        ɵngcc0.ɵɵelementStart(54, "td", 6);
        ɵngcc0.ɵɵtext(55);
        ɵngcc0.ɵɵpipe(56, "localeCurrency");
        ɵngcc0.ɵɵelementStart(57, "div", 7);
        ɵngcc0.ɵɵpipe(58, "translate");
        ɵngcc0.ɵɵtext(59);
        ɵngcc0.ɵɵpipe(60, "localeCurrency");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 21, "order.product-name"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(9, 23, "order.product-sku"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(12, 25, "order.unit-price"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(15, 27, "order.quantity"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(18, 29, "order.total"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.order.lines);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.order.surcharges);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.order.discounts);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(26, 31, "order.sub-total"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(30, 33, ctx.order.subTotalWithTax, ctx.order.currencyCode), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(32, 36, "order.net-price"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(34, 38, ctx.order.subTotal, ctx.order.currencyCode), " ");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(38, 41, "order.shipping"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ctx.order.shippingLines[0] == null ? null : ctx.order.shippingLines[0].shippingMethod == null ? null : ctx.order.shippingLines[0].shippingMethod.name);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(44, 43, ctx.order.shippingWithTax, ctx.order.currencyCode), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(46, 46, "order.net-price"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(48, 48, ctx.order.shipping, ctx.order.currencyCode), " ");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(52, 51, "order.total"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(56, 53, ctx.order.totalWithTax, ctx.order.currencyCode), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(58, 56, "order.net-price"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(60, 58, ctx.order.total, ctx.order.currencyCode), " ");
    } }, directives: [ɵngcc5.NgForOf, ɵngcc5.NgIf, LineRefundsComponent, LineFulfillmentComponent, ɵngcc1.DropdownComponent, ɵngcc1.DropdownTriggerDirective, ɵngcc1.DropdownMenuComponent, ɵngcc8.RouterLinkWithHref, ɵngcc1.CustomFieldControlComponent, ɵngcc1.ChipComponent], pipes: [ɵngcc4.TranslatePipe, ɵngcc1.LocaleCurrencyPipe, ɵngcc1.AssetPreviewPipe], styles: [".order-table[_ngcontent-%COMP%]   .is-cancelled[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{text-decoration:line-through;background-color:var(--color-component-bg-200)}.order-table[_ngcontent-%COMP%]   .sub-total[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-top:1px dashed var(--color-component-border-200)}.order-table[_ngcontent-%COMP%]   .total[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{font-weight:bold;border-top:1px dashed var(--color-component-border-200)}.order-table[_ngcontent-%COMP%]   td.custom-fields-row[_ngcontent-%COMP%]{border-top-style:dashed;border-top-color:var(--color-grey-200)}.order-table[_ngcontent-%COMP%]   .order-line-custom-fields[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}.order-table[_ngcontent-%COMP%]   .order-line-custom-fields[_ngcontent-%COMP%]   .custom-field[_ngcontent-%COMP%]{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-right:18px}.order-table[_ngcontent-%COMP%]   .order-line-custom-field[_ngcontent-%COMP%]{background-color:var(--color-component-bg-100)}.order-table[_ngcontent-%COMP%]   .order-line-custom-field[_ngcontent-%COMP%]   .custom-field-ellipsis[_ngcontent-%COMP%]{color:var(--color-text-300)}.order-table[_ngcontent-%COMP%]   .net-price[_ngcontent-%COMP%]{font-size:11px;color:var(--color-text-300)}.order-table[_ngcontent-%COMP%]   .promotions-label[_ngcontent-%COMP%]{-webkit-text-decoration:underline dotted var(--color-text-200);text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}  .line-promotion{display:flex;justify-content:space-between;padding:6px 12px}  .line-promotion .promotion-amount{margin-left:12px}  .line-promotion .net-price{font-size:11px;color:var(--color-text-300)}"], changeDetection: 0 });
OrderTableComponent.propDecorators = {
    order: [{ type: Input }],
    orderLineCustomFields: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderTableComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-order-table',
                template: "<table class=\"order-table table\">\r\n    <thead>\r\n        <tr>\r\n            <th></th>\r\n            <th>{{ 'order.product-name' | translate }}</th>\r\n            <th>{{ 'order.product-sku' | translate }}</th>\r\n            <th>{{ 'order.unit-price' | translate }}</th>\r\n            <th>{{ 'order.quantity' | translate }}</th>\r\n            <th>{{ 'order.total' | translate }}</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <ng-container *ngFor=\"let line of order.lines\">\r\n            <tr class=\"order-line\" [class.is-cancelled]=\"line.quantity === 0\">\r\n                <td class=\"align-middle thumb\">\r\n                    <img *ngIf=\"line.featuredAsset\" [src]=\"line.featuredAsset | assetPreview: 'tiny'\" />\r\n                </td>\r\n                <td class=\"align-middle name\">{{ line.productVariant.name }}</td>\r\n                <td class=\"align-middle sku\">{{ line.productVariant.sku }}</td>\r\n                <td class=\"align-middle unit-price\">\r\n                    {{ line.unitPriceWithTax | localeCurrency: order.currencyCode }}\r\n                    <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                        {{ line.unitPrice | localeCurrency: order.currencyCode }}\r\n                    </div>\r\n                </td>\r\n                <td class=\"align-middle quantity\">\r\n                    {{ line.quantity }}\r\n                    <vdr-line-refunds [line]=\"line\" [payments]=\"order.payments\"></vdr-line-refunds>\r\n                    <vdr-line-fulfillment [line]=\"line\" [orderState]=\"order.state\"></vdr-line-fulfillment>\r\n                </td>\r\n                <td class=\"align-middle total\">\r\n                    {{ line.linePriceWithTax | localeCurrency: order.currencyCode }}\r\n                    <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                        {{ line.linePrice | localeCurrency: order.currencyCode }}\r\n                    </div>\r\n\r\n                    <ng-container *ngIf=\"getLineDiscounts(line) as discounts\">\r\n                        <vdr-dropdown *ngIf=\"discounts.length\">\r\n                            <div class=\"promotions-label\" vdrDropdownTrigger>\r\n                                {{ 'order.promotions-applied' | translate }}\r\n                            </div>\r\n                            <vdr-dropdown-menu>\r\n                                <div class=\"line-promotion\" *ngFor=\"let discount of discounts\">\r\n                                    <a class=\"promotion-name\" [routerLink]=\"getPromotionLink(discount)\">{{\r\n                                        discount.description\r\n                                    }}</a>\r\n                                    <div class=\"promotion-amount\">\r\n                                        {{ discount.amountWithTax | localeCurrency: order.currencyCode }}\r\n                                        <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                                            {{ discount.amount | localeCurrency: order.currencyCode }}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </vdr-dropdown-menu>\r\n                        </vdr-dropdown>\r\n                    </ng-container>\r\n                </td>\r\n            </tr>\r\n            <ng-container *ngIf=\"customFieldsForLine[line.id] as customFields\">\r\n                <tr *ngIf=\"customFields.length\">\r\n                    <td colspan=\"6\" class=\"custom-fields-row\">\r\n                        <div class=\"order-line-custom-fields\">\r\n                            <div class=\"custom-field\" *ngFor=\"let field of customFields\">\r\n                                <vdr-custom-field-control\r\n                                    [compact]=\"true\"\r\n                                    [readonly]=\"true\"\r\n                                    [customField]=\"field.config\"\r\n                                    [customFieldsFormGroup]=\"field.formGroup\"\r\n                                ></vdr-custom-field-control>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-container>\r\n        </ng-container>\r\n        <tr class=\"surcharge\" *ngFor=\"let surcharge of order.surcharges\">\r\n            <td class=\"align-middle name left\" colspan=\"2\">{{ surcharge.description }}</td>\r\n            <td class=\"align-middle sku\">{{ surcharge.sku }}</td>\r\n            <td class=\"align-middle\" colspan=\"2\"></td>\r\n            <td class=\"align-middle total\">\r\n                {{ surcharge.priceWithTax | localeCurrency: order.currencyCode }}\r\n                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                    {{ surcharge.price | localeCurrency: order.currencyCode }}\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        <ng-container *ngFor=\"let discount of order.discounts\">\r\n            <tr class=\"order-adjustment\" *ngIf=\"discount.type !== 'OTHER'\">\r\n            <td colspan=\"5\" class=\"left clr-align-middle\">\r\n                <a [routerLink]=\"getPromotionLink(discount)\">{{ discount.description }}</a>\r\n                <vdr-chip *ngIf=\"getCouponCodeForAdjustment(order, discount) as couponCode\">{{\r\n                    couponCode\r\n                }}</vdr-chip>\r\n            </td>\r\n            <td class=\"clr-align-middle\">\r\n                {{ discount.amountWithTax | localeCurrency: order.currencyCode }}\r\n                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                    {{ discount.amount | localeCurrency: order.currencyCode }}\r\n                </div>\r\n            </td>\r\n            </tr>\r\n        </ng-container>\r\n        <tr class=\"sub-total\">\r\n            <td class=\"left clr-align-middle\">{{ 'order.sub-total' | translate }}</td>\r\n            <td colspan=\"4\"></td>\r\n            <td class=\"clr-align-middle\">\r\n                {{ order.subTotalWithTax | localeCurrency: order.currencyCode }}\r\n                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                    {{ order.subTotal | localeCurrency: order.currencyCode }}\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        <tr class=\"shipping\">\r\n            <td class=\"left clr-align-middle\">{{ 'order.shipping' | translate }}</td>\r\n            <td class=\"clr-align-middle\">{{ order.shippingLines[0]?.shippingMethod?.name }}</td>\r\n            <td colspan=\"3\"></td>\r\n            <td class=\"clr-align-middle\">\r\n                {{ order.shippingWithTax | localeCurrency: order.currencyCode }}\r\n                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                    {{ order.shipping | localeCurrency: order.currencyCode }}\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        <tr class=\"total\">\r\n            <td class=\"left clr-align-middle\">{{ 'order.total' | translate }}</td>\r\n            <td colspan=\"4\"></td>\r\n            <td class=\"clr-align-middle\">\r\n                {{ order.totalWithTax | localeCurrency: order.currencyCode }}\r\n                <div class=\"net-price\" [title]=\"'order.net-price' | translate\">\r\n                    {{ order.total | localeCurrency: order.currencyCode }}\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".order-table .is-cancelled td{text-decoration:line-through;background-color:var(--color-component-bg-200)}.order-table .sub-total td{border-top:1px dashed var(--color-component-border-200)}.order-table .total td{font-weight:bold;border-top:1px dashed var(--color-component-border-200)}.order-table td.custom-fields-row{border-top-style:dashed;border-top-color:var(--color-grey-200)}.order-table .order-line-custom-fields{display:flex;flex-wrap:wrap}.order-table .order-line-custom-fields .custom-field{text-align:start;max-width:200px;overflow:hidden;text-overflow:ellipsis;margin-bottom:6px;margin-right:18px}.order-table .order-line-custom-field{background-color:var(--color-component-bg-100)}.order-table .order-line-custom-field .custom-field-ellipsis{color:var(--color-text-300)}.order-table .net-price{font-size:11px;color:var(--color-text-300)}.order-table .promotions-label{-webkit-text-decoration:underline dotted var(--color-text-200);text-decoration:underline dotted var(--color-text-200);font-size:11px;margin-top:6px;cursor:pointer;text-transform:lowercase}::ng-deep .line-promotion{display:flex;justify-content:space-between;padding:6px 12px}::ng-deep .line-promotion .promotion-amount{margin-left:12px}::ng-deep .line-promotion .net-price{font-size:11px;color:var(--color-text-300)}\n"]
            }]
    }], function () { return []; }, { order: [{
            type: Input
        }], orderLineCustomFields: [{
            type: Input
        }] }); })();

class PaymentDetailComponent {
}
PaymentDetailComponent.ɵfac = function PaymentDetailComponent_Factory(t) { return new (t || PaymentDetailComponent)(); };
PaymentDetailComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PaymentDetailComponent, selectors: [["vdr-payment-detail"]], inputs: { payment: "payment", currencyCode: "currencyCode" }, decls: 12, vars: 17, consts: [[3, "label"], [3, "label", 4, "ngIf"], [3, "value"]], template: function PaymentDetailComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "vdr-labeled-data", 0);
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "vdr-labeled-data", 0);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵpipe(6, "localeCurrency");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, PaymentDetailComponent_vdr_labeled_data_7_Template, 3, 4, "vdr-labeled-data", 1);
        ɵngcc0.ɵɵtemplate(8, PaymentDetailComponent_vdr_labeled_data_8_Template, 3, 4, "vdr-labeled-data", 1);
        ɵngcc0.ɵɵelementStart(9, "vdr-labeled-data", 0);
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelement(11, "vdr-object-tree", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(1, 8, "order.payment-method"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.payment.method, "\n");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(4, 10, "order.amount"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(6, 12, ctx.payment.amount, ctx.currencyCode), "\n");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.payment.errorMessage);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.payment.transactionId);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("label", ɵngcc0.ɵɵpipeBind1(10, 15, "order.payment-metadata"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("value", ctx.payment.metadata);
    } }, directives: [ɵngcc1.LabeledDataComponent, ɵngcc5.NgIf, ɵngcc1.ObjectTreeComponent], pipes: [ɵngcc4.TranslatePipe, ɵngcc1.LocaleCurrencyPipe], styles: [""], changeDetection: 0 });
PaymentDetailComponent.propDecorators = {
    payment: [{ type: Input }],
    currencyCode: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaymentDetailComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-payment-detail',
                template: "<vdr-labeled-data [label]=\"'order.payment-method' | translate\">\r\n    {{ payment.method }}\r\n</vdr-labeled-data>\r\n<vdr-labeled-data [label]=\"'order.amount' | translate\">\r\n    {{ payment.amount | localeCurrency: currencyCode }}\r\n</vdr-labeled-data>\r\n<vdr-labeled-data *ngIf=\"payment.errorMessage\" [label]=\"'order.error-message' | translate\">\r\n    {{ payment.errorMessage }}\r\n</vdr-labeled-data>\r\n<vdr-labeled-data *ngIf=\"payment.transactionId\" [label]=\"'order.transaction-id' | translate\">\r\n    {{ payment.transactionId }}\r\n</vdr-labeled-data>\r\n<vdr-labeled-data [label]=\"'order.payment-metadata' | translate\">\r\n    <vdr-object-tree [value]=\"payment.metadata\"></vdr-object-tree>\r\n</vdr-labeled-data>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }]
    }], null, { payment: [{
            type: Input
        }], currencyCode: [{
            type: Input
        }] }); })();

class PaymentStateLabelComponent {
    get chipColorType() {
        switch (this.state) {
            case 'Authorized':
                return 'warning';
            case 'Settled':
                return 'success';
            case 'Declined':
            case 'Cancelled':
                return 'error';
        }
    }
}
PaymentStateLabelComponent.ɵfac = function PaymentStateLabelComponent_Factory(t) { return new (t || PaymentStateLabelComponent)(); };
PaymentStateLabelComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PaymentStateLabelComponent, selectors: [["vdr-payment-state-label"]], inputs: { state: "state" }, decls: 6, vars: 10, consts: [[3, "title", "colorType"], ["shape", "check-circle", 4, "ngIf"], ["shape", "check-circle"]], template: function PaymentStateLabelComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "vdr-chip", 0);
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵtemplate(2, PaymentStateLabelComponent_clr_icon_2_Template, 1, 0, "clr-icon", 1);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵpipe(5, "stateI18nToken");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(1, 4, "order.payment-state"))("colorType", ctx.chipColorType);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.state === "Settled");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 6, ɵngcc0.ɵɵpipeBind1(5, 8, ctx.state)), "\n");
    } }, directives: [ɵngcc1.ChipComponent, ɵngcc5.NgIf, ɵngcc6.ClrIconCustomTag], pipes: [ɵngcc4.TranslatePipe, ɵngcc1.StateI18nTokenPipe], styles: ["[_nghost-%COMP%]{font-size:14px}"], changeDetection: 0 });
PaymentStateLabelComponent.propDecorators = {
    state: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PaymentStateLabelComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-payment-state-label',
                template: "<vdr-chip [title]=\"'order.payment-state' | translate\" [colorType]=\"chipColorType\">\r\n    <clr-icon shape=\"check-circle\" *ngIf=\"state === 'Settled'\"></clr-icon>\r\n    {{ state | stateI18nToken | translate }}\r\n</vdr-chip>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{font-size:14px}\n"]
            }]
    }], null, { state: [{
            type: Input
        }] }); })();

class RefundStateLabelComponent {
    get chipColorType() {
        switch (this.state) {
            case 'Pending':
                return 'warning';
            case 'Settled':
                return 'success';
            case 'Failed':
                return 'error';
        }
    }
}
RefundStateLabelComponent.ɵfac = function RefundStateLabelComponent_Factory(t) { return new (t || RefundStateLabelComponent)(); };
RefundStateLabelComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: RefundStateLabelComponent, selectors: [["vdr-refund-state-label"]], inputs: { state: "state" }, decls: 6, vars: 10, consts: [[3, "title", "colorType"], ["shape", "check-circle", 4, "ngIf"], ["shape", "check-circle"]], template: function RefundStateLabelComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "vdr-chip", 0);
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵtemplate(2, RefundStateLabelComponent_clr_icon_2_Template, 1, 0, "clr-icon", 1);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵpipe(5, "stateI18nToken");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(1, 4, "order.payment-state"))("colorType", ctx.chipColorType);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.state === "Settled");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 6, ɵngcc0.ɵɵpipeBind1(5, 8, ctx.state)), "\n");
    } }, directives: [ɵngcc1.ChipComponent, ɵngcc5.NgIf, ɵngcc6.ClrIconCustomTag], pipes: [ɵngcc4.TranslatePipe, ɵngcc1.StateI18nTokenPipe], styles: ["[_nghost-%COMP%]{font-size:14px}"], changeDetection: 0 });
RefundStateLabelComponent.propDecorators = {
    state: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RefundStateLabelComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-refund-state-label',
                template: "<vdr-chip [title]=\"'order.payment-state' | translate\" [colorType]=\"chipColorType\">\r\n    <clr-icon shape=\"check-circle\" *ngIf=\"state === 'Settled'\"></clr-icon>\r\n    {{ state | stateI18nToken | translate }}\r\n</vdr-chip>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{font-size:14px}\n"]
            }]
    }], null, { state: [{
            type: Input
        }] }); })();

class SimpleItemListComponent {
}
SimpleItemListComponent.ɵfac = function SimpleItemListComponent_Factory(t) { return new (t || SimpleItemListComponent)(); };
SimpleItemListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SimpleItemListComponent, selectors: [["vdr-simple-item-list"]], inputs: { items: "items" }, decls: 3, vars: 1, consts: [[1, "items-list"], [3, "title", 4, "ngFor", "ngForOf"], [3, "title"], [1, "quantity"], ["shape", "times", "size", "12"]], template: function SimpleItemListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "ul");
        ɵngcc0.ɵɵtemplate(2, SimpleItemListComponent_li_2_Template, 5, 3, "li", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.items);
    } }, directives: [ɵngcc5.NgForOf, ɵngcc6.ClrIconCustomTag], styles: [".items-list[_ngcontent-%COMP%]{font-size:12px}.items-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{margin-top:6px;list-style-type:none;margin-left:2px}.items-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{line-height:14px;text-overflow:ellipsis;overflow:hidden}.items-list[_ngcontent-%COMP%]   .quantity[_ngcontent-%COMP%]{min-width:16px;display:inline-block}"], changeDetection: 0 });
SimpleItemListComponent.propDecorators = {
    items: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SimpleItemListComponent, [{
        type: Component,
        args: [{
                selector: 'vdr-simple-item-list',
                template: "<div class=\"items-list\">\r\n    <ul>\r\n        <li *ngFor=\"let item of items\" [title]=\"item.name\">\r\n            <div class=\"quantity\">{{ item.quantity }}</div>\r\n            <clr-icon shape=\"times\" size=\"12\"></clr-icon>\r\n            {{ item.name }}\r\n        </li>\r\n    </ul>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".items-list{font-size:12px}.items-list ul{margin-top:6px;list-style-type:none;margin-left:2px}.items-list ul li{line-height:14px;text-overflow:ellipsis;overflow:hidden}.items-list .quantity{min-width:16px;display:inline-block}\n"]
            }]
    }], null, { items: [{
            type: Input
        }] }); })();

/**
 * Resolves the id from the path into a Customer entity.
 */
class OrderResolver extends BaseEntityResolver {
    constructor(router, dataService) {
        super(router, {
            __typename: 'Order',
            id: '',
            code: '',
            createdAt: '',
            updatedAt: '',
            total: 0,
        }, id => dataService.order.getOrder(id).mapStream(data => data.order));
    }
}
OrderResolver.ɵfac = function OrderResolver_Factory(t) { return new (t || OrderResolver)(ɵngcc0.ɵɵinject(ɵngcc8.Router), ɵngcc0.ɵɵinject(ɵngcc1.DataService)); };
OrderResolver.ɵprov = i0.ɵɵdefineInjectable({ factory: function OrderResolver_Factory() { return new OrderResolver(i0.ɵɵinject(i1$1.Router), i0.ɵɵinject(i1.DataService)); }, token: OrderResolver, providedIn: "root" });
OrderResolver.ctorParameters = () => [
    { type: Router },
    { type: DataService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderResolver, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc8.Router }, { type: ɵngcc1.DataService }]; }, null); })();

const ɵ0 = {
    breadcrumb: marker('breadcrumb.orders'),
}, ɵ1 = {
    breadcrumb: orderBreadcrumb,
}, ɵ2 = {
    breadcrumb: modifyingOrderBreadcrumb,
};
const orderRoutes = [
    {
        path: '',
        component: OrderListComponent,
        data: ɵ0,
    },
    {
        path: ':id',
        component: OrderDetailComponent,
        resolve: createResolveData(OrderResolver),
        canDeactivate: [CanDeactivateDetailGuard],
        data: ɵ1,
    },
    {
        path: ':id/modify',
        component: OrderEditorComponent,
        resolve: createResolveData(OrderResolver),
        // canDeactivate: [CanDeactivateDetailGuard],
        data: ɵ2,
    },
];
function orderBreadcrumb(data, params) {
    return detailBreadcrumb({
        entity: data.entity,
        id: params.id,
        breadcrumbKey: 'breadcrumb.orders',
        getName: order => order.code,
        route: '',
    });
}
function modifyingOrderBreadcrumb(data, params) {
    return orderBreadcrumb(data, params).pipe(map((breadcrumbs) => {
        const modifiedBreadcrumbs = breadcrumbs.slice();
        modifiedBreadcrumbs[0].link[0] = '../';
        modifiedBreadcrumbs[1].link[0] = '../orders';
        return modifiedBreadcrumbs.concat({ label: marker('breadcrumb.modifying'), link: [''] });
    }));
}

class OrderModule {
}
OrderModule.ɵfac = function OrderModule_Factory(t) { return new (t || OrderModule)(); };
OrderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: OrderModule });
OrderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[SharedModule, RouterModule.forChild(orderRoutes)]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OrderModule, [{
        type: NgModule,
        args: [{
                imports: [SharedModule, RouterModule.forChild(orderRoutes)],
                declarations: [
                    OrderListComponent,
                    OrderDetailComponent,
                    FulfillOrderDialogComponent,
                    LineFulfillmentComponent,
                    RefundOrderDialogComponent,
                    CancelOrderDialogComponent,
                    PaymentStateLabelComponent,
                    LineRefundsComponent,
                    OrderPaymentCardComponent,
                    RefundStateLabelComponent,
                    SettleRefundDialogComponent,
                    OrderHistoryComponent,
                    FulfillmentDetailComponent,
                    PaymentDetailComponent,
                    SimpleItemListComponent,
                    OrderCustomFieldsCardComponent,
                    OrderProcessGraphComponent,
                    OrderProcessNodeComponent,
                    OrderProcessEdgeComponent,
                    OrderProcessGraphDialogComponent,
                    FulfillmentStateLabelComponent,
                    FulfillmentCardComponent,
                    OrderEditorComponent,
                    OrderTableComponent,
                    OrderEditsPreviewDialogComponent,
                    ModificationDetailComponent,
                    AddManualPaymentDialogComponent,
                    OrderStateSelectDialogComponent,
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OrderModule, { declarations: function () { return [OrderListComponent, OrderDetailComponent, FulfillOrderDialogComponent, LineFulfillmentComponent, RefundOrderDialogComponent, CancelOrderDialogComponent, PaymentStateLabelComponent, LineRefundsComponent, OrderPaymentCardComponent, RefundStateLabelComponent, SettleRefundDialogComponent, OrderHistoryComponent, FulfillmentDetailComponent, PaymentDetailComponent, SimpleItemListComponent, OrderCustomFieldsCardComponent, OrderProcessGraphComponent, OrderProcessNodeComponent, OrderProcessEdgeComponent, OrderProcessGraphDialogComponent, FulfillmentStateLabelComponent, FulfillmentCardComponent, OrderEditorComponent, OrderTableComponent, OrderEditsPreviewDialogComponent, ModificationDetailComponent, AddManualPaymentDialogComponent, OrderStateSelectDialogComponent]; }, imports: function () { return [SharedModule, ɵngcc8.RouterModule]; } }); })();

// This file was generated by the build-public-api.ts script

/**
 * Generated bundle index. Do not edit.
 */

export { AddManualPaymentDialogComponent, CancelOrderDialogComponent, FulfillOrderDialogComponent, FulfillmentCardComponent, FulfillmentDetailComponent, FulfillmentStateLabelComponent, LineFulfillmentComponent, LineRefundsComponent, ModificationDetailComponent, NODE_HEIGHT, OrderCustomFieldsCardComponent, OrderDetailComponent, OrderEditResultType, OrderEditorComponent, OrderEditsPreviewDialogComponent, OrderHistoryComponent, OrderListComponent, OrderModule, OrderPaymentCardComponent, OrderProcessEdgeComponent, OrderProcessGraphComponent, OrderProcessGraphDialogComponent, OrderProcessNodeComponent, OrderResolver, OrderStateSelectDialogComponent, OrderTableComponent, OrderTransitionService, PaymentDetailComponent, PaymentStateLabelComponent, RefundOrderDialogComponent, RefundStateLabelComponent, SettleRefundDialogComponent, SimpleItemListComponent, modifyingOrderBreadcrumb, orderBreadcrumb, orderRoutes, ɵ0, ɵ1, ɵ2 };

//# sourceMappingURL=vendure-admin-ui-order.js.map