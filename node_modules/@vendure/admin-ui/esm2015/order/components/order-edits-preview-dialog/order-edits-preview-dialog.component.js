import { ChangeDetectionStrategy, Component } from '@angular/core';
export var OrderEditResultType;
(function (OrderEditResultType) {
    OrderEditResultType[OrderEditResultType["Refund"] = 0] = "Refund";
    OrderEditResultType[OrderEditResultType["Payment"] = 1] = "Payment";
    OrderEditResultType[OrderEditResultType["PriceUnchanged"] = 2] = "PriceUnchanged";
    OrderEditResultType[OrderEditResultType["Cancel"] = 3] = "Cancel";
})(OrderEditResultType || (OrderEditResultType = {}));
export class OrderEditsPreviewDialogComponent {
    get priceDifference() {
        return this.order.totalWithTax - this.originalTotalWithTax;
    }
    ngOnInit() {
        this.refundNote = this.modifyOrderInput.note || '';
    }
    cancel() {
        this.resolveWith({
            result: OrderEditResultType.Cancel,
        });
    }
    submit() {
        if (0 < this.priceDifference) {
            this.resolveWith({
                result: OrderEditResultType.Payment,
            });
        }
        else if (this.priceDifference < 0) {
            this.resolveWith({
                result: OrderEditResultType.Refund,
                // tslint:disable-next-line:no-non-null-assertion
                refundPaymentId: this.selectedPayment.id,
                refundNote: this.refundNote,
            });
        }
        else {
            this.resolveWith({
                result: OrderEditResultType.PriceUnchanged,
            });
        }
    }
}
OrderEditsPreviewDialogComponent.decorators = [
    { type: Component, args: [{
                selector: 'vdr-order-edits-preview-dialog',
                template: "<ng-template vdrDialogTitle>{{ 'order.confirm-modifications' | translate }}</ng-template>\r\n<vdr-order-table [order]=\"order\" [orderLineCustomFields]=\"orderLineCustomFields\"></vdr-order-table>\r\n\r\n<h4 class=\"h4\">\r\n    {{ 'order.modify-order-price-difference' | translate }}:\r\n    <strong>{{ priceDifference | localeCurrency: order.currencyCode }}</strong>\r\n</h4>\r\n<div *ngIf=\"priceDifference < 0\">\r\n<clr-select-container>\r\n    <label>{{ 'order.payment-to-refund' | translate }}</label>\r\n    <select clrSelect name=\"options\" [(ngModel)]=\"selectedPayment\">\r\n        <option\r\n            *ngFor=\"let payment of order.payments\"\r\n            [ngValue]=\"payment\"\r\n        >\r\n            #{{ payment.id }} {{ payment.method }}:\r\n            {{ payment.amount | localeCurrency: order.currencyCode }}\r\n        </option>\r\n    </select>\r\n</clr-select-container>\r\n    <label class=\"clr-control-label\">{{ 'order.refund-cancellation-reason' | translate }}</label>\r\n    <textarea [(ngModel)]=\"refundNote\" name=\"refundNote\" clrTextarea required></textarea>\r\n</div>\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button type=\"submit\" (click)=\"submit()\" [disabled]=\"priceDifference < 0 && !selectedPayment\" class=\"btn btn-primary\">\r\n        {{ 'common.confirm' | translate }}\r\n    </button>\r\n</ng-template>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItZWRpdHMtcHJldmlldy1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9vcmRlci9zcmMvY29tcG9uZW50cy9vcmRlci1lZGl0cy1wcmV2aWV3LWRpYWxvZy9vcmRlci1lZGl0cy1wcmV2aWV3LWRpYWxvZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUczRSxNQUFNLENBQU4sSUFBWSxtQkFLWDtBQUxELFdBQVksbUJBQW1CO0lBQzNCLGlFQUFNLENBQUE7SUFDTixtRUFBTyxDQUFBO0lBQ1AsaUZBQWMsQ0FBQTtJQUNkLGlFQUFNLENBQUE7QUFDVixDQUFDLEVBTFcsbUJBQW1CLEtBQW5CLG1CQUFtQixRQUs5QjtBQTRCRCxNQUFNLE9BQU8sZ0NBQWdDO0lBV3pDLElBQUksZUFBZTtRQUNmLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDO0lBQy9ELENBQUM7SUFFRCxRQUFRO1FBQ0osSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQztJQUN2RCxDQUFDO0lBRUQsTUFBTTtRQUNGLElBQUksQ0FBQyxXQUFXLENBQUM7WUFDYixNQUFNLEVBQUUsbUJBQW1CLENBQUMsTUFBTTtTQUNyQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsTUFBTTtRQUNGLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxlQUFlLEVBQUU7WUFDMUIsSUFBSSxDQUFDLFdBQVcsQ0FBQztnQkFDYixNQUFNLEVBQUUsbUJBQW1CLENBQUMsT0FBTzthQUN0QyxDQUFDLENBQUM7U0FDTjthQUFNLElBQUksSUFBSSxDQUFDLGVBQWUsR0FBRyxDQUFDLEVBQUU7WUFDakMsSUFBSSxDQUFDLFdBQVcsQ0FBQztnQkFDYixNQUFNLEVBQUUsbUJBQW1CLENBQUMsTUFBTTtnQkFDbEMsaURBQWlEO2dCQUNqRCxlQUFlLEVBQUUsSUFBSSxDQUFDLGVBQWdCLENBQUMsRUFBRTtnQkFDekMsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVO2FBQzlCLENBQUMsQ0FBQztTQUNOO2FBQU07WUFDSCxJQUFJLENBQUMsV0FBVyxDQUFDO2dCQUNiLE1BQU0sRUFBRSxtQkFBbUIsQ0FBQyxjQUFjO2FBQzdDLENBQUMsQ0FBQztTQUNOO0lBQ0wsQ0FBQzs7O1lBaERKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsZ0NBQWdDO2dCQUMxQyw2OENBQTBEO2dCQUUxRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7YUFDbEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ3VzdG9tRmllbGRDb25maWcsIERpYWxvZywgTW9kaWZ5T3JkZXJJbnB1dCwgT3JkZXJEZXRhaWwgfSBmcm9tICdAdmVuZHVyZS9hZG1pbi11aS9jb3JlJztcclxuXHJcbmV4cG9ydCBlbnVtIE9yZGVyRWRpdFJlc3VsdFR5cGUge1xyXG4gICAgUmVmdW5kLFxyXG4gICAgUGF5bWVudCxcclxuICAgIFByaWNlVW5jaGFuZ2VkLFxyXG4gICAgQ2FuY2VsLFxyXG59XHJcblxyXG5pbnRlcmZhY2UgT3JkZXJFZGl0c1JlZnVuZFJlc3VsdCB7XHJcbiAgICByZXN1bHQ6IE9yZGVyRWRpdFJlc3VsdFR5cGUuUmVmdW5kO1xyXG4gICAgcmVmdW5kUGF5bWVudElkOiBzdHJpbmc7XHJcbiAgICByZWZ1bmROb3RlPzogc3RyaW5nO1xyXG59XHJcbmludGVyZmFjZSBPcmRlckVkaXRzUGF5bWVudFJlc3VsdCB7XHJcbiAgICByZXN1bHQ6IE9yZGVyRWRpdFJlc3VsdFR5cGUuUGF5bWVudDtcclxufVxyXG5pbnRlcmZhY2UgT3JkZXJFZGl0c1ByaWNlVW5jaGFuZ2VkUmVzdWx0IHtcclxuICAgIHJlc3VsdDogT3JkZXJFZGl0UmVzdWx0VHlwZS5QcmljZVVuY2hhbmdlZDtcclxufVxyXG5pbnRlcmZhY2UgT3JkZXJFZGl0c0NhbmNlbFJlc3VsdCB7XHJcbiAgICByZXN1bHQ6IE9yZGVyRWRpdFJlc3VsdFR5cGUuQ2FuY2VsO1xyXG59XHJcbnR5cGUgT3JkZXJFZGl0UmVzdWx0ID1cclxuICAgIHwgT3JkZXJFZGl0c1JlZnVuZFJlc3VsdFxyXG4gICAgfCBPcmRlckVkaXRzUGF5bWVudFJlc3VsdFxyXG4gICAgfCBPcmRlckVkaXRzUHJpY2VVbmNoYW5nZWRSZXN1bHRcclxuICAgIHwgT3JkZXJFZGl0c0NhbmNlbFJlc3VsdDtcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd2ZHItb3JkZXItZWRpdHMtcHJldmlldy1kaWFsb2cnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL29yZGVyLWVkaXRzLXByZXZpZXctZGlhbG9nLmNvbXBvbmVudC5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL29yZGVyLWVkaXRzLXByZXZpZXctZGlhbG9nLmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxufSlcclxuZXhwb3J0IGNsYXNzIE9yZGVyRWRpdHNQcmV2aWV3RGlhbG9nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBEaWFsb2c8T3JkZXJFZGl0UmVzdWx0PiB7XHJcbiAgICAvLyBQYXNzZWQgaW4gdmlhIHRoZSBtb2RhbFNlcnZpY2VcclxuICAgIG9yZGVyOiBPcmRlckRldGFpbC5GcmFnbWVudDtcclxuICAgIG9yaWdpbmFsVG90YWxXaXRoVGF4OiBudW1iZXI7XHJcbiAgICBvcmRlckxpbmVDdXN0b21GaWVsZHM6IEN1c3RvbUZpZWxkQ29uZmlnW107XHJcbiAgICBtb2RpZnlPcmRlcklucHV0OiBNb2RpZnlPcmRlcklucHV0O1xyXG5cclxuICAgIHNlbGVjdGVkUGF5bWVudD86IE9yZGVyRGV0YWlsLlBheW1lbnRzO1xyXG4gICAgcmVmdW5kTm90ZTogc3RyaW5nO1xyXG4gICAgcmVzb2x2ZVdpdGg6IChyZXN1bHQ/OiBPcmRlckVkaXRSZXN1bHQpID0+IHZvaWQ7XHJcblxyXG4gICAgZ2V0IHByaWNlRGlmZmVyZW5jZSgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm9yZGVyLnRvdGFsV2l0aFRheCAtIHRoaXMub3JpZ2luYWxUb3RhbFdpdGhUYXg7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5yZWZ1bmROb3RlID0gdGhpcy5tb2RpZnlPcmRlcklucHV0Lm5vdGUgfHwgJyc7XHJcbiAgICB9XHJcblxyXG4gICAgY2FuY2VsKCkge1xyXG4gICAgICAgIHRoaXMucmVzb2x2ZVdpdGgoe1xyXG4gICAgICAgICAgICByZXN1bHQ6IE9yZGVyRWRpdFJlc3VsdFR5cGUuQ2FuY2VsLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHN1Ym1pdCgpIHtcclxuICAgICAgICBpZiAoMCA8IHRoaXMucHJpY2VEaWZmZXJlbmNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVzb2x2ZVdpdGgoe1xyXG4gICAgICAgICAgICAgICAgcmVzdWx0OiBPcmRlckVkaXRSZXN1bHRUeXBlLlBheW1lbnQsXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5wcmljZURpZmZlcmVuY2UgPCAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVzb2x2ZVdpdGgoe1xyXG4gICAgICAgICAgICAgICAgcmVzdWx0OiBPcmRlckVkaXRSZXN1bHRUeXBlLlJlZnVuZCxcclxuICAgICAgICAgICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1ub24tbnVsbC1hc3NlcnRpb25cclxuICAgICAgICAgICAgICAgIHJlZnVuZFBheW1lbnRJZDogdGhpcy5zZWxlY3RlZFBheW1lbnQhLmlkLFxyXG4gICAgICAgICAgICAgICAgcmVmdW5kTm90ZTogdGhpcy5yZWZ1bmROb3RlLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnJlc29sdmVXaXRoKHtcclxuICAgICAgICAgICAgICAgIHJlc3VsdDogT3JkZXJFZGl0UmVzdWx0VHlwZS5QcmljZVVuY2hhbmdlZCxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==