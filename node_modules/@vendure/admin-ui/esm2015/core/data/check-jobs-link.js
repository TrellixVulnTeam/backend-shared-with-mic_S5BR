import { ApolloLink } from '@apollo/client/core';
import { JobQueueService } from '../providers/job-queue/job-queue.service';
/**
 * This link checks each operation and if it is a mutation, it tells the JobQueueService
 * to poll for active jobs. This is because certain mutations trigger background jobs
 * which should be made known in the UI.
 */
export class CheckJobsLink extends ApolloLink {
    /**
     * We inject the Injector rather than the JobQueueService directly in order
     * to avoid a circular dependency error.
     */
    constructor(injector) {
        super((operation, forward) => {
            if (this.isMutation(operation)) {
                this.jobQueueService.checkForJobs();
            }
            return forward ? forward(operation) : null;
        });
        this.injector = injector;
    }
    get jobQueueService() {
        if (!this._jobQueueService) {
            this._jobQueueService = this.injector.get(JobQueueService);
        }
        return this._jobQueueService;
    }
    isMutation(operation) {
        return !!operation.query.definitions.find(d => d.kind === 'OperationDefinition' && d.operation === 'mutation');
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2stam9icy1saW5rLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jb3JlL3NyYy9kYXRhL2NoZWNrLWpvYnMtbGluay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsVUFBVSxFQUFhLE1BQU0scUJBQXFCLENBQUM7QUFFNUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBRTNFOzs7O0dBSUc7QUFDSCxNQUFNLE9BQU8sYUFBYyxTQUFRLFVBQVU7SUFTekM7OztPQUdHO0lBQ0gsWUFBb0IsUUFBa0I7UUFDbEMsS0FBSyxDQUFDLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRSxFQUFFO1lBQ3pCLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsRUFBRTtnQkFDNUIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxZQUFZLEVBQUUsQ0FBQzthQUN2QztZQUNELE9BQU8sT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUMvQyxDQUFDLENBQUMsQ0FBQztRQU5hLGFBQVEsR0FBUixRQUFRLENBQVU7SUFPdEMsQ0FBQztJQWxCRCxJQUFJLGVBQWU7UUFDZixJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQ3hCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztTQUM5RDtRQUNELE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDO0lBQ2pDLENBQUM7SUFlTyxVQUFVLENBQUMsU0FBb0I7UUFDbkMsT0FBTyxDQUFDLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUNyQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUsscUJBQXFCLElBQUksQ0FBQyxDQUFDLFNBQVMsS0FBSyxVQUFVLENBQ3RFLENBQUM7SUFDTixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBBcG9sbG9MaW5rLCBPcGVyYXRpb24gfSBmcm9tICdAYXBvbGxvL2NsaWVudC9jb3JlJztcclxuXHJcbmltcG9ydCB7IEpvYlF1ZXVlU2VydmljZSB9IGZyb20gJy4uL3Byb3ZpZGVycy9qb2ItcXVldWUvam9iLXF1ZXVlLnNlcnZpY2UnO1xyXG5cclxuLyoqXHJcbiAqIFRoaXMgbGluayBjaGVja3MgZWFjaCBvcGVyYXRpb24gYW5kIGlmIGl0IGlzIGEgbXV0YXRpb24sIGl0IHRlbGxzIHRoZSBKb2JRdWV1ZVNlcnZpY2VcclxuICogdG8gcG9sbCBmb3IgYWN0aXZlIGpvYnMuIFRoaXMgaXMgYmVjYXVzZSBjZXJ0YWluIG11dGF0aW9ucyB0cmlnZ2VyIGJhY2tncm91bmQgam9ic1xyXG4gKiB3aGljaCBzaG91bGQgYmUgbWFkZSBrbm93biBpbiB0aGUgVUkuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQ2hlY2tKb2JzTGluayBleHRlbmRzIEFwb2xsb0xpbmsge1xyXG4gICAgcHJpdmF0ZSBfam9iUXVldWVTZXJ2aWNlOiBKb2JRdWV1ZVNlcnZpY2U7XHJcbiAgICBnZXQgam9iUXVldWVTZXJ2aWNlKCk6IEpvYlF1ZXVlU2VydmljZSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9qb2JRdWV1ZVNlcnZpY2UpIHtcclxuICAgICAgICAgICAgdGhpcy5fam9iUXVldWVTZXJ2aWNlID0gdGhpcy5pbmplY3Rvci5nZXQoSm9iUXVldWVTZXJ2aWNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2pvYlF1ZXVlU2VydmljZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFdlIGluamVjdCB0aGUgSW5qZWN0b3IgcmF0aGVyIHRoYW4gdGhlIEpvYlF1ZXVlU2VydmljZSBkaXJlY3RseSBpbiBvcmRlclxyXG4gICAgICogdG8gYXZvaWQgYSBjaXJjdWxhciBkZXBlbmRlbmN5IGVycm9yLlxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3Rvcikge1xyXG4gICAgICAgIHN1cGVyKChvcGVyYXRpb24sIGZvcndhcmQpID0+IHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuaXNNdXRhdGlvbihvcGVyYXRpb24pKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmpvYlF1ZXVlU2VydmljZS5jaGVja0ZvckpvYnMoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gZm9yd2FyZCA/IGZvcndhcmQob3BlcmF0aW9uKSA6IG51bGw7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBpc011dGF0aW9uKG9wZXJhdGlvbjogT3BlcmF0aW9uKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuICEhb3BlcmF0aW9uLnF1ZXJ5LmRlZmluaXRpb25zLmZpbmQoXHJcbiAgICAgICAgICAgIGQgPT4gZC5raW5kID09PSAnT3BlcmF0aW9uRGVmaW5pdGlvbicgJiYgZC5vcGVyYXRpb24gPT09ICdtdXRhdGlvbicsXHJcbiAgICAgICAgKTtcclxuICAgIH1cclxufVxyXG4iXX0=