import { gql } from 'apollo-angular';
import { ASSET_FRAGMENT } from './product-definitions';
import { CONFIGURABLE_OPERATION_DEF_FRAGMENT, CONFIGURABLE_OPERATION_FRAGMENT } from './shared-definitions';
export const GET_COLLECTION_FILTERS = gql `
    query GetCollectionFilters {
        collectionFilters {
            ...ConfigurableOperationDef
        }
    }
    ${CONFIGURABLE_OPERATION_DEF_FRAGMENT}
`;
export const COLLECTION_FRAGMENT = gql `
    fragment Collection on Collection {
        id
        createdAt
        updatedAt
        name
        slug
        description
        isPrivate
        languageCode
        featuredAsset {
            ...Asset
        }
        assets {
            ...Asset
        }
        filters {
            ...ConfigurableOperation
        }
        translations {
            id
            languageCode
            name
            slug
            description
        }
        parent {
            id
            name
        }
        children {
            id
            name
        }
    }
    ${ASSET_FRAGMENT}
    ${CONFIGURABLE_OPERATION_FRAGMENT}
`;
export const GET_COLLECTION_LIST = gql `
    query GetCollectionList($options: CollectionListOptions) {
        collections(options: $options) {
            items {
                id
                name
                slug
                description
                isPrivate
                featuredAsset {
                    ...Asset
                }
                parent {
                    id
                }
            }
            totalItems
        }
    }
    ${ASSET_FRAGMENT}
`;
export const GET_COLLECTION = gql `
    query GetCollection($id: ID!) {
        collection(id: $id) {
            ...Collection
        }
    }
    ${COLLECTION_FRAGMENT}
`;
export const CREATE_COLLECTION = gql `
    mutation CreateCollection($input: CreateCollectionInput!) {
        createCollection(input: $input) {
            ...Collection
        }
    }
    ${COLLECTION_FRAGMENT}
`;
export const UPDATE_COLLECTION = gql `
    mutation UpdateCollection($input: UpdateCollectionInput!) {
        updateCollection(input: $input) {
            ...Collection
        }
    }
    ${COLLECTION_FRAGMENT}
`;
export const MOVE_COLLECTION = gql `
    mutation MoveCollection($input: MoveCollectionInput!) {
        moveCollection(input: $input) {
            ...Collection
        }
    }
    ${COLLECTION_FRAGMENT}
`;
export const DELETE_COLLECTION = gql `
    mutation DeleteCollection($id: ID!) {
        deleteCollection(id: $id) {
            result
            message
        }
    }
`;
export const GET_COLLECTION_CONTENTS = gql `
    query GetCollectionContents($id: ID!, $options: ProductVariantListOptions) {
        collection(id: $id) {
            id
            name
            productVariants(options: $options) {
                items {
                    id
                    productId
                    name
                }
                totalItems
            }
        }
    }
`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGVjdGlvbi1kZWZpbml0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS9zcmMvZGF0YS9kZWZpbml0aW9ucy9jb2xsZWN0aW9uLWRlZmluaXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVyQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdkQsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLCtCQUErQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFNUcsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsR0FBRyxDQUFBOzs7Ozs7TUFNbkMsbUNBQW1DO0NBQ3hDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01BbUNoQyxjQUFjO01BQ2QsK0JBQStCO0NBQ3BDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFtQmhDLGNBQWM7Q0FDbkIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxHQUFHLENBQUE7Ozs7OztNQU0zQixtQkFBbUI7Q0FDeEIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEdBQUcsQ0FBQTs7Ozs7O01BTTlCLG1CQUFtQjtDQUN4QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsR0FBRyxDQUFBOzs7Ozs7TUFNOUIsbUJBQW1CO0NBQ3hCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsR0FBRyxDQUFBOzs7Ozs7TUFNNUIsbUJBQW1CO0NBQ3hCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7Q0FPbkMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHLEdBQUcsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7O0NBZXpDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tYW5ndWxhcic7XHJcblxyXG5pbXBvcnQgeyBBU1NFVF9GUkFHTUVOVCB9IGZyb20gJy4vcHJvZHVjdC1kZWZpbml0aW9ucyc7XHJcbmltcG9ydCB7IENPTkZJR1VSQUJMRV9PUEVSQVRJT05fREVGX0ZSQUdNRU5ULCBDT05GSUdVUkFCTEVfT1BFUkFUSU9OX0ZSQUdNRU5UIH0gZnJvbSAnLi9zaGFyZWQtZGVmaW5pdGlvbnMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEdFVF9DT0xMRUNUSU9OX0ZJTFRFUlMgPSBncWxgXHJcbiAgICBxdWVyeSBHZXRDb2xsZWN0aW9uRmlsdGVycyB7XHJcbiAgICAgICAgY29sbGVjdGlvbkZpbHRlcnMge1xyXG4gICAgICAgICAgICAuLi5Db25maWd1cmFibGVPcGVyYXRpb25EZWZcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke0NPTkZJR1VSQUJMRV9PUEVSQVRJT05fREVGX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IENPTExFQ1RJT05fRlJBR01FTlQgPSBncWxgXHJcbiAgICBmcmFnbWVudCBDb2xsZWN0aW9uIG9uIENvbGxlY3Rpb24ge1xyXG4gICAgICAgIGlkXHJcbiAgICAgICAgY3JlYXRlZEF0XHJcbiAgICAgICAgdXBkYXRlZEF0XHJcbiAgICAgICAgbmFtZVxyXG4gICAgICAgIHNsdWdcclxuICAgICAgICBkZXNjcmlwdGlvblxyXG4gICAgICAgIGlzUHJpdmF0ZVxyXG4gICAgICAgIGxhbmd1YWdlQ29kZVxyXG4gICAgICAgIGZlYXR1cmVkQXNzZXQge1xyXG4gICAgICAgICAgICAuLi5Bc3NldFxyXG4gICAgICAgIH1cclxuICAgICAgICBhc3NldHMge1xyXG4gICAgICAgICAgICAuLi5Bc3NldFxyXG4gICAgICAgIH1cclxuICAgICAgICBmaWx0ZXJzIHtcclxuICAgICAgICAgICAgLi4uQ29uZmlndXJhYmxlT3BlcmF0aW9uXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRyYW5zbGF0aW9ucyB7XHJcbiAgICAgICAgICAgIGlkXHJcbiAgICAgICAgICAgIGxhbmd1YWdlQ29kZVxyXG4gICAgICAgICAgICBuYW1lXHJcbiAgICAgICAgICAgIHNsdWdcclxuICAgICAgICAgICAgZGVzY3JpcHRpb25cclxuICAgICAgICB9XHJcbiAgICAgICAgcGFyZW50IHtcclxuICAgICAgICAgICAgaWRcclxuICAgICAgICAgICAgbmFtZVxyXG4gICAgICAgIH1cclxuICAgICAgICBjaGlsZHJlbiB7XHJcbiAgICAgICAgICAgIGlkXHJcbiAgICAgICAgICAgIG5hbWVcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke0FTU0VUX0ZSQUdNRU5UfVxyXG4gICAgJHtDT05GSUdVUkFCTEVfT1BFUkFUSU9OX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEdFVF9DT0xMRUNUSU9OX0xJU1QgPSBncWxgXHJcbiAgICBxdWVyeSBHZXRDb2xsZWN0aW9uTGlzdCgkb3B0aW9uczogQ29sbGVjdGlvbkxpc3RPcHRpb25zKSB7XHJcbiAgICAgICAgY29sbGVjdGlvbnMob3B0aW9uczogJG9wdGlvbnMpIHtcclxuICAgICAgICAgICAgaXRlbXMge1xyXG4gICAgICAgICAgICAgICAgaWRcclxuICAgICAgICAgICAgICAgIG5hbWVcclxuICAgICAgICAgICAgICAgIHNsdWdcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uXHJcbiAgICAgICAgICAgICAgICBpc1ByaXZhdGVcclxuICAgICAgICAgICAgICAgIGZlYXR1cmVkQXNzZXQge1xyXG4gICAgICAgICAgICAgICAgICAgIC4uLkFzc2V0XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBwYXJlbnQge1xyXG4gICAgICAgICAgICAgICAgICAgIGlkXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdG90YWxJdGVtc1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7QVNTRVRfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR0VUX0NPTExFQ1RJT04gPSBncWxgXHJcbiAgICBxdWVyeSBHZXRDb2xsZWN0aW9uKCRpZDogSUQhKSB7XHJcbiAgICAgICAgY29sbGVjdGlvbihpZDogJGlkKSB7XHJcbiAgICAgICAgICAgIC4uLkNvbGxlY3Rpb25cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke0NPTExFQ1RJT05fRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgQ1JFQVRFX0NPTExFQ1RJT04gPSBncWxgXHJcbiAgICBtdXRhdGlvbiBDcmVhdGVDb2xsZWN0aW9uKCRpbnB1dDogQ3JlYXRlQ29sbGVjdGlvbklucHV0ISkge1xyXG4gICAgICAgIGNyZWF0ZUNvbGxlY3Rpb24oaW5wdXQ6ICRpbnB1dCkge1xyXG4gICAgICAgICAgICAuLi5Db2xsZWN0aW9uXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJHtDT0xMRUNUSU9OX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFVQREFURV9DT0xMRUNUSU9OID0gZ3FsYFxyXG4gICAgbXV0YXRpb24gVXBkYXRlQ29sbGVjdGlvbigkaW5wdXQ6IFVwZGF0ZUNvbGxlY3Rpb25JbnB1dCEpIHtcclxuICAgICAgICB1cGRhdGVDb2xsZWN0aW9uKGlucHV0OiAkaW5wdXQpIHtcclxuICAgICAgICAgICAgLi4uQ29sbGVjdGlvblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7Q09MTEVDVElPTl9GUkFHTUVOVH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBNT1ZFX0NPTExFQ1RJT04gPSBncWxgXHJcbiAgICBtdXRhdGlvbiBNb3ZlQ29sbGVjdGlvbigkaW5wdXQ6IE1vdmVDb2xsZWN0aW9uSW5wdXQhKSB7XHJcbiAgICAgICAgbW92ZUNvbGxlY3Rpb24oaW5wdXQ6ICRpbnB1dCkge1xyXG4gICAgICAgICAgICAuLi5Db2xsZWN0aW9uXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJHtDT0xMRUNUSU9OX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IERFTEVURV9DT0xMRUNUSU9OID0gZ3FsYFxyXG4gICAgbXV0YXRpb24gRGVsZXRlQ29sbGVjdGlvbigkaWQ6IElEISkge1xyXG4gICAgICAgIGRlbGV0ZUNvbGxlY3Rpb24oaWQ6ICRpZCkge1xyXG4gICAgICAgICAgICByZXN1bHRcclxuICAgICAgICAgICAgbWVzc2FnZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBHRVRfQ09MTEVDVElPTl9DT05URU5UUyA9IGdxbGBcclxuICAgIHF1ZXJ5IEdldENvbGxlY3Rpb25Db250ZW50cygkaWQ6IElEISwgJG9wdGlvbnM6IFByb2R1Y3RWYXJpYW50TGlzdE9wdGlvbnMpIHtcclxuICAgICAgICBjb2xsZWN0aW9uKGlkOiAkaWQpIHtcclxuICAgICAgICAgICAgaWRcclxuICAgICAgICAgICAgbmFtZVxyXG4gICAgICAgICAgICBwcm9kdWN0VmFyaWFudHMob3B0aW9uczogJG9wdGlvbnMpIHtcclxuICAgICAgICAgICAgICAgIGl0ZW1zIHtcclxuICAgICAgICAgICAgICAgICAgICBpZFxyXG4gICAgICAgICAgICAgICAgICAgIHByb2R1Y3RJZFxyXG4gICAgICAgICAgICAgICAgICAgIG5hbWVcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRvdGFsSXRlbXNcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuYDtcclxuIl19