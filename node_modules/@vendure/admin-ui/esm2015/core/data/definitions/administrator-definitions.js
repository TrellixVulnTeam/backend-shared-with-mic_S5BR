import { gql } from 'apollo-angular';
export const ROLE_FRAGMENT = gql `
    fragment Role on Role {
        id
        createdAt
        updatedAt
        code
        description
        permissions
        channels {
            id
            code
            token
        }
    }
`;
export const ADMINISTRATOR_FRAGMENT = gql `
    fragment Administrator on Administrator {
        id
        createdAt
        updatedAt
        firstName
        lastName
        emailAddress
        user {
            id
            identifier
            lastLogin
            roles {
                ...Role
            }
        }
    }
    ${ROLE_FRAGMENT}
`;
export const GET_ADMINISTRATORS = gql `
    query GetAdministrators($options: AdministratorListOptions) {
        administrators(options: $options) {
            items {
                ...Administrator
            }
            totalItems
        }
    }
    ${ADMINISTRATOR_FRAGMENT}
`;
export const GET_ACTIVE_ADMINISTRATOR = gql `
    query GetActiveAdministrator {
        activeAdministrator {
            ...Administrator
        }
    }
    ${ADMINISTRATOR_FRAGMENT}
`;
export const GET_ADMINISTRATOR = gql `
    query GetAdministrator($id: ID!) {
        administrator(id: $id) {
            ...Administrator
        }
    }
    ${ADMINISTRATOR_FRAGMENT}
`;
export const CREATE_ADMINISTRATOR = gql `
    mutation CreateAdministrator($input: CreateAdministratorInput!) {
        createAdministrator(input: $input) {
            ...Administrator
        }
    }
    ${ADMINISTRATOR_FRAGMENT}
`;
export const UPDATE_ADMINISTRATOR = gql `
    mutation UpdateAdministrator($input: UpdateAdministratorInput!) {
        updateAdministrator(input: $input) {
            ...Administrator
        }
    }
    ${ADMINISTRATOR_FRAGMENT}
`;
export const UPDATE_ACTIVE_ADMINISTRATOR = gql `
    mutation UpdateActiveAdministrator($input: UpdateActiveAdministratorInput!) {
        updateActiveAdministrator(input: $input) {
            ...Administrator
        }
    }
    ${ADMINISTRATOR_FRAGMENT}
`;
export const DELETE_ADMINISTRATOR = gql `
    mutation DeleteAdministrator($id: ID!) {
        deleteAdministrator(id: $id) {
            result
            message
        }
    }
`;
export const GET_ROLES = gql `
    query GetRoles($options: RoleListOptions) {
        roles(options: $options) {
            items {
                ...Role
            }
            totalItems
        }
    }
    ${ROLE_FRAGMENT}
`;
export const GET_ROLE = gql `
    query GetRole($id: ID!) {
        role(id: $id) {
            ...Role
        }
    }
    ${ROLE_FRAGMENT}
`;
export const CREATE_ROLE = gql `
    mutation CreateRole($input: CreateRoleInput!) {
        createRole(input: $input) {
            ...Role
        }
    }
    ${ROLE_FRAGMENT}
`;
export const UPDATE_ROLE = gql `
    mutation UpdateRole($input: UpdateRoleInput!) {
        updateRole(input: $input) {
            ...Role
        }
    }
    ${ROLE_FRAGMENT}
`;
export const DELETE_ROLE = gql `
    mutation DeleteRole($id: ID!) {
        deleteRole(id: $id) {
            result
            message
        }
    }
`;
export const ASSIGN_ROLE_TO_ADMINISTRATOR = gql `
    mutation AssignRoleToAdministrator($administratorId: ID!, $roleId: ID!) {
        assignRoleToAdministrator(administratorId: $administratorId, roleId: $roleId) {
            ...Administrator
        }
    }
    ${ADMINISTRATOR_FRAGMENT}
`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRtaW5pc3RyYXRvci1kZWZpbml0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS9zcmMvZGF0YS9kZWZpbml0aW9ucy9hZG1pbmlzdHJhdG9yLWRlZmluaXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVyQyxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsR0FBRyxDQUFBOzs7Ozs7Ozs7Ozs7OztDQWMvQixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsR0FBRyxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztNQWlCbkMsYUFBYTtDQUNsQixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsR0FBRyxDQUFBOzs7Ozs7Ozs7TUFTL0Isc0JBQXNCO0NBQzNCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxHQUFHLENBQUE7Ozs7OztNQU1yQyxzQkFBc0I7Q0FDM0IsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEdBQUcsQ0FBQTs7Ozs7O01BTTlCLHNCQUFzQjtDQUMzQixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsR0FBRyxDQUFBOzs7Ozs7TUFNakMsc0JBQXNCO0NBQzNCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxHQUFHLENBQUE7Ozs7OztNQU1qQyxzQkFBc0I7Q0FDM0IsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLDJCQUEyQixHQUFHLEdBQUcsQ0FBQTs7Ozs7O01BTXhDLHNCQUFzQjtDQUMzQixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsR0FBRyxDQUFBOzs7Ozs7O0NBT3RDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsR0FBRyxDQUFBOzs7Ozs7Ozs7TUFTdEIsYUFBYTtDQUNsQixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLEdBQUcsQ0FBQTs7Ozs7O01BTXJCLGFBQWE7Q0FDbEIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxHQUFHLENBQUE7Ozs7OztNQU14QixhQUFhO0NBQ2xCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsR0FBRyxDQUFBOzs7Ozs7TUFNeEIsYUFBYTtDQUNsQixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLEdBQUcsQ0FBQTs7Ozs7OztDQU83QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUcsR0FBRyxDQUFBOzs7Ozs7TUFNekMsc0JBQXNCO0NBQzNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdhcG9sbG8tYW5ndWxhcic7XHJcblxyXG5leHBvcnQgY29uc3QgUk9MRV9GUkFHTUVOVCA9IGdxbGBcclxuICAgIGZyYWdtZW50IFJvbGUgb24gUm9sZSB7XHJcbiAgICAgICAgaWRcclxuICAgICAgICBjcmVhdGVkQXRcclxuICAgICAgICB1cGRhdGVkQXRcclxuICAgICAgICBjb2RlXHJcbiAgICAgICAgZGVzY3JpcHRpb25cclxuICAgICAgICBwZXJtaXNzaW9uc1xyXG4gICAgICAgIGNoYW5uZWxzIHtcclxuICAgICAgICAgICAgaWRcclxuICAgICAgICAgICAgY29kZVxyXG4gICAgICAgICAgICB0b2tlblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBBRE1JTklTVFJBVE9SX0ZSQUdNRU5UID0gZ3FsYFxyXG4gICAgZnJhZ21lbnQgQWRtaW5pc3RyYXRvciBvbiBBZG1pbmlzdHJhdG9yIHtcclxuICAgICAgICBpZFxyXG4gICAgICAgIGNyZWF0ZWRBdFxyXG4gICAgICAgIHVwZGF0ZWRBdFxyXG4gICAgICAgIGZpcnN0TmFtZVxyXG4gICAgICAgIGxhc3ROYW1lXHJcbiAgICAgICAgZW1haWxBZGRyZXNzXHJcbiAgICAgICAgdXNlciB7XHJcbiAgICAgICAgICAgIGlkXHJcbiAgICAgICAgICAgIGlkZW50aWZpZXJcclxuICAgICAgICAgICAgbGFzdExvZ2luXHJcbiAgICAgICAgICAgIHJvbGVzIHtcclxuICAgICAgICAgICAgICAgIC4uLlJvbGVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7Uk9MRV9GUkFHTUVOVH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBHRVRfQURNSU5JU1RSQVRPUlMgPSBncWxgXHJcbiAgICBxdWVyeSBHZXRBZG1pbmlzdHJhdG9ycygkb3B0aW9uczogQWRtaW5pc3RyYXRvckxpc3RPcHRpb25zKSB7XHJcbiAgICAgICAgYWRtaW5pc3RyYXRvcnMob3B0aW9uczogJG9wdGlvbnMpIHtcclxuICAgICAgICAgICAgaXRlbXMge1xyXG4gICAgICAgICAgICAgICAgLi4uQWRtaW5pc3RyYXRvclxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRvdGFsSXRlbXNcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke0FETUlOSVNUUkFUT1JfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR0VUX0FDVElWRV9BRE1JTklTVFJBVE9SID0gZ3FsYFxyXG4gICAgcXVlcnkgR2V0QWN0aXZlQWRtaW5pc3RyYXRvciB7XHJcbiAgICAgICAgYWN0aXZlQWRtaW5pc3RyYXRvciB7XHJcbiAgICAgICAgICAgIC4uLkFkbWluaXN0cmF0b3JcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke0FETUlOSVNUUkFUT1JfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR0VUX0FETUlOSVNUUkFUT1IgPSBncWxgXHJcbiAgICBxdWVyeSBHZXRBZG1pbmlzdHJhdG9yKCRpZDogSUQhKSB7XHJcbiAgICAgICAgYWRtaW5pc3RyYXRvcihpZDogJGlkKSB7XHJcbiAgICAgICAgICAgIC4uLkFkbWluaXN0cmF0b3JcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke0FETUlOSVNUUkFUT1JfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgQ1JFQVRFX0FETUlOSVNUUkFUT1IgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBDcmVhdGVBZG1pbmlzdHJhdG9yKCRpbnB1dDogQ3JlYXRlQWRtaW5pc3RyYXRvcklucHV0ISkge1xyXG4gICAgICAgIGNyZWF0ZUFkbWluaXN0cmF0b3IoaW5wdXQ6ICRpbnB1dCkge1xyXG4gICAgICAgICAgICAuLi5BZG1pbmlzdHJhdG9yXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJHtBRE1JTklTVFJBVE9SX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFVQREFURV9BRE1JTklTVFJBVE9SID0gZ3FsYFxyXG4gICAgbXV0YXRpb24gVXBkYXRlQWRtaW5pc3RyYXRvcigkaW5wdXQ6IFVwZGF0ZUFkbWluaXN0cmF0b3JJbnB1dCEpIHtcclxuICAgICAgICB1cGRhdGVBZG1pbmlzdHJhdG9yKGlucHV0OiAkaW5wdXQpIHtcclxuICAgICAgICAgICAgLi4uQWRtaW5pc3RyYXRvclxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7QURNSU5JU1RSQVRPUl9GUkFHTUVOVH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBVUERBVEVfQUNUSVZFX0FETUlOSVNUUkFUT1IgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBVcGRhdGVBY3RpdmVBZG1pbmlzdHJhdG9yKCRpbnB1dDogVXBkYXRlQWN0aXZlQWRtaW5pc3RyYXRvcklucHV0ISkge1xyXG4gICAgICAgIHVwZGF0ZUFjdGl2ZUFkbWluaXN0cmF0b3IoaW5wdXQ6ICRpbnB1dCkge1xyXG4gICAgICAgICAgICAuLi5BZG1pbmlzdHJhdG9yXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJHtBRE1JTklTVFJBVE9SX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IERFTEVURV9BRE1JTklTVFJBVE9SID0gZ3FsYFxyXG4gICAgbXV0YXRpb24gRGVsZXRlQWRtaW5pc3RyYXRvcigkaWQ6IElEISkge1xyXG4gICAgICAgIGRlbGV0ZUFkbWluaXN0cmF0b3IoaWQ6ICRpZCkge1xyXG4gICAgICAgICAgICByZXN1bHRcclxuICAgICAgICAgICAgbWVzc2FnZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBHRVRfUk9MRVMgPSBncWxgXHJcbiAgICBxdWVyeSBHZXRSb2xlcygkb3B0aW9uczogUm9sZUxpc3RPcHRpb25zKSB7XHJcbiAgICAgICAgcm9sZXMob3B0aW9uczogJG9wdGlvbnMpIHtcclxuICAgICAgICAgICAgaXRlbXMge1xyXG4gICAgICAgICAgICAgICAgLi4uUm9sZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRvdGFsSXRlbXNcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke1JPTEVfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR0VUX1JPTEUgPSBncWxgXHJcbiAgICBxdWVyeSBHZXRSb2xlKCRpZDogSUQhKSB7XHJcbiAgICAgICAgcm9sZShpZDogJGlkKSB7XHJcbiAgICAgICAgICAgIC4uLlJvbGVcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke1JPTEVfRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgQ1JFQVRFX1JPTEUgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBDcmVhdGVSb2xlKCRpbnB1dDogQ3JlYXRlUm9sZUlucHV0ISkge1xyXG4gICAgICAgIGNyZWF0ZVJvbGUoaW5wdXQ6ICRpbnB1dCkge1xyXG4gICAgICAgICAgICAuLi5Sb2xlXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJHtST0xFX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFVQREFURV9ST0xFID0gZ3FsYFxyXG4gICAgbXV0YXRpb24gVXBkYXRlUm9sZSgkaW5wdXQ6IFVwZGF0ZVJvbGVJbnB1dCEpIHtcclxuICAgICAgICB1cGRhdGVSb2xlKGlucHV0OiAkaW5wdXQpIHtcclxuICAgICAgICAgICAgLi4uUm9sZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7Uk9MRV9GUkFHTUVOVH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBERUxFVEVfUk9MRSA9IGdxbGBcclxuICAgIG11dGF0aW9uIERlbGV0ZVJvbGUoJGlkOiBJRCEpIHtcclxuICAgICAgICBkZWxldGVSb2xlKGlkOiAkaWQpIHtcclxuICAgICAgICAgICAgcmVzdWx0XHJcbiAgICAgICAgICAgIG1lc3NhZ2VcclxuICAgICAgICB9XHJcbiAgICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgQVNTSUdOX1JPTEVfVE9fQURNSU5JU1RSQVRPUiA9IGdxbGBcclxuICAgIG11dGF0aW9uIEFzc2lnblJvbGVUb0FkbWluaXN0cmF0b3IoJGFkbWluaXN0cmF0b3JJZDogSUQhLCAkcm9sZUlkOiBJRCEpIHtcclxuICAgICAgICBhc3NpZ25Sb2xlVG9BZG1pbmlzdHJhdG9yKGFkbWluaXN0cmF0b3JJZDogJGFkbWluaXN0cmF0b3JJZCwgcm9sZUlkOiAkcm9sZUlkKSB7XHJcbiAgICAgICAgICAgIC4uLkFkbWluaXN0cmF0b3JcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke0FETUlOSVNUUkFUT1JfRlJBR01FTlR9XHJcbmA7XHJcbiJdfQ==