import { gql } from 'apollo-angular';
import { CONFIGURABLE_OPERATION_DEF_FRAGMENT, CONFIGURABLE_OPERATION_FRAGMENT } from './shared-definitions';
export const SHIPPING_METHOD_FRAGMENT = gql `
    fragment ShippingMethod on ShippingMethod {
        id
        createdAt
        updatedAt
        code
        name
        description
        fulfillmentHandlerCode
        checker {
            ...ConfigurableOperation
        }
        calculator {
            ...ConfigurableOperation
        }
        translations {
            id
            languageCode
            name
            description
        }
    }
    ${CONFIGURABLE_OPERATION_FRAGMENT}
`;
export const GET_SHIPPING_METHOD_LIST = gql `
    query GetShippingMethodList($options: ShippingMethodListOptions) {
        shippingMethods(options: $options) {
            items {
                ...ShippingMethod
            }
            totalItems
        }
    }
    ${SHIPPING_METHOD_FRAGMENT}
`;
export const GET_SHIPPING_METHOD = gql `
    query GetShippingMethod($id: ID!) {
        shippingMethod(id: $id) {
            ...ShippingMethod
        }
    }
    ${SHIPPING_METHOD_FRAGMENT}
`;
export const GET_SHIPPING_METHOD_OPERATIONS = gql `
    query GetShippingMethodOperations {
        shippingEligibilityCheckers {
            ...ConfigurableOperationDef
        }
        shippingCalculators {
            ...ConfigurableOperationDef
        }
        fulfillmentHandlers {
            ...ConfigurableOperationDef
        }
    }
    ${CONFIGURABLE_OPERATION_DEF_FRAGMENT}
`;
export const CREATE_SHIPPING_METHOD = gql `
    mutation CreateShippingMethod($input: CreateShippingMethodInput!) {
        createShippingMethod(input: $input) {
            ...ShippingMethod
        }
    }
    ${SHIPPING_METHOD_FRAGMENT}
`;
export const UPDATE_SHIPPING_METHOD = gql `
    mutation UpdateShippingMethod($input: UpdateShippingMethodInput!) {
        updateShippingMethod(input: $input) {
            ...ShippingMethod
        }
    }
    ${SHIPPING_METHOD_FRAGMENT}
`;
export const DELETE_SHIPPING_METHOD = gql `
    mutation DeleteShippingMethod($id: ID!) {
        deleteShippingMethod(id: $id) {
            result
            message
        }
    }
`;
export const TEST_SHIPPING_METHOD = gql `
    query TestShippingMethod($input: TestShippingMethodInput!) {
        testShippingMethod(input: $input) {
            eligible
            quote {
                price
                priceWithTax
                metadata
            }
        }
    }
`;
export const TEST_ELIGIBLE_SHIPPING_METHODS = gql `
    query TestEligibleShippingMethods($input: TestEligibleShippingMethodsInput!) {
        testEligibleShippingMethods(input: $input) {
            id
            name
            code
            description
            price
            priceWithTax
            metadata
        }
    }
`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hpcHBpbmctZGVmaW5pdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL2RhdGEvZGVmaW5pdGlvbnMvc2hpcHBpbmctZGVmaW5pdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJDLE9BQU8sRUFBRSxtQ0FBbUMsRUFBRSwrQkFBK0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRTVHLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHLEdBQUcsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQXNCckMsK0JBQStCO0NBQ3BDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7OztNQVNyQyx3QkFBd0I7Q0FDN0IsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLEdBQUcsQ0FBQTs7Ozs7O01BTWhDLHdCQUF3QjtDQUM3QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sOEJBQThCLEdBQUcsR0FBRyxDQUFBOzs7Ozs7Ozs7Ozs7TUFZM0MsbUNBQW1DO0NBQ3hDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRyxHQUFHLENBQUE7Ozs7OztNQU1uQyx3QkFBd0I7Q0FDN0IsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUFHLEdBQUcsQ0FBQTs7Ozs7O01BTW5DLHdCQUF3QjtDQUM3QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsR0FBRyxDQUFBOzs7Ozs7O0NBT3hDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7Ozs7O0NBV3RDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FBRyxHQUFHLENBQUE7Ozs7Ozs7Ozs7OztDQVloRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3FsIH0gZnJvbSAnYXBvbGxvLWFuZ3VsYXInO1xyXG5cclxuaW1wb3J0IHsgQ09ORklHVVJBQkxFX09QRVJBVElPTl9ERUZfRlJBR01FTlQsIENPTkZJR1VSQUJMRV9PUEVSQVRJT05fRlJBR01FTlQgfSBmcm9tICcuL3NoYXJlZC1kZWZpbml0aW9ucyc7XHJcblxyXG5leHBvcnQgY29uc3QgU0hJUFBJTkdfTUVUSE9EX0ZSQUdNRU5UID0gZ3FsYFxyXG4gICAgZnJhZ21lbnQgU2hpcHBpbmdNZXRob2Qgb24gU2hpcHBpbmdNZXRob2Qge1xyXG4gICAgICAgIGlkXHJcbiAgICAgICAgY3JlYXRlZEF0XHJcbiAgICAgICAgdXBkYXRlZEF0XHJcbiAgICAgICAgY29kZVxyXG4gICAgICAgIG5hbWVcclxuICAgICAgICBkZXNjcmlwdGlvblxyXG4gICAgICAgIGZ1bGZpbGxtZW50SGFuZGxlckNvZGVcclxuICAgICAgICBjaGVja2VyIHtcclxuICAgICAgICAgICAgLi4uQ29uZmlndXJhYmxlT3BlcmF0aW9uXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhbGN1bGF0b3Ige1xyXG4gICAgICAgICAgICAuLi5Db25maWd1cmFibGVPcGVyYXRpb25cclxuICAgICAgICB9XHJcbiAgICAgICAgdHJhbnNsYXRpb25zIHtcclxuICAgICAgICAgICAgaWRcclxuICAgICAgICAgICAgbGFuZ3VhZ2VDb2RlXHJcbiAgICAgICAgICAgIG5hbWVcclxuICAgICAgICAgICAgZGVzY3JpcHRpb25cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke0NPTkZJR1VSQUJMRV9PUEVSQVRJT05fRlJBR01FTlR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgR0VUX1NISVBQSU5HX01FVEhPRF9MSVNUID0gZ3FsYFxyXG4gICAgcXVlcnkgR2V0U2hpcHBpbmdNZXRob2RMaXN0KCRvcHRpb25zOiBTaGlwcGluZ01ldGhvZExpc3RPcHRpb25zKSB7XHJcbiAgICAgICAgc2hpcHBpbmdNZXRob2RzKG9wdGlvbnM6ICRvcHRpb25zKSB7XHJcbiAgICAgICAgICAgIGl0ZW1zIHtcclxuICAgICAgICAgICAgICAgIC4uLlNoaXBwaW5nTWV0aG9kXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdG90YWxJdGVtc1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7U0hJUFBJTkdfTUVUSE9EX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IEdFVF9TSElQUElOR19NRVRIT0QgPSBncWxgXHJcbiAgICBxdWVyeSBHZXRTaGlwcGluZ01ldGhvZCgkaWQ6IElEISkge1xyXG4gICAgICAgIHNoaXBwaW5nTWV0aG9kKGlkOiAkaWQpIHtcclxuICAgICAgICAgICAgLi4uU2hpcHBpbmdNZXRob2RcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke1NISVBQSU5HX01FVEhPRF9GUkFHTUVOVH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBHRVRfU0hJUFBJTkdfTUVUSE9EX09QRVJBVElPTlMgPSBncWxgXHJcbiAgICBxdWVyeSBHZXRTaGlwcGluZ01ldGhvZE9wZXJhdGlvbnMge1xyXG4gICAgICAgIHNoaXBwaW5nRWxpZ2liaWxpdHlDaGVja2VycyB7XHJcbiAgICAgICAgICAgIC4uLkNvbmZpZ3VyYWJsZU9wZXJhdGlvbkRlZlxyXG4gICAgICAgIH1cclxuICAgICAgICBzaGlwcGluZ0NhbGN1bGF0b3JzIHtcclxuICAgICAgICAgICAgLi4uQ29uZmlndXJhYmxlT3BlcmF0aW9uRGVmXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZ1bGZpbGxtZW50SGFuZGxlcnMge1xyXG4gICAgICAgICAgICAuLi5Db25maWd1cmFibGVPcGVyYXRpb25EZWZcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAke0NPTkZJR1VSQUJMRV9PUEVSQVRJT05fREVGX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IENSRUFURV9TSElQUElOR19NRVRIT0QgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBDcmVhdGVTaGlwcGluZ01ldGhvZCgkaW5wdXQ6IENyZWF0ZVNoaXBwaW5nTWV0aG9kSW5wdXQhKSB7XHJcbiAgICAgICAgY3JlYXRlU2hpcHBpbmdNZXRob2QoaW5wdXQ6ICRpbnB1dCkge1xyXG4gICAgICAgICAgICAuLi5TaGlwcGluZ01ldGhvZFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7U0hJUFBJTkdfTUVUSE9EX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFVQREFURV9TSElQUElOR19NRVRIT0QgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBVcGRhdGVTaGlwcGluZ01ldGhvZCgkaW5wdXQ6IFVwZGF0ZVNoaXBwaW5nTWV0aG9kSW5wdXQhKSB7XHJcbiAgICAgICAgdXBkYXRlU2hpcHBpbmdNZXRob2QoaW5wdXQ6ICRpbnB1dCkge1xyXG4gICAgICAgICAgICAuLi5TaGlwcGluZ01ldGhvZFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICR7U0hJUFBJTkdfTUVUSE9EX0ZSQUdNRU5UfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IERFTEVURV9TSElQUElOR19NRVRIT0QgPSBncWxgXHJcbiAgICBtdXRhdGlvbiBEZWxldGVTaGlwcGluZ01ldGhvZCgkaWQ6IElEISkge1xyXG4gICAgICAgIGRlbGV0ZVNoaXBwaW5nTWV0aG9kKGlkOiAkaWQpIHtcclxuICAgICAgICAgICAgcmVzdWx0XHJcbiAgICAgICAgICAgIG1lc3NhZ2VcclxuICAgICAgICB9XHJcbiAgICB9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgVEVTVF9TSElQUElOR19NRVRIT0QgPSBncWxgXHJcbiAgICBxdWVyeSBUZXN0U2hpcHBpbmdNZXRob2QoJGlucHV0OiBUZXN0U2hpcHBpbmdNZXRob2RJbnB1dCEpIHtcclxuICAgICAgICB0ZXN0U2hpcHBpbmdNZXRob2QoaW5wdXQ6ICRpbnB1dCkge1xyXG4gICAgICAgICAgICBlbGlnaWJsZVxyXG4gICAgICAgICAgICBxdW90ZSB7XHJcbiAgICAgICAgICAgICAgICBwcmljZVxyXG4gICAgICAgICAgICAgICAgcHJpY2VXaXRoVGF4XHJcbiAgICAgICAgICAgICAgICBtZXRhZGF0YVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IFRFU1RfRUxJR0lCTEVfU0hJUFBJTkdfTUVUSE9EUyA9IGdxbGBcclxuICAgIHF1ZXJ5IFRlc3RFbGlnaWJsZVNoaXBwaW5nTWV0aG9kcygkaW5wdXQ6IFRlc3RFbGlnaWJsZVNoaXBwaW5nTWV0aG9kc0lucHV0ISkge1xyXG4gICAgICAgIHRlc3RFbGlnaWJsZVNoaXBwaW5nTWV0aG9kcyhpbnB1dDogJGlucHV0KSB7XHJcbiAgICAgICAgICAgIGlkXHJcbiAgICAgICAgICAgIG5hbWVcclxuICAgICAgICAgICAgY29kZVxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvblxyXG4gICAgICAgICAgICBwcmljZVxyXG4gICAgICAgICAgICBwcmljZVdpdGhUYXhcclxuICAgICAgICAgICAgbWV0YWRhdGFcclxuICAgICAgICB9XHJcbiAgICB9XHJcbmA7XHJcbiJdfQ==