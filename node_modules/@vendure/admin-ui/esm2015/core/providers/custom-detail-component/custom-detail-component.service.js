import { APP_INITIALIZER, Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @description
 * Registers a {@link CustomDetailComponent} to be placed in a given location. This allows you
 * to embed any type of custom Angular component in the entity detail pages of the Admin UI.
 *
 * @docsCategory custom-detail-components
 */
export function registerCustomDetailComponent(config) {
    return {
        provide: APP_INITIALIZER,
        multi: true,
        useFactory: (customDetailComponentService) => () => {
            customDetailComponentService.registerCustomDetailComponent(config);
        },
        deps: [CustomDetailComponentService],
    };
}
export class CustomDetailComponentService {
    constructor() {
        this.customDetailComponents = new Map();
    }
    registerCustomDetailComponent(config) {
        var _a;
        if (this.customDetailComponents.has(config.locationId)) {
            (_a = this.customDetailComponents.get(config.locationId)) === null || _a === void 0 ? void 0 : _a.push(config);
        }
        else {
            this.customDetailComponents.set(config.locationId, [config]);
        }
    }
    getCustomDetailComponentsFor(locationId) {
        var _a;
        return (_a = this.customDetailComponents.get(locationId)) !== null && _a !== void 0 ? _a : [];
    }
}
CustomDetailComponentService.ɵprov = i0.ɵɵdefineInjectable({ factory: function CustomDetailComponentService_Factory() { return new CustomDetailComponentService(); }, token: CustomDetailComponentService, providedIn: "root" });
CustomDetailComponentService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLWRldGFpbC1jb21wb25lbnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS9zcmMvcHJvdmlkZXJzL2N1c3RvbS1kZXRhaWwtY29tcG9uZW50L2N1c3RvbS1kZXRhaWwtY29tcG9uZW50LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxVQUFVLEVBQVksTUFBTSxlQUFlLENBQUM7O0FBSXRFOzs7Ozs7R0FNRztBQUNILE1BQU0sVUFBVSw2QkFBNkIsQ0FBQyxNQUFtQztJQUM3RSxPQUFPO1FBQ0gsT0FBTyxFQUFFLGVBQWU7UUFDeEIsS0FBSyxFQUFFLElBQUk7UUFDWCxVQUFVLEVBQUUsQ0FBQyw0QkFBMEQsRUFBRSxFQUFFLENBQUMsR0FBRyxFQUFFO1lBQzdFLDRCQUE0QixDQUFDLDZCQUE2QixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZFLENBQUM7UUFDRCxJQUFJLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQztLQUN2QyxDQUFDO0FBQ04sQ0FBQztBQUtELE1BQU0sT0FBTyw0QkFBNEI7SUFIekM7UUFJWSwyQkFBc0IsR0FBRyxJQUFJLEdBQUcsRUFBeUMsQ0FBQztLQWFyRjtJQVhHLDZCQUE2QixDQUFDLE1BQW1DOztRQUM3RCxJQUFJLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQ3BELE1BQUEsSUFBSSxDQUFDLHNCQUFzQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLDBDQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNwRTthQUFNO1lBQ0gsSUFBSSxDQUFDLHNCQUFzQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztTQUNoRTtJQUNMLENBQUM7SUFFRCw0QkFBNEIsQ0FBQyxVQUFrQjs7UUFDM0MsT0FBTyxNQUFBLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLG1DQUFJLEVBQUUsQ0FBQztJQUM3RCxDQUFDOzs7O1lBaEJKLFVBQVUsU0FBQztnQkFDUixVQUFVLEVBQUUsTUFBTTthQUNyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFQUF9JTklUSUFMSVpFUiwgSW5qZWN0YWJsZSwgUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IEN1c3RvbURldGFpbENvbXBvbmVudENvbmZpZyB9IGZyb20gJy4vY3VzdG9tLWRldGFpbC1jb21wb25lbnQtdHlwZXMnO1xyXG5cclxuLyoqXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBSZWdpc3RlcnMgYSB7QGxpbmsgQ3VzdG9tRGV0YWlsQ29tcG9uZW50fSB0byBiZSBwbGFjZWQgaW4gYSBnaXZlbiBsb2NhdGlvbi4gVGhpcyBhbGxvd3MgeW91XHJcbiAqIHRvIGVtYmVkIGFueSB0eXBlIG9mIGN1c3RvbSBBbmd1bGFyIGNvbXBvbmVudCBpbiB0aGUgZW50aXR5IGRldGFpbCBwYWdlcyBvZiB0aGUgQWRtaW4gVUkuXHJcbiAqXHJcbiAqIEBkb2NzQ2F0ZWdvcnkgY3VzdG9tLWRldGFpbC1jb21wb25lbnRzXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXJDdXN0b21EZXRhaWxDb21wb25lbnQoY29uZmlnOiBDdXN0b21EZXRhaWxDb21wb25lbnRDb25maWcpOiBQcm92aWRlciB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHByb3ZpZGU6IEFQUF9JTklUSUFMSVpFUixcclxuICAgICAgICBtdWx0aTogdHJ1ZSxcclxuICAgICAgICB1c2VGYWN0b3J5OiAoY3VzdG9tRGV0YWlsQ29tcG9uZW50U2VydmljZTogQ3VzdG9tRGV0YWlsQ29tcG9uZW50U2VydmljZSkgPT4gKCkgPT4ge1xyXG4gICAgICAgICAgICBjdXN0b21EZXRhaWxDb21wb25lbnRTZXJ2aWNlLnJlZ2lzdGVyQ3VzdG9tRGV0YWlsQ29tcG9uZW50KGNvbmZpZyk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZXBzOiBbQ3VzdG9tRGV0YWlsQ29tcG9uZW50U2VydmljZV0sXHJcbiAgICB9O1xyXG59XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgICBwcm92aWRlZEluOiAncm9vdCcsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDdXN0b21EZXRhaWxDb21wb25lbnRTZXJ2aWNlIHtcclxuICAgIHByaXZhdGUgY3VzdG9tRGV0YWlsQ29tcG9uZW50cyA9IG5ldyBNYXA8c3RyaW5nLCBDdXN0b21EZXRhaWxDb21wb25lbnRDb25maWdbXT4oKTtcclxuXHJcbiAgICByZWdpc3RlckN1c3RvbURldGFpbENvbXBvbmVudChjb25maWc6IEN1c3RvbURldGFpbENvbXBvbmVudENvbmZpZykge1xyXG4gICAgICAgIGlmICh0aGlzLmN1c3RvbURldGFpbENvbXBvbmVudHMuaGFzKGNvbmZpZy5sb2NhdGlvbklkKSkge1xyXG4gICAgICAgICAgICB0aGlzLmN1c3RvbURldGFpbENvbXBvbmVudHMuZ2V0KGNvbmZpZy5sb2NhdGlvbklkKT8ucHVzaChjb25maWcpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3VzdG9tRGV0YWlsQ29tcG9uZW50cy5zZXQoY29uZmlnLmxvY2F0aW9uSWQsIFtjb25maWddKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q3VzdG9tRGV0YWlsQ29tcG9uZW50c0Zvcihsb2NhdGlvbklkOiBzdHJpbmcpOiBDdXN0b21EZXRhaWxDb21wb25lbnRDb25maWdbXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY3VzdG9tRGV0YWlsQ29tcG9uZW50cy5nZXQobG9jYXRpb25JZCkgPz8gW107XHJcbiAgICB9XHJcbn1cclxuIl19