import { ChangeDetectionStrategy, Component, Input, isDevMode } from '@angular/core';
import { DataService } from '../../../data/providers/data.service';
export class UiExtensionPointComponent {
    constructor(dataService) {
        this.dataService = dataService;
        this.isDevMode = isDevMode();
    }
    ngOnInit() {
        this.display$ = this.dataService.client
            .uiState()
            .mapStream(({ uiState }) => uiState.displayUiExtensionPoints);
    }
}
UiExtensionPointComponent.decorators = [
    { type: Component, args: [{
                selector: 'vdr-ui-extension-point',
                template: "<div [class.highlight]=\"isDevMode && (display$ | async)\" class=\"wrapper\">\r\n    <vdr-dropdown *ngIf=\"isDevMode && (display$ | async)\">\r\n        <button class=\"btn btn-icon btn-link extension-point-info-trigger\"\r\n                [style.top.px]=\"topPx ?? 0\"\r\n                [style.left.px]=\"leftPx ?? 0\"\r\n                vdrDropdownTrigger>\r\n            <clr-icon shape=\"plugin\" class=\"\" size=\"16\"></clr-icon>\r\n        </button>\r\n        <vdr-dropdown-menu>\r\n            <div class=\"extension-info\">\r\n                <pre *ngIf=\"api === 'actionBar'\">\r\naddActionBarItem({{ '{' }}\r\n  id: 'my-button',\r\n  label: 'My Action',\r\n  locationId: '{{ locationId }}',\r\n{{ '}' }})</pre>\r\n                <pre *ngIf=\"api === 'navMenu'\">\r\naddNavMenuItem({{ '{' }}\r\n  id: 'my-menu-item',\r\n  label: 'My Menu Item',\r\n  routerLink: ['/extensions/my-plugin'],\r\n  {{ '}' }},\r\n  '{{ locationId }}'\r\n)</pre>\r\n                <pre *ngIf=\"api === 'detailComponent'\">\r\nregisterCustomDetailComponent({{ '{' }}\r\n  locationId: '{{ locationId }}',\r\n  component: MyCustomComponent,\r\n{{ '}' }})</pre>\r\n            </div>\r\n        </vdr-dropdown-menu>\r\n    </vdr-dropdown>\r\n    <ng-content></ng-content>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{position:relative;display:inline-block}.wrapper{display:inline-block;height:100%}.extension-point-info-trigger{position:absolute;margin:0;padding:0;z-index:100}.extension-point-info-trigger clr-icon{color:var(--color-success-500)}.extension-info{padding:12px}pre{padding:6px;font-family:\"Source Code Pro\",\"Lucida Console\",Monaco,monospace;background-color:var(--color-grey-200)}\n"]
            },] }
];
UiExtensionPointComponent.ctorParameters = () => [
    { type: DataService }
];
UiExtensionPointComponent.propDecorators = {
    locationId: [{ type: Input }],
    topPx: [{ type: Input }],
    leftPx: [{ type: Input }],
    api: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWktZXh0ZW5zaW9uLXBvaW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS9zcmMvc2hhcmVkL2NvbXBvbmVudHMvdWktZXh0ZW5zaW9uLXBvaW50L3VpLWV4dGVuc2lvbi1wb2ludC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBSTdGLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQVFuRSxNQUFNLE9BQU8seUJBQXlCO0lBT2xDLFlBQW9CLFdBQXdCO1FBQXhCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBRG5DLGNBQVMsR0FBRyxTQUFTLEVBQUUsQ0FBQztJQUNjLENBQUM7SUFFaEQsUUFBUTtRQUNKLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNO2FBQ2xDLE9BQU8sRUFBRTthQUNULFNBQVMsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0lBQ3RFLENBQUM7OztZQW5CSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHdCQUF3QjtnQkFDbEMscXdDQUFrRDtnQkFFbEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O2FBQ2xEOzs7WUFQUSxXQUFXOzs7eUJBU2YsS0FBSztvQkFDTCxLQUFLO3FCQUNMLEtBQUs7a0JBQ0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBpc0Rldk1vZGUsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQgeyBVSUV4dGVuc2lvbkxvY2F0aW9uSWQgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vY29tcG9uZW50LXJlZ2lzdHJ5LXR5cGVzJztcclxuaW1wb3J0IHsgRGF0YVNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9kYXRhL3Byb3ZpZGVycy9kYXRhLnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3Zkci11aS1leHRlbnNpb24tcG9pbnQnLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL3VpLWV4dGVuc2lvbi1wb2ludC5jb21wb25lbnQuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi91aS1leHRlbnNpb24tcG9pbnQuY29tcG9uZW50LnNjc3MnXSxcclxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVWlFeHRlbnNpb25Qb2ludENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgICBASW5wdXQoKSBsb2NhdGlvbklkOiBVSUV4dGVuc2lvbkxvY2F0aW9uSWQ7XHJcbiAgICBASW5wdXQoKSB0b3BQeDogbnVtYmVyO1xyXG4gICAgQElucHV0KCkgbGVmdFB4OiBudW1iZXI7XHJcbiAgICBASW5wdXQoKSBhcGk6ICdhY3Rpb25CYXInIHwgJ25hdk1lbnUnIHwgJ2RldGFpbENvbXBvbmVudCc7XHJcbiAgICBkaXNwbGF5JDogT2JzZXJ2YWJsZTxib29sZWFuPjtcclxuICAgIHJlYWRvbmx5IGlzRGV2TW9kZSA9IGlzRGV2TW9kZSgpO1xyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBkYXRhU2VydmljZTogRGF0YVNlcnZpY2UpIHt9XHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5kaXNwbGF5JCA9IHRoaXMuZGF0YVNlcnZpY2UuY2xpZW50XHJcbiAgICAgICAgICAgIC51aVN0YXRlKClcclxuICAgICAgICAgICAgLm1hcFN0cmVhbSgoeyB1aVN0YXRlIH0pID0+IHVpU3RhdGUuZGlzcGxheVVpRXh0ZW5zaW9uUG9pbnRzKTtcclxuICAgIH1cclxufVxyXG4iXX0=