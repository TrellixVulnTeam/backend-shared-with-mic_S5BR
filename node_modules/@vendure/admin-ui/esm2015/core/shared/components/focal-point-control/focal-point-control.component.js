import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output, ViewChild, } from '@angular/core';
export class FocalPointControlComponent {
    constructor() {
        this.visible = false;
        this.editable = false;
        this.fpx = 0.5;
        this.fpy = 0.5;
        this.focalPointChange = new EventEmitter();
    }
    get initialPosition() {
        return this.focalPointToOffset(this.fpx == null ? 0.5 : this.fpx, this.fpy == null ? 0.5 : this.fpy);
    }
    onDragEnded(event) {
        const { x, y } = this.getCurrentFocalPoint();
        this.fpx = x;
        this.fpy = y;
        this.focalPointChange.emit({ x, y });
    }
    getCurrentFocalPoint() {
        const { left: dotLeft, top: dotTop, width, height } = this.dot.nativeElement.getBoundingClientRect();
        const { left: frameLeft, top: frameTop } = this.frame.nativeElement.getBoundingClientRect();
        const xInPx = dotLeft - frameLeft + width / 2;
        const yInPx = dotTop - frameTop + height / 2;
        return {
            x: xInPx / this.width,
            y: yInPx / this.height,
        };
    }
    focalPointToOffset(x, y) {
        const { width, height } = this.dot.nativeElement.getBoundingClientRect();
        return {
            x: x * this.width - width / 2,
            y: y * this.height - height / 2,
        };
    }
}
FocalPointControlComponent.decorators = [
    { type: Component, args: [{
                selector: 'vdr-focal-point-control',
                template: "<ng-content></ng-content>\r\n<div class=\"frame\" #frame [style.width.px]=\"width\" [style.height.px]=\"height\">\r\n    <div\r\n        #dot\r\n        class=\"dot\"\r\n        [class.visible]=\"visible\"\r\n        [class.editable]=\"editable\"\r\n        cdkDrag\r\n        [cdkDragDisabled]=\"!editable\"\r\n        cdkDragBoundary=\".frame\"\r\n        (cdkDragEnded)=\"onDragEnded($event)\"\r\n        [cdkDragFreeDragPosition]=\"initialPosition\"\r\n    ></div>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{position:relative;display:block}.frame{position:absolute;top:0}.dot{width:20px;height:20px;border-radius:50%;border:2px solid white;position:absolute;visibility:hidden;transition:opacity .3s;box-shadow:0 0 4px 4px #0000006b}.dot.visible{visibility:visible;opacity:.7}.dot.editable{cursor:move;visibility:visible;opacity:1;animation:pulse;animation-duration:.5s;animation-iteration-count:4}@keyframes pulse{0%{border-color:#fff}50%{border-color:var(--color-warning-500)}to{border-color:#fff}}\n"]
            },] }
];
FocalPointControlComponent.propDecorators = {
    visible: [{ type: Input }],
    editable: [{ type: Input }],
    width: [{ type: HostBinding, args: ['style.width.px',] }, { type: Input }],
    height: [{ type: HostBinding, args: ['style.height.px',] }, { type: Input }],
    fpx: [{ type: Input }],
    fpy: [{ type: Input }],
    focalPointChange: [{ type: Output }],
    frame: [{ type: ViewChild, args: ['frame', { static: true },] }],
    dot: [{ type: ViewChild, args: ['dot', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jYWwtcG9pbnQtY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvc3JjL3NoYXJlZC9jb21wb25lbnRzL2ZvY2FsLXBvaW50LWNvbnRyb2wvZm9jYWwtcG9pbnQtY29udHJvbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBRVQsWUFBWSxFQUNaLFdBQVcsRUFDWCxLQUFLLEVBQ0wsTUFBTSxFQUNOLFNBQVMsR0FDWixNQUFNLGVBQWUsQ0FBQztBQVV2QixNQUFNLE9BQU8sMEJBQTBCO0lBTnZDO1FBT2EsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUNoQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBT2pCLFFBQUcsR0FBRyxHQUFHLENBQUM7UUFDVixRQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ1QscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQVMsQ0FBQztJQWtDM0QsQ0FBQztJQTdCRyxJQUFJLGVBQWU7UUFDZixPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN6RyxDQUFDO0lBRUQsV0FBVyxDQUFDLEtBQWlCO1FBQ3pCLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUM7UUFDN0MsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztRQUNiLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRU8sb0JBQW9CO1FBQ3hCLE1BQU0sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLHFCQUFxQixFQUFFLENBQUM7UUFDckcsTUFBTSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLHFCQUFxQixFQUFFLENBQUM7UUFDNUYsTUFBTSxLQUFLLEdBQUcsT0FBTyxHQUFHLFNBQVMsR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQzlDLE1BQU0sS0FBSyxHQUFHLE1BQU0sR0FBRyxRQUFRLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUM3QyxPQUFPO1lBQ0gsQ0FBQyxFQUFFLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSztZQUNyQixDQUFDLEVBQUUsS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNO1NBQ3pCLENBQUM7SUFDTixDQUFDO0lBRU8sa0JBQWtCLENBQUMsQ0FBUyxFQUFFLENBQVM7UUFDM0MsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1FBQ3pFLE9BQU87WUFDSCxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxHQUFHLENBQUM7WUFDN0IsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sR0FBRyxDQUFDO1NBQ2xDLENBQUM7SUFDTixDQUFDOzs7WUFsREosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSx5QkFBeUI7Z0JBQ25DLDhlQUFtRDtnQkFFbkQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O2FBQ2xEOzs7c0JBRUksS0FBSzt1QkFDTCxLQUFLO29CQUNMLFdBQVcsU0FBQyxnQkFBZ0IsY0FDNUIsS0FBSztxQkFFTCxXQUFXLFNBQUMsaUJBQWlCLGNBQzdCLEtBQUs7a0JBRUwsS0FBSztrQkFDTCxLQUFLOytCQUNMLE1BQU07b0JBRU4sU0FBUyxTQUFDLE9BQU8sRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7a0JBQ25DLFNBQVMsU0FBQyxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2RrRHJhZ0VuZCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9kcmFnLWRyb3AnO1xyXG5pbXBvcnQge1xyXG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXHJcbiAgICBDb21wb25lbnQsXHJcbiAgICBFbGVtZW50UmVmLFxyXG4gICAgRXZlbnRFbWl0dGVyLFxyXG4gICAgSG9zdEJpbmRpbmcsXHJcbiAgICBJbnB1dCxcclxuICAgIE91dHB1dCxcclxuICAgIFZpZXdDaGlsZCxcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmV4cG9ydCB0eXBlIFBvaW50ID0geyB4OiBudW1iZXI7IHk6IG51bWJlciB9O1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3Zkci1mb2NhbC1wb2ludC1jb250cm9sJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9mb2NhbC1wb2ludC1jb250cm9sLmNvbXBvbmVudC5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL2ZvY2FsLXBvaW50LWNvbnRyb2wuY29tcG9uZW50LnNjc3MnXSxcclxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRm9jYWxQb2ludENvbnRyb2xDb21wb25lbnQge1xyXG4gICAgQElucHV0KCkgdmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgQElucHV0KCkgZWRpdGFibGUgPSBmYWxzZTtcclxuICAgIEBIb3N0QmluZGluZygnc3R5bGUud2lkdGgucHgnKVxyXG4gICAgQElucHV0KClcclxuICAgIHdpZHRoOiBudW1iZXI7XHJcbiAgICBASG9zdEJpbmRpbmcoJ3N0eWxlLmhlaWdodC5weCcpXHJcbiAgICBASW5wdXQoKVxyXG4gICAgaGVpZ2h0OiBudW1iZXI7XHJcbiAgICBASW5wdXQoKSBmcHggPSAwLjU7XHJcbiAgICBASW5wdXQoKSBmcHkgPSAwLjU7XHJcbiAgICBAT3V0cHV0KCkgZm9jYWxQb2ludENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8UG9pbnQ+KCk7XHJcblxyXG4gICAgQFZpZXdDaGlsZCgnZnJhbWUnLCB7IHN0YXRpYzogdHJ1ZSB9KSBmcmFtZTogRWxlbWVudFJlZjxIVE1MRGl2RWxlbWVudD47XHJcbiAgICBAVmlld0NoaWxkKCdkb3QnLCB7IHN0YXRpYzogdHJ1ZSB9KSBkb3Q6IEVsZW1lbnRSZWY8SFRNTERpdkVsZW1lbnQ+O1xyXG5cclxuICAgIGdldCBpbml0aWFsUG9zaXRpb24oKTogUG9pbnQge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmZvY2FsUG9pbnRUb09mZnNldCh0aGlzLmZweCA9PSBudWxsID8gMC41IDogdGhpcy5mcHgsIHRoaXMuZnB5ID09IG51bGwgPyAwLjUgOiB0aGlzLmZweSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25EcmFnRW5kZWQoZXZlbnQ6IENka0RyYWdFbmQpIHtcclxuICAgICAgICBjb25zdCB7IHgsIHkgfSA9IHRoaXMuZ2V0Q3VycmVudEZvY2FsUG9pbnQoKTtcclxuICAgICAgICB0aGlzLmZweCA9IHg7XHJcbiAgICAgICAgdGhpcy5mcHkgPSB5O1xyXG4gICAgICAgIHRoaXMuZm9jYWxQb2ludENoYW5nZS5lbWl0KHsgeCwgeSB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGdldEN1cnJlbnRGb2NhbFBvaW50KCk6IFBvaW50IHtcclxuICAgICAgICBjb25zdCB7IGxlZnQ6IGRvdExlZnQsIHRvcDogZG90VG9wLCB3aWR0aCwgaGVpZ2h0IH0gPSB0aGlzLmRvdC5uYXRpdmVFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgICAgIGNvbnN0IHsgbGVmdDogZnJhbWVMZWZ0LCB0b3A6IGZyYW1lVG9wIH0gPSB0aGlzLmZyYW1lLm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgY29uc3QgeEluUHggPSBkb3RMZWZ0IC0gZnJhbWVMZWZ0ICsgd2lkdGggLyAyO1xyXG4gICAgICAgIGNvbnN0IHlJblB4ID0gZG90VG9wIC0gZnJhbWVUb3AgKyBoZWlnaHQgLyAyO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHg6IHhJblB4IC8gdGhpcy53aWR0aCxcclxuICAgICAgICAgICAgeTogeUluUHggLyB0aGlzLmhlaWdodCxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZm9jYWxQb2ludFRvT2Zmc2V0KHg6IG51bWJlciwgeTogbnVtYmVyKTogUG9pbnQge1xyXG4gICAgICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gdGhpcy5kb3QubmF0aXZlRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB4OiB4ICogdGhpcy53aWR0aCAtIHdpZHRoIC8gMixcclxuICAgICAgICAgICAgeTogeSAqIHRoaXMuaGVpZ2h0IC0gaGVpZ2h0IC8gMixcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==