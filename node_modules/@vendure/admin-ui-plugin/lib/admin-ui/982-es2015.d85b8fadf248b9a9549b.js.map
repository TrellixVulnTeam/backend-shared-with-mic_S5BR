{"version":3,"mappings":"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","names":["t","constructor","e","ngAfterViewInit","this","loadWidget","widgetConfig","loadComponent","o","Promise","componentRef","portal","createComponent","componentFactoryResolver","resolveComponentFactory","changeDetectorRef","markForCheck","ngOnDestroy","destroy","g","selectors","r","i","ngOnInit","availableWidgetIds$","dataService","client","userStatus","stream$","pipe","b","permissions","dashboardWidgetService","getAvailableIds","I","widgetLayout","initLayout","getClassForWidth","U","getSupportedWidths","supportedWidths","setWidgetWidth","width","recalculateLayout","trackRow","map","id","join","trackRowItem","config","addWidget","getWidgetById","c","l","length","push","removeWidget","deletionMarker","drop","currentIndex","previousIndex","previousContainer","container","data","index","F","splice","item","localStorageService","get","filter","includes","getWidgetLayout","reduce","set","setTimeout","changedDetectorRef","p","O","path","component","pathMatch","latestOrders$","order","getOrders","take","active","eq","state","notEq","sort","orderPlacedAt","d","refetchOnChannelChange","mapStream","orders","items","m","u","date","oxw","selection$","Date","setDate","today","getDate","ct","timeframe","dateRange$","lt","start","L","startOf","toDate","end","endOf","M","gt","getOrderSummary","totalOrderCount$","totalItems","totalOrderValue$","total","currencyCode$","settings","getActiveChannel","activeChannel","currencyCode","h","f","v","_","brand","hideVendureBranding","hideVersion","administrator$","administrator","getActiveAdministrator","activeAdministrator","y","C","S","k","welcome","orderSummary","title","D","requiresPermissions","latestOrders","testWidget","Object","entries","registerWidget","getDefaultLayout","setDefaultLayout","Z","tt"],"sources":["webpack:///src/lib/dashboard/src/components/dashboard-widget/dashboard-widget.component.html","webpack:///src/lib/dashboard/src/components/dashboard-widget/dashboard-widget.component.ts","webpack:///src/lib/dashboard/src/components/dashboard/dashboard.component.html","webpack:///src/lib/dashboard/src/components/dashboard/dashboard.component.ts","webpack:///src/lib/dashboard/src/dashboard.routes.ts","webpack:///src/lib/dashboard/src/widgets/latest-orders-widget/latest-orders-widget.component.html","webpack:///src/lib/dashboard/src/widgets/latest-orders-widget/latest-orders-widget.component.ts","webpack:///src/lib/dashboard/src/widgets/order-summary-widget/order-summary-widget.component.html","webpack:///src/lib/dashboard/src/widgets/order-summary-widget/order-summary-widget.component.ts","webpack:///src/lib/dashboard/src/widgets/test-widget/test-widget.component.ts","webpack:///src/lib/dashboard/src/widgets/test-widget/test-widget.component.html","webpack:///src/lib/dashboard/src/widgets/welcome-widget/welcome-widget.component.html","webpack:///src/lib/dashboard/src/widgets/welcome-widget/welcome-widget.component.ts","webpack:///src/lib/dashboard/src/default-widgets.ts","webpack:///src/lib/dashboard/src/dashboard.module.ts"],"sourcesContent":["<div class=\"card\">\r\n    <div class=\"card-header\">\r\n        <div class=\"title\">\r\n            <ng-container *ngIf=\"widgetConfig.title as title\">{{ title | translate }}</ng-container>\r\n        </div>\r\n        <div class=\"controls\">\r\n            <ng-content></ng-content>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-block\">\r\n        <ng-template #portal></ng-template>\r\n    </div>\r\n</div>\r\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { DashboardWidgetConfig } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-dashboard-widget',\n    templateUrl: './dashboard-widget.component.html',\n    styleUrls: ['./dashboard-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DashboardWidgetComponent implements AfterViewInit, OnDestroy {\n    @Input() widgetConfig: DashboardWidgetConfig;\n\n    @ViewChild('portal', { read: ViewContainerRef })\n    private portal: ViewContainerRef;\n\n    private componentRef: ComponentRef<any>;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n\n    ngAfterViewInit(): void {\n        this.loadWidget();\n    }\n\n    private async loadWidget() {\n        const loadComponentResult = this.widgetConfig.loadComponent();\n        const componentType =\n            loadComponentResult instanceof Promise ? await loadComponentResult : loadComponentResult;\n        this.componentRef = this.portal.createComponent(\n            this.componentFactoryResolver.resolveComponentFactory(componentType),\n        );\n        this.componentRef.changeDetectorRef.markForCheck();\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n        }\n    }\n}\n","<div class=\"widget-header\">\r\n    <vdr-dropdown>\r\n        <button class=\"btn btn-secondary btn-sm\" vdrDropdownTrigger>\r\n            <clr-icon shape=\"plus\"></clr-icon>\r\n            {{ 'dashboard.add-widget' | translate }}\r\n        </button>\r\n        <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n            <button\r\n                class=\"button\"\r\n                vdrDropdownItem\r\n                *ngFor=\"let id of availableWidgetIds$ | async\"\r\n                (click)=\"addWidget(id)\"\r\n            >\r\n                {{ id }}\r\n            </button>\r\n        </vdr-dropdown-menu>\r\n    </vdr-dropdown>\r\n</div>\r\n<div cdkDropListGroup>\r\n    <div\r\n        class=\"clr-row dashboard-row\"\r\n        *ngFor=\"let row of widgetLayout; index as rowIndex; trackBy: trackRow\"\r\n        cdkDropList\r\n        (cdkDropListDropped)=\"drop($event)\"\r\n        cdkDropListOrientation=\"horizontal\"\r\n        [cdkDropListData]=\"{ index: rowIndex }\"\r\n    >\r\n        <div\r\n            *ngFor=\"let widget of row; trackBy: trackRowItem\"\r\n            class=\"dashboard-item\"\r\n            [ngClass]=\"getClassForWidth(widget.width)\"\r\n            cdkDrag\r\n            [cdkDragData]=\"widget\"\r\n        >\r\n            <vdr-dashboard-widget\r\n                *vdrIfPermissions=\"widget.config.requiresPermissions || null\"\r\n                [widgetConfig]=\"widget.config\"\r\n            >\r\n                <div class=\"flex\">\r\n                    <div class=\"drag-handle\" cdkDragHandle>\r\n                        <clr-icon shape=\"drag-handle\" size=\"24\"></clr-icon>\r\n                    </div>\r\n                    <vdr-dropdown>\r\n                        <button class=\"icon-button\" vdrDropdownTrigger>\r\n                            <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                            <h4 class=\"dropdown-header\">{{ 'dashboard.widget-resize' | translate }}</h4>\r\n                            <button\r\n                                class=\"button\"\r\n                                vdrDropdownItem\r\n                                [disabled]=\"width === widget.width\"\r\n                                *ngFor=\"let width of getSupportedWidths(widget.config)\"\r\n                                (click)=\"setWidgetWidth(widget, width)\"\r\n                            >\r\n                                {{ 'dashboard.widget-width' | translate: { width: width } }}\r\n                            </button>\r\n                            <div class=\"dropdown-divider\" role=\"separator\"></div>\r\n                            <button class=\"button\" vdrDropdownItem (click)=\"removeWidget(widget)\">\r\n                                <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                                {{ 'dashboard.remove-widget' | translate }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </div>\r\n            </vdr-dashboard-widget>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport {\r\n    DashboardWidgetConfig,\r\n    DashboardWidgetService,\r\n    DashboardWidgetWidth,\r\n    DataService,\r\n    LocalStorageService,\r\n    WidgetLayout,\r\n    WidgetLayoutDefinition,\r\n} from '@vendure/admin-ui/core';\r\nimport { assertNever } from '@vendure/common/lib/shared-utils';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n    widgetLayout: WidgetLayout | undefined;\r\n    availableWidgetIds$: Observable<string[]>;\r\n    private readonly deletionMarker = '__delete__';\r\n\r\n    constructor(\r\n        private dashboardWidgetService: DashboardWidgetService,\r\n        private localStorageService: LocalStorageService,\r\n        private changedDetectorRef: ChangeDetectorRef,\r\n        private dataService: DataService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.availableWidgetIds$ = this.dataService.client.userStatus().stream$.pipe(\r\n            map(({ userStatus }) => userStatus.permissions),\r\n            map(permissions => this.dashboardWidgetService.getAvailableIds(permissions)),\r\n            tap(ids => (this.widgetLayout = this.initLayout(ids))),\r\n        );\r\n    }\r\n\r\n    getClassForWidth(width: DashboardWidgetWidth): string {\r\n        switch (width) {\r\n            case 3:\r\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-3`;\r\n            case 4:\r\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-4`;\r\n            case 6:\r\n                return `clr-col-12 clr-col-lg-6`;\r\n            case 8:\r\n                return `clr-col-12 clr-col-lg-8`;\r\n            case 12:\r\n                return `clr-col-12`;\r\n            default:\r\n                assertNever(width);\r\n        }\r\n    }\r\n\r\n    getSupportedWidths(config: DashboardWidgetConfig): DashboardWidgetWidth[] {\r\n        return config.supportedWidths || [3, 4, 6, 8, 12];\r\n    }\r\n\r\n    setWidgetWidth(widget: WidgetLayout[number][number], width: DashboardWidgetWidth) {\r\n        widget.width = width;\r\n        this.recalculateLayout();\r\n    }\r\n\r\n    trackRow(index: number, row: WidgetLayout[number]) {\r\n        const id = row.map(item => `${item.id}:${item.width}`).join('|');\r\n        return id;\r\n    }\r\n\r\n    trackRowItem(index: number, item: WidgetLayout[number][number]) {\r\n        return item.config;\r\n    }\r\n\r\n    addWidget(id: string) {\r\n        const config = this.dashboardWidgetService.getWidgetById(id);\r\n        if (config) {\r\n            const width = this.getSupportedWidths(config)[0];\r\n            const widget: WidgetLayout[number][number] = {\r\n                id,\r\n                config,\r\n                width,\r\n            };\r\n            let targetRow: WidgetLayout[number];\r\n            if (this.widgetLayout && this.widgetLayout.length) {\r\n                targetRow = this.widgetLayout[this.widgetLayout.length - 1];\r\n            } else {\r\n                targetRow = [];\r\n                this.widgetLayout?.push(targetRow);\r\n            }\r\n            targetRow.push(widget);\r\n            this.recalculateLayout();\r\n        }\r\n    }\r\n\r\n    removeWidget(widget: WidgetLayout[number][number]) {\r\n        widget.id = this.deletionMarker;\r\n        this.recalculateLayout();\r\n    }\r\n\r\n    drop(event: CdkDragDrop<{ index: number }>) {\r\n        const { currentIndex, previousIndex, previousContainer, container } = event;\r\n        if (previousIndex === currentIndex && previousContainer.data.index === container.data.index) {\r\n            // Nothing changed\r\n            return;\r\n        }\r\n        if (this.widgetLayout) {\r\n            const previousLayoutRow = this.widgetLayout[previousContainer.data.index];\r\n            const newLayoutRow = this.widgetLayout[container.data.index];\r\n\r\n            previousLayoutRow.splice(previousIndex, 1);\r\n            newLayoutRow.splice(currentIndex, 0, event.item.data);\r\n            this.recalculateLayout();\r\n        }\r\n    }\r\n\r\n    private initLayout(availableIds: string[]): WidgetLayout {\r\n        const savedLayoutDef = this.localStorageService.get('dashboardWidgetLayout');\r\n        let layoutDef: WidgetLayoutDefinition | undefined;\r\n        if (savedLayoutDef) {\r\n            // validate all the IDs from the saved layout are still available\r\n            layoutDef = savedLayoutDef.filter(item => availableIds.includes(item.id));\r\n        }\r\n        return this.dashboardWidgetService.getWidgetLayout(layoutDef);\r\n    }\r\n\r\n    private recalculateLayout() {\r\n        if (this.widgetLayout) {\r\n            const flattened = this.widgetLayout\r\n                .reduce((flat, row) => [...flat, ...row], [])\r\n                .filter(item => item.id !== this.deletionMarker);\r\n            const newLayoutDef: WidgetLayoutDefinition = flattened.map(item => ({\r\n                id: item.id,\r\n                width: item.width,\r\n            }));\r\n            this.widgetLayout = this.dashboardWidgetService.getWidgetLayout(newLayoutDef);\r\n            this.localStorageService.set('dashboardWidgetLayout', newLayoutDef);\r\n            setTimeout(() => this.changedDetectorRef.markForCheck());\r\n        }\r\n    }\r\n}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\n\r\nexport const dashboardRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: DashboardComponent,\r\n        pathMatch: 'full',\r\n    },\r\n];\r\n","<vdr-data-table [items]=\"latestOrders$ | async\">\r\n    <ng-template let-order=\"item\">\r\n        <td class=\"left align-middle\">\r\n            {{ order.code }}\r\n            <vdr-order-state-label [state]=\"order.state\"></vdr-order-state-label>\r\n        </td>\r\n        <td class=\"left align-middle\">\r\n            <vdr-customer-label [customer]=\"order.customer\"></vdr-customer-label>\r\n        </td>\r\n        <td class=\"left align-middle\">{{ order.total | localeCurrency: order.currencyCode }}</td>\r\n        <td class=\"left align-middle\">{{ order.orderPlacedAt | timeAgo }}</td>\r\n        <td class=\"right align-middle\">\r\n            <vdr-table-row-action\r\n                iconShape=\"shopping-cart\"\r\n                [label]=\"'common.open' | translate\"\r\n                [linkTo]=\"['/orders/', order.id]\"\r\n            ></vdr-table-row-action>\r\n        </td>\r\n    </ng-template>\r\n</vdr-data-table>\r\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\r\nimport { CoreModule, DataService, GetOrderList, SharedModule, SortOrder } from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'vdr-latest-orders-widget',\r\n    templateUrl: './latest-orders-widget.component.html',\r\n    styleUrls: ['./latest-orders-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LatestOrdersWidgetComponent implements OnInit {\r\n    latestOrders$: Observable<GetOrderList.Items[]>;\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.latestOrders$ = this.dataService.order\r\n            .getOrders({\r\n                take: 10,\r\n                filter: {\r\n                    active: { eq: false },\r\n                    state: { notEq: 'Cancelled' },\r\n                },\r\n                sort: {\r\n                    orderPlacedAt: SortOrder.DESC,\r\n                },\r\n            })\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.orders.items);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CoreModule, SharedModule],\r\n    declarations: [LatestOrdersWidgetComponent],\r\n})\r\nexport class LatestOrdersWidgetModule {}\r\n","<div class=\"stats\">\r\n    <div class=\"stat\">\r\n        <div class=\"stat-figure\">{{ totalOrderCount$ | async }}</div>\r\n        <div class=\"stat-label\">{{ 'dashboard.total-orders' | translate }}</div>\r\n    </div>\r\n    <div class=\"stat\">\r\n        <div class=\"stat-figure\">\r\n            {{ totalOrderValue$ | async | currency: (currencyCode$ | async) || undefined }}\r\n        </div>\r\n        <div class=\"stat-label\">{{ 'dashboard.total-order-value' | translate }}</div>\r\n    </div>\r\n</div>\r\n<div class=\"footer\">\r\n    <div class=\"btn-group btn-outline-primary btn-sm\" *ngIf=\"selection$ | async as selection\">\r\n        <button class=\"btn\" [class.btn-primary]=\"selection.date === today\" (click)=\"selection$.next({timeframe: 'day', date: today})\">\r\n            {{ 'dashboard.today' | translate }}\r\n        </button>\r\n        <button class=\"btn\" [class.btn-primary]=\"selection.date === yesterday\" (click)=\"selection$.next({timeframe: 'day', date: yesterday})\">\r\n            {{ 'dashboard.yesterday' | translate }}\r\n        </button>\r\n        <button class=\"btn\" [class.btn-primary]=\"selection.timeframe === 'week'\" (click)=\"selection$.next({timeframe: 'week'})\">\r\n            {{ 'dashboard.thisWeek' | translate }}\r\n        </button>\r\n        <button class=\"btn\" [class.btn-primary]=\"selection.timeframe === 'month'\" (click)=\"selection$.next({timeframe: 'month'})\">\r\n            {{ 'dashboard.thisMonth' | translate }}\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"date-range p5\" *ngIf=\"dateRange$ | async as range\">\r\n        {{ range.start | localeDate }} - {{ range.end | localeDate }}\r\n    </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\r\nimport { CoreModule, DataService } from '@vendure/admin-ui/core';\r\nimport dayjs from 'dayjs';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map, shareReplay, switchMap } from 'rxjs/operators';\r\n\r\nexport type Timeframe = 'day' | 'week' | 'month';\r\n\r\n@Component({\r\n    selector: 'vdr-order-summary-widget',\r\n    templateUrl: './order-summary-widget.component.html',\r\n    styleUrls: ['./order-summary-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderSummaryWidgetComponent implements OnInit {\r\n    today = new Date();\r\n    yesterday = new Date(new Date().setDate(this.today.getDate() - 1));\r\n    totalOrderCount$: Observable<number>;\r\n    totalOrderValue$: Observable<number>;\r\n    currencyCode$: Observable<string | undefined>;\r\n    selection$ = new BehaviorSubject<{ timeframe: Timeframe; date?: Date }>({\r\n        timeframe: 'day',\r\n        date: this.today,\r\n    });\r\n    dateRange$: Observable<{ start: Date; end: Date }>;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.dateRange$ = this.selection$.pipe(\r\n            distinctUntilChanged(),\r\n            map(selection => {\r\n                return {\r\n                    start: dayjs(selection.date).startOf(selection.timeframe).toDate(),\r\n                    end: dayjs(selection.date).endOf(selection.timeframe).toDate(),\r\n                };\r\n            }),\r\n            shareReplay(1),\r\n        );\r\n        const orderSummary$ = this.dateRange$.pipe(\r\n            switchMap(({ start, end }) => {\r\n                return this.dataService.order\r\n                    .getOrderSummary(start, end)\r\n                    .refetchOnChannelChange()\r\n                    .mapStream(data => data.orders);\r\n            }),\r\n            shareReplay(1),\r\n        );\r\n        this.totalOrderCount$ = orderSummary$.pipe(map(res => res.totalItems));\r\n        this.totalOrderValue$ = orderSummary$.pipe(\r\n            map(res => res.items.reduce((total, order) => total + order.total, 0) / 100),\r\n        );\r\n        this.currencyCode$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel.currencyCode || undefined);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CoreModule],\r\n    declarations: [OrderSummaryWidgetComponent],\r\n})\r\nexport class OrderSummaryWidgetModule {}\r\n","import { ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\n\n@Component({\n    selector: 'vdr-test-widget',\n    templateUrl: './test-widget.component.html',\n    styleUrls: ['./test-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TestWidgetComponent {}\n\n@NgModule({\n    declarations: [TestWidgetComponent],\n})\nexport class TestWidgetModule {}\n","<p>This is a test widget!</p>\r\n","<div *ngIf=\"administrator$ | async as administrator\">\r\n    <h4 class=\"h4\">\r\n        Welcome, {{ administrator.firstName }} {{ administrator.lastName }}<br />\r\n        <small class=\"p5\">Last login: {{ administrator.user.lastLogin | timeAgo }}</small>\r\n    </h4>\r\n\r\n    <p class=\"p5\" *ngIf=\"!hideVendureBranding || !hideVersion\">\r\n        {{ hideVendureBranding ? '' : 'Vendure' }} {{ hideVersion ? '' : ('Admin UI v' + version) }}\r\n    </p>\r\n</div>\r\n<div class=\"placeholder\">\r\n    <clr-icon shape=\"line-chart\" size=\"128\"></clr-icon>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\r\nimport {\r\n    Administrator,\r\n    ADMIN_UI_VERSION,\r\n    CoreModule,\r\n    DataService,\r\n    GetActiveAdministrator,\r\n    getAppConfig,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'vdr-welcome-widget',\r\n    templateUrl: './welcome-widget.component.html',\r\n    styleUrls: ['./welcome-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class WelcomeWidgetComponent implements OnInit {\r\n    version = ADMIN_UI_VERSION;\r\n    administrator$: Observable<GetActiveAdministrator.ActiveAdministrator | null>;\r\n    brand = getAppConfig().brand;\r\n    hideVendureBranding = getAppConfig().hideVendureBranding;\r\n    hideVersion = getAppConfig().hideVersion;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.administrator$ = this.dataService.administrator\r\n            .getActiveAdministrator()\r\n            .mapStream(data => data.activeAdministrator || null);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CoreModule],\r\n    declarations: [WelcomeWidgetComponent],\r\n})\r\nexport class WelcomeWidgetModule {}\r\n","import { APP_INITIALIZER, FactoryProvider } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    DashboardWidgetConfig,\n    DashboardWidgetService,\n    Permission,\n    WidgetLayoutDefinition,\n} from '@vendure/admin-ui/core';\n\nimport { LatestOrdersWidgetComponent } from './widgets/latest-orders-widget/latest-orders-widget.component';\nimport { OrderSummaryWidgetComponent } from './widgets/order-summary-widget/order-summary-widget.component';\nimport { TestWidgetComponent } from './widgets/test-widget/test-widget.component';\nimport { WelcomeWidgetComponent } from './widgets/welcome-widget/welcome-widget.component';\n\nexport const DEFAULT_DASHBOARD_WIDGET_LAYOUT: WidgetLayoutDefinition = [\n    { id: 'welcome', width: 12 },\n    { id: 'orderSummary', width: 6 },\n    { id: 'latestOrders', width: 6 },\n];\n\nexport const DEFAULT_WIDGETS: { [id: string]: DashboardWidgetConfig } = {\n    welcome: {\n        loadComponent: () => WelcomeWidgetComponent,\n    },\n    orderSummary: {\n        title: _('dashboard.orders-summary'),\n        loadComponent: () => OrderSummaryWidgetComponent,\n        requiresPermissions: [Permission.ReadOrder],\n    },\n    latestOrders: {\n        title: _('dashboard.latest-orders'),\n        loadComponent: () => LatestOrdersWidgetComponent,\n        supportedWidths: [6, 8, 12],\n        requiresPermissions: [Permission.ReadOrder],\n    },\n    testWidget: {\n        title: 'Test Widget',\n        loadComponent: () => TestWidgetComponent,\n    },\n};\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DashboardWidgetService, SharedModule } from '@vendure/admin-ui/core';\n\nimport { DashboardWidgetComponent } from './components/dashboard-widget/dashboard-widget.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { dashboardRoutes } from './dashboard.routes';\nimport { DEFAULT_DASHBOARD_WIDGET_LAYOUT, DEFAULT_WIDGETS } from './default-widgets';\n\n@NgModule({\n    imports: [SharedModule, RouterModule.forChild(dashboardRoutes)],\n    declarations: [DashboardComponent, DashboardWidgetComponent],\n})\nexport class DashboardModule {\n    constructor(dashboardWidgetService: DashboardWidgetService) {\n        Object.entries(DEFAULT_WIDGETS).map(([id, config]) =>\n            dashboardWidgetService.registerWidget(id, config),\n        );\n        if (dashboardWidgetService.getDefaultLayout().length === 0) {\n            dashboardWidgetService.setDefaultLayout(DEFAULT_DASHBOARD_WIDGET_LAYOUT);\n        }\n    }\n}\n"]}