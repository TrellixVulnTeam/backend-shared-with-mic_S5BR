export declare type Task<T = any> = () => Promise<T> | T;
export declare type Resolve<T> = (val: T) => void;
export declare type Reject<T> = (val: T) => void;
export declare class AsyncQueue {
    private label;
    private concurrency;
    private static running;
    private static taskQueue;
    constructor(label?: string, concurrency?: number);
    private get running();
    private inc;
    private dec;
    push<T>(task: Task<T>): Promise<T>;
    private runTask;
    private enqueueTask;
    private getQueue;
}
