"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.asyncObservable = exports.awaitPromiseOrObservable = exports.normalizeEmailAddress = exports.getAssetType = exports.idsAreEqual = exports.assertFound = exports.foundIn = exports.not = void 0;
const generated_types_1 = require("@vendure/common/lib/generated-types");
const rxjs_1 = require("rxjs");
function not(predicate) {
    return (...args) => !predicate(...args);
}
exports.not = not;
function foundIn(set, compareBy) {
    return (item) => set.some(t => t[compareBy] === item[compareBy]);
}
exports.foundIn = foundIn;
function assertFound(promise) {
    return promise;
}
exports.assertFound = assertFound;
function idsAreEqual(id1, id2) {
    if (id1 === undefined || id2 === undefined) {
        return false;
    }
    return id1.toString() === id2.toString();
}
exports.idsAreEqual = idsAreEqual;
function getAssetType(mimeType) {
    const type = mimeType.split('/')[0];
    switch (type) {
        case 'image':
            return generated_types_1.AssetType.IMAGE;
        case 'video':
            return generated_types_1.AssetType.VIDEO;
        default:
            return generated_types_1.AssetType.BINARY;
    }
}
exports.getAssetType = getAssetType;
function normalizeEmailAddress(input) {
    return input.trim().toLowerCase();
}
exports.normalizeEmailAddress = normalizeEmailAddress;
async function awaitPromiseOrObservable(value) {
    let result = await value;
    if (result instanceof rxjs_1.Observable) {
        result = await result.toPromise();
    }
    return result;
}
exports.awaitPromiseOrObservable = awaitPromiseOrObservable;
function asyncObservable(work) {
    return new rxjs_1.Observable(subscriber => {
        (async () => {
            try {
                const result = await work(subscriber);
                if (result) {
                    subscriber.next(result);
                }
                subscriber.complete();
            }
            catch (e) {
                subscriber.error(e);
            }
        })();
    });
}
exports.asyncObservable = asyncObservable;
//# sourceMappingURL=utils.js.map