import { ID } from '@vendure/common/lib/shared-types';
import { LogLevel } from '../../config/logger/vendure-logger';
import { coreEntitiesMap } from '../../entity/entities';
import { I18nError } from '../../i18n/i18n-error';
export declare class InternalServerError extends I18nError {
    constructor(message: string, variables?: {
        [key: string]: string | number;
    });
}
export declare class UserInputError extends I18nError {
    constructor(message: string, variables?: {
        [key: string]: string | number;
    });
}
export declare class IllegalOperationError extends I18nError {
    constructor(message: string, variables?: {
        [key: string]: string | number;
    });
}
export declare class UnauthorizedError extends I18nError {
    constructor();
}
export declare class ForbiddenError extends I18nError {
    constructor(logLevel?: LogLevel);
}
export declare class ChannelNotFoundError extends I18nError {
    constructor(token: string);
}
export declare class EntityNotFoundError extends I18nError {
    constructor(entityName: keyof typeof coreEntitiesMap, id: ID);
}
