import { CanActivate, ExecutionContext } from '@nestjs/common';
import { Reflector } from '@nestjs/core';
import { ConfigService } from '../../config/config.service';
import { RequestContextService } from '../../service/helpers/request-context/request-context.service';
import { ChannelService } from '../../service/services/channel.service';
import { CustomerService } from '../../service/services/customer.service';
import { SessionService } from '../../service/services/session.service';
export declare class AuthGuard implements CanActivate {
    private reflector;
    private configService;
    private requestContextService;
    private sessionService;
    private customerService;
    private channelService;
    strategy: any;
    constructor(reflector: Reflector, configService: ConfigService, requestContextService: RequestContextService, sessionService: SessionService, customerService: CustomerService, channelService: ChannelService);
    canActivate(context: ExecutionContext): Promise<boolean>;
    private setActiveChannel;
    private getSession;
    private isFieldResolver;
}
