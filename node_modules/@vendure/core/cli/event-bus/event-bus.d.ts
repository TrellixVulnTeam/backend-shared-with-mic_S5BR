import { OnModuleDestroy } from '@nestjs/common';
import { Type } from '@vendure/common/lib/shared-types';
import { Observable } from 'rxjs';
import { TransactionSubscriber } from '../connection/transaction-subscriber';
import { VendureEvent } from './vendure-event';
export declare class EventBus implements OnModuleDestroy {
    private transactionSubscriber;
    private eventStream;
    private destroy$;
    constructor(transactionSubscriber: TransactionSubscriber);
    publish<T extends VendureEvent>(event: T): void;
    ofType<T extends VendureEvent>(type: Type<T>): Observable<T>;
    onModuleDestroy(): any;
    private awaitActiveTransactions;
}
