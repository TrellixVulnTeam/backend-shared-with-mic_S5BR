import { Adjustment, AdjustmentType, TaxLine } from '@vendure/common/lib/generated-types';
import { DeepPartial, ID } from '@vendure/common/lib/shared-types';
import { VendureEntity } from '../base/base.entity';
import { Fulfillment } from '../fulfillment/fulfillment.entity';
import { OrderLine } from '../order-line/order-line.entity';
import { Refund } from '../refund/refund.entity';
import { Cancellation } from '../stock-movement/cancellation.entity';
export declare class OrderItem extends VendureEntity {
    constructor(input?: DeepPartial<OrderItem>);
    line: OrderLine;
    lineId: ID;
    initialListPrice: number;
    listPrice: number;
    listPriceIncludesTax: boolean;
    adjustments: Adjustment[];
    taxLines: TaxLine[];
    fulfillments: Fulfillment[];
    refund: Refund;
    refundId: ID | null;
    cancellation: Cancellation;
    cancelled: boolean;
    get fulfillment(): Fulfillment | undefined;
    get unitPrice(): number;
    get unitPriceWithTax(): number;
    get taxRate(): number;
    get unitTax(): number;
    get discountedUnitPrice(): number;
    get discountedUnitPriceWithTax(): number;
    get proratedUnitPrice(): number;
    get proratedUnitPriceWithTax(): number;
    get proratedUnitTax(): number;
    private getAdjustmentsTotal;
    addAdjustment(adjustment: Adjustment): void;
    clearAdjustments(type?: AdjustmentType): void;
}
