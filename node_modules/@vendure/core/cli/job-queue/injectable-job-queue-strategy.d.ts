import { Injector } from '../common';
import { Job } from './job';
import { JobData } from './types';
declare type ProcessFunc<Data extends JobData<Data> = {}> = (job: Job<Data>) => Promise<any>;
export declare abstract class InjectableJobQueueStrategy {
    protected started: Map<string, ProcessFunc<any>>;
    protected hasInitialized: boolean;
    init(injector: Injector): void;
    destroy(): void;
    abstract start<Data extends JobData<Data> = {}>(queueName: string, process: (job: Job<Data>) => Promise<any>): void;
}
export {};
