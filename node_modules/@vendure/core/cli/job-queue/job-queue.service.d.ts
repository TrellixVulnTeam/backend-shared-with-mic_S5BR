import { OnModuleDestroy } from '@nestjs/common';
import { JobQueue as GraphQlJobQueue } from '@vendure/common/lib/generated-types';
import { ConfigService } from '../config';
import { Job } from './job';
import { JobBuffer } from './job-buffer/job-buffer';
import { JobBufferService } from './job-buffer/job-buffer.service';
import { JobQueue } from './job-queue';
import { CreateQueueOptions, JobData } from './types';
export declare class JobQueueService implements OnModuleDestroy {
    private configService;
    private jobBufferService;
    private queues;
    private hasStarted;
    private get jobQueueStrategy();
    constructor(configService: ConfigService, jobBufferService: JobBufferService);
    onModuleDestroy(): Promise<void[]>;
    createQueue<Data extends JobData<Data>>(options: CreateQueueOptions<Data>): Promise<JobQueue<Data>>;
    start(): Promise<void>;
    addBuffer(buffer: JobBuffer<any>): void;
    removeBuffer(buffer: JobBuffer<any>): void;
    bufferSize(...forBuffers: Array<JobBuffer<any> | string>): Promise<{
        [bufferId: string]: number;
    }>;
    flush(...forBuffers: Array<JobBuffer<any> | string>): Promise<Job[]>;
    getJobQueues(): GraphQlJobQueue[];
    private shouldStartQueue;
}
