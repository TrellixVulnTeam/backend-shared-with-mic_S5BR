import { ID } from '@vendure/common/lib/shared-types';
import { DocumentNode } from 'graphql';
import { RequestContext } from '../../api/common/request-context';
import { Injector } from '../../common/injector';
import { User } from '../../entity/user/user.entity';
import { AuthenticationStrategy } from './authentication-strategy';
export interface NativeAuthenticationData {
    username: string;
    password: string;
}
export declare const NATIVE_AUTH_STRATEGY_NAME = "native";
export declare class NativeAuthenticationStrategy implements AuthenticationStrategy<NativeAuthenticationData> {
    readonly name = "native";
    private connection;
    private passwordCipher;
    init(injector: Injector): Promise<void>;
    defineInputType(): DocumentNode;
    authenticate(ctx: RequestContext, data: NativeAuthenticationData): Promise<User | false>;
    private getUserFromIdentifier;
    verifyUserPassword(ctx: RequestContext, userId: ID, password: string): Promise<boolean>;
}
