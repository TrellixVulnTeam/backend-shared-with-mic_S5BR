import { ConfigArg } from '@vendure/common/lib/generated-types';
import { SelectQueryBuilder } from 'typeorm';
import { ConfigArgs, ConfigArgValues, ConfigurableOperationDef, ConfigurableOperationDefOptions } from '../../common/configurable-operation';
import { ProductVariant } from '../../entity/product-variant/product-variant.entity';
export declare type ApplyCollectionFilterFn<T extends ConfigArgs> = (qb: SelectQueryBuilder<ProductVariant>, args: ConfigArgValues<T>) => SelectQueryBuilder<ProductVariant>;
export interface CollectionFilterConfig<T extends ConfigArgs> extends ConfigurableOperationDefOptions<T> {
    apply: ApplyCollectionFilterFn<T>;
}
export declare class CollectionFilter<T extends ConfigArgs = ConfigArgs> extends ConfigurableOperationDef<T> {
    private readonly applyFn;
    constructor(config: CollectionFilterConfig<T>);
    apply(qb: SelectQueryBuilder<ProductVariant>, args: ConfigArg[]): SelectQueryBuilder<ProductVariant>;
}
