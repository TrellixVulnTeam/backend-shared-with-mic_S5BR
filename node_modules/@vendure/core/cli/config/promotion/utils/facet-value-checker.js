"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FacetValueChecker = void 0;
const unique_1 = require("@vendure/common/lib/unique");
const ttl_cache_1 = require("../../../common/ttl-cache");
const utils_1 = require("../../../common/utils");
const product_variant_entity_1 = require("../../../entity/product-variant/product-variant.entity");
class FacetValueChecker {
    constructor(connection) {
        this.connection = connection;
        this.variantCache = new ttl_cache_1.TtlCache({ ttl: 5000 });
    }
    async hasFacetValues(orderLine, facetValueIds) {
        let variant = this.variantCache.get(orderLine.productVariant.id);
        if (!variant) {
            variant = await this.connection
                .getRepository(product_variant_entity_1.ProductVariant)
                .findOne(orderLine.productVariant.id, {
                relations: ['product', 'product.facetValues', 'facetValues'],
            });
            if (!variant) {
                return false;
            }
            this.variantCache.set(variant.id, variant);
        }
        const allFacetValues = unique_1.unique([...variant.facetValues, ...variant.product.facetValues], 'id');
        return facetValueIds.reduce((result, id) => result && !!allFacetValues.find(fv => utils_1.idsAreEqual(fv.id, id)), true);
    }
}
exports.FacetValueChecker = FacetValueChecker;
//# sourceMappingURL=facet-value-checker.js.map